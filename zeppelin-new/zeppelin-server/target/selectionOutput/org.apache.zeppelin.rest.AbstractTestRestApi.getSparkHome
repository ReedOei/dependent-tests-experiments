org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : r0 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("SPARK_HOME") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : if r0 == null
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : if r0 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : return r0
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : if r0 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r2 = new java.io.File
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r2 = new java.io.File >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_HOME>
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_HOME> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r3 = virtualinvoke $r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r3 = virtualinvoke $r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r3)
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r3) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r4)
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r4) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : r5 = staticinvoke <org.apache.zeppelin.rest.AbstractTestRestApi: java.lang.String getSparkHomeRecursively(java.io.File)>($r2)
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : r5 = staticinvoke <org.apache.zeppelin.rest.AbstractTestRestApi: java.lang.String getSparkHomeRecursively(java.io.File)>($r2) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r6 = <java.lang.System: java.io.PrintStream out>
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r6 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r7 = new java.lang.StringBuilder
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SPARK HOME detected ")
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SPARK HOME detected ") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10)
org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.getSparkHome : return r5
