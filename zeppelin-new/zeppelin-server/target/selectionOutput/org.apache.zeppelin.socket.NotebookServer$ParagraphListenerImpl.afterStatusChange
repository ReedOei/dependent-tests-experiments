org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r4 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ERROR> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if r3 != $r4
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if r3 != $r4 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r6 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.Throwable getException()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if r3 != $r4 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z0 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: boolean isTerminated()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z0 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: boolean isTerminated()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r9 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z2 = r1 instanceof org.apache.zeppelin.notebook.Paragraph
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z2 = r1 instanceof org.apache.zeppelin.notebook.Paragraph >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z2 == 0
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z2 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : r26 = (org.apache.zeppelin.notebook.Paragraph) r1
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z2 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r30 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.socket.NotebookServer notebookServer>
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z2 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r31 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : r32 = $r31 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r33 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r33 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("can not broadcast for job manager {}", r32)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("can not broadcast for job manager {}", r32) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : return
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r30 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.socket.NotebookServer notebookServer> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r30 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.socket.NotebookServer notebookServer> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r31 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $l1 = $l0 - 5000L
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r31 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $l1 = $l0 - 5000L >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r30.<org.apache.zeppelin.socket.NotebookServer: void broadcastUpdateNoteJobInfo(long)>($l1)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $l1 = $l0 - 5000L >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r31 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r30.<org.apache.zeppelin.socket.NotebookServer: void broadcastUpdateNoteJobInfo(long)>($l1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= return]
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r30.<org.apache.zeppelin.socket.NotebookServer: void broadcastUpdateNoteJobInfo(long)>($l1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r31 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : return
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : r26 = (org.apache.zeppelin.notebook.Paragraph) r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r27 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r27 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke r26.<org.apache.zeppelin.notebook.Paragraph: void setStatusToUserParagraph(org.apache.zeppelin.scheduler.Job$Status)>($r27)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke r26.<org.apache.zeppelin.notebook.Paragraph: void setStatusToUserParagraph(org.apache.zeppelin.scheduler.Job$Status)>($r27) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r28 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.socket.NotebookServer notebookServer>
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r28 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.socket.NotebookServer notebookServer> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r29 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r29 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r28.<org.apache.zeppelin.socket.NotebookServer: void broadcastParagraph(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.notebook.Paragraph)>($r29, r26)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r28.<org.apache.zeppelin.socket.NotebookServer: void broadcastParagraph(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.notebook.Paragraph)>($r29, r26) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r30 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.socket.NotebookServer notebookServer>
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r28.<org.apache.zeppelin.socket.NotebookServer: void broadcastParagraph(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.notebook.Paragraph)>($r29, r26) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r31 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r9 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r10 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED>
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r10 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $r9 != $r10
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $r9 != $r10 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r11 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $r9 != $r10 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r14 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r14 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15 = newarray (java.lang.Object)[4]
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r16 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r16 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15[0] = $r16
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15[0] = $r16 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r17 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r17 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15[1] = $r17
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15[1] = $r17 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r18 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.Throwable getException()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r18 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.Throwable getException()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15[2] = $r18
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15[2] = $r18 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r19 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.Object getReturn()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r19 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.Object getReturn()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15[3] = $r19
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r15[3] = $r19 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Job {} is finished, status: {}, exception: {}, result: {}", $r15)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Job {} is finished, status: {}, exception: {}, result: {}", $r15) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r20 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Job {} is finished, status: {}, exception: {}, result: {}", $r15) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : r5 = $r23 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r24 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r24 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r25 = virtualinvoke r5.<java.io.IOException: java.lang.String toString()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r25 = virtualinvoke r5.<java.io.IOException: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r25, r5)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r25, r5) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z2 = r1 instanceof org.apache.zeppelin.notebook.Paragraph
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r20 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z1 = r1 instanceof org.apache.zeppelin.notebook.Paragraph
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r20 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z1 = r1 instanceof org.apache.zeppelin.notebook.Paragraph >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z1 == 0
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z1 = r1 instanceof org.apache.zeppelin.notebook.Paragraph >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r21 = (org.apache.zeppelin.notebook.Paragraph) r1
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r22 = null
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r22 = null >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r20.<org.apache.zeppelin.notebook.Note: void persist(org.apache.zeppelin.user.AuthenticationInfo)>($r22)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r22 = null >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r20.<org.apache.zeppelin.notebook.Note: void persist(org.apache.zeppelin.user.AuthenticationInfo)>($r22) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= $z2 = r1 instanceof org.apache.zeppelin.notebook.Paragraph]
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r20.<org.apache.zeppelin.notebook.Note: void persist(org.apache.zeppelin.user.AuthenticationInfo)>($r22) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= $z2 = r1 instanceof org.apache.zeppelin.notebook.Paragraph] >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z2 = r1 instanceof org.apache.zeppelin.notebook.Paragraph
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r21 = (org.apache.zeppelin.notebook.Paragraph) r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r22 = virtualinvoke $r21.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo getAuthenticationInfo()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r21 = (org.apache.zeppelin.notebook.Paragraph) r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r22 = virtualinvoke $r21.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo getAuthenticationInfo()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= virtualinvoke $r20.<org.apache.zeppelin.notebook.Note: void persist(org.apache.zeppelin.user.AuthenticationInfo)>($r22)]
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r22 = virtualinvoke $r21.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo getAuthenticationInfo()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= virtualinvoke $r20.<org.apache.zeppelin.notebook.Note: void persist(org.apache.zeppelin.user.AuthenticationInfo)>($r22)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : virtualinvoke $r20.<org.apache.zeppelin.notebook.Note: void persist(org.apache.zeppelin.user.AuthenticationInfo)>($r22)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= virtualinvoke $r20.<org.apache.zeppelin.notebook.Note: void persist(org.apache.zeppelin.user.AuthenticationInfo)>($r22)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r11 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r12 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r12 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r13 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r13 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Job {} is finished successfully, status: {}", $r12, $r13)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Job {} is finished successfully, status: {}", $r12, $r13) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= $r20 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.notebook.Note note>]
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= $r20 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.notebook.Note note>] >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r20 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : goto [?= $r20 = r0.<org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl: org.apache.zeppelin.notebook.Note note>] >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r23 := @caughtexception
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r6 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.Throwable getException()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $r6 == null
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $r6 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r7 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : if $r6 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z0 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: boolean isTerminated()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r7 = staticinvoke <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r8 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.Throwable getException()>()
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $r8 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: java.lang.Throwable getException()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error", $r8)
org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error", $r8) >>>>>>>> org.apache.zeppelin.socket.NotebookServer$ParagraphListenerImpl.afterStatusChange : $z0 = virtualinvoke r1.<org.apache.zeppelin.scheduler.Job: boolean isTerminated()>()
