org.apache.zeppelin.socket.NotebookServer.onRemove : r5 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : r6 = virtualinvoke r5.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : r6 = virtualinvoke r5.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.onRemove : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : return
org.apache.zeppelin.socket.NotebookServer.onRemove : $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : r8 = (org.apache.zeppelin.notebook.Note) $r14
org.apache.zeppelin.socket.NotebookServer.onRemove : r8 = (org.apache.zeppelin.notebook.Note) $r14 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : if r3 == null
org.apache.zeppelin.socket.NotebookServer.onRemove : if r3 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r15 = virtualinvoke r8.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : if r3 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r16 = virtualinvoke r5.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : $r16 = virtualinvoke r5.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r17 = virtualinvoke r8.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : $r17 = virtualinvoke r8.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : r9 = virtualinvoke $r16.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreters(java.lang.String)>($r17)
org.apache.zeppelin.socket.NotebookServer.onRemove : r9 = virtualinvoke $r16.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreters(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : if $z2 == 0
org.apache.zeppelin.socket.NotebookServer.onRemove : if $z2 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r18 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : if $z2 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.socket.NotebookServer.onRemove : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : $r18 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : r11 = (java.lang.String) $r18
org.apache.zeppelin.socket.NotebookServer.onRemove : r11 = (java.lang.String) $r18 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $z3 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(r11)
org.apache.zeppelin.socket.NotebookServer.onRemove : $z3 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(r11) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : if $z3 == 0
org.apache.zeppelin.socket.NotebookServer.onRemove : if $z3 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r19 = virtualinvoke r8.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : if $z3 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.socket.NotebookServer.onRemove : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : $r19 = virtualinvoke r8.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r12 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onRemove : $r12 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r13 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP ANGULAR_OBJECT_REMOVE>
org.apache.zeppelin.socket.NotebookServer.onRemove : $r13 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP ANGULAR_OBJECT_REMOVE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : specialinvoke $r12.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r13)
org.apache.zeppelin.socket.NotebookServer.onRemove : specialinvoke $r12.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r13) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r20 = virtualinvoke $r12.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("name", r2)
org.apache.zeppelin.socket.NotebookServer.onRemove : $r20 = virtualinvoke $r12.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("name", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r21 = virtualinvoke $r20.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r3)
org.apache.zeppelin.socket.NotebookServer.onRemove : $r21 = virtualinvoke $r20.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r22 = virtualinvoke $r21.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r4)
org.apache.zeppelin.socket.NotebookServer.onRemove : $r22 = virtualinvoke $r21.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>($r19, $r22)
org.apache.zeppelin.socket.NotebookServer.onRemove : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>($r19, $r22) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onRemove : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.socket.NotebookServer.onRemove : $r15 = virtualinvoke r8.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.zeppelin.socket.NotebookServer.onRemove : $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : if $z1 != 0
org.apache.zeppelin.socket.NotebookServer.onRemove : if $z1 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.socket.NotebookServer.onRemove : if $z1 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $r16 = virtualinvoke r5.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>()
org.apache.zeppelin.socket.NotebookServer.onRemove : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onRemove : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
