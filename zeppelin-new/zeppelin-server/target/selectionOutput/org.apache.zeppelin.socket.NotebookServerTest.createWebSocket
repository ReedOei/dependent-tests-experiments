org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/socket/NotebookSocket") >>>>>>>> org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : r1 = (org.apache.zeppelin.socket.NotebookSocket) $r2
org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : r1 = (org.apache.zeppelin.socket.NotebookSocket) $r2 >>>>>>>> org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : $r3 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: javax.servlet.http.HttpServletRequest getRequest()>()
org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : $r3 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: javax.servlet.http.HttpServletRequest getRequest()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : $r4 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r3)
org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : $r4 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : $r5 = r0.<org.apache.zeppelin.socket.NotebookServerTest: javax.servlet.http.HttpServletRequest mockRequest>
org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : $r5 = r0.<org.apache.zeppelin.socket.NotebookServerTest: javax.servlet.http.HttpServletRequest mockRequest> >>>>>>>> org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : interfaceinvoke $r4.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r5)
org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : interfaceinvoke $r4.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r5) >>>>>>>> org.apache.zeppelin.socket.NotebookServerTest.createWebSocket : return r1
