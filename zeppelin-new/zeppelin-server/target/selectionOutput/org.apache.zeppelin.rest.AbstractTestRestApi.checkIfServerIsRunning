org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : r0 = null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z0 = 1
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z0 = 1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r3 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z0 = 1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z0 = 1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : r0 = staticinvoke <org.apache.zeppelin.rest.AbstractTestRestApi: org.apache.commons.httpclient.methods.GetMethod httpGet(java.lang.String)>("/version")
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : r0 = staticinvoke <org.apache.zeppelin.rest.AbstractTestRestApi: org.apache.commons.httpclient.methods.GetMethod httpGet(java.lang.String)>("/version") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r3 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : r0 = staticinvoke <org.apache.zeppelin.rest.AbstractTestRestApi: org.apache.commons.httpclient.methods.GetMethod httpGet(java.lang.String)>("/version") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : r0 = staticinvoke <org.apache.zeppelin.rest.AbstractTestRestApi: org.apache.commons.httpclient.methods.GetMethod httpGet(java.lang.String)>("/version") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $i0 = virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: int getStatusCode()>()
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $i0 = virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: int getStatusCode()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r3 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $i0 = virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: int getStatusCode()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $i0 = virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: int getStatusCode()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if $i0 != 200
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if $i0 != 200 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $z1 = 1
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if $i0 != 200 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $z1 = 0
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if $i0 != 200 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r3 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if $i0 != 200 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : r2 = $r5 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if r0 == null
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if r0 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: void releaseConnection()>()
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if r0 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : throw r2
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: void releaseConnection()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : throw r2
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : r1 = $r3 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r4 = <org.apache.zeppelin.rest.AbstractTestRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : r1 = $r3 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r4 = <org.apache.zeppelin.rest.AbstractTestRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String)>("AbstractTestRestApi.checkIfServerIsRunning() fails .. ZeppelinServer is not running")
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r4 = <org.apache.zeppelin.rest.AbstractTestRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String)>("AbstractTestRestApi.checkIfServerIsRunning() fails .. ZeppelinServer is not running") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z2 = 0
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String)>("AbstractTestRestApi.checkIfServerIsRunning() fails .. ZeppelinServer is not running") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z2 = 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if r0 == null
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z2 = 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if r0 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: void releaseConnection()>()
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if r0 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : return z2
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: void releaseConnection()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : goto [?= return z2]
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : goto [?= return z2] >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : return z2
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $z1 = 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r3 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $z1 = 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $z1 = 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z2 = $z1
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z2 = $z1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r3 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z2 = $z1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z2 = $z1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if r0 == null
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if r0 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: void releaseConnection()>()
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : if r0 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : return z2
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : virtualinvoke r0.<org.apache.commons.httpclient.methods.GetMethod: void releaseConnection()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : goto [?= return z2]
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : goto [?= return z2] >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : return z2
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $z1 = 1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r3 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $z1 = 1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $z1 = 1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : goto [?= z2 = $z1]
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : goto [?= z2 = $z1] >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r3 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : goto [?= z2 = $z1] >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : $r5 := @caughtexception
org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : goto [?= z2 = $z1] >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.checkIfServerIsRunning : z2 = $z1
