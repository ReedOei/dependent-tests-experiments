org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\"name\":\"")
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\"name\":\"") >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"}")
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"}") >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r4 = staticinvoke <org.apache.zeppelin.rest.ZeppelinRestApiTest: org.apache.commons.httpclient.methods.PostMethod httpPost(java.lang.String,java.lang.String)>("/notebook/", r3)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r4 = staticinvoke <org.apache.zeppelin.rest.ZeppelinRestApiTest: org.apache.commons.httpclient.methods.PostMethod httpPost(java.lang.String,java.lang.String)>("/notebook/", r3) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r13 = <org.apache.zeppelin.rest.ZeppelinRestApiTest: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r13 = <org.apache.zeppelin.rest.ZeppelinRestApiTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r14 = new java.lang.StringBuilder
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testNoteCreate \n")
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testNoteCreate \n") >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r16 = virtualinvoke r4.<org.apache.commons.httpclient.methods.PostMethod: java.lang.String getResponseBodyAsString()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r16 = virtualinvoke r4.<org.apache.commons.httpclient.methods.PostMethod: java.lang.String getResponseBodyAsString()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>($r18)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>($r18) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r19 = virtualinvoke r0.<org.apache.zeppelin.rest.ZeppelinRestApiTest: org.hamcrest.Matcher isAllowed()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r19 = virtualinvoke r0.<org.apache.zeppelin.rest.ZeppelinRestApiTest: org.hamcrest.Matcher isAllowed()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : staticinvoke <org.junit.Assert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>("test note create method:", r4, $r19)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : staticinvoke <org.junit.Assert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>("test note create method:", r4, $r19) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r20 = r0.<org.apache.zeppelin.rest.ZeppelinRestApiTest: com.google.gson.Gson gson>
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r20 = r0.<org.apache.zeppelin.rest.ZeppelinRestApiTest: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r21 = virtualinvoke r4.<org.apache.commons.httpclient.methods.PostMethod: java.lang.String getResponseBodyAsString()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r21 = virtualinvoke r4.<org.apache.commons.httpclient.methods.PostMethod: java.lang.String getResponseBodyAsString()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r22 = new org.apache.zeppelin.rest.ZeppelinRestApiTest$3
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r22 = new org.apache.zeppelin.rest.ZeppelinRestApiTest$3 >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r22.<org.apache.zeppelin.rest.ZeppelinRestApiTest$3: void <init>(org.apache.zeppelin.rest.ZeppelinRestApiTest)>(r0)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r22.<org.apache.zeppelin.rest.ZeppelinRestApiTest$3: void <init>(org.apache.zeppelin.rest.ZeppelinRestApiTest)>(r0) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r23 = virtualinvoke $r22.<org.apache.zeppelin.rest.ZeppelinRestApiTest$3: java.lang.reflect.Type getType()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r23 = virtualinvoke $r22.<org.apache.zeppelin.rest.ZeppelinRestApiTest$3: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r24 = virtualinvoke $r20.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r21, $r23)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r24 = virtualinvoke $r20.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r21, $r23) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r5 = (java.util.Map) $r24
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r5 = (java.util.Map) $r24 >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r25 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("body")
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r25 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("body") >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r6 = (java.lang.String) $r25
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r6 = (java.lang.String) $r25 >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r26 = <org.apache.zeppelin.rest.ZeppelinRestApiTest: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r26 = <org.apache.zeppelin.rest.ZeppelinRestApiTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r27 = new java.lang.StringBuilder
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r27 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newNoteId:=")
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newNoteId:=") >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r30)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String)>($r30) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r31 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r31 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r7 = virtualinvoke $r31.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.notebook.Note getNote(java.lang.String)>(r6)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r7 = virtualinvoke $r31.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.notebook.Note getNote(java.lang.String)>(r6) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.String,java.lang.Object)>("Can not find new note by id", r7)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.String,java.lang.Object)>("Can not find new note by id", r7) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r8 = virtualinvoke r7.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r8 = virtualinvoke r7.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r32 = <org.apache.zeppelin.rest.ZeppelinRestApiTest: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r32 = <org.apache.zeppelin.rest.ZeppelinRestApiTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r33 = new java.lang.StringBuilder
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new note name is: ")
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new note name is: ") >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String)>($r36)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String)>($r36) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r9 = r1
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r9 = r1 >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : if $z0 == 0
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : if $z0 == 0 >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r37 = new java.lang.StringBuilder
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : if $z0 == 0 >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("compare note name", r9, r8)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("compare note name", r9, r8) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r40 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r40 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r41 = r0.<org.apache.zeppelin.rest.ZeppelinRestApiTest: org.apache.zeppelin.user.AuthenticationInfo anonymous>
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r41 = r0.<org.apache.zeppelin.rest.ZeppelinRestApiTest: org.apache.zeppelin.user.AuthenticationInfo anonymous> >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : virtualinvoke $r40.<org.apache.zeppelin.notebook.Notebook: void removeNote(java.lang.String,org.apache.zeppelin.user.AuthenticationInfo)>(r6, $r41)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : virtualinvoke $r40.<org.apache.zeppelin.notebook.Notebook: void removeNote(java.lang.String,org.apache.zeppelin.user.AuthenticationInfo)>(r6, $r41) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : virtualinvoke r4.<org.apache.commons.httpclient.methods.PostMethod: void releaseConnection()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : virtualinvoke r4.<org.apache.commons.httpclient.methods.PostMethod: void releaseConnection()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : return
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r37 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Note ")
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Note ") >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r9 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : r9 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinRestApiTest.testNoteCreate : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("compare note name", r9, r8)
