org.apache.zeppelin.AbstractFunctionalSuite.afterAll : $r1 = <scala.sys.process.package$: scala.sys.process.package$ MODULE$> >>>>>>>> org.apache.zeppelin.AbstractFunctionalSuite.afterAll : $r2 = virtualinvoke $r1.<scala.sys.process.package$: scala.sys.process.ProcessBuilder stringToProcess(java.lang.String)>("../bin/zeppelin-daemon.sh stop")
org.apache.zeppelin.AbstractFunctionalSuite.afterAll : $r2 = virtualinvoke $r1.<scala.sys.process.package$: scala.sys.process.ProcessBuilder stringToProcess(java.lang.String)>("../bin/zeppelin-daemon.sh stop") >>>>>>>> org.apache.zeppelin.AbstractFunctionalSuite.afterAll : interfaceinvoke $r2.<scala.sys.process.ProcessBuilder: int $bang()>()
org.apache.zeppelin.AbstractFunctionalSuite.afterAll : interfaceinvoke $r2.<scala.sys.process.ProcessBuilder: int $bang()>() >>>>>>>> org.apache.zeppelin.AbstractFunctionalSuite.afterAll : $r3 = virtualinvoke r0.<org.apache.zeppelin.AbstractFunctionalSuite: org.openqa.selenium.WebDriver webDriver()>()
org.apache.zeppelin.AbstractFunctionalSuite.afterAll : $r3 = virtualinvoke r0.<org.apache.zeppelin.AbstractFunctionalSuite: org.openqa.selenium.WebDriver webDriver()>() >>>>>>>> org.apache.zeppelin.AbstractFunctionalSuite.afterAll : interfaceinvoke $r3.<org.openqa.selenium.WebDriver: void close()>()
org.apache.zeppelin.AbstractFunctionalSuite.afterAll : interfaceinvoke $r3.<org.openqa.selenium.WebDriver: void close()>() >>>>>>>> org.apache.zeppelin.AbstractFunctionalSuite.afterAll : return
