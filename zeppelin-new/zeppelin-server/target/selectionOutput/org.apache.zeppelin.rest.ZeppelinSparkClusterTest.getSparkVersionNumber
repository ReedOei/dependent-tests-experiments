org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r2 = <org.apache.zeppelin.user.AuthenticationInfo: org.apache.zeppelin.user.AuthenticationInfo ANONYMOUS> >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : r3 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph addNewParagraph(org.apache.zeppelin.user.AuthenticationInfo)>($r2)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : r3 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph addNewParagraph(org.apache.zeppelin.user.AuthenticationInfo)>($r2) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r1.<org.apache.zeppelin.notebook.Note: void setName(java.lang.String)>("note")
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r1.<org.apache.zeppelin.notebook.Note: void setName(java.lang.String)>("note") >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("enabled", $r7)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("enabled", $r7) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setConfig(java.util.Map)>(r4)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setConfig(java.util.Map)>(r4) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setText(java.lang.String)>("%spark print(sc.version)")
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setText(java.lang.String)>("%spark print(sc.version)") >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r9 = r0.<org.apache.zeppelin.rest.ZeppelinSparkClusterTest: org.apache.zeppelin.user.AuthenticationInfo anonymous>
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r9 = r0.<org.apache.zeppelin.rest.ZeppelinSparkClusterTest: org.apache.zeppelin.user.AuthenticationInfo anonymous> >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setAuthenticationInfo(org.apache.zeppelin.user.AuthenticationInfo)>($r9)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setAuthenticationInfo(org.apache.zeppelin.user.AuthenticationInfo)>($r9) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r10 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r10 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r1.<org.apache.zeppelin.notebook.Note: void run(java.lang.String)>($r10)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke r1.<org.apache.zeppelin.notebook.Note: void run(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : specialinvoke r0.<org.apache.zeppelin.rest.ZeppelinSparkClusterTest: void waitForFinish(org.apache.zeppelin.notebook.Paragraph)>(r3)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : specialinvoke r0.<org.apache.zeppelin.rest.ZeppelinSparkClusterTest: void waitForFinish(org.apache.zeppelin.notebook.Paragraph)>(r3) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r11 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED>
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r11 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED> >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r12 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r12 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r13 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterResult getResult()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r13 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterResult getResult()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r14 = virtualinvoke $r13.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r14 = virtualinvoke $r13.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r16 = (org.apache.zeppelin.interpreter.InterpreterResultMessage) $r15
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r16 = (org.apache.zeppelin.interpreter.InterpreterResultMessage) $r15 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : r5 = virtualinvoke $r16.<org.apache.zeppelin.interpreter.InterpreterResultMessage: java.lang.String getData()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : r5 = virtualinvoke $r16.<org.apache.zeppelin.interpreter.InterpreterResultMessage: java.lang.String getData()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r17 = <java.lang.System: java.io.PrintStream out>
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r17 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r18 = new java.lang.StringBuilder
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spark version detected ")
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spark version detected ") >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.")
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.") >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r22 = r6[0]
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r22 = r6[0] >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $i2 = $i1 * 10
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $i2 = $i1 * 10 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r23 = r6[1]
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $r23 = r6[1] >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : i0 = $i2 + $i3
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : i0 = $i2 + $i3 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.getSparkVersionNumber : return i0
