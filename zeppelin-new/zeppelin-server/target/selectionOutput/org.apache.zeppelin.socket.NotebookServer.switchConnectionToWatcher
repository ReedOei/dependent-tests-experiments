org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $z0 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: boolean isSessionAllowedToSwitchToWatcher(org.apache.zeppelin.socket.NotebookSocket)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : if $z0 != 0
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : if $z0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r3 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : if $z0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r4 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r4 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Going to add {} to watcher socket", r1)
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Going to add {} to watcher socket", r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r5 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r5 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $z1 = interfaceinvoke $r5.<java.util.Queue: boolean contains(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $z1 = interfaceinvoke $r5.<java.util.Queue: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : if $z1 == 0
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r6 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r7 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r7 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeConnectionFromAllNote(org.apache.zeppelin.socket.NotebookSocket)>(r1)
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeConnectionFromAllNote(org.apache.zeppelin.socket.NotebookSocket)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r8 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue connectedSockets>
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r8 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue connectedSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r8.<java.util.Queue: boolean remove(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r8.<java.util.Queue: boolean remove(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r9 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: java.lang.String getUser()>()
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r9 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeUserConnection(java.lang.String,org.apache.zeppelin.socket.NotebookSocket)>($r9, r1)
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeUserConnection(java.lang.String,org.apache.zeppelin.socket.NotebookSocket)>($r9, r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : return
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r6 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("connection alrerady present in the watcher")
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("connection alrerady present in the watcher") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : return
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : $r3 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String)>("Cannot switch this client to watcher, invalid security key")
org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String)>("Cannot switch this client to watcher, invalid security key") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.switchConnectionToWatcher : return
