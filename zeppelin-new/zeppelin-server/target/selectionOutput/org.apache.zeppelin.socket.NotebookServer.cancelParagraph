org.apache.zeppelin.socket.NotebookServer.cancelParagraph : $r9 = virtualinvoke r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.Object get(java.lang.String)>("id") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : r5 = (java.lang.String) $r9
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : r5 = (java.lang.String) $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : if r5 != null
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : if r5 != null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : return
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : if r5 != null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : r6 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String getOpenNoteId(org.apache.zeppelin.socket.NotebookSocket)>(r1)
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : r6 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String getOpenNoteId(org.apache.zeppelin.socket.NotebookSocket)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : $r10 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal>
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : $r10 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : $z0 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: boolean hasParagraphWriterPermission(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,java.lang.String,java.util.HashSet,java.lang.String,java.lang.String)>(r1, r3, r6, r2, $r10, "write")
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : $z0 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: boolean hasParagraphWriterPermission(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,java.lang.String,java.util.HashSet,java.lang.String,java.lang.String)>(r1, r3, r6, r2, $r10, "write") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : if $z0 != 0
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : if $z0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : return
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : if $z0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : r7 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.notebook.Note getNote(java.lang.String)>(r6)
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : r7 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.notebook.Note getNote(java.lang.String)>(r6) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : r8 = virtualinvoke r7.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph getParagraph(java.lang.String)>(r5)
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : r8 = virtualinvoke r7.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph getParagraph(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : virtualinvoke r8.<org.apache.zeppelin.notebook.Paragraph: void abort()>()
org.apache.zeppelin.socket.NotebookServer.cancelParagraph : virtualinvoke r8.<org.apache.zeppelin.notebook.Paragraph: void abort()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.cancelParagraph : return
