org.apache.zeppelin.socket.NotebookServer.addUserConnection : virtualinvoke r2.<org.apache.zeppelin.socket.NotebookSocket: void setUser(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r4 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map userConnectedSockets>
org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r4 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map userConnectedSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.addUserConnection : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.addUserConnection : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r5 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map userConnectedSockets>
org.apache.zeppelin.socket.NotebookServer.addUserConnection : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r8 = new java.util.concurrent.ConcurrentLinkedQueue
org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r8 = new java.util.concurrent.ConcurrentLinkedQueue >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : specialinvoke $r8.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>()
org.apache.zeppelin.socket.NotebookServer.addUserConnection : specialinvoke $r8.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : r3 = $r8
org.apache.zeppelin.socket.NotebookServer.addUserConnection : r3 = $r8 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : interfaceinvoke r3.<java.util.Queue: boolean add(java.lang.Object)>(r2)
org.apache.zeppelin.socket.NotebookServer.addUserConnection : interfaceinvoke r3.<java.util.Queue: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map userConnectedSockets>
org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map userConnectedSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.zeppelin.socket.NotebookServer.addUserConnection : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : return
org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r5 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map userConnectedSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r7 = (java.util.Queue) $r6
org.apache.zeppelin.socket.NotebookServer.addUserConnection : $r7 = (java.util.Queue) $r6 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>(r2)
org.apache.zeppelin.socket.NotebookServer.addUserConnection : interfaceinvoke $r7.<java.util.Queue: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.addUserConnection : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addUserConnection : return
