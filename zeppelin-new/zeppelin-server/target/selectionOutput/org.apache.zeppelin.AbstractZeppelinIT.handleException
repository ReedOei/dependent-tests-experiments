org.apache.zeppelin.AbstractZeppelinIT.handleException : $r3 = <org.apache.zeppelin.AbstractZeppelinIT: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r1, r2)
org.apache.zeppelin.AbstractZeppelinIT.handleException : interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r1, r2) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r7 = <org.apache.zeppelin.AbstractZeppelinIT: org.openqa.selenium.WebDriver driver>
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r7 = <org.apache.zeppelin.AbstractZeppelinIT: org.openqa.selenium.WebDriver driver> >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r8 = interfaceinvoke $r7.<org.openqa.selenium.WebDriver: org.openqa.selenium.WebDriver$Options manage()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r8 = interfaceinvoke $r7.<org.openqa.selenium.WebDriver: org.openqa.selenium.WebDriver$Options manage()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r9 = interfaceinvoke $r8.<org.openqa.selenium.WebDriver$Options: org.openqa.selenium.logging.Logs logs()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r9 = interfaceinvoke $r8.<org.openqa.selenium.WebDriver$Options: org.openqa.selenium.logging.Logs logs()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : r4 = interfaceinvoke $r9.<org.openqa.selenium.logging.Logs: org.openqa.selenium.logging.LogEntries get(java.lang.String)>("browser")
org.apache.zeppelin.AbstractZeppelinIT.handleException : r4 = interfaceinvoke $r9.<org.openqa.selenium.logging.Logs: org.openqa.selenium.logging.LogEntries get(java.lang.String)>("browser") >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : r5 = virtualinvoke r4.<org.openqa.selenium.logging.LogEntries: java.util.Iterator iterator()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : r5 = virtualinvoke r4.<org.openqa.selenium.logging.LogEntries: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : if $z0 == 0
org.apache.zeppelin.AbstractZeppelinIT.handleException : if $z0 == 0 >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : if $z0 == 0 >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r22 = <org.apache.zeppelin.AbstractZeppelinIT: org.openqa.selenium.WebDriver driver>
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r22 = <org.apache.zeppelin.AbstractZeppelinIT: org.openqa.selenium.WebDriver driver> >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r23 = (org.openqa.selenium.TakesScreenshot) $r22
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r23 = (org.openqa.selenium.TakesScreenshot) $r22 >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r24 = <org.openqa.selenium.OutputType: org.openqa.selenium.OutputType FILE>
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r24 = <org.openqa.selenium.OutputType: org.openqa.selenium.OutputType FILE> >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r25 = interfaceinvoke $r23.<org.openqa.selenium.TakesScreenshot: java.lang.Object getScreenshotAs(org.openqa.selenium.OutputType)>($r24)
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r25 = interfaceinvoke $r23.<org.openqa.selenium.TakesScreenshot: java.lang.Object getScreenshotAs(org.openqa.selenium.OutputType)>($r24) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : r26 = (java.io.File) $r25
org.apache.zeppelin.AbstractZeppelinIT.handleException : r26 = (java.io.File) $r25 >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r27 = <org.apache.zeppelin.AbstractZeppelinIT: org.slf4j.Logger LOG>
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r27 = <org.apache.zeppelin.AbstractZeppelinIT: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r28 = new java.lang.StringBuilder
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScreenShot::\ndata:image/png;base64,")
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScreenShot::\ndata:image/png;base64,") >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r30 = new java.lang.String
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r30 = new java.lang.String >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r31 = staticinvoke <org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>(r26)
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r31 = staticinvoke <org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>(r26) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r32 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[])>($r31)
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r32 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[])>($r31) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : specialinvoke $r30.<java.lang.String: void <init>(byte[])>($r32)
org.apache.zeppelin.AbstractZeppelinIT.handleException : specialinvoke $r30.<java.lang.String: void <init>(byte[])>($r32) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String)>($r34)
org.apache.zeppelin.AbstractZeppelinIT.handleException : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String)>($r34) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : throw r2
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : r6 = (org.openqa.selenium.logging.LogEntry) $r10
org.apache.zeppelin.AbstractZeppelinIT.handleException : r6 = (org.openqa.selenium.logging.LogEntry) $r10 >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r11 = <org.apache.zeppelin.AbstractZeppelinIT: org.slf4j.Logger LOG>
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r11 = <org.apache.zeppelin.AbstractZeppelinIT: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r12 = new java.lang.StringBuilder
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r13 = new java.util.Date
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r13 = new java.util.Date >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $l0 = virtualinvoke r6.<org.openqa.selenium.logging.LogEntry: long getTimestamp()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : $l0 = virtualinvoke r6.<org.openqa.selenium.logging.LogEntry: long getTimestamp()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : specialinvoke $r13.<java.util.Date: void <init>(long)>($l0)
org.apache.zeppelin.AbstractZeppelinIT.handleException : specialinvoke $r13.<java.util.Date: void <init>(long)>($l0) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13)
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r16 = virtualinvoke r6.<org.openqa.selenium.logging.LogEntry: java.util.logging.Level getLevel()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r16 = virtualinvoke r6.<org.openqa.selenium.logging.LogEntry: java.util.logging.Level getLevel()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16)
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r19 = virtualinvoke r6.<org.openqa.selenium.logging.LogEntry: java.lang.String getMessage()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r19 = virtualinvoke r6.<org.openqa.selenium.logging.LogEntry: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.AbstractZeppelinIT.handleException : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String)>($r21)
org.apache.zeppelin.AbstractZeppelinIT.handleException : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String)>($r21) >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.AbstractZeppelinIT.handleException : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.AbstractZeppelinIT.handleException : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
