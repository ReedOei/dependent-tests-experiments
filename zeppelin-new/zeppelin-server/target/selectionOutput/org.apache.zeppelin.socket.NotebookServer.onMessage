org.apache.zeppelin.socket.NotebookServer.onMessage : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r4 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.socket.Message deserializeMessage(java.lang.String)>(r2)
org.apache.zeppelin.socket.NotebookServer.onMessage : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : r69 = $r68 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r70 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r70 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Can\'t handle message", r69)
org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Can\'t handle message", r69) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : return
org.apache.zeppelin.socket.NotebookServer.onMessage : r4 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.socket.Message deserializeMessage(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r9 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.onMessage : r4 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.socket.Message deserializeMessage(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r9 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r10 = new java.lang.StringBuilder
org.apache.zeppelin.socket.NotebookServer.onMessage : $r9 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RECEIVE << ")
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RECEIVE << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r12 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RECEIVE << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r12 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r12 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE PRINCIPAL << ")
org.apache.zeppelin.socket.NotebookServer.onMessage : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE PRINCIPAL << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r15 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE PRINCIPAL << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r15 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r15 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE TICKET << ")
org.apache.zeppelin.socket.NotebookServer.onMessage : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE TICKET << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r18 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE TICKET << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r18 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r18 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE ROLES << ")
org.apache.zeppelin.socket.NotebookServer.onMessage : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE ROLES << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r21 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String roles>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE ROLES << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r21 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String roles> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r21 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String roles> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE DATA << ")
org.apache.zeppelin.socket.NotebookServer.onMessage : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE DATA << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r24 = r4.<org.apache.zeppelin.notebook.socket.Message: java.util.Map data>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", RECEIVE DATA << ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r24 = r4.<org.apache.zeppelin.notebook.socket.Message: java.util.Map data> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r24 = r4.<org.apache.zeppelin.notebook.socket.Message: java.util.Map data> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r26)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r26) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r27 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r26) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r27 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $z1 = interfaceinvoke $r27.<org.slf4j.Logger: boolean isTraceEnabled()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : $r27 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $z1 = interfaceinvoke $r27.<org.slf4j.Logger: boolean isTraceEnabled()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if $z1 == 0
org.apache.zeppelin.socket.NotebookServer.onMessage : $z1 = interfaceinvoke $r27.<org.slf4j.Logger: boolean isTraceEnabled()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r28 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r33 = <org.apache.zeppelin.ticket.TicketContainer: org.apache.zeppelin.ticket.TicketContainer instance>
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r33 = <org.apache.zeppelin.ticket.TicketContainer: org.apache.zeppelin.ticket.TicketContainer instance> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r34 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r33 = <org.apache.zeppelin.ticket.TicketContainer: org.apache.zeppelin.ticket.TicketContainer instance> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r34 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r5 = virtualinvoke $r33.<org.apache.zeppelin.ticket.TicketContainer: java.lang.String getTicket(java.lang.String)>($r34)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r34 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : r5 = virtualinvoke $r33.<org.apache.zeppelin.ticket.TicketContainer: java.lang.String getTicket(java.lang.String)>($r34) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if r5 == null
org.apache.zeppelin.socket.NotebookServer.onMessage : r5 = virtualinvoke $r33.<org.apache.zeppelin.ticket.TicketContainer: java.lang.String getTicket(java.lang.String)>($r34) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if r5 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r35 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket>
org.apache.zeppelin.socket.NotebookServer.onMessage : if r5 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r6 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : if r5 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : r6 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : z0 = virtualinvoke r6.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isAnonymousAllowed()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : r6 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : z0 = virtualinvoke r6.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isAnonymousAllowed()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if z0 != 0
org.apache.zeppelin.socket.NotebookServer.onMessage : z0 = virtualinvoke r6.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isAnonymousAllowed()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if z0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r48 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal>
org.apache.zeppelin.socket.NotebookServer.onMessage : if z0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r50 = new java.util.HashSet
org.apache.zeppelin.socket.NotebookServer.onMessage : if z0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r50 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r50.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : $r50 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r50.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r7 = $r50
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r50.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : r7 = $r50 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r51 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal>
org.apache.zeppelin.socket.NotebookServer.onMessage : r7 = $r50 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r51 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r7.<java.util.HashSet: boolean add(java.lang.Object)>($r51)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r51 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r7.<java.util.HashSet: boolean add(java.lang.Object)>($r51) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r52 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String roles>
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r7.<java.util.HashSet: boolean add(java.lang.Object)>($r51) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r52 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String roles> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $z7 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.zeppelin.socket.NotebookServer.onMessage : $r52 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String roles> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $z7 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if $z7 != 0
org.apache.zeppelin.socket.NotebookServer.onMessage : $z7 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z7 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r53 = r0.<org.apache.zeppelin.socket.NotebookServer: com.google.gson.Gson gson>
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z7 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r58 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: java.lang.String getUser()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z7 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r58 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $z9 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r58)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r58 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $z9 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r58) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if $z9 == 0
org.apache.zeppelin.socket.NotebookServer.onMessage : $z9 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r58) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z9 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r59 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal>
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z9 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r60 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z9 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r60 = new org.apache.zeppelin.user.AuthenticationInfo >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r61 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r60 = new org.apache.zeppelin.user.AuthenticationInfo >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r61 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r62 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r61 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r62 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r60.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String,java.lang.String)>($r61, $r62)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r62 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r60.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String,java.lang.String)>($r61, $r62) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r63 = $r60
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r60.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String,java.lang.String)>($r61, $r62) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : r63 = $r60 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r64 = <org.apache.zeppelin.socket.NotebookServer$6: int[] $SwitchMap$org$apache$zeppelin$notebook$socket$Message$OP>
org.apache.zeppelin.socket.NotebookServer.onMessage : r63 = $r60 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r64 = <org.apache.zeppelin.socket.NotebookServer$6: int[] $SwitchMap$org$apache$zeppelin$notebook$socket$Message$OP> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r65 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r64 = <org.apache.zeppelin.socket.NotebookServer$6: int[] $SwitchMap$org$apache$zeppelin$notebook$socket$Message$OP> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r65 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $i0 = virtualinvoke $r65.<org.apache.zeppelin.notebook.socket.Message$OP: int ordinal()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : $r65 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $i0 = virtualinvoke $r65.<org.apache.zeppelin.notebook.socket.Message$OP: int ordinal()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $i1 = $r64[$i0]
org.apache.zeppelin.socket.NotebookServer.onMessage : $i0 = virtualinvoke $r65.<org.apache.zeppelin.notebook.socket.Message$OP: int ordinal()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $i1 = $r64[$i0] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1:
org.apache.zeppelin.socket.NotebookServer.onMessage : $i1 = $r64[$i0] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void unicastNoteList(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r1, r63, r7)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastReloadedNoteList(org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r63, r7)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void sendHomeNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void sendNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void createNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeFolder(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void moveNoteToTrash(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void moveFolderToTrash(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void emptyTrash(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void restoreFolder(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void restoreNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void restoreAll(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void cloneNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Note importNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void updateParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void runParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastSpellExecution(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void runAllParagraphs(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void cancelParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void moveParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String insertParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void copyParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void clearParagraphOutput(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void clearAllParagraphOutput(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void updateNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void renameNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void renameFolder(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void updatePersonalizedMode(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void completion(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void angularObjectUpdated(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void angularObjectClientBind(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void angularObjectClientUnbind(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void sendAllConfigurations(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook)>(r1, r7, r3)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void checkpointNote(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void listRevisionHistory(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void setNoteRevision(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getNoteByRevision(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r3, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void unicastNoteJobInfo(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void unsubscribeNoteJobInfo(org.apache.zeppelin.socket.NotebookSocket)>(r1)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getInterpreterBindings(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void saveInterpreterBindings(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getEditorSetting(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getInterpreterSettings(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.user.AuthenticationInfo)>(r1, r63)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void switchConnectionToWatcher(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : return
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void switchConnectionToWatcher(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void switchConnectionToWatcher(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getInterpreterSettings(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.user.AuthenticationInfo)>(r1, r63) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getInterpreterSettings(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.user.AuthenticationInfo)>(r1, r63) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getEditorSetting(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getEditorSetting(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void saveInterpreterBindings(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void saveInterpreterBindings(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getInterpreterBindings(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getInterpreterBindings(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void unsubscribeNoteJobInfo(org.apache.zeppelin.socket.NotebookSocket)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void unsubscribeNoteJobInfo(org.apache.zeppelin.socket.NotebookSocket)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void unicastNoteJobInfo(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void unicastNoteJobInfo(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.socket.Message)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getNoteByRevision(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void getNoteByRevision(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void setNoteRevision(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void setNoteRevision(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void listRevisionHistory(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void listRevisionHistory(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void checkpointNote(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void checkpointNote(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void sendAllConfigurations(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook)>(r1, r7, r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void sendAllConfigurations(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook)>(r1, r7, r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void angularObjectClientUnbind(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void angularObjectClientUnbind(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void angularObjectClientBind(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void angularObjectClientBind(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void angularObjectUpdated(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void angularObjectUpdated(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void completion(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void completion(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void updatePersonalizedMode(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void updatePersonalizedMode(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void renameFolder(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void renameFolder(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void renameNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void renameNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void updateNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void updateNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void clearAllParagraphOutput(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void clearAllParagraphOutput(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void clearParagraphOutput(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void clearParagraphOutput(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void copyParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void copyParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String insertParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String insertParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void moveParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void moveParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void cancelParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void cancelParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void runAllParagraphs(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void runAllParagraphs(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastSpellExecution(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastSpellExecution(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void runParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void runParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void updateParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void updateParagraph(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Note importNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Note importNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void cloneNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void cloneNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void restoreAll(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void restoreAll(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void restoreNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void restoreNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void restoreFolder(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void restoreFolder(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void emptyTrash(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void emptyTrash(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void moveFolderToTrash(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void moveFolderToTrash(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void moveNoteToTrash(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void moveNoteToTrash(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeFolder(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeFolder(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void createNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void createNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void sendNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void sendNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void sendHomeNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void sendHomeNote(org.apache.zeppelin.socket.NotebookSocket,java.util.HashSet,org.apache.zeppelin.notebook.Notebook,org.apache.zeppelin.notebook.socket.Message)>(r1, r7, r3, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastReloadedNoteList(org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r63, r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastReloadedNoteList(org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r63, r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void unicastNoteList(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r1, r63, r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)]
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void unicastNoteList(org.apache.zeppelin.socket.NotebookSocket,org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r1, r63, r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r59 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void addUserConnection(java.lang.String,org.apache.zeppelin.socket.NotebookSocket)>($r59, r1)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r59 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void addUserConnection(java.lang.String,org.apache.zeppelin.socket.NotebookSocket)>($r59, r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r60 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void addUserConnection(java.lang.String,org.apache.zeppelin.socket.NotebookSocket)>($r59, r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r53 = r0.<org.apache.zeppelin.socket.NotebookServer: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r54 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String roles>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r53 = r0.<org.apache.zeppelin.socket.NotebookServer: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r54 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String roles> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r55 = new org.apache.zeppelin.socket.NotebookServer$2
org.apache.zeppelin.socket.NotebookServer.onMessage : $r54 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String roles> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r55 = new org.apache.zeppelin.socket.NotebookServer$2 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r55.<org.apache.zeppelin.socket.NotebookServer$2: void <init>(org.apache.zeppelin.socket.NotebookServer)>(r0)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r55 = new org.apache.zeppelin.socket.NotebookServer$2 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r55.<org.apache.zeppelin.socket.NotebookServer$2: void <init>(org.apache.zeppelin.socket.NotebookServer)>(r0) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r56 = virtualinvoke $r55.<org.apache.zeppelin.socket.NotebookServer$2: java.lang.reflect.Type getType()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r55.<org.apache.zeppelin.socket.NotebookServer$2: void <init>(org.apache.zeppelin.socket.NotebookServer)>(r0) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r56 = virtualinvoke $r55.<org.apache.zeppelin.socket.NotebookServer$2: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r57 = virtualinvoke $r53.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r54, $r56)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r56 = virtualinvoke $r55.<org.apache.zeppelin.socket.NotebookServer$2: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r57 = virtualinvoke $r53.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r54, $r56) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r8 = (java.util.HashSet) $r57
org.apache.zeppelin.socket.NotebookServer.onMessage : $r57 = virtualinvoke $r53.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r54, $r56) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : r8 = (java.util.HashSet) $r57 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if r8 == null
org.apache.zeppelin.socket.NotebookServer.onMessage : r8 = (java.util.HashSet) $r57 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if r8 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r7.<java.util.HashSet: boolean addAll(java.util.Collection)>(r8)
org.apache.zeppelin.socket.NotebookServer.onMessage : if r8 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r58 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: java.lang.String getUser()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : if r8 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r7.<java.util.HashSet: boolean addAll(java.util.Collection)>(r8) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r58 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: java.lang.String getUser()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r7.<java.util.HashSet: boolean addAll(java.util.Collection)>(r8) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r48 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $z5 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>("anonymous")
org.apache.zeppelin.socket.NotebookServer.onMessage : $r48 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $z5 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>("anonymous") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if $z5 == 0
org.apache.zeppelin.socket.NotebookServer.onMessage : $z5 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>("anonymous") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z5 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r49 = new java.lang.Exception
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z5 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r50 = new java.util.HashSet
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z5 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r49 = new java.lang.Exception >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r49.<java.lang.Exception: void <init>(java.lang.String)>("Anonymous access not allowed ")
org.apache.zeppelin.socket.NotebookServer.onMessage : $r49 = new java.lang.Exception >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r49.<java.lang.Exception: void <init>(java.lang.String)>("Anonymous access not allowed ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : throw $r49
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r49.<java.lang.Exception: void <init>(java.lang.String)>("Anonymous access not allowed ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : throw $r49 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r35 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if $r35 == null
org.apache.zeppelin.socket.NotebookServer.onMessage : $r35 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if $r35 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r36 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket>
org.apache.zeppelin.socket.NotebookServer.onMessage : if $r35 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r37 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket>
org.apache.zeppelin.socket.NotebookServer.onMessage : if $r35 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r37 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r37)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r37 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r37) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if $z3 == 0
org.apache.zeppelin.socket.NotebookServer.onMessage : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r37) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z3 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r38 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z3 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r42 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op>
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z3 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r42 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r43 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP PING>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r42 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r43 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP PING> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $z4 = virtualinvoke $r42.<org.apache.zeppelin.notebook.socket.Message$OP: boolean equals(java.lang.Object)>($r43)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r43 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP PING> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $z4 = virtualinvoke $r42.<org.apache.zeppelin.notebook.socket.Message$OP: boolean equals(java.lang.Object)>($r43) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if $z4 != 0
org.apache.zeppelin.socket.NotebookServer.onMessage : $z4 = virtualinvoke $r42.<org.apache.zeppelin.notebook.socket.Message$OP: boolean equals(java.lang.Object)>($r43) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z4 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r44 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z4 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : return
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z4 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r44 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r45 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP SESSION_LOGOUT>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r44 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r45 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP SESSION_LOGOUT> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r44.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r45)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r45 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP SESSION_LOGOUT> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r44.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r45) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r46 = virtualinvoke $r44.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("info", "Your ticket is invalid possibly due to server restart. Please login again.")
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r44.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r45) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r46 = virtualinvoke $r44.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("info", "Your ticket is invalid possibly due to server restart. Please login again.") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r47 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String serializeMessage(org.apache.zeppelin.notebook.socket.Message)>($r46)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r46 = virtualinvoke $r44.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("info", "Your ticket is invalid possibly due to server restart. Please login again.") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r47 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String serializeMessage(org.apache.zeppelin.notebook.socket.Message)>($r46) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: void send(java.lang.String)>($r47)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r47 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String serializeMessage(org.apache.zeppelin.notebook.socket.Message)>($r46) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: void send(java.lang.String)>($r47) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : return
org.apache.zeppelin.socket.NotebookServer.onMessage : virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: void send(java.lang.String)>($r47) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r38 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r39 = newarray (java.lang.Object)[3]
org.apache.zeppelin.socket.NotebookServer.onMessage : $r38 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r39 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r40 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r39 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r40 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r39[0] = $r40
org.apache.zeppelin.socket.NotebookServer.onMessage : $r40 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r39[0] = $r40 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r41 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r39[0] = $r40 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r41 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r39[1] = $r41
org.apache.zeppelin.socket.NotebookServer.onMessage : $r41 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r39[1] = $r41 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r39[2] = r5
org.apache.zeppelin.socket.NotebookServer.onMessage : $r39[1] = $r41 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r39[2] = r5 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r38.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("{} message: invalid ticket {} != {}", $r39)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r39[2] = r5 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r38.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("{} message: invalid ticket {} != {}", $r39) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r38.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("{} message: invalid ticket {} != {}", $r39) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : return
org.apache.zeppelin.socket.NotebookServer.onMessage : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r36 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r36)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r36 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r36) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : if $z2 != 0
org.apache.zeppelin.socket.NotebookServer.onMessage : $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r36) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z2 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r37 = r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket>
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z2 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r6 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : if $z2 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r28 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r29 = new java.lang.StringBuilder
org.apache.zeppelin.socket.NotebookServer.onMessage : $r28 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RECEIVE MSG = ")
org.apache.zeppelin.socket.NotebookServer.onMessage : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RECEIVE MSG = ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RECEIVE MSG = ") >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r28.<org.slf4j.Logger: void trace(java.lang.String)>($r32)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r28.<org.slf4j.Logger: void trace(java.lang.String)>($r32) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r33 = <org.apache.zeppelin.ticket.TicketContainer: org.apache.zeppelin.ticket.TicketContainer instance>
org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r28.<org.slf4j.Logger: void trace(java.lang.String)>($r32) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r68 := @caughtexception
