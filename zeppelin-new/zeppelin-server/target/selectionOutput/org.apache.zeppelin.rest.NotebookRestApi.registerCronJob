org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r3 = <org.apache.zeppelin.rest.NotebookRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Register cron job note={} request cron msg={}", r1, r2)
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Register cron job note={} request cron msg={}", r1, r2) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r7 = r0.<org.apache.zeppelin.rest.NotebookRestApi: com.google.gson.Gson gson>
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r7 = r0.<org.apache.zeppelin.rest.NotebookRestApi: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r8 = virtualinvoke $r7.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r2, class "org/apache/zeppelin/rest/message/CronRequest")
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r8 = virtualinvoke $r7.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r2, class "org/apache/zeppelin/rest/message/CronRequest") >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : r4 = (org.apache.zeppelin.rest.message.CronRequest) $r8
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : r4 = (org.apache.zeppelin.rest.message.CronRequest) $r8 >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r9 = r0.<org.apache.zeppelin.rest.NotebookRestApi: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r9 = r0.<org.apache.zeppelin.rest.NotebookRestApi: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : r5 = virtualinvoke $r9.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.notebook.Note getNote(java.lang.String)>(r1)
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : r5 = virtualinvoke $r9.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.notebook.Note getNote(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : specialinvoke r0.<org.apache.zeppelin.rest.NotebookRestApi: void checkIfNoteIsNotNull(org.apache.zeppelin.notebook.Note)>(r5)
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : specialinvoke r0.<org.apache.zeppelin.rest.NotebookRestApi: void checkIfNoteIsNotNull(org.apache.zeppelin.notebook.Note)>(r5) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : specialinvoke r0.<org.apache.zeppelin.rest.NotebookRestApi: void checkIfUserCanWrite(java.lang.String,java.lang.String)>(r1, "Insufficient privileges you cannot set a cron job for this note")
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : specialinvoke r0.<org.apache.zeppelin.rest.NotebookRestApi: void checkIfUserCanWrite(java.lang.String,java.lang.String)>(r1, "Insufficient privileges you cannot set a cron job for this note") >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r10 = virtualinvoke r4.<org.apache.zeppelin.rest.message.CronRequest: java.lang.String getCronString()>()
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r10 = virtualinvoke r4.<org.apache.zeppelin.rest.message.CronRequest: java.lang.String getCronString()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $z0 = staticinvoke <org.quartz.CronExpression: boolean isValidExpression(java.lang.String)>($r10)
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $z0 = staticinvoke <org.quartz.CronExpression: boolean isValidExpression(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : if $z0 != 0
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : if $z0 != 0 >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r11 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : if $z0 != 0 >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : r6 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : r6 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r14 = virtualinvoke r4.<org.apache.zeppelin.rest.message.CronRequest: java.lang.String getCronString()>()
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r14 = virtualinvoke r4.<org.apache.zeppelin.rest.message.CronRequest: java.lang.String getCronString()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cron", $r14)
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cron", $r14) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : virtualinvoke r5.<org.apache.zeppelin.notebook.Note: void setConfig(java.util.Map)>(r6)
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : virtualinvoke r5.<org.apache.zeppelin.notebook.Note: void setConfig(java.util.Map)>(r6) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r16 = r0.<org.apache.zeppelin.rest.NotebookRestApi: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r16 = r0.<org.apache.zeppelin.rest.NotebookRestApi: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r17 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r17 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : virtualinvoke $r16.<org.apache.zeppelin.notebook.Notebook: void refreshCron(java.lang.String)>($r17)
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : virtualinvoke $r16.<org.apache.zeppelin.notebook.Notebook: void refreshCron(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r18 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r18 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r19 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK>
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r19 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK> >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : specialinvoke $r18.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status)>($r19)
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : specialinvoke $r18.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status)>($r19) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r20 = virtualinvoke $r18.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r20 = virtualinvoke $r18.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : return $r20
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r11 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r12 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status BAD_REQUEST>
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r12 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status BAD_REQUEST> >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : specialinvoke $r11.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>($r12, "wrong cron expressions.")
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : specialinvoke $r11.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>($r12, "wrong cron expressions.") >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r13 = virtualinvoke $r11.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : $r13 = virtualinvoke $r11.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.registerCronJob : return $r13
