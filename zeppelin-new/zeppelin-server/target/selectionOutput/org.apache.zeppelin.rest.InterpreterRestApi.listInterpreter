org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : $r4 = r0.<org.apache.zeppelin.rest.InterpreterRestApi: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : r2 = virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map getAvailableInterpreterSettings()>()
org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : r2 = virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map getAvailableInterpreterSettings()>() >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : $r5 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : $r5 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : $r3 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK>
org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : $r3 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK> >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : specialinvoke $r5.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r3, "", r2)
org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : specialinvoke $r5.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r3, "", r2) >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : $r6 = virtualinvoke $r5.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : $r6 = virtualinvoke $r5.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listInterpreter : return $r6
