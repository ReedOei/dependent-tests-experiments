org.apache.zeppelin.socket.NotebookServer.onUpdate : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null
org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : return
org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.onUpdate : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : return
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : r6 = (org.apache.zeppelin.notebook.Note) $r10
org.apache.zeppelin.socket.NotebookServer.onUpdate : r6 = (org.apache.zeppelin.notebook.Note) $r10 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r11 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObject: java.lang.String getNoteId()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r11 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObject: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : if $r11 == null
org.apache.zeppelin.socket.NotebookServer.onUpdate : if $r11 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r12 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : if $r11 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r14 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r14 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r15 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r15 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : r7 = virtualinvoke $r14.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r15)
org.apache.zeppelin.socket.NotebookServer.onUpdate : r7 = virtualinvoke $r14.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $z2 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $z2 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : if $z2 == 0
org.apache.zeppelin.socket.NotebookServer.onUpdate : if $z2 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.socket.NotebookServer.onUpdate : if $z2 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r16 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r16 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r8 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r8 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r9 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP ANGULAR_OBJECT_UPDATE>
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r9 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP ANGULAR_OBJECT_UPDATE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : specialinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r9)
org.apache.zeppelin.socket.NotebookServer.onUpdate : specialinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r9) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r17 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("angularObject", r2)
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r17 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("angularObject", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r18 = virtualinvoke $r17.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("interpreterGroupId", r1)
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r18 = virtualinvoke $r17.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("interpreterGroupId", r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r19 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r19 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r20 = virtualinvoke $r18.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", $r19)
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r20 = virtualinvoke $r18.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", $r19) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r21 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObject: java.lang.String getParagraphId()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r21 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObject: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r22 = virtualinvoke $r20.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", $r21)
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r22 = virtualinvoke $r20.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", $r21) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>($r16, $r22)
org.apache.zeppelin.socket.NotebookServer.onUpdate : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>($r16, $r22) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.socket.NotebookServer.onUpdate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r12 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r13 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObject: java.lang.String getNoteId()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : $r13 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObject: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13)
org.apache.zeppelin.socket.NotebookServer.onUpdate : $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : if $z1 != 0
org.apache.zeppelin.socket.NotebookServer.onUpdate : if $z1 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.socket.NotebookServer.onUpdate : if $z1 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $r14 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
