org.jfree.chart.renderer.OutlierListCollection.add : $r5 = r0.<org.jfree.chart.renderer.OutlierListCollection: java.util.List outlierLists> >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>()
org.jfree.chart.renderer.OutlierListCollection.add : $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : if $z1 == 0
org.jfree.chart.renderer.OutlierListCollection.add : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $r6 = r0.<org.jfree.chart.renderer.OutlierListCollection: java.util.List outlierLists>
org.jfree.chart.renderer.OutlierListCollection.add : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : z0 = 0
org.jfree.chart.renderer.OutlierListCollection.add : z0 = 0 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $r7 = r0.<org.jfree.chart.renderer.OutlierListCollection: java.util.List outlierLists>
org.jfree.chart.renderer.OutlierListCollection.add : $r7 = r0.<org.jfree.chart.renderer.OutlierListCollection: java.util.List outlierLists> >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.renderer.OutlierListCollection.add : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.OutlierListCollection.add : $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : if $z3 == 0
org.jfree.chart.renderer.OutlierListCollection.add : if $z3 == 0 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.renderer.OutlierListCollection.add : if $z3 == 0 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : if z0 != 0
org.jfree.chart.renderer.OutlierListCollection.add : if z0 != 0 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $r9 = r0.<org.jfree.chart.renderer.OutlierListCollection: java.util.List outlierLists>
org.jfree.chart.renderer.OutlierListCollection.add : if z0 != 0 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : return z0
org.jfree.chart.renderer.OutlierListCollection.add : $r9 = r0.<org.jfree.chart.renderer.OutlierListCollection: java.util.List outlierLists> >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $r10 = new org.jfree.chart.renderer.OutlierList
org.jfree.chart.renderer.OutlierListCollection.add : $r10 = new org.jfree.chart.renderer.OutlierList >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : specialinvoke $r10.<org.jfree.chart.renderer.OutlierList: void <init>(org.jfree.chart.renderer.Outlier)>(r1)
org.jfree.chart.renderer.OutlierListCollection.add : specialinvoke $r10.<org.jfree.chart.renderer.OutlierList: void <init>(org.jfree.chart.renderer.Outlier)>(r1) >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : z0 = interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10)
org.jfree.chart.renderer.OutlierListCollection.add : z0 = interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : return z0
org.jfree.chart.renderer.OutlierListCollection.add : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : r4 = (org.jfree.chart.renderer.OutlierList) $r8
org.jfree.chart.renderer.OutlierListCollection.add : r4 = (org.jfree.chart.renderer.OutlierList) $r8 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $z4 = virtualinvoke r4.<org.jfree.chart.renderer.OutlierList: boolean isOverlapped(org.jfree.chart.renderer.Outlier)>(r1)
org.jfree.chart.renderer.OutlierListCollection.add : $z4 = virtualinvoke r4.<org.jfree.chart.renderer.OutlierList: boolean isOverlapped(org.jfree.chart.renderer.Outlier)>(r1) >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : if $z4 == 0
org.jfree.chart.renderer.OutlierListCollection.add : if $z4 == 0 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : z0 = specialinvoke r0.<org.jfree.chart.renderer.OutlierListCollection: boolean updateOutlierList(org.jfree.chart.renderer.OutlierList,org.jfree.chart.renderer.Outlier)>(r4, r1)
org.jfree.chart.renderer.OutlierListCollection.add : if $z4 == 0 >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : goto [?= $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.renderer.OutlierListCollection.add : goto [?= $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.OutlierListCollection.add : z0 = specialinvoke r0.<org.jfree.chart.renderer.OutlierListCollection: boolean updateOutlierList(org.jfree.chart.renderer.OutlierList,org.jfree.chart.renderer.Outlier)>(r4, r1) >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : goto [?= $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.renderer.OutlierListCollection.add : $r6 = r0.<org.jfree.chart.renderer.OutlierListCollection: java.util.List outlierLists> >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $r2 = new org.jfree.chart.renderer.OutlierList
org.jfree.chart.renderer.OutlierListCollection.add : $r2 = new org.jfree.chart.renderer.OutlierList >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : specialinvoke $r2.<org.jfree.chart.renderer.OutlierList: void <init>(org.jfree.chart.renderer.Outlier)>(r1)
org.jfree.chart.renderer.OutlierListCollection.add : specialinvoke $r2.<org.jfree.chart.renderer.OutlierList: void <init>(org.jfree.chart.renderer.Outlier)>(r1) >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : $z2 = interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r2)
org.jfree.chart.renderer.OutlierListCollection.add : $z2 = interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r2) >>>>>>>> org.jfree.chart.renderer.OutlierListCollection.add : return $z2
