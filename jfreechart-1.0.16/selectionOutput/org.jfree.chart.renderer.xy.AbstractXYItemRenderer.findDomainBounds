org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r6 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r6 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, z0) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r6
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r5
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z2 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r4 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = i1 + 1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : goto [?= (branch)]
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r4 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = i1 + 1
