org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : r2 = virtualinvoke r1.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>() >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("BackgroundPaint")
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("BackgroundPaint") >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z0 == 0
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z0 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptBackgroundPaintSelection()>()
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z0 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OutlineStroke")
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OutlineStroke") >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z1 == 0
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z1 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptOutlineStrokeSelection()>()
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z1 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OutlinePaint")
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OutlinePaint") >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z2 == 0
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z2 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptOutlinePaintSelection()>()
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z2 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Orientation")
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Orientation") >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z3 == 0
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z3 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptOrientationSelection()>()
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z3 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("DrawLines")
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("DrawLines") >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z4 == 0
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z4 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptDrawLinesSelection()>()
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z4 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("DrawShapes")
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("DrawShapes") >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z5 == 0
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z5 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptDrawShapesSelection()>()
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : if $z5 == 0 >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : return
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptDrawShapesSelection()>() >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : return
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptDrawLinesSelection()>() >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return]
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return] >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : return
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptOrientationSelection()>() >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return]
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return] >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : return
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptOutlinePaintSelection()>() >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return]
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return] >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : return
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptOutlineStrokeSelection()>() >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return]
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return] >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : return
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : specialinvoke r0.<org.jfree.chart.editor.DefaultPlotEditor: void attemptBackgroundPaintSelection()>() >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return]
org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : goto [?= return] >>>>>>>> org.jfree.chart.editor.DefaultPlotEditor.actionPerformed : return
