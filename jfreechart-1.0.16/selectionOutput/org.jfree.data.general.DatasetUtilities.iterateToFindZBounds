org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange")
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $b3 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $b3 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $b3 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $b3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : return null
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $b3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $r6 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $r6 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : specialinvoke $r6.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : specialinvoke $r6.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : return $r6
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : r4 = (java.lang.Comparable) $r5
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : r4 = (java.lang.Comparable) $r5 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: int indexOf(java.lang.Comparable)>(r4)
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: int indexOf(java.lang.Comparable)>(r4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: int getItemCount(int)>(i0)
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: int getItemCount(int)>(i0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i2 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if i2 >= i1
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d2 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: double getXValue(int,int)>(i0, i2)
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d2 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: double getXValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d3 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: double getZValue(int,int)>(i0, i2)
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d3 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: double getZValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $z2 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d2)
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $z2 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $z2 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3)
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i2 = i2 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i2 = i2 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if i2 >= i1
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $z3 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $z3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d3)
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : if $z3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i2 = i2 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d3)
org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindZBounds : i2 = i2 + 1
