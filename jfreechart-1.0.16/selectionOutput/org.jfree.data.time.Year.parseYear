org.jfree.data.time.Year.parseYear : r1 = $r3 >>>>>>>> org.jfree.data.time.Year.parseYear : $r4 = new org.jfree.data.time.TimePeriodFormatException
org.jfree.data.time.Year.parseYear : $r4 = new org.jfree.data.time.TimePeriodFormatException >>>>>>>> org.jfree.data.time.Year.parseYear : specialinvoke $r4.<org.jfree.data.time.TimePeriodFormatException: void <init>(java.lang.String)>("Cannot parse string.")
org.jfree.data.time.Year.parseYear : specialinvoke $r4.<org.jfree.data.time.TimePeriodFormatException: void <init>(java.lang.String)>("Cannot parse string.") >>>>>>>> org.jfree.data.time.Year.parseYear : throw $r4
org.jfree.data.time.Year.parseYear : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.jfree.data.time.Year.parseYear : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)
org.jfree.data.time.Year.parseYear : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.jfree.data.time.Year.parseYear : $r3 := @caughtexception
org.jfree.data.time.Year.parseYear : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) >>>>>>>> org.jfree.data.time.Year.parseYear : goto [?= $r5 = new org.jfree.data.time.Year]
org.jfree.data.time.Year.parseYear : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) >>>>>>>> org.jfree.data.time.Year.parseYear : $r3 := @caughtexception
org.jfree.data.time.Year.parseYear : goto [?= $r5 = new org.jfree.data.time.Year] >>>>>>>> org.jfree.data.time.Year.parseYear : $r5 = new org.jfree.data.time.Year
org.jfree.data.time.Year.parseYear : goto [?= $r5 = new org.jfree.data.time.Year] >>>>>>>> org.jfree.data.time.Year.parseYear : $r6 := @caughtexception
org.jfree.data.time.Year.parseYear : r7 = $r6 >>>>>>>> org.jfree.data.time.Year.parseYear : $r8 = new org.jfree.data.time.TimePeriodFormatException
org.jfree.data.time.Year.parseYear : $r8 = new org.jfree.data.time.TimePeriodFormatException >>>>>>>> org.jfree.data.time.Year.parseYear : specialinvoke $r8.<org.jfree.data.time.TimePeriodFormatException: void <init>(java.lang.String)>("Year outside valid range.")
org.jfree.data.time.Year.parseYear : specialinvoke $r8.<org.jfree.data.time.TimePeriodFormatException: void <init>(java.lang.String)>("Year outside valid range.") >>>>>>>> org.jfree.data.time.Year.parseYear : throw $r8
org.jfree.data.time.Year.parseYear : $r5 = new org.jfree.data.time.Year >>>>>>>> org.jfree.data.time.Year.parseYear : specialinvoke $r5.<org.jfree.data.time.Year: void <init>(int)>(i0)
org.jfree.data.time.Year.parseYear : $r5 = new org.jfree.data.time.Year >>>>>>>> org.jfree.data.time.Year.parseYear : $r6 := @caughtexception
org.jfree.data.time.Year.parseYear : specialinvoke $r5.<org.jfree.data.time.Year: void <init>(int)>(i0) >>>>>>>> org.jfree.data.time.Year.parseYear : return $r5
org.jfree.data.time.Year.parseYear : specialinvoke $r5.<org.jfree.data.time.Year: void <init>(int)>(i0) >>>>>>>> org.jfree.data.time.Year.parseYear : $r6 := @caughtexception
