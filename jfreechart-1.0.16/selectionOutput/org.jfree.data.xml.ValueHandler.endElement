org.jfree.data.xml.ValueHandler.endElement : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("Value") >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : if $z0 == 0
org.jfree.data.xml.ValueHandler.endElement : if $z0 == 0 >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r7 = r0.<org.jfree.data.xml.ValueHandler: java.lang.StringBuffer currentText>
org.jfree.data.xml.ValueHandler.endElement : if $z0 == 0 >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r14 = new org.xml.sax.SAXException
org.jfree.data.xml.ValueHandler.endElement : if $z0 == 0 >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r10 := @caughtexception
org.jfree.data.xml.ValueHandler.endElement : r5 = $r10 >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : r4 = null
org.jfree.data.xml.ValueHandler.endElement : r4 = null >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r11 = r0.<org.jfree.data.xml.ValueHandler: org.jfree.data.xml.ItemHandler itemHandler>
org.jfree.data.xml.ValueHandler.endElement : $r11 = r0.<org.jfree.data.xml.ValueHandler: org.jfree.data.xml.ItemHandler itemHandler> >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : virtualinvoke $r11.<org.jfree.data.xml.ItemHandler: void setValue(java.lang.Number)>(r4)
org.jfree.data.xml.ValueHandler.endElement : virtualinvoke $r11.<org.jfree.data.xml.ItemHandler: void setValue(java.lang.Number)>(r4) >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r12 = r0.<org.jfree.data.xml.ValueHandler: org.jfree.data.xml.RootHandler rootHandler>
org.jfree.data.xml.ValueHandler.endElement : $r12 = r0.<org.jfree.data.xml.ValueHandler: org.jfree.data.xml.RootHandler rootHandler> >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : virtualinvoke $r12.<org.jfree.data.xml.RootHandler: org.xml.sax.helpers.DefaultHandler popSubHandler()>()
org.jfree.data.xml.ValueHandler.endElement : virtualinvoke $r12.<org.jfree.data.xml.RootHandler: org.xml.sax.helpers.DefaultHandler popSubHandler()>() >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : goto [?= return]
org.jfree.data.xml.ValueHandler.endElement : goto [?= return] >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : return
org.jfree.data.xml.ValueHandler.endElement : $r14 = new org.xml.sax.SAXException >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r6 = new java.lang.StringBuilder
org.jfree.data.xml.ValueHandler.endElement : $r6 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.xml.ValueHandler.endElement : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting </Value> but found ")
org.jfree.data.xml.ValueHandler.endElement : $r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting </Value> but found ") >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.jfree.data.xml.ValueHandler.endElement : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.xml.ValueHandler.endElement : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r17)
org.jfree.data.xml.ValueHandler.endElement : specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r17) >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : throw $r14
org.jfree.data.xml.ValueHandler.endElement : $r7 = r0.<org.jfree.data.xml.ValueHandler: java.lang.StringBuffer currentText> >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>()
org.jfree.data.xml.ValueHandler.endElement : $r7 = r0.<org.jfree.data.xml.ValueHandler: java.lang.StringBuffer currentText> >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r10 := @caughtexception
org.jfree.data.xml.ValueHandler.endElement : $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r8)
org.jfree.data.xml.ValueHandler.endElement : $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r10 := @caughtexception
org.jfree.data.xml.ValueHandler.endElement : r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r8) >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r9 = (java.lang.Double) r4
org.jfree.data.xml.ValueHandler.endElement : r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r8) >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r10 := @caughtexception
org.jfree.data.xml.ValueHandler.endElement : $r9 = (java.lang.Double) r4 >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $z1 = virtualinvoke $r9.<java.lang.Double: boolean isNaN()>()
org.jfree.data.xml.ValueHandler.endElement : $r9 = (java.lang.Double) r4 >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r10 := @caughtexception
org.jfree.data.xml.ValueHandler.endElement : $z1 = virtualinvoke $r9.<java.lang.Double: boolean isNaN()>() >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : if $z1 == 0
org.jfree.data.xml.ValueHandler.endElement : $z1 = virtualinvoke $r9.<java.lang.Double: boolean isNaN()>() >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r10 := @caughtexception
org.jfree.data.xml.ValueHandler.endElement : if $z1 == 0 >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : r4 = null
org.jfree.data.xml.ValueHandler.endElement : if $z1 == 0 >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : goto [?= $r11 = r0.<org.jfree.data.xml.ValueHandler: org.jfree.data.xml.ItemHandler itemHandler>]
org.jfree.data.xml.ValueHandler.endElement : if $z1 == 0 >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r10 := @caughtexception
org.jfree.data.xml.ValueHandler.endElement : goto [?= $r11 = r0.<org.jfree.data.xml.ValueHandler: org.jfree.data.xml.ItemHandler itemHandler>] >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r11 = r0.<org.jfree.data.xml.ValueHandler: org.jfree.data.xml.ItemHandler itemHandler>
org.jfree.data.xml.ValueHandler.endElement : r4 = null >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : goto [?= $r11 = r0.<org.jfree.data.xml.ValueHandler: org.jfree.data.xml.ItemHandler itemHandler>]
org.jfree.data.xml.ValueHandler.endElement : r4 = null >>>>>>>> org.jfree.data.xml.ValueHandler.endElement : $r10 := @caughtexception
