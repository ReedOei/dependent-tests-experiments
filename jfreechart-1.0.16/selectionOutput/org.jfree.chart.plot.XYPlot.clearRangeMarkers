org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r1 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.clearRangeMarkers : specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : r2 = $r1
org.jfree.chart.plot.XYPlot.clearRangeMarkers : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $r6 == null
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $r6 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r7 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $r6 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $r10 == null
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $r10 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r11 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $r10 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : return
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r11 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : r13 = (java.util.Collection) $r12
org.jfree.chart.plot.XYPlot.clearRangeMarkers : r13 = (java.util.Collection) $r12 >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : if r13 == null
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if r13 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : r14 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if r13 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : r14 = interfaceinvoke r13.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $z1 == 0
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : interfaceinvoke r13.<java.util.Collection: void clear()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : interfaceinvoke r13.<java.util.Collection: void clear()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : r16 = (org.jfree.chart.plot.Marker) $r15
org.jfree.chart.plot.XYPlot.clearRangeMarkers : r16 = (org.jfree.chart.plot.Marker) $r15 >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : virtualinvoke r16.<org.jfree.chart.plot.Marker: void removeChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.clearRangeMarkers : virtualinvoke r16.<org.jfree.chart.plot.Marker: void removeChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.XYPlot.clearRangeMarkers : goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r7 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : r3 = (java.util.Collection) $r8
org.jfree.chart.plot.XYPlot.clearRangeMarkers : r3 = (java.util.Collection) $r8 >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : if r3 == null
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clearRangeMarkers : r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $z0 == 0
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : interfaceinvoke r3.<java.util.Collection: void clear()>()
org.jfree.chart.plot.XYPlot.clearRangeMarkers : interfaceinvoke r3.<java.util.Collection: void clear()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.XYPlot.clearRangeMarkers : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : r5 = (org.jfree.chart.plot.Marker) $r9
org.jfree.chart.plot.XYPlot.clearRangeMarkers : r5 = (org.jfree.chart.plot.Marker) $r9 >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : virtualinvoke r5.<org.jfree.chart.plot.Marker: void removeChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.clearRangeMarkers : virtualinvoke r5.<org.jfree.chart.plot.Marker: void removeChangeListener(org.jfree.chart.event.MarkerChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.XYPlot.clearRangeMarkers : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.XYPlot.clearRangeMarkers : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
