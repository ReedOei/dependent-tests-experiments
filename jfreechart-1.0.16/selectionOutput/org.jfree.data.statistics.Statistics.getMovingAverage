org.jfree.data.statistics.Statistics.getMovingAverage : $i3 = lengthof r0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $i4 = lengthof r1
org.jfree.data.statistics.Statistics.getMovingAverage : $i4 = lengthof r1 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : if $i3 == $i4
org.jfree.data.statistics.Statistics.getMovingAverage : if $i3 == $i4 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $r3 = new java.lang.IllegalArgumentException
org.jfree.data.statistics.Statistics.getMovingAverage : if $i3 == $i4 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $i5 = lengthof r0
org.jfree.data.statistics.Statistics.getMovingAverage : $i5 = lengthof r0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : if i0 <= $i5
org.jfree.data.statistics.Statistics.getMovingAverage : if i0 <= $i5 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $r4 = new java.lang.IllegalArgumentException
org.jfree.data.statistics.Statistics.getMovingAverage : if i0 <= $i5 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $i6 = lengthof r0
org.jfree.data.statistics.Statistics.getMovingAverage : $i6 = lengthof r0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $i7 = $i6 - i0
org.jfree.data.statistics.Statistics.getMovingAverage : $i7 = $i6 - i0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : r2 = newmultiarray (double)[$i7][2]
org.jfree.data.statistics.Statistics.getMovingAverage : r2 = newmultiarray (double)[$i7][2] >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : i1 = 0
org.jfree.data.statistics.Statistics.getMovingAverage : i1 = 0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $i8 = lengthof r2
org.jfree.data.statistics.Statistics.getMovingAverage : $i8 = lengthof r2 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : if i1 >= $i8
org.jfree.data.statistics.Statistics.getMovingAverage : if i1 >= $i8 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $r5 = r2[i1]
org.jfree.data.statistics.Statistics.getMovingAverage : if i1 >= $i8 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : return r2
org.jfree.data.statistics.Statistics.getMovingAverage : $r5 = r2[i1] >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $i9 = i1 + i0
org.jfree.data.statistics.Statistics.getMovingAverage : $i9 = i1 + i0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $r6 = r0[$i9]
org.jfree.data.statistics.Statistics.getMovingAverage : $r6 = r0[$i9] >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $d1 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>()
org.jfree.data.statistics.Statistics.getMovingAverage : $d1 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $r5[0] = $d1
org.jfree.data.statistics.Statistics.getMovingAverage : $r5[0] = $d1 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : d0 = 0.0
org.jfree.data.statistics.Statistics.getMovingAverage : d0 = 0.0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : i2 = 0
org.jfree.data.statistics.Statistics.getMovingAverage : i2 = 0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : if i2 >= i0
org.jfree.data.statistics.Statistics.getMovingAverage : if i2 >= i0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $i10 = i1 + i2
org.jfree.data.statistics.Statistics.getMovingAverage : if i2 >= i0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $d3 = (double) i0
org.jfree.data.statistics.Statistics.getMovingAverage : $d3 = (double) i0 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : d4 = d0 / $d3
org.jfree.data.statistics.Statistics.getMovingAverage : d4 = d0 / $d3 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $r8 = r2[i1]
org.jfree.data.statistics.Statistics.getMovingAverage : $r8 = r2[i1] >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $r8[1] = d4
org.jfree.data.statistics.Statistics.getMovingAverage : $r8[1] = d4 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : i1 = i1 + 1
org.jfree.data.statistics.Statistics.getMovingAverage : i1 = i1 + 1 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : goto [?= $i8 = lengthof r2]
org.jfree.data.statistics.Statistics.getMovingAverage : goto [?= $i8 = lengthof r2] >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $i8 = lengthof r2
org.jfree.data.statistics.Statistics.getMovingAverage : $i10 = i1 + i2 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $r7 = r1[$i10]
org.jfree.data.statistics.Statistics.getMovingAverage : $r7 = r1[$i10] >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : $d2 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>()
org.jfree.data.statistics.Statistics.getMovingAverage : $d2 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : d0 = d0 + $d2
org.jfree.data.statistics.Statistics.getMovingAverage : d0 = d0 + $d2 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : i2 = i2 + 1
org.jfree.data.statistics.Statistics.getMovingAverage : i2 = i2 + 1 >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : goto [?= (branch)]
org.jfree.data.statistics.Statistics.getMovingAverage : goto [?= (branch)] >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : if i2 >= i0
org.jfree.data.statistics.Statistics.getMovingAverage : $r4 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Period can\'t be longer than dataset.")
org.jfree.data.statistics.Statistics.getMovingAverage : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Period can\'t be longer than dataset.") >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : throw $r4
org.jfree.data.statistics.Statistics.getMovingAverage : $r3 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array lengths must be equal.")
org.jfree.data.statistics.Statistics.getMovingAverage : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array lengths must be equal.") >>>>>>>> org.jfree.data.statistics.Statistics.getMovingAverage : throw $r3
