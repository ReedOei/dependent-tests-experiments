org.jfree.data.time.MovingAverage.createPointMovingAverage : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "source") >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : if i0 >= 2
org.jfree.data.time.MovingAverage.createPointMovingAverage : if i0 >= 2 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $r6 = new java.lang.IllegalArgumentException
org.jfree.data.time.MovingAverage.createPointMovingAverage : if i0 >= 2 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $r7 = new org.jfree.data.time.TimeSeries
org.jfree.data.time.MovingAverage.createPointMovingAverage : $r7 = new org.jfree.data.time.TimeSeries >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : specialinvoke $r7.<org.jfree.data.time.TimeSeries: void <init>(java.lang.Comparable)>(r1)
org.jfree.data.time.MovingAverage.createPointMovingAverage : specialinvoke $r7.<org.jfree.data.time.TimeSeries: void <init>(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : r2 = $r7
org.jfree.data.time.MovingAverage.createPointMovingAverage : r2 = $r7 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : d0 = 0.0
org.jfree.data.time.MovingAverage.createPointMovingAverage : d0 = 0.0 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : i1 = 0
org.jfree.data.time.MovingAverage.createPointMovingAverage : i1 = 0 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.MovingAverage.createPointMovingAverage : $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : if i1 >= $i2
org.jfree.data.time.MovingAverage.createPointMovingAverage : if i1 >= $i2 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : r3 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>(i1)
org.jfree.data.time.MovingAverage.createPointMovingAverage : if i1 >= $i2 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : return r2
org.jfree.data.time.MovingAverage.createPointMovingAverage : r3 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>(i1) >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : r4 = virtualinvoke r3.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>()
org.jfree.data.time.MovingAverage.createPointMovingAverage : r4 = virtualinvoke r3.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>() >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $r8 = virtualinvoke r3.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.MovingAverage.createPointMovingAverage : $r8 = virtualinvoke r3.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $d1 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>()
org.jfree.data.time.MovingAverage.createPointMovingAverage : $d1 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : d0 = d0 + $d1
org.jfree.data.time.MovingAverage.createPointMovingAverage : d0 = d0 + $d1 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $i3 = i0 - 1
org.jfree.data.time.MovingAverage.createPointMovingAverage : $i3 = i0 - 1 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : if i1 <= $i3
org.jfree.data.time.MovingAverage.createPointMovingAverage : if i1 <= $i3 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $i4 = i1 - i0
org.jfree.data.time.MovingAverage.createPointMovingAverage : if i1 <= $i3 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $i5 = i0 - 1
org.jfree.data.time.MovingAverage.createPointMovingAverage : $i5 = i0 - 1 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : if i1 != $i5
org.jfree.data.time.MovingAverage.createPointMovingAverage : if i1 != $i5 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $d5 = (double) i0
org.jfree.data.time.MovingAverage.createPointMovingAverage : if i1 != $i5 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : i1 = i1 + 1
org.jfree.data.time.MovingAverage.createPointMovingAverage : i1 = i1 + 1 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : goto [?= $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()]
org.jfree.data.time.MovingAverage.createPointMovingAverage : goto [?= $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()] >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $i2 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.MovingAverage.createPointMovingAverage : $d5 = (double) i0 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $d6 = d0 / $d5
org.jfree.data.time.MovingAverage.createPointMovingAverage : $d6 = d0 / $d5 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : virtualinvoke r2.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,double)>(r4, $d6)
org.jfree.data.time.MovingAverage.createPointMovingAverage : virtualinvoke r2.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,double)>(r4, $d6) >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : i1 = i1 + 1
org.jfree.data.time.MovingAverage.createPointMovingAverage : $i4 = i1 - i0 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>($i4)
org.jfree.data.time.MovingAverage.createPointMovingAverage : r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: org.jfree.data.time.TimeSeriesDataItem getRawDataItem(int)>($i4) >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $r9 = virtualinvoke r5.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.MovingAverage.createPointMovingAverage : $r9 = virtualinvoke r5.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $d2 = virtualinvoke $r9.<java.lang.Number: double doubleValue()>()
org.jfree.data.time.MovingAverage.createPointMovingAverage : $d2 = virtualinvoke $r9.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : d0 = d0 - $d2
org.jfree.data.time.MovingAverage.createPointMovingAverage : d0 = d0 - $d2 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $d3 = (double) i0
org.jfree.data.time.MovingAverage.createPointMovingAverage : $d3 = (double) i0 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : $d4 = d0 / $d3
org.jfree.data.time.MovingAverage.createPointMovingAverage : $d4 = d0 / $d3 >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : virtualinvoke r2.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,double)>(r4, $d4)
org.jfree.data.time.MovingAverage.createPointMovingAverage : virtualinvoke r2.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,double)>(r4, $d4) >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : goto [?= i1 = i1 + 1]
org.jfree.data.time.MovingAverage.createPointMovingAverage : goto [?= i1 = i1 + 1] >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : i1 = i1 + 1
org.jfree.data.time.MovingAverage.createPointMovingAverage : $r6 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("periodCount must be greater than or equal to 2.")
org.jfree.data.time.MovingAverage.createPointMovingAverage : specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("periodCount must be greater than or equal to 2.") >>>>>>>> org.jfree.data.time.MovingAverage.createPointMovingAverage : throw $r6
