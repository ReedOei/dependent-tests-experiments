org.jfree.data.Range.expandToInclude : if r0 != null >>>>>>>> org.jfree.data.Range.expandToInclude : $r1 = new org.jfree.data.Range
org.jfree.data.Range.expandToInclude : if r0 != null >>>>>>>> org.jfree.data.Range.expandToInclude : $d1 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.expandToInclude : $d1 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.expandToInclude : $b0 = d0 cmpg $d1
org.jfree.data.Range.expandToInclude : $b0 = d0 cmpg $d1 >>>>>>>> org.jfree.data.Range.expandToInclude : if $b0 >= 0
org.jfree.data.Range.expandToInclude : if $b0 >= 0 >>>>>>>> org.jfree.data.Range.expandToInclude : $r2 = new org.jfree.data.Range
org.jfree.data.Range.expandToInclude : if $b0 >= 0 >>>>>>>> org.jfree.data.Range.expandToInclude : $d3 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.expandToInclude : $d3 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.expandToInclude : $b1 = d0 cmpl $d3
org.jfree.data.Range.expandToInclude : $b1 = d0 cmpl $d3 >>>>>>>> org.jfree.data.Range.expandToInclude : if $b1 <= 0
org.jfree.data.Range.expandToInclude : if $b1 <= 0 >>>>>>>> org.jfree.data.Range.expandToInclude : $r3 = new org.jfree.data.Range
org.jfree.data.Range.expandToInclude : if $b1 <= 0 >>>>>>>> org.jfree.data.Range.expandToInclude : return r0
org.jfree.data.Range.expandToInclude : $r3 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.expandToInclude : $d4 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.expandToInclude : $d4 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.expandToInclude : specialinvoke $r3.<org.jfree.data.Range: void <init>(double,double)>($d4, d0)
org.jfree.data.Range.expandToInclude : specialinvoke $r3.<org.jfree.data.Range: void <init>(double,double)>($d4, d0) >>>>>>>> org.jfree.data.Range.expandToInclude : return $r3
org.jfree.data.Range.expandToInclude : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.expandToInclude : $d2 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.expandToInclude : $d2 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.expandToInclude : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, $d2)
org.jfree.data.Range.expandToInclude : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, $d2) >>>>>>>> org.jfree.data.Range.expandToInclude : return $r2
org.jfree.data.Range.expandToInclude : $r1 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.expandToInclude : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>(d0, d0)
org.jfree.data.Range.expandToInclude : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>(d0, d0) >>>>>>>> org.jfree.data.Range.expandToInclude : return $r1
