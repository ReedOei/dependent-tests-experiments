org.jfree.data.time.Millisecond.next : r1 = null >>>>>>>> org.jfree.data.time.Millisecond.next : $i0 = r0.<org.jfree.data.time.Millisecond: int millisecond>
org.jfree.data.time.Millisecond.next : $i0 = r0.<org.jfree.data.time.Millisecond: int millisecond> >>>>>>>> org.jfree.data.time.Millisecond.next : if $i0 == 999
org.jfree.data.time.Millisecond.next : if $i0 == 999 >>>>>>>> org.jfree.data.time.Millisecond.next : $r3 = new org.jfree.data.time.Millisecond
org.jfree.data.time.Millisecond.next : if $i0 == 999 >>>>>>>> org.jfree.data.time.Millisecond.next : $r5 = virtualinvoke r0.<org.jfree.data.time.Millisecond: org.jfree.data.time.Second getSecond()>()
org.jfree.data.time.Millisecond.next : $r5 = virtualinvoke r0.<org.jfree.data.time.Millisecond: org.jfree.data.time.Second getSecond()>() >>>>>>>> org.jfree.data.time.Millisecond.next : $r6 = virtualinvoke $r5.<org.jfree.data.time.Second: org.jfree.data.time.RegularTimePeriod next()>()
org.jfree.data.time.Millisecond.next : $r6 = virtualinvoke $r5.<org.jfree.data.time.Second: org.jfree.data.time.RegularTimePeriod next()>() >>>>>>>> org.jfree.data.time.Millisecond.next : r2 = (org.jfree.data.time.Second) $r6
org.jfree.data.time.Millisecond.next : r2 = (org.jfree.data.time.Second) $r6 >>>>>>>> org.jfree.data.time.Millisecond.next : if r2 == null
org.jfree.data.time.Millisecond.next : if r2 == null >>>>>>>> org.jfree.data.time.Millisecond.next : $r7 = new org.jfree.data.time.Millisecond
org.jfree.data.time.Millisecond.next : if r2 == null >>>>>>>> org.jfree.data.time.Millisecond.next : return r1
org.jfree.data.time.Millisecond.next : $r7 = new org.jfree.data.time.Millisecond >>>>>>>> org.jfree.data.time.Millisecond.next : specialinvoke $r7.<org.jfree.data.time.Millisecond: void <init>(int,org.jfree.data.time.Second)>(0, r2)
org.jfree.data.time.Millisecond.next : specialinvoke $r7.<org.jfree.data.time.Millisecond: void <init>(int,org.jfree.data.time.Second)>(0, r2) >>>>>>>> org.jfree.data.time.Millisecond.next : r1 = $r7
org.jfree.data.time.Millisecond.next : r1 = $r7 >>>>>>>> org.jfree.data.time.Millisecond.next : return r1
org.jfree.data.time.Millisecond.next : $r3 = new org.jfree.data.time.Millisecond >>>>>>>> org.jfree.data.time.Millisecond.next : $i1 = r0.<org.jfree.data.time.Millisecond: int millisecond>
org.jfree.data.time.Millisecond.next : $i1 = r0.<org.jfree.data.time.Millisecond: int millisecond> >>>>>>>> org.jfree.data.time.Millisecond.next : $i2 = $i1 + 1
org.jfree.data.time.Millisecond.next : $i2 = $i1 + 1 >>>>>>>> org.jfree.data.time.Millisecond.next : $r4 = virtualinvoke r0.<org.jfree.data.time.Millisecond: org.jfree.data.time.Second getSecond()>()
org.jfree.data.time.Millisecond.next : $r4 = virtualinvoke r0.<org.jfree.data.time.Millisecond: org.jfree.data.time.Second getSecond()>() >>>>>>>> org.jfree.data.time.Millisecond.next : specialinvoke $r3.<org.jfree.data.time.Millisecond: void <init>(int,org.jfree.data.time.Second)>($i2, $r4)
org.jfree.data.time.Millisecond.next : specialinvoke $r3.<org.jfree.data.time.Millisecond: void <init>(int,org.jfree.data.time.Second)>($i2, $r4) >>>>>>>> org.jfree.data.time.Millisecond.next : r1 = $r3
org.jfree.data.time.Millisecond.next : r1 = $r3 >>>>>>>> org.jfree.data.time.Millisecond.next : goto [?= return r1]
org.jfree.data.time.Millisecond.next : goto [?= return r1] >>>>>>>> org.jfree.data.time.Millisecond.next : return r1
