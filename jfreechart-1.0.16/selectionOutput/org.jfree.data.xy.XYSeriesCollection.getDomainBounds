org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.IntervalXYDelegate intervalDelegate>
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d0 = #Infinity
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d1 = #-Infinity
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : i1 = 0
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : i1 = 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if i1 >= i0
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $b2 = d0 cmpl d1
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $b2 = d0 cmpl d1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if $b2 <= 0
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if $b2 <= 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : return null
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if $b2 <= 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $r4 = new org.jfree.data.Range
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $r4 = new org.jfree.data.Range >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : specialinvoke $r4.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : specialinvoke $r4.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : return $r4
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d2 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: double getMinX()>()
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d2 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: double getMinX()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2)
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if $z1 != 0
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if $z1 != 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2)
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if $z1 != 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: double getMaxX()>()
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: double getMaxX()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3)
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if $z2 != 0
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if $z2 != 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d3)
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if $z2 != 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : i1 = i1 + 1
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : goto [?= (branch)]
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : if i1 >= i0
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d3) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : i1 = i1 + 1
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : d3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: double getMaxX()>()
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.IntervalXYDelegate intervalDelegate> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $r3 = virtualinvoke $r2.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>(z0)
org.jfree.data.xy.XYSeriesCollection.getDomainBounds : $r3 = virtualinvoke $r2.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>(z0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getDomainBounds : return $r3
