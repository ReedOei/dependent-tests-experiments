org.jfree.chart.needle.PlumNeedle.drawNeedle : $r4 = new java.awt.geom.Arc2D$Double >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : specialinvoke $r4.<java.awt.geom.Arc2D$Double: void <init>(int)>(2)
org.jfree.chart.needle.PlumNeedle.drawNeedle : specialinvoke $r4.<java.awt.geom.Arc2D$Double: void <init>(int)>(2) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : r5 = $r4
org.jfree.chart.needle.PlumNeedle.drawNeedle : r5 = $r4 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.needle.PlumNeedle.drawNeedle : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : d2 = $d4 / 2.0
org.jfree.chart.needle.PlumNeedle.drawNeedle : d2 = $d4 / 2.0 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : d3 = 2.0 * d1
org.jfree.chart.needle.PlumNeedle.drawNeedle : d3 = 2.0 * d1 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinX()>()
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinX()>() >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d6 = $d5 + d2
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d6 = $d5 + d2 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d7 = $d6 - d1
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d7 = $d6 - d1 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinY()>() >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d9 = $d8 - d1
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d9 = $d8 - d1 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r5.<java.awt.geom.Arc2D: void setFrame(double,double,double,double)>($d7, $d9, d3, d3)
org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r5.<java.awt.geom.Arc2D: void setFrame(double,double,double,double)>($d7, $d9, d3, d3) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d10 = d2 / d1
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d10 = d2 / d1 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d11 = staticinvoke <java.lang.Math: double asin(double)>($d10)
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d11 = staticinvoke <java.lang.Math: double asin(double)>($d10) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : d12 = staticinvoke <java.lang.Math: double toDegrees(double)>($d11)
org.jfree.chart.needle.PlumNeedle.drawNeedle : d12 = staticinvoke <java.lang.Math: double toDegrees(double)>($d11) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d13 = 270.0 - d12
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d13 = 270.0 - d12 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r5.<java.awt.geom.Arc2D: void setAngleStart(double)>($d13)
org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r5.<java.awt.geom.Arc2D: void setAngleStart(double)>($d13) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d14 = 2.0 * d12
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d14 = 2.0 * d12 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r5.<java.awt.geom.Arc2D: void setAngleExtent(double)>($d14)
org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r5.<java.awt.geom.Arc2D: void setAngleExtent(double)>($d14) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $r7 = new java.awt.geom.Area
org.jfree.chart.needle.PlumNeedle.drawNeedle : $r7 = new java.awt.geom.Area >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : specialinvoke $r7.<java.awt.geom.Area: void <init>(java.awt.Shape)>(r5)
org.jfree.chart.needle.PlumNeedle.drawNeedle : specialinvoke $r7.<java.awt.geom.Area: void <init>(java.awt.Shape)>(r5) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : r6 = $r7
org.jfree.chart.needle.PlumNeedle.drawNeedle : r6 = $r7 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : if r3 == null
org.jfree.chart.needle.PlumNeedle.drawNeedle : if r3 == null >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $b0 = d0 cmpl 0.0
org.jfree.chart.needle.PlumNeedle.drawNeedle : if r3 == null >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r0.<org.jfree.chart.needle.PlumNeedle: void defaultDisplay(java.awt.Graphics2D,java.awt.Shape)>(r1, r6)
org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r0.<org.jfree.chart.needle.PlumNeedle: void defaultDisplay(java.awt.Graphics2D,java.awt.Shape)>(r1, r6) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : return
org.jfree.chart.needle.PlumNeedle.drawNeedle : $b0 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : if $b0 == 0
org.jfree.chart.needle.PlumNeedle.drawNeedle : if $b0 == 0 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $r8 = virtualinvoke r0.<org.jfree.chart.needle.PlumNeedle: java.awt.geom.AffineTransform getTransform()>()
org.jfree.chart.needle.PlumNeedle.drawNeedle : if $b0 == 0 >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r0.<org.jfree.chart.needle.PlumNeedle: void defaultDisplay(java.awt.Graphics2D,java.awt.Shape)>(r1, r6)
org.jfree.chart.needle.PlumNeedle.drawNeedle : $r8 = virtualinvoke r0.<org.jfree.chart.needle.PlumNeedle: java.awt.geom.AffineTransform getTransform()>() >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d15 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d15 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $d16 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.needle.PlumNeedle.drawNeedle : $d16 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke $r8.<java.awt.geom.AffineTransform: void setToRotation(double,double,double)>(d0, $d15, $d16)
org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke $r8.<java.awt.geom.AffineTransform: void setToRotation(double,double,double)>(d0, $d15, $d16) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : $r9 = virtualinvoke r0.<org.jfree.chart.needle.PlumNeedle: java.awt.geom.AffineTransform getTransform()>()
org.jfree.chart.needle.PlumNeedle.drawNeedle : $r9 = virtualinvoke r0.<org.jfree.chart.needle.PlumNeedle: java.awt.geom.AffineTransform getTransform()>() >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r6.<java.awt.geom.Area: void transform(java.awt.geom.AffineTransform)>($r9)
org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r6.<java.awt.geom.Area: void transform(java.awt.geom.AffineTransform)>($r9) >>>>>>>> org.jfree.chart.needle.PlumNeedle.drawNeedle : virtualinvoke r0.<org.jfree.chart.needle.PlumNeedle: void defaultDisplay(java.awt.Graphics2D,java.awt.Shape)>(r1, r6)
