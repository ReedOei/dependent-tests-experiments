org.jfree.data.KeyedValueComparator.compare : if r2 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : return -1
org.jfree.data.KeyedValueComparator.compare : if r2 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if r1 != null
org.jfree.data.KeyedValueComparator.compare : if r1 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : return 1
org.jfree.data.KeyedValueComparator.compare : if r1 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : r3 = (org.jfree.data.KeyedValue) r1
org.jfree.data.KeyedValueComparator.compare : r3 = (org.jfree.data.KeyedValue) r1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : r4 = (org.jfree.data.KeyedValue) r2
org.jfree.data.KeyedValueComparator.compare : r4 = (org.jfree.data.KeyedValue) r2 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r8 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.data.KeyedValueComparatorType type>
org.jfree.data.KeyedValueComparator.compare : $r8 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.data.KeyedValueComparatorType type> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r5 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_KEY>
org.jfree.data.KeyedValueComparator.compare : $r5 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_KEY> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $r8 != $r5
org.jfree.data.KeyedValueComparator.compare : if $r8 != $r5 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r9 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order>
org.jfree.data.KeyedValueComparator.compare : if $r8 != $r5 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r18 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.data.KeyedValueComparatorType type>
org.jfree.data.KeyedValueComparator.compare : $r18 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.data.KeyedValueComparatorType type> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r19 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_VALUE>
org.jfree.data.KeyedValueComparator.compare : $r19 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_VALUE> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $r18 != $r19
org.jfree.data.KeyedValueComparator.compare : if $r18 != $r19 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : r6 = interfaceinvoke r3.<org.jfree.data.KeyedValue: java.lang.Number getValue()>()
org.jfree.data.KeyedValueComparator.compare : if $r18 != $r19 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r25 = new java.lang.IllegalArgumentException
org.jfree.data.KeyedValueComparator.compare : $r25 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.KeyedValueComparator.compare : specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unrecognised type.")
org.jfree.data.KeyedValueComparator.compare : specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unrecognised type.") >>>>>>>> org.jfree.data.KeyedValueComparator.compare : throw $r25
org.jfree.data.KeyedValueComparator.compare : r6 = interfaceinvoke r3.<org.jfree.data.KeyedValue: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.KeyedValueComparator.compare : r7 = interfaceinvoke r4.<org.jfree.data.KeyedValue: java.lang.Number getValue()>()
org.jfree.data.KeyedValueComparator.compare : r7 = interfaceinvoke r4.<org.jfree.data.KeyedValue: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if r7 != null
org.jfree.data.KeyedValueComparator.compare : if r7 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : return -1
org.jfree.data.KeyedValueComparator.compare : if r7 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if r6 != null
org.jfree.data.KeyedValueComparator.compare : if r6 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : return 1
org.jfree.data.KeyedValueComparator.compare : if r6 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : d0 = virtualinvoke r6.<java.lang.Number: double doubleValue()>()
org.jfree.data.KeyedValueComparator.compare : d0 = virtualinvoke r6.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.KeyedValueComparator.compare : d1 = virtualinvoke r7.<java.lang.Number: double doubleValue()>()
org.jfree.data.KeyedValueComparator.compare : d1 = virtualinvoke r7.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r20 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order>
org.jfree.data.KeyedValueComparator.compare : $r20 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r21 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.data.KeyedValueComparator.compare : $r21 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $z2 = virtualinvoke $r20.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r21)
org.jfree.data.KeyedValueComparator.compare : $z2 = virtualinvoke $r20.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r21) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $z2 == 0
org.jfree.data.KeyedValueComparator.compare : if $z2 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $b1 = d0 cmpl d1
org.jfree.data.KeyedValueComparator.compare : if $z2 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r22 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order>
org.jfree.data.KeyedValueComparator.compare : $r22 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r23 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder DESCENDING>
org.jfree.data.KeyedValueComparator.compare : $r23 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder DESCENDING> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $z3 = virtualinvoke $r22.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r23)
org.jfree.data.KeyedValueComparator.compare : $z3 = virtualinvoke $r22.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r23) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $z3 == 0
org.jfree.data.KeyedValueComparator.compare : if $z3 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $b3 = d0 cmpl d1
org.jfree.data.KeyedValueComparator.compare : if $z3 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r24 = new java.lang.IllegalArgumentException
org.jfree.data.KeyedValueComparator.compare : $r24 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.KeyedValueComparator.compare : specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unrecognised sort order.")
org.jfree.data.KeyedValueComparator.compare : specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unrecognised sort order.") >>>>>>>> org.jfree.data.KeyedValueComparator.compare : throw $r24
org.jfree.data.KeyedValueComparator.compare : $b3 = d0 cmpl d1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $b3 <= 0
org.jfree.data.KeyedValueComparator.compare : if $b3 <= 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : i0 = -1
org.jfree.data.KeyedValueComparator.compare : if $b3 <= 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $b4 = d0 cmpg d1
org.jfree.data.KeyedValueComparator.compare : $b4 = d0 cmpg d1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $b4 >= 0
org.jfree.data.KeyedValueComparator.compare : if $b4 >= 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : i0 = 1
org.jfree.data.KeyedValueComparator.compare : if $b4 >= 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : i0 = 0
org.jfree.data.KeyedValueComparator.compare : i0 = 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)]
org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= return i0]
org.jfree.data.KeyedValueComparator.compare : goto [?= return i0] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : return i0
org.jfree.data.KeyedValueComparator.compare : i0 = 1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)]
org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= return i0]
org.jfree.data.KeyedValueComparator.compare : i0 = -1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)]
org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= return i0]
org.jfree.data.KeyedValueComparator.compare : $b1 = d0 cmpl d1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $b1 <= 0
org.jfree.data.KeyedValueComparator.compare : if $b1 <= 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : i0 = 1
org.jfree.data.KeyedValueComparator.compare : if $b1 <= 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $b2 = d0 cmpg d1
org.jfree.data.KeyedValueComparator.compare : $b2 = d0 cmpg d1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $b2 >= 0
org.jfree.data.KeyedValueComparator.compare : if $b2 >= 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : i0 = -1
org.jfree.data.KeyedValueComparator.compare : if $b2 >= 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : i0 = 0
org.jfree.data.KeyedValueComparator.compare : i0 = 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)]
org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= return i0]
org.jfree.data.KeyedValueComparator.compare : i0 = -1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)]
org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= return i0]
org.jfree.data.KeyedValueComparator.compare : i0 = 1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)]
org.jfree.data.KeyedValueComparator.compare : goto [?= (branch)] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= return i0]
org.jfree.data.KeyedValueComparator.compare : $r9 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r10 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.data.KeyedValueComparator.compare : $r10 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $z0 = virtualinvoke $r9.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r10)
org.jfree.data.KeyedValueComparator.compare : $z0 = virtualinvoke $r9.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $z0 == 0
org.jfree.data.KeyedValueComparator.compare : if $z0 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r11 = interfaceinvoke r3.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>()
org.jfree.data.KeyedValueComparator.compare : if $z0 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r13 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order>
org.jfree.data.KeyedValueComparator.compare : $r13 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r14 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder DESCENDING>
org.jfree.data.KeyedValueComparator.compare : $r14 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder DESCENDING> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $z1 = virtualinvoke $r13.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r14)
org.jfree.data.KeyedValueComparator.compare : $z1 = virtualinvoke $r13.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $z1 == 0
org.jfree.data.KeyedValueComparator.compare : if $z1 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r15 = interfaceinvoke r4.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>()
org.jfree.data.KeyedValueComparator.compare : if $z1 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r17 = new java.lang.IllegalArgumentException
org.jfree.data.KeyedValueComparator.compare : $r17 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.KeyedValueComparator.compare : specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unrecognised sort order.")
org.jfree.data.KeyedValueComparator.compare : specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unrecognised sort order.") >>>>>>>> org.jfree.data.KeyedValueComparator.compare : throw $r17
org.jfree.data.KeyedValueComparator.compare : $r15 = interfaceinvoke r4.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r16 = interfaceinvoke r3.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>()
org.jfree.data.KeyedValueComparator.compare : $r16 = interfaceinvoke r3.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.KeyedValueComparator.compare : i0 = interfaceinvoke $r15.<java.lang.Comparable: int compareTo(java.lang.Object)>($r16)
org.jfree.data.KeyedValueComparator.compare : i0 = interfaceinvoke $r15.<java.lang.Comparable: int compareTo(java.lang.Object)>($r16) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= return i0]
org.jfree.data.KeyedValueComparator.compare : goto [?= return i0] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : return i0
org.jfree.data.KeyedValueComparator.compare : $r11 = interfaceinvoke r3.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r12 = interfaceinvoke r4.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>()
org.jfree.data.KeyedValueComparator.compare : $r12 = interfaceinvoke r4.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.KeyedValueComparator.compare : i0 = interfaceinvoke $r11.<java.lang.Comparable: int compareTo(java.lang.Object)>($r12)
org.jfree.data.KeyedValueComparator.compare : i0 = interfaceinvoke $r11.<java.lang.Comparable: int compareTo(java.lang.Object)>($r12) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= return i0]
org.jfree.data.KeyedValueComparator.compare : goto [?= return i0] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : return i0
