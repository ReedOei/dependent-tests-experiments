org.jfree.chart.axis.ModuloAxis.transStart : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : d4 = 0.0
org.jfree.chart.axis.ModuloAxis.transStart : d4 = 0.0 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.ModuloAxis.transStart : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2) >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : if $z0 == 0
org.jfree.chart.axis.ModuloAxis.transStart : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.ModuloAxis.transStart : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.ModuloAxis.transStart : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r2) >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : if $z1 == 0
org.jfree.chart.axis.ModuloAxis.transStart : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.axis.ModuloAxis.transStart : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ModuloAxis: boolean isInverted()>()
org.jfree.chart.axis.ModuloAxis.transStart : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ModuloAxis: boolean isInverted()>() >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : if $z2 == 0
org.jfree.chart.axis.ModuloAxis.transStart : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d15 = r0.<org.jfree.chart.axis.ModuloAxis: double displayStart>
org.jfree.chart.axis.ModuloAxis.transStart : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d24 = r0.<org.jfree.chart.axis.ModuloAxis: double displayStart>
org.jfree.chart.axis.ModuloAxis.transStart : $d24 = r0.<org.jfree.chart.axis.ModuloAxis: double displayStart> >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d25 = d0 - $d24
org.jfree.chart.axis.ModuloAxis.transStart : $d25 = d0 - $d24 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $r4 = r0.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>
org.jfree.chart.axis.ModuloAxis.transStart : $r4 = r0.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange> >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d26 = virtualinvoke $r4.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.ModuloAxis.transStart : $d26 = virtualinvoke $r4.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d27 = r0.<org.jfree.chart.axis.ModuloAxis: double displayStart>
org.jfree.chart.axis.ModuloAxis.transStart : $d27 = r0.<org.jfree.chart.axis.ModuloAxis: double displayStart> >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d28 = $d26 - $d27
org.jfree.chart.axis.ModuloAxis.transStart : $d28 = $d26 - $d27 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d29 = $d25 / $d28
org.jfree.chart.axis.ModuloAxis.transStart : $d29 = $d25 / $d28 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d30 = d4 - d3
org.jfree.chart.axis.ModuloAxis.transStart : $d30 = d4 - d3 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d31 = $d29 * $d30
org.jfree.chart.axis.ModuloAxis.transStart : $d31 = $d29 * $d30 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d32 = d3 + $d31
org.jfree.chart.axis.ModuloAxis.transStart : $d32 = d3 + $d31 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : return $d32
org.jfree.chart.axis.ModuloAxis.transStart : $d15 = r0.<org.jfree.chart.axis.ModuloAxis: double displayStart> >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d16 = d0 - $d15
org.jfree.chart.axis.ModuloAxis.transStart : $d16 = d0 - $d15 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $r3 = r0.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>
org.jfree.chart.axis.ModuloAxis.transStart : $r3 = r0.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange> >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d17 = virtualinvoke $r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.ModuloAxis.transStart : $d17 = virtualinvoke $r3.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d18 = r0.<org.jfree.chart.axis.ModuloAxis: double displayStart>
org.jfree.chart.axis.ModuloAxis.transStart : $d18 = r0.<org.jfree.chart.axis.ModuloAxis: double displayStart> >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d19 = $d17 - $d18
org.jfree.chart.axis.ModuloAxis.transStart : $d19 = $d17 - $d18 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d20 = $d16 / $d19
org.jfree.chart.axis.ModuloAxis.transStart : $d20 = $d16 / $d19 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d21 = d4 - d3
org.jfree.chart.axis.ModuloAxis.transStart : $d21 = d4 - d3 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d22 = $d20 * $d21
org.jfree.chart.axis.ModuloAxis.transStart : $d22 = $d20 * $d21 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d23 = d4 - $d22
org.jfree.chart.axis.ModuloAxis.transStart : $d23 = d4 - $d22 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : return $d23
org.jfree.chart.axis.ModuloAxis.transStart : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d10 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.axis.ModuloAxis.transStart : $d10 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.ModuloAxis.transStart : $d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d12 = $d11 * d1
org.jfree.chart.axis.ModuloAxis.transStart : $d12 = $d11 * d1 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d13 = d1 + d2
org.jfree.chart.axis.ModuloAxis.transStart : $d13 = d1 + d2 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d14 = $d12 / $d13
org.jfree.chart.axis.ModuloAxis.transStart : $d14 = $d12 / $d13 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : d4 = $d10 - $d14
org.jfree.chart.axis.ModuloAxis.transStart : d4 = $d10 - $d14 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ModuloAxis: boolean isInverted()>()
org.jfree.chart.axis.ModuloAxis.transStart : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.ModuloAxis.transStart : $d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.ModuloAxis.transStart : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d7 = $d6 * d1
org.jfree.chart.axis.ModuloAxis.transStart : $d7 = $d6 * d1 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d8 = d1 + d2
org.jfree.chart.axis.ModuloAxis.transStart : $d8 = d1 + d2 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $d9 = $d7 / $d8
org.jfree.chart.axis.ModuloAxis.transStart : $d9 = $d7 / $d8 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : d4 = $d5 + $d9
org.jfree.chart.axis.ModuloAxis.transStart : d4 = $d5 + $d9 >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : goto [?= $z2 = virtualinvoke r0.<org.jfree.chart.axis.ModuloAxis: boolean isInverted()>()]
org.jfree.chart.axis.ModuloAxis.transStart : goto [?= $z2 = virtualinvoke r0.<org.jfree.chart.axis.ModuloAxis: boolean isInverted()>()] >>>>>>>> org.jfree.chart.axis.ModuloAxis.transStart : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ModuloAxis: boolean isInverted()>()
