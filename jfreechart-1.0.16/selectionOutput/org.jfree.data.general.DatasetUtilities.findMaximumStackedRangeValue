org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : r1 = null
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : r1 = null >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : z0 = 0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : z0 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d0 = 0.0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d0 = 0.0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i1 = 0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if i1 >= i0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d1 = 0.0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if z0 == 0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : $r3 = new java.lang.Double
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : return r1
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : $r3 = new java.lang.Double >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : r1 = $r3
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : r1 = $r3 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : return r1
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d1 = 0.0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i2 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i2 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i3 = 0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if i3 >= i2
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : r2 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i3, i1)
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i1 = i1 + 1
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if i1 >= i0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : r2 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i3, i1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if r2 == null
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if r2 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : z0 = 1
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if r2 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i3 = i3 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if i3 >= i2
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : z0 = 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d2 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d2 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : $b4 = d2 cmpl 0.0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : $b4 = d2 cmpl 0.0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if $b4 <= 0
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if $b4 <= 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d1 = d1 + d2
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : if $b4 <= 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : d1 = d1 + d2 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue : i3 = i3 + 1
