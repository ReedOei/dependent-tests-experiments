org.jfree.data.KeyToGroupMap.clone : r1 = null >>>>>>>> org.jfree.data.KeyToGroupMap.clone : if r0 == null
org.jfree.data.KeyToGroupMap.clone : if r0 == null >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.jfree.data.KeyToGroupMap.clone : if r0 == null >>>>>>>> org.jfree.data.KeyToGroupMap.clone : return r1
org.jfree.data.KeyToGroupMap.clone : if r0 == null >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : r9 = $r8 >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r10 = new java.lang.CloneNotSupportedException
org.jfree.data.KeyToGroupMap.clone : $r10 = new java.lang.CloneNotSupportedException >>>>>>>> org.jfree.data.KeyToGroupMap.clone : specialinvoke $r10.<java.lang.CloneNotSupportedException: void <init>(java.lang.String)>("Exception.")
org.jfree.data.KeyToGroupMap.clone : specialinvoke $r10.<java.lang.CloneNotSupportedException: void <init>(java.lang.String)>("Exception.") >>>>>>>> org.jfree.data.KeyToGroupMap.clone : throw $r10
org.jfree.data.KeyToGroupMap.clone : $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>()
org.jfree.data.KeyToGroupMap.clone : $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : r2 = (java.util.List) $r5
org.jfree.data.KeyToGroupMap.clone : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : r2 = (java.util.List) $r5 >>>>>>>> org.jfree.data.KeyToGroupMap.clone : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
org.jfree.data.KeyToGroupMap.clone : r2 = (java.util.List) $r5 >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.KeyToGroupMap.clone : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : if $z0 == 0
org.jfree.data.KeyToGroupMap.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : if $z0 == 0 >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.KeyToGroupMap.clone : if $z0 == 0 >>>>>>>> org.jfree.data.KeyToGroupMap.clone : r1 = r2
org.jfree.data.KeyToGroupMap.clone : if $z0 == 0 >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : r1 = r2 >>>>>>>> org.jfree.data.KeyToGroupMap.clone : goto [?= return r1]
org.jfree.data.KeyToGroupMap.clone : r1 = r2 >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : goto [?= return r1] >>>>>>>> org.jfree.data.KeyToGroupMap.clone : return r1
org.jfree.data.KeyToGroupMap.clone : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r7 = staticinvoke <org.jfree.data.KeyToGroupMap: java.lang.Object clone(java.lang.Object)>($r6)
org.jfree.data.KeyToGroupMap.clone : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : $r7 = staticinvoke <org.jfree.data.KeyToGroupMap: java.lang.Object clone(java.lang.Object)>($r6) >>>>>>>> org.jfree.data.KeyToGroupMap.clone : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7)
org.jfree.data.KeyToGroupMap.clone : $r7 = staticinvoke <org.jfree.data.KeyToGroupMap: java.lang.Object clone(java.lang.Object)>($r6) >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7) >>>>>>>> org.jfree.data.KeyToGroupMap.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.KeyToGroupMap.clone : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7) >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
org.jfree.data.KeyToGroupMap.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.KeyToGroupMap.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.KeyToGroupMap.clone : $r8 := @caughtexception
