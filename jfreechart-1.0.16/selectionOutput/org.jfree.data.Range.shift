org.jfree.data.Range.shift : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "base") >>>>>>>> org.jfree.data.Range.shift : if z0 == 0
org.jfree.data.Range.shift : if z0 == 0 >>>>>>>> org.jfree.data.Range.shift : $r1 = new org.jfree.data.Range
org.jfree.data.Range.shift : if z0 == 0 >>>>>>>> org.jfree.data.Range.shift : $r2 = new org.jfree.data.Range
org.jfree.data.Range.shift : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.shift : $d5 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.shift : $d5 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.shift : $d6 = staticinvoke <org.jfree.data.Range: double shiftWithNoZeroCrossing(double,double)>($d5, d0)
org.jfree.data.Range.shift : $d6 = staticinvoke <org.jfree.data.Range: double shiftWithNoZeroCrossing(double,double)>($d5, d0) >>>>>>>> org.jfree.data.Range.shift : $d7 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.shift : $d7 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.shift : $d8 = staticinvoke <org.jfree.data.Range: double shiftWithNoZeroCrossing(double,double)>($d7, d0)
org.jfree.data.Range.shift : $d8 = staticinvoke <org.jfree.data.Range: double shiftWithNoZeroCrossing(double,double)>($d7, d0) >>>>>>>> org.jfree.data.Range.shift : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d6, $d8)
org.jfree.data.Range.shift : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d6, $d8) >>>>>>>> org.jfree.data.Range.shift : return $r2
org.jfree.data.Range.shift : $r1 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.shift : $d1 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.shift : $d1 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.shift : $d2 = $d1 + d0
org.jfree.data.Range.shift : $d2 = $d1 + d0 >>>>>>>> org.jfree.data.Range.shift : $d3 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.shift : $d3 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.shift : $d4 = $d3 + d0
org.jfree.data.Range.shift : $d4 = $d3 + d0 >>>>>>>> org.jfree.data.Range.shift : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>($d2, $d4)
org.jfree.data.Range.shift : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>($d2, $d4) >>>>>>>> org.jfree.data.Range.shift : return $r1
