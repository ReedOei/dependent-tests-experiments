org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $z0 = virtualinvoke r0.<org.jfree.chart.plot.FastScatterPlot: boolean isDomainGridlinesVisible()>() >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : if $z0 == 0
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : return
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : if $z1 == 0
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : return
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : r5 = (org.jfree.chart.axis.ValueTick) $r8
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : r5 = (org.jfree.chart.axis.ValueTick) $r8 >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r9 = r0.<org.jfree.chart.plot.FastScatterPlot: org.jfree.chart.axis.ValueAxis domainAxis>
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r9 = r0.<org.jfree.chart.plot.FastScatterPlot: org.jfree.chart.axis.ValueAxis domainAxis> >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $d1 = virtualinvoke r5.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $d1 = virtualinvoke r5.<org.jfree.chart.axis.ValueTick: double getValue()>() >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : d0 = virtualinvoke $r9.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d1, r2, $r6)
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : d0 = virtualinvoke $r9.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d1, r2, $r6) >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r10 = new java.awt.geom.Line2D$Double
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r10 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMinY()>() >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(d0, $d2, d0, $d3)
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(d0, $d2, d0, $d3) >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : r7 = $r10
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : r7 = $r10 >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r11 = virtualinvoke r0.<org.jfree.chart.plot.FastScatterPlot: java.awt.Paint getDomainGridlinePaint()>()
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r11 = virtualinvoke r0.<org.jfree.chart.plot.FastScatterPlot: java.awt.Paint getDomainGridlinePaint()>() >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r11)
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r11) >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r12 = virtualinvoke r0.<org.jfree.chart.plot.FastScatterPlot: java.awt.Stroke getDomainGridlineStroke()>()
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $r12 = virtualinvoke r0.<org.jfree.chart.plot.FastScatterPlot: java.awt.Stroke getDomainGridlineStroke()>() >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r12)
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r12) >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r7)
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r7) >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
