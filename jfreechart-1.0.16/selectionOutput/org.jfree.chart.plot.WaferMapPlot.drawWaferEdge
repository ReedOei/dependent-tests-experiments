org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r3 = virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: java.awt.geom.Ellipse2D getWaferEdge(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r6 = <java.awt.Color: java.awt.Color black>
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r6 = <java.awt.Color: java.awt.Color black> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r6)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r6) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : n0 = null
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : n0 = null >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r4 = virtualinvoke r3.<java.awt.geom.Ellipse2D: java.awt.geom.Rectangle2D getFrame()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r4 = virtualinvoke r3.<java.awt.geom.Ellipse2D: java.awt.geom.Rectangle2D getFrame()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d1 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d1 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : d0 = $d1 * 0.04
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : d0 = $d1 * 0.04 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r7 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r7 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r8 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r8 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : if $r7 != $r8
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : if $r7 != $r8 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r9 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : if $r7 != $r8 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r12 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r12 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d13 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d13 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d14 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d14 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d15 = $d14 / 2.0
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d15 = $d14 / 2.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d16 = $d13 + $d15
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d16 = $d13 + $d15 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d17 = d0 / 2.0
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d17 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d18 = $d16 - $d17
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d18 = $d16 - $d17 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d19 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d19 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d20 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d20 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d21 = $d19 + $d20
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d21 = $d19 + $d20 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d22 = d0 / 2.0
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d22 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d23 = $d21 - $d22
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d23 = $d21 - $d22 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : specialinvoke $r12.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d18, $d23, d0, d0)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : specialinvoke $r12.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d18, $d23, d0, d0) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r13 = $r12
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r13 = $r12 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r14 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r14 = new java.awt.geom.Arc2D$Double >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : specialinvoke $r14.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(r13, 0.0, 180.0, 0)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : specialinvoke $r14.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(r13, 0.0, 180.0, 0) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r11 = $r14
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r11 = $r14 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r15 = <java.awt.Color: java.awt.Color white>
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r15 = <java.awt.Color: java.awt.Color white> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r15)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r15) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r11)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r11) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r16 = <java.awt.Color: java.awt.Color black>
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r16 = <java.awt.Color: java.awt.Color black> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : return
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r9 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d2 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d2 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d3 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d3 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d4 = $d2 + $d3
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d4 = $d2 + $d3 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d5 = d0 / 2.0
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d5 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d6 = $d4 - $d5
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d6 = $d4 - $d5 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d7 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d7 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d8 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d8 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d9 = $d8 / 2.0
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d9 = $d8 / 2.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d10 = $d7 + $d9
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d10 = $d7 + $d9 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d11 = d0 / 2.0
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d11 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d12 = $d10 - $d11
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $d12 = $d10 - $d11 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d6, $d12, d0, d0)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d6, $d12, d0, d0) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r5 = $r9
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r5 = $r9 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r10 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r10 = new java.awt.geom.Arc2D$Double >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : specialinvoke $r10.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(r5, 90.0, 180.0, 0)
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : specialinvoke $r10.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(r5, 90.0, 180.0, 0) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r11 = $r10
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : r11 = $r10 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : goto [?= $r15 = <java.awt.Color: java.awt.Color white>]
org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : goto [?= $r15 = <java.awt.Color: java.awt.Color white>] >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawWaferEdge : $r15 = <java.awt.Color: java.awt.Color white>
