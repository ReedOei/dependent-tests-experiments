org.jfree.chart.block.GridArrangement.arrangeNF : $d2 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getHeight()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $i3 = r0.<org.jfree.chart.block.GridArrangement: int rows>
org.jfree.chart.block.GridArrangement.arrangeNF : $i3 = r0.<org.jfree.chart.block.GridArrangement: int rows> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $d3 = (double) $i3
org.jfree.chart.block.GridArrangement.arrangeNF : $d3 = (double) $i3 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : d0 = $d2 / $d3
org.jfree.chart.block.GridArrangement.arrangeNF : d0 = $d2 / $d3 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedHeight(double)>(d0)
org.jfree.chart.block.GridArrangement.arrangeNF : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedHeight(double)>(d0) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : r5 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.GridArrangement.arrangeNF : r5 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : d1 = 0.0
org.jfree.chart.block.GridArrangement.arrangeNF : d1 = 0.0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : i0 = 0
org.jfree.chart.block.GridArrangement.arrangeNF : i0 = 0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $i4 = r0.<org.jfree.chart.block.GridArrangement: int rows>
org.jfree.chart.block.GridArrangement.arrangeNF : $i4 = r0.<org.jfree.chart.block.GridArrangement: int rows> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : if i0 >= $i4
org.jfree.chart.block.GridArrangement.arrangeNF : if i0 >= $i4 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : i1 = 0
org.jfree.chart.block.GridArrangement.arrangeNF : if i0 >= $i4 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $i9 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeNF : $i9 = r0.<org.jfree.chart.block.GridArrangement: int columns> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $d5 = (double) $i9
org.jfree.chart.block.GridArrangement.arrangeNF : $d5 = (double) $i9 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $d6 = d1 * $d5
org.jfree.chart.block.GridArrangement.arrangeNF : $d6 = d1 * $d5 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : r9 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($d6)
org.jfree.chart.block.GridArrangement.arrangeNF : r9 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($d6) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $r10 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r9)
org.jfree.chart.block.GridArrangement.arrangeNF : $r10 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r9) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : return $r10
org.jfree.chart.block.GridArrangement.arrangeNF : i1 = 0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $i5 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeNF : $i5 = r0.<org.jfree.chart.block.GridArrangement: int columns> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : if i1 >= $i5
org.jfree.chart.block.GridArrangement.arrangeNF : if i1 >= $i5 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $i6 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeNF : if i1 >= $i5 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : i0 = i0 + 1
org.jfree.chart.block.GridArrangement.arrangeNF : i0 = i0 + 1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : goto [?= $i4 = r0.<org.jfree.chart.block.GridArrangement: int rows>]
org.jfree.chart.block.GridArrangement.arrangeNF : goto [?= $i4 = r0.<org.jfree.chart.block.GridArrangement: int rows>] >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $i4 = r0.<org.jfree.chart.block.GridArrangement: int rows>
org.jfree.chart.block.GridArrangement.arrangeNF : $i6 = r0.<org.jfree.chart.block.GridArrangement: int columns> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $i7 = i0 * $i6
org.jfree.chart.block.GridArrangement.arrangeNF : $i7 = i0 * $i6 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : i2 = $i7 + i1
org.jfree.chart.block.GridArrangement.arrangeNF : i2 = $i7 + i1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $i8 = interfaceinvoke r5.<java.util.List: int size()>()
org.jfree.chart.block.GridArrangement.arrangeNF : $i8 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : if i2 < $i8
org.jfree.chart.block.GridArrangement.arrangeNF : if i2 < $i8 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : goto [?= i0 = i0 + 1]
org.jfree.chart.block.GridArrangement.arrangeNF : if i2 < $i8 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $r8 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i2)
org.jfree.chart.block.GridArrangement.arrangeNF : $r8 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : r6 = (org.jfree.chart.block.Block) $r8
org.jfree.chart.block.GridArrangement.arrangeNF : r6 = (org.jfree.chart.block.Block) $r8 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : if r6 == null
org.jfree.chart.block.GridArrangement.arrangeNF : if r6 == null >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : r7 = interfaceinvoke r6.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r4)
org.jfree.chart.block.GridArrangement.arrangeNF : if r6 == null >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : i1 = i1 + 1
org.jfree.chart.block.GridArrangement.arrangeNF : i1 = i1 + 1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : goto [?= $i5 = r0.<org.jfree.chart.block.GridArrangement: int columns>]
org.jfree.chart.block.GridArrangement.arrangeNF : goto [?= $i5 = r0.<org.jfree.chart.block.GridArrangement: int columns>] >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $i5 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeNF : r7 = interfaceinvoke r6.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r4) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : $d4 = virtualinvoke r7.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.GridArrangement.arrangeNF : $d4 = virtualinvoke r7.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d4)
org.jfree.chart.block.GridArrangement.arrangeNF : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d4) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : i1 = i1 + 1
org.jfree.chart.block.GridArrangement.arrangeNF : goto [?= i0 = i0 + 1] >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNF : i0 = i0 + 1
