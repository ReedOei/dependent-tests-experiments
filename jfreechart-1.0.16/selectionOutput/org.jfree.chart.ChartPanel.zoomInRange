org.jfree.chart.ChartPanel.zoomInRange : $r4 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.JFreeChart chart> >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : r1 = virtualinvoke $r4.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.ChartPanel.zoomInRange : r1 = virtualinvoke $r4.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : $z1 = r1 instanceof org.jfree.chart.plot.Zoomable
org.jfree.chart.ChartPanel.zoomInRange : $z1 = r1 instanceof org.jfree.chart.plot.Zoomable >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : if $z1 == 0
org.jfree.chart.ChartPanel.zoomInRange : if $z1 == 0 >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : z0 = virtualinvoke r1.<org.jfree.chart.plot.Plot: boolean isNotify()>()
org.jfree.chart.ChartPanel.zoomInRange : if $z1 == 0 >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : return
org.jfree.chart.ChartPanel.zoomInRange : z0 = virtualinvoke r1.<org.jfree.chart.plot.Plot: boolean isNotify()>() >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setNotify(boolean)>(0)
org.jfree.chart.ChartPanel.zoomInRange : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setNotify(boolean)>(0) >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : r2 = (org.jfree.chart.plot.Zoomable) r1
org.jfree.chart.ChartPanel.zoomInRange : r2 = (org.jfree.chart.plot.Zoomable) r1 >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : $d2 = r0.<org.jfree.chart.ChartPanel: double zoomInFactor>
org.jfree.chart.ChartPanel.zoomInRange : $d2 = r0.<org.jfree.chart.ChartPanel: double zoomInFactor> >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : $r5 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.ChartRenderingInfo info>
org.jfree.chart.ChartPanel.zoomInRange : $r5 = r0.<org.jfree.chart.ChartPanel: org.jfree.chart.ChartRenderingInfo info> >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : $r6 = virtualinvoke $r5.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.plot.PlotRenderingInfo getPlotInfo()>()
org.jfree.chart.ChartPanel.zoomInRange : $r6 = virtualinvoke $r5.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.plot.PlotRenderingInfo getPlotInfo()>() >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : $r3 = new java.awt.Point
org.jfree.chart.ChartPanel.zoomInRange : $r3 = new java.awt.Point >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : $i0 = (int) d0
org.jfree.chart.ChartPanel.zoomInRange : $i0 = (int) d0 >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : $i1 = (int) d1
org.jfree.chart.ChartPanel.zoomInRange : $i1 = (int) d1 >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : specialinvoke $r3.<java.awt.Point: void <init>(int,int)>($i0, $i1)
org.jfree.chart.ChartPanel.zoomInRange : specialinvoke $r3.<java.awt.Point: void <init>(int,int)>($i0, $i1) >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : $r7 = virtualinvoke r0.<org.jfree.chart.ChartPanel: java.awt.geom.Point2D translateScreenToJava2D(java.awt.Point)>($r3)
org.jfree.chart.ChartPanel.zoomInRange : $r7 = virtualinvoke r0.<org.jfree.chart.ChartPanel: java.awt.geom.Point2D translateScreenToJava2D(java.awt.Point)>($r3) >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : $z2 = r0.<org.jfree.chart.ChartPanel: boolean zoomAroundAnchor>
org.jfree.chart.ChartPanel.zoomInRange : $z2 = r0.<org.jfree.chart.ChartPanel: boolean zoomAroundAnchor> >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : interfaceinvoke r2.<org.jfree.chart.plot.Zoomable: void zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)>($d2, $r6, $r7, $z2)
org.jfree.chart.ChartPanel.zoomInRange : interfaceinvoke r2.<org.jfree.chart.plot.Zoomable: void zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)>($d2, $r6, $r7, $z2) >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setNotify(boolean)>(z0)
org.jfree.chart.ChartPanel.zoomInRange : virtualinvoke r1.<org.jfree.chart.plot.Plot: void setNotify(boolean)>(z0) >>>>>>>> org.jfree.chart.ChartPanel.zoomInRange : return
