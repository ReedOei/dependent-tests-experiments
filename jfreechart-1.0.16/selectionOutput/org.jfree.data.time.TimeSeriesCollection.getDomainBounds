org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r2 = null >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if $z1 == 0
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : return r2
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r4 = (java.lang.Comparable) $r9
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r4 = (java.lang.Comparable) $r9 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.time.TimeSeries getSeries(java.lang.Comparable)>(r4)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.time.TimeSeries getSeries(java.lang.Comparable)>(r4) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : i0 = virtualinvoke r5.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : i0 = virtualinvoke r5.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if i0 <= 0
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if i0 <= 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r6 = virtualinvoke r5.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>(0)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if i0 <= 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r6 = virtualinvoke r5.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>(0) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $i1 = i0 - 1
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $i1 = i0 - 1 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r7 = virtualinvoke r5.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>($i1)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r7 = virtualinvoke r5.<org.jfree.data.time.TimeSeries: org.jfree.data.time.RegularTimePeriod getTimePeriod(int)>($i1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if z0 != 0
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if z0 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r10 = new org.jfree.data.Range
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if z0 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r11 = new org.jfree.data.Range
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r11 = new org.jfree.data.Range >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r12 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.Calendar workingCalendar>
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r12 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l4 = virtualinvoke r6.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond(java.util.Calendar)>($r12)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l4 = virtualinvoke r6.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond(java.util.Calendar)>($r12) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $d2 = (double) $l4
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $d2 = (double) $l4 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r13 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.Calendar workingCalendar>
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r13 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l5 = virtualinvoke r7.<org.jfree.data.time.RegularTimePeriod: long getLastMillisecond(java.util.Calendar)>($r13)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l5 = virtualinvoke r7.<org.jfree.data.time.RegularTimePeriod: long getLastMillisecond(java.util.Calendar)>($r13) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $d3 = (double) $l5
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $d3 = (double) $l5 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : specialinvoke $r11.<org.jfree.data.Range: void <init>(double,double)>($d2, $d3)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : specialinvoke $r11.<org.jfree.data.Range: void <init>(double,double)>($d2, $d3) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r8 = $r11
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r8 = $r11 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, r8)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, r8) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r10 = new org.jfree.data.Range >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l2 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: long getX(org.jfree.data.time.RegularTimePeriod)>(r6)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l2 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: long getX(org.jfree.data.time.RegularTimePeriod)>(r6) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $d0 = (double) $l2
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $d0 = (double) $l2 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l3 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: long getX(org.jfree.data.time.RegularTimePeriod)>(r7)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $l3 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: long getX(org.jfree.data.time.RegularTimePeriod)>(r7) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $d1 = (double) $l3
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $d1 = (double) $l3 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : specialinvoke $r10.<org.jfree.data.Range: void <init>(double,double)>($d0, $d1)
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : specialinvoke $r10.<org.jfree.data.Range: void <init>(double,double)>($d0, $d1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r8 = $r10
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r8 = $r10 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : goto [?= r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, r8)]
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : goto [?= r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, r8)] >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, r8)
