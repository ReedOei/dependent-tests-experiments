org.jfree.data.time.TimeSeries.findBoundsByIteration : r0.<org.jfree.data.time.TimeSeries: double minY> = #NaN >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : r0.<org.jfree.data.time.TimeSeries: double maxY> = #NaN
org.jfree.data.time.TimeSeries.findBoundsByIteration : r0.<org.jfree.data.time.TimeSeries: double maxY> = #NaN >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : $r3 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.findBoundsByIteration : $r3 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.time.TimeSeries.findBoundsByIteration : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.time.TimeSeries.findBoundsByIteration : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : if $z0 == 0
org.jfree.data.time.TimeSeries.findBoundsByIteration : if $z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.time.TimeSeries.findBoundsByIteration : if $z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : return
org.jfree.data.time.TimeSeries.findBoundsByIteration : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : r2 = (org.jfree.data.time.TimeSeriesDataItem) $r4
org.jfree.data.time.TimeSeries.findBoundsByIteration : r2 = (org.jfree.data.time.TimeSeriesDataItem) $r4 >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)>(r2)
org.jfree.data.time.TimeSeries.findBoundsByIteration : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)>(r2) >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.time.TimeSeries.findBoundsByIteration : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.time.TimeSeries.findBoundsByIteration : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
