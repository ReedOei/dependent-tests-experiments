org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $z0 = virtualinvoke r0.<org.jfree.data.xy.IntervalXYDelegate: boolean isAutoWidth()>() >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z0 == 0
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z0 == 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d0 = r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth>
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z0 == 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d2 = r0.<org.jfree.data.xy.IntervalXYDelegate: double fixedIntervalWidth>
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d2 = r0.<org.jfree.data.xy.IntervalXYDelegate: double fixedIntervalWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : return $d2
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d0 = r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0)
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z1 != 0
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z1 != 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d1 = r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth>
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : if $z1 != 0 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d2 = r0.<org.jfree.data.xy.IntervalXYDelegate: double fixedIntervalWidth>
org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : $d1 = r0.<org.jfree.data.xy.IntervalXYDelegate: double autoIntervalWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth : return $d1
