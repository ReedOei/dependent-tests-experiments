org.jfree.data.statistics.Regression.getPowerRegression : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0) >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : if i1 >= 2
org.jfree.data.statistics.Regression.getPowerRegression : if i1 >= 2 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $r2 = new java.lang.IllegalArgumentException
org.jfree.data.statistics.Regression.getPowerRegression : if i1 >= 2 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d0 = 0.0
org.jfree.data.statistics.Regression.getPowerRegression : d0 = 0.0 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d1 = 0.0
org.jfree.data.statistics.Regression.getPowerRegression : d1 = 0.0 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d2 = 0.0
org.jfree.data.statistics.Regression.getPowerRegression : d2 = 0.0 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d3 = 0.0
org.jfree.data.statistics.Regression.getPowerRegression : d3 = 0.0 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : i2 = 0
org.jfree.data.statistics.Regression.getPowerRegression : i2 = 0 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : if i2 >= i1
org.jfree.data.statistics.Regression.getPowerRegression : if i2 >= i1 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d11 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2)
org.jfree.data.statistics.Regression.getPowerRegression : if i2 >= i1 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d13 = d0 * d0
org.jfree.data.statistics.Regression.getPowerRegression : $d13 = d0 * d0 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d14 = (double) i1
org.jfree.data.statistics.Regression.getPowerRegression : $d14 = (double) i1 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d15 = $d13 / $d14
org.jfree.data.statistics.Regression.getPowerRegression : $d15 = $d13 / $d14 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d16 = d2 - $d15
org.jfree.data.statistics.Regression.getPowerRegression : d16 = d2 - $d15 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d17 = d0 * d1
org.jfree.data.statistics.Regression.getPowerRegression : $d17 = d0 * d1 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d18 = (double) i1
org.jfree.data.statistics.Regression.getPowerRegression : $d18 = (double) i1 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d19 = $d17 / $d18
org.jfree.data.statistics.Regression.getPowerRegression : $d19 = $d17 / $d18 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d8 = d3 - $d19
org.jfree.data.statistics.Regression.getPowerRegression : d8 = d3 - $d19 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d20 = (double) i1
org.jfree.data.statistics.Regression.getPowerRegression : $d20 = (double) i1 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d9 = d0 / $d20
org.jfree.data.statistics.Regression.getPowerRegression : d9 = d0 / $d20 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d21 = (double) i1
org.jfree.data.statistics.Regression.getPowerRegression : $d21 = (double) i1 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d10 = d1 / $d21
org.jfree.data.statistics.Regression.getPowerRegression : d10 = d1 / $d21 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : r1 = newarray (double)[2]
org.jfree.data.statistics.Regression.getPowerRegression : r1 = newarray (double)[2] >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d22 = d8 / d16
org.jfree.data.statistics.Regression.getPowerRegression : $d22 = d8 / d16 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : r1[1] = $d22
org.jfree.data.statistics.Regression.getPowerRegression : r1[1] = $d22 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d23 = staticinvoke <java.lang.Math: double exp(double)>(1.0)
org.jfree.data.statistics.Regression.getPowerRegression : $d23 = staticinvoke <java.lang.Math: double exp(double)>(1.0) >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d24 = r1[1]
org.jfree.data.statistics.Regression.getPowerRegression : $d24 = r1[1] >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d25 = $d24 * d9
org.jfree.data.statistics.Regression.getPowerRegression : $d25 = $d24 * d9 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d26 = d10 - $d25
org.jfree.data.statistics.Regression.getPowerRegression : $d26 = d10 - $d25 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d27 = staticinvoke <java.lang.Math: double pow(double,double)>($d23, $d26)
org.jfree.data.statistics.Regression.getPowerRegression : $d27 = staticinvoke <java.lang.Math: double pow(double,double)>($d23, $d26) >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : r1[0] = $d27
org.jfree.data.statistics.Regression.getPowerRegression : r1[0] = $d27 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : return r1
org.jfree.data.statistics.Regression.getPowerRegression : $d11 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d4 = staticinvoke <java.lang.Math: double log(double)>($d11)
org.jfree.data.statistics.Regression.getPowerRegression : d4 = staticinvoke <java.lang.Math: double log(double)>($d11) >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : $d12 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i0, i2)
org.jfree.data.statistics.Regression.getPowerRegression : $d12 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d5 = staticinvoke <java.lang.Math: double log(double)>($d12)
org.jfree.data.statistics.Regression.getPowerRegression : d5 = staticinvoke <java.lang.Math: double log(double)>($d12) >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d0 = d0 + d4
org.jfree.data.statistics.Regression.getPowerRegression : d0 = d0 + d4 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d1 = d1 + d5
org.jfree.data.statistics.Regression.getPowerRegression : d1 = d1 + d5 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d6 = d4 * d4
org.jfree.data.statistics.Regression.getPowerRegression : d6 = d4 * d4 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d2 = d2 + d6
org.jfree.data.statistics.Regression.getPowerRegression : d2 = d2 + d6 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d7 = d4 * d5
org.jfree.data.statistics.Regression.getPowerRegression : d7 = d4 * d5 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : d3 = d3 + d7
org.jfree.data.statistics.Regression.getPowerRegression : d3 = d3 + d7 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : i2 = i2 + 1
org.jfree.data.statistics.Regression.getPowerRegression : i2 = i2 + 1 >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : goto [?= (branch)]
org.jfree.data.statistics.Regression.getPowerRegression : goto [?= (branch)] >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : if i2 >= i1
org.jfree.data.statistics.Regression.getPowerRegression : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not enough data.")
org.jfree.data.statistics.Regression.getPowerRegression : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not enough data.") >>>>>>>> org.jfree.data.statistics.Regression.getPowerRegression : throw $r2
