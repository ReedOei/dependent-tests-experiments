org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $i3 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $d0 = (double) $i3
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $d0 = (double) $i3 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $i4 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit>
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $i4 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $d1 = (double) $i4
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $d1 = (double) $i4 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $d2 = $d0 / $d1
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $d2 = $d0 / $d1 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2)
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i0 = (int) $d3
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i0 = (int) $d3 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i1 = 0
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i1 = 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i2 = 0
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i2 = 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : if $z0 == 0
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $r3 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex>
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : return
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $r3 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $r5 = new java.lang.Integer
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $r5 = new java.lang.Integer >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i2)
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i2) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5)
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i1 = i1 + 1
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $i5 = i1 % i0
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $i5 = i1 % i0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : if $i5 != 0
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : if $i5 != 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i2 = i2 + 1
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : if $i5 != 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $i6 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit>
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $i6 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : if i2 <= $i6
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : if i2 <= $i6 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i2 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit>
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : if i2 <= $i6 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i2 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : i2 = i2 + 1 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex : $i6 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit>
