org.jfree.chart.plot.MeterPlot.draw : if r5 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setPlotArea(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.MeterPlot.draw : if r5 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.MeterPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d18 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.MeterPlot.draw : $d18 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d19 = $d18 + 4.0
org.jfree.chart.plot.MeterPlot.draw : $d19 = $d18 + 4.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d20 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.MeterPlot.draw : $d20 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d21 = $d20 + 4.0
org.jfree.chart.plot.MeterPlot.draw : $d21 = $d20 + 4.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d22 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.draw : $d22 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d23 = $d22 - 8.0
org.jfree.chart.plot.MeterPlot.draw : $d23 = $d22 - 8.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d24 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.draw : $d24 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d25 = $d24 - 8.0
org.jfree.chart.plot.MeterPlot.draw : $d25 = $d24 - 8.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d19, $d21, $d23, $d25)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d19, $d21, $d23, $d25) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z0 = r0.<org.jfree.chart.plot.MeterPlot: boolean drawBorder>
org.jfree.chart.plot.MeterPlot.draw : $z0 = r0.<org.jfree.chart.plot.MeterPlot: boolean drawBorder> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $z0 == 0
org.jfree.chart.plot.MeterPlot.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.MeterPlot.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d0 = 6.0
org.jfree.chart.plot.MeterPlot.draw : d0 = 6.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d1 = 6.0
org.jfree.chart.plot.MeterPlot.draw : d1 = 6.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d26 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.MeterPlot.draw : $d26 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d27 = d0 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d27 = d0 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d2 = $d26 + $d27
org.jfree.chart.plot.MeterPlot.draw : d2 = $d26 + $d27 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d28 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.MeterPlot.draw : $d28 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d29 = d1 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d29 = d1 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d3 = $d28 + $d29
org.jfree.chart.plot.MeterPlot.draw : d3 = $d28 + $d29 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d30 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.draw : $d30 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d4 = $d30 - d0
org.jfree.chart.plot.MeterPlot.draw : d4 = $d30 - d0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d31 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.draw : $d31 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d32 = $d31 - d1
org.jfree.chart.plot.MeterPlot.draw : $d32 = $d31 - d1 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i0 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle>
org.jfree.chart.plot.MeterPlot.draw : $i0 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $i0 > 180
org.jfree.chart.plot.MeterPlot.draw : if $i0 > 180 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r15 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape>
org.jfree.chart.plot.MeterPlot.draw : if $i0 > 180 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d34 = 0.0
org.jfree.chart.plot.MeterPlot.draw : $d34 = 0.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d5 = $d32 + $d34
org.jfree.chart.plot.MeterPlot.draw : d5 = $d32 + $d34 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d35 = staticinvoke <java.lang.Math: double min(double,double)>(d4, d5)
org.jfree.chart.plot.MeterPlot.draw : $d35 = staticinvoke <java.lang.Math: double min(double,double)>(d4, d5) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d6 = $d35 / 2.0
org.jfree.chart.plot.MeterPlot.draw : d6 = $d35 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d36 = d2 + d2
org.jfree.chart.plot.MeterPlot.draw : $d36 = d2 + d2 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d37 = $d36 + d4
org.jfree.chart.plot.MeterPlot.draw : $d37 = $d36 + d4 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d38 = $d37 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d38 = $d37 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d39 = $d38 - d6
org.jfree.chart.plot.MeterPlot.draw : d39 = $d38 - d6 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d40 = d3 + d3
org.jfree.chart.plot.MeterPlot.draw : $d40 = d3 + d3 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d41 = $d40 + d5
org.jfree.chart.plot.MeterPlot.draw : $d41 = $d40 + d5 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d42 = $d41 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d42 = $d41 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d43 = $d42 - d6
org.jfree.chart.plot.MeterPlot.draw : d43 = $d42 - d6 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d44 = 2.0 * d6
org.jfree.chart.plot.MeterPlot.draw : d44 = 2.0 * d6 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d45 = 2.0 * d6
org.jfree.chart.plot.MeterPlot.draw : d45 = 2.0 * d6 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r17 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.MeterPlot.draw : $r17 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r17.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d39, d43, d44, d45)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r17.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d39, d43, d44, d45) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r7 = $r17
org.jfree.chart.plot.MeterPlot.draw : r7 = $r17 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r18 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.MeterPlot.draw : $r18 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d46 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.MeterPlot.draw : $d46 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d47 = $d46 - 4.0
org.jfree.chart.plot.MeterPlot.draw : $d47 = $d46 - 4.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d48 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.MeterPlot.draw : $d48 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d49 = $d48 - 4.0
org.jfree.chart.plot.MeterPlot.draw : $d49 = $d48 - 4.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d50 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.draw : $d50 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d51 = $d50 + 8.0
org.jfree.chart.plot.MeterPlot.draw : $d51 = $d50 + 8.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d52 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.draw : $d52 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d53 = $d52 + 8.0
org.jfree.chart.plot.MeterPlot.draw : $d53 = $d52 + 8.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r18.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d47, $d49, $d51, $d53)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r18.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d47, $d49, $d51, $d53) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r8 = $r18
org.jfree.chart.plot.MeterPlot.draw : r8 = $r18 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d7 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.plot.MeterPlot.draw : d7 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d8 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.plot.MeterPlot.draw : d8 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset getDataset()>()
org.jfree.chart.plot.MeterPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.general.ValueDataset getDataset()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if r9 == null
org.jfree.chart.plot.MeterPlot.draw : if r9 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r19 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.draw : if r9 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z3 = r0.<org.jfree.chart.plot.MeterPlot: boolean drawBorder>
org.jfree.chart.plot.MeterPlot.draw : $z3 = r0.<org.jfree.chart.plot.MeterPlot: boolean drawBorder> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $z3 == 0
org.jfree.chart.plot.MeterPlot.draw : if $z3 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.MeterPlot.draw : if $z3 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : return
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : return
org.jfree.chart.plot.MeterPlot.draw : $r19 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d9 = virtualinvoke $r19.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.plot.MeterPlot.draw : d9 = virtualinvoke $r19.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r20 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.draw : $r20 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d10 = virtualinvoke $r20.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.plot.MeterPlot.draw : d10 = virtualinvoke $r20.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r10 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.plot.MeterPlot.draw : r10 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r8)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r8) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r11 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>()
org.jfree.chart.plot.MeterPlot.draw : r11 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Composite getComposite()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: float getForegroundAlpha()>()
org.jfree.chart.plot.MeterPlot.draw : $f0 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: float getForegroundAlpha()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r21 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0)
org.jfree.chart.plot.MeterPlot.draw : $r21 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f0) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r21)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r21) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r22 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialBackgroundPaint>
org.jfree.chart.plot.MeterPlot.draw : $r22 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialBackgroundPaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $r22 == null
org.jfree.chart.plot.MeterPlot.draw : if $r22 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r23 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialBackgroundPaint>
org.jfree.chart.plot.MeterPlot.draw : if $r22 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTicks(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double)>(r1, r7, d9, d10)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTicks(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double)>(r1, r7, d9, d10) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r24 = new org.jfree.chart.plot.MeterInterval
org.jfree.chart.plot.MeterPlot.draw : $r24 = new org.jfree.chart.plot.MeterInterval >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r25 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.draw : $r25 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r26 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialOutlinePaint>
org.jfree.chart.plot.MeterPlot.draw : $r26 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialOutlinePaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r27 = new java.awt.BasicStroke
org.jfree.chart.plot.MeterPlot.draw : $r27 = new java.awt.BasicStroke >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r27.<java.awt.BasicStroke: void <init>(float)>(1.0F)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r27.<java.awt.BasicStroke: void <init>(float)>(1.0F) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r24.<org.jfree.chart.plot.MeterInterval: void <init>(java.lang.String,org.jfree.data.Range,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>("", $r25, $r26, $r27, null)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r24.<org.jfree.chart.plot.MeterInterval: void <init>(java.lang.String,org.jfree.data.Range,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>("", $r25, $r26, $r27, null) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArcForInterval(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.MeterInterval)>(r1, r7, $r24)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArcForInterval(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.MeterInterval)>(r1, r7, $r24) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r28 = r0.<org.jfree.chart.plot.MeterPlot: java.util.List intervals>
org.jfree.chart.plot.MeterPlot.draw : $r28 = r0.<org.jfree.chart.plot.MeterPlot: java.util.List intervals> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r12 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.MeterPlot.draw : r12 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.MeterPlot.draw : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $z1 == 0
org.jfree.chart.plot.MeterPlot.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r29 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.MeterPlot.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r30 = interfaceinvoke r9.<org.jfree.data.general.ValueDataset: java.lang.Number getValue()>()
org.jfree.chart.plot.MeterPlot.draw : r30 = interfaceinvoke r9.<org.jfree.data.general.ValueDataset: java.lang.Number getValue()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if r30 == null
org.jfree.chart.plot.MeterPlot.draw : if r30 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d11 = virtualinvoke r30.<java.lang.Number: double doubleValue()>()
org.jfree.chart.plot.MeterPlot.draw : if r30 == null >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r10)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r10) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r11)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(r11) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z3 = r0.<org.jfree.chart.plot.MeterPlot: boolean drawBorder>
org.jfree.chart.plot.MeterPlot.draw : d11 = virtualinvoke r30.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawValueLabel(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawValueLabel(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r31 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range>
org.jfree.chart.plot.MeterPlot.draw : $r31 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z2 = virtualinvoke $r31.<org.jfree.data.Range: boolean contains(double)>(d11)
org.jfree.chart.plot.MeterPlot.draw : $z2 = virtualinvoke $r31.<org.jfree.data.Range: boolean contains(double)>(d11) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $z2 == 0
org.jfree.chart.plot.MeterPlot.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r32 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint needlePaint>
org.jfree.chart.plot.MeterPlot.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r10)
org.jfree.chart.plot.MeterPlot.draw : $r32 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint needlePaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r32)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r32) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r33 = new java.awt.BasicStroke
org.jfree.chart.plot.MeterPlot.draw : $r33 = new java.awt.BasicStroke >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r33.<java.awt.BasicStroke: void <init>(float)>(2.0F)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r33.<java.awt.BasicStroke: void <init>(float)>(2.0F) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r33)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r33) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d54 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.draw : $d54 = virtualinvoke r7.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d55 = $d54 / 2.0
org.jfree.chart.plot.MeterPlot.draw : $d55 = $d54 / 2.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d56 = $d55 + 3.0
org.jfree.chart.plot.MeterPlot.draw : $d56 = $d55 + 3.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d12 = $d56 + 15.0
org.jfree.chart.plot.MeterPlot.draw : d12 = $d56 + 15.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d13 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d11)
org.jfree.chart.plot.MeterPlot.draw : d13 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d11) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d57 = d13 / 180.0
org.jfree.chart.plot.MeterPlot.draw : $d57 = d13 / 180.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d58 = 3.141592653589793 * $d57
org.jfree.chart.plot.MeterPlot.draw : $d58 = 3.141592653589793 * $d57 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d59 = staticinvoke <java.lang.Math: double cos(double)>($d58)
org.jfree.chart.plot.MeterPlot.draw : $d59 = staticinvoke <java.lang.Math: double cos(double)>($d58) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d60 = d12 * $d59
org.jfree.chart.plot.MeterPlot.draw : $d60 = d12 * $d59 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d14 = d7 + $d60
org.jfree.chart.plot.MeterPlot.draw : d14 = d7 + $d60 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d61 = d13 / 180.0
org.jfree.chart.plot.MeterPlot.draw : $d61 = d13 / 180.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d62 = 3.141592653589793 * $d61
org.jfree.chart.plot.MeterPlot.draw : $d62 = 3.141592653589793 * $d61 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d63 = staticinvoke <java.lang.Math: double sin(double)>($d62)
org.jfree.chart.plot.MeterPlot.draw : $d63 = staticinvoke <java.lang.Math: double sin(double)>($d62) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d64 = d12 * $d63
org.jfree.chart.plot.MeterPlot.draw : $d64 = d12 * $d63 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d15 = d8 - $d64
org.jfree.chart.plot.MeterPlot.draw : d15 = d8 - $d64 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r34 = new java.awt.Polygon
org.jfree.chart.plot.MeterPlot.draw : $r34 = new java.awt.Polygon >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r34.<java.awt.Polygon: void <init>()>()
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r34.<java.awt.Polygon: void <init>()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r14 = $r34
org.jfree.chart.plot.MeterPlot.draw : r14 = $r34 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $b1 = d13 cmpl 135.0
org.jfree.chart.plot.MeterPlot.draw : $b1 = d13 cmpl 135.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $b1 <= 0
org.jfree.chart.plot.MeterPlot.draw : if $b1 <= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $b2 = d13 cmpg 225.0
org.jfree.chart.plot.MeterPlot.draw : if $b1 <= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $b3 = d13 cmpg 45.0
org.jfree.chart.plot.MeterPlot.draw : $b3 = d13 cmpg 45.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $b3 >= 0
org.jfree.chart.plot.MeterPlot.draw : if $b3 >= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $b4 = d13 cmpl -45.0
org.jfree.chart.plot.MeterPlot.draw : if $b3 >= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d65 = d7 - 2.5
org.jfree.chart.plot.MeterPlot.draw : $d65 = d7 - 2.5 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i9 = (int) $d65
org.jfree.chart.plot.MeterPlot.draw : $i9 = (int) $d65 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i10 = (int) d8
org.jfree.chart.plot.MeterPlot.draw : $i10 = (int) d8 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i9, $i10)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i9, $i10) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d66 = d7 + 2.5
org.jfree.chart.plot.MeterPlot.draw : $d66 = d7 + 2.5 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i11 = (int) $d66
org.jfree.chart.plot.MeterPlot.draw : $i11 = (int) $d66 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i12 = (int) d8
org.jfree.chart.plot.MeterPlot.draw : $i12 = (int) d8 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i11, $i12)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i11, $i12) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i13 = (int) d14
org.jfree.chart.plot.MeterPlot.draw : $i13 = (int) d14 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i14 = (int) d15
org.jfree.chart.plot.MeterPlot.draw : $i14 = (int) d15 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i13, $i14)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i13, $i14) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r14)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r14) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r35 = new java.awt.geom.Ellipse2D$Double
org.jfree.chart.plot.MeterPlot.draw : $r35 = new java.awt.geom.Ellipse2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d67 = d7 - 5.0
org.jfree.chart.plot.MeterPlot.draw : $d67 = d7 - 5.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d68 = d8 - 5.0
org.jfree.chart.plot.MeterPlot.draw : $d68 = d8 - 5.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r35.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($d67, $d68, 10.0, 10.0)
org.jfree.chart.plot.MeterPlot.draw : specialinvoke $r35.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($d67, $d68, 10.0, 10.0) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r36 = $r35
org.jfree.chart.plot.MeterPlot.draw : r36 = $r35 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r36)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r36) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r10)
org.jfree.chart.plot.MeterPlot.draw : $b4 = d13 cmpl -45.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $b4 <= 0
org.jfree.chart.plot.MeterPlot.draw : if $b4 <= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d16 = d8 - 2.5
org.jfree.chart.plot.MeterPlot.draw : if $b4 <= 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d65 = d7 - 2.5
org.jfree.chart.plot.MeterPlot.draw : d16 = d8 - 2.5 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d17 = d8 + 2.5
org.jfree.chart.plot.MeterPlot.draw : d17 = d8 + 2.5 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i5 = (int) d7
org.jfree.chart.plot.MeterPlot.draw : $i5 = (int) d7 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i6 = (int) d16
org.jfree.chart.plot.MeterPlot.draw : $i6 = (int) d16 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i5, $i6)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i5, $i6) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i7 = (int) d7
org.jfree.chart.plot.MeterPlot.draw : $i7 = (int) d7 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i8 = (int) d17
org.jfree.chart.plot.MeterPlot.draw : $i8 = (int) d17 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i7, $i8)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r14.<java.awt.Polygon: void addPoint(int,int)>($i7, $i8) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : goto [?= $i13 = (int) d14]
org.jfree.chart.plot.MeterPlot.draw : goto [?= $i13 = (int) d14] >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $i13 = (int) d14
org.jfree.chart.plot.MeterPlot.draw : $b2 = d13 cmpg 225.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $b2 < 0
org.jfree.chart.plot.MeterPlot.draw : if $b2 < 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $b3 = d13 cmpg 45.0
org.jfree.chart.plot.MeterPlot.draw : if $b2 < 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d16 = d8 - 2.5
org.jfree.chart.plot.MeterPlot.draw : $r29 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r13 = (org.jfree.chart.plot.MeterInterval) $r29
org.jfree.chart.plot.MeterPlot.draw : r13 = (org.jfree.chart.plot.MeterInterval) $r29 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArcForInterval(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.MeterInterval)>(r1, r7, r13)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawArcForInterval(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.MeterInterval)>(r1, r7, r13) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.MeterPlot.draw : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.MeterPlot.draw : $r23 = r0.<org.jfree.chart.plot.MeterPlot: java.awt.Paint dialBackgroundPaint> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void fillArc(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double,java.awt.Paint,boolean)>(r1, r8, d9, d10, $r23, 1)
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void fillArc(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double,java.awt.Paint,boolean)>(r1, r8, d9, d10, $r23, 1) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawTicks(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,double)>(r1, r7, d9, d10)
org.jfree.chart.plot.MeterPlot.draw : $r15 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $r16 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CIRCLE>
org.jfree.chart.plot.MeterPlot.draw : $r16 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CIRCLE> >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : if $r15 == $r16
org.jfree.chart.plot.MeterPlot.draw : if $r15 == $r16 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d33 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.draw : if $r15 == $r16 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d34 = 0.0
org.jfree.chart.plot.MeterPlot.draw : $d33 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : $d34 = $d33 / 1.25
org.jfree.chart.plot.MeterPlot.draw : $d34 = $d33 / 1.25 >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : goto [?= d5 = $d32 + $d34]
org.jfree.chart.plot.MeterPlot.draw : goto [?= d5 = $d32 + $d34] >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d5 = $d32 + $d34
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: void drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : d0 = 6.0
org.jfree.chart.plot.MeterPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setPlotArea(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.MeterPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: org.jfree.ui.RectangleInsets getInsets()>()
