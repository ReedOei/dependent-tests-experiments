org.jfree.data.time.TimeSeries.delete : if i1 >= i0 >>>>>>>> org.jfree.data.time.TimeSeries.delete : $r1 = new java.lang.IllegalArgumentException
org.jfree.data.time.TimeSeries.delete : if i1 >= i0 >>>>>>>> org.jfree.data.time.TimeSeries.delete : i2 = 0
org.jfree.data.time.TimeSeries.delete : i2 = 0 >>>>>>>> org.jfree.data.time.TimeSeries.delete : $i3 = i1 - i0
org.jfree.data.time.TimeSeries.delete : $i3 = i1 - i0 >>>>>>>> org.jfree.data.time.TimeSeries.delete : if i2 > $i3
org.jfree.data.time.TimeSeries.delete : if i2 > $i3 >>>>>>>> org.jfree.data.time.TimeSeries.delete : $r2 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.delete : if i2 > $i3 >>>>>>>> org.jfree.data.time.TimeSeries.delete : specialinvoke r0.<org.jfree.data.time.TimeSeries: void findBoundsByIteration()>()
org.jfree.data.time.TimeSeries.delete : specialinvoke r0.<org.jfree.data.time.TimeSeries: void findBoundsByIteration()>() >>>>>>>> org.jfree.data.time.TimeSeries.delete : $r4 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.delete : $r4 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.delete : $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>()
org.jfree.data.time.TimeSeries.delete : $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.jfree.data.time.TimeSeries.delete : if $z1 == 0
org.jfree.data.time.TimeSeries.delete : if $z1 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.delete : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = null
org.jfree.data.time.TimeSeries.delete : if $z1 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.delete : if z0 == 0
org.jfree.data.time.TimeSeries.delete : if z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.delete : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>()
org.jfree.data.time.TimeSeries.delete : if z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.delete : return
org.jfree.data.time.TimeSeries.delete : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.time.TimeSeries.delete : return
org.jfree.data.time.TimeSeries.delete : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = null >>>>>>>> org.jfree.data.time.TimeSeries.delete : if z0 == 0
org.jfree.data.time.TimeSeries.delete : $r2 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.delete : interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i0)
org.jfree.data.time.TimeSeries.delete : interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i0) >>>>>>>> org.jfree.data.time.TimeSeries.delete : i2 = i2 + 1
org.jfree.data.time.TimeSeries.delete : i2 = i2 + 1 >>>>>>>> org.jfree.data.time.TimeSeries.delete : goto [?= $i3 = i1 - i0]
org.jfree.data.time.TimeSeries.delete : goto [?= $i3 = i1 - i0] >>>>>>>> org.jfree.data.time.TimeSeries.delete : $i3 = i1 - i0
org.jfree.data.time.TimeSeries.delete : $r1 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.time.TimeSeries.delete : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires start <= end.")
org.jfree.data.time.TimeSeries.delete : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires start <= end.") >>>>>>>> org.jfree.data.time.TimeSeries.delete : throw $r1
