org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : if $z0 == 0
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: void loadInterpreterDependencies()>()
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: void loadInterpreterDependencies()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : return
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : r3 = (org.apache.zeppelin.dep.Dependency) $r4
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : r3 = (org.apache.zeppelin.dep.Dependency) $r4 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $r5 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.List dependencies>
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $r5 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.List dependencies> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $z1 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r3)
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $z1 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : if $z1 != 0
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : if $z1 != 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.List dependencies>
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : if $z1 != 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.List dependencies> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.appendDependencies : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
