org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r3 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : specialinvoke $r3.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : specialinvoke $r3.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("id", $r4)
org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("id", $r4) >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r6 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r6 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r7 = virtualinvoke $r6.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String toString()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r7 = virtualinvoke $r6.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("status", $r7)
org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("status", $r7) >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r9 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateStarted()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r9 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateStarted()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : if $r9 == null
org.apache.zeppelin.notebook.Note.populateParagraphInfo : if $r9 == null >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r19 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateStarted()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : if $r9 == null >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r10 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateFinished()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r10 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateFinished()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : if $r10 == null
org.apache.zeppelin.notebook.Note.populateParagraphInfo : if $r10 == null >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r16 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateFinished()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : if $r10 == null >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r11 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r11 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $z0 = virtualinvoke $r11.<org.apache.zeppelin.scheduler.Job$Status: boolean isRunning()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $z0 = virtualinvoke $r11.<org.apache.zeppelin.scheduler.Job$Status: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : if $z0 == 0
org.apache.zeppelin.notebook.Note.populateParagraphInfo : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $i0 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: int progress()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(100)
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(100) >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("progress", $r12)
org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("progress", $r12) >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : return $r3
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $i0 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: int progress()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("progress", $r14)
org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("progress", $r14) >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : goto [?= return $r3]
org.apache.zeppelin.notebook.Note.populateParagraphInfo : goto [?= return $r3] >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : return $r3
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r16 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateFinished()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r17 = virtualinvoke $r16.<java.util.Date: java.lang.String toString()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r17 = virtualinvoke $r16.<java.util.Date: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("finished", $r17)
org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("finished", $r17) >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r11 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r19 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateStarted()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r20 = virtualinvoke $r19.<java.util.Date: java.lang.String toString()>()
org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r20 = virtualinvoke $r19.<java.util.Date: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("started", $r20)
org.apache.zeppelin.notebook.Note.populateParagraphInfo : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("started", $r20) >>>>>>>> org.apache.zeppelin.notebook.Note.populateParagraphInfo : $r10 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateFinished()>()
