org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r8 = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : z0 = 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : z0 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r3 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : z0 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r6 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : z0 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : z0 = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r3 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r6 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r3 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r6 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r9 = interfaceinvoke r1.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction: java.lang.Object call(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r8)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r8, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r8, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : goto [?= return null]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : goto [?= return null] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r9 = interfaceinvoke r1.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction: java.lang.Object call(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r3 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r9 = interfaceinvoke r1.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction: java.lang.Object call(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r6 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r9 = interfaceinvoke r1.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction: java.lang.Object call(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : r9 = interfaceinvoke r1.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction: java.lang.Object call(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client)>(r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r8, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : return r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r8, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : return r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r8, z0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : if r8 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : throw $r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: void releaseClient(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client,boolean)>(r8, z0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : throw $r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r7 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r7 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : throw $r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : throw $r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : z0 = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r4 = new java.lang.RuntimeException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : z0 = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r4 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r4 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : throw $r4
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : throw $r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction : $r5 := @caughtexception
