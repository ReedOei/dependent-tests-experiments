org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r14 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r3 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r12 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r13 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : specialinvoke $r13.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>($r12)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : specialinvoke $r13.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : throw $r13
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r3 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r2 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("close is called when RemoterInterpreter is not opened for ")
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("close is called when RemoterInterpreter is not opened for ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String className>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String className> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>($r7)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r14 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= $r8 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$3]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r14 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r12 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= $r8 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$3] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r8 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$3
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r8 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : specialinvoke $r8.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : specialinvoke $r8.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : virtualinvoke r14.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r8)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : virtualinvoke r14.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> = 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r10 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r10 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke $r9.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r10, $r11)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke $r9.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r10, $r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : return
