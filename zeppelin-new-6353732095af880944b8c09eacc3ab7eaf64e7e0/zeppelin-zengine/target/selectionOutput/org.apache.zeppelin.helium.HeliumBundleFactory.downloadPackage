org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z0 == 0
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>(r3)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(r3)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(r3) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r9 = new org.apache.zeppelin.helium.HeliumBundleFactory$1
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r9 = new org.apache.zeppelin.helium.HeliumBundleFactory$1 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r9.<org.apache.zeppelin.helium.HeliumBundleFactory$1: void <init>(org.apache.zeppelin.helium.HeliumBundleFactory)>(r0)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r9.<org.apache.zeppelin.helium.HeliumBundleFactory$1: void <init>(org.apache.zeppelin.helium.HeliumBundleFactory)>(r0) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z1 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: boolean isLocalPackage(org.apache.zeppelin.helium.HeliumPackage)>(r1)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z1 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: boolean isLocalPackage(org.apache.zeppelin.helium.HeliumPackage)>(r1) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z1 == 0
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z1 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r68 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z1 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r71 = r2[1]
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r71 = r2[1] >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r10 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r10 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r12 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory>
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r12 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r11 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r13 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r13 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tgz")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tgz") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, $r18)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, $r18) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r10.<java.io.File: boolean delete()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r10.<java.io.File: boolean delete()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r19 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pack ")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pack ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r21 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getArtifact()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r21 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getArtifact()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void npmCommand(com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory,java.lang.String)>(r5, $r23)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void npmCommand(com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory,java.lang.String)>(r5, $r23) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r24 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r24 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r25 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumBundleDirectory>
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r25 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumBundleDirectory> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>($r25, "package")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>($r25, "package") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r24)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r24) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r26 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumBundleDirectory>
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r26 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumBundleDirectory> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r74 = staticinvoke <org.apache.zeppelin.helium.HeliumBundleFactory: java.util.List unTgz(java.io.File,java.io.File)>($r10, $r26)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r74 = staticinvoke <org.apache.zeppelin.helium.HeliumBundleFactory: java.util.List unTgz(java.io.File,java.io.File)>($r10, $r26) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r75 = interfaceinvoke r74.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r75 = interfaceinvoke r74.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z3 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z3 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z3 == 0
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z3 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r62 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z3 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r10.<java.io.File: boolean delete()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r10.<java.io.File: boolean delete()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>($r24, r3)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>($r24, r3) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r24)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r24) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r27 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r27 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "package.json")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "package.json") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r28 = new com.google.gson.stream.JsonReader
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r28 = new com.google.gson.stream.JsonReader >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r29 = new java.io.FileReader
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r29 = new java.io.FileReader >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r29.<java.io.FileReader: void <init>(java.io.File)>($r27)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r29.<java.io.FileReader: void <init>(java.io.File)>($r27) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r28.<com.google.gson.stream.JsonReader: void <init>(java.io.Reader)>($r29)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r28.<com.google.gson.stream.JsonReader: void <init>(java.io.Reader)>($r29) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r31 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: com.google.gson.Gson gson>
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r31 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r30 = new org.apache.zeppelin.helium.HeliumBundleFactory$2
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r30 = new org.apache.zeppelin.helium.HeliumBundleFactory$2 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r30.<org.apache.zeppelin.helium.HeliumBundleFactory$2: void <init>(org.apache.zeppelin.helium.HeliumBundleFactory)>(r0)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r30.<org.apache.zeppelin.helium.HeliumBundleFactory$2: void <init>(org.apache.zeppelin.helium.HeliumBundleFactory)>(r0) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r32 = virtualinvoke $r30.<org.apache.zeppelin.helium.HeliumBundleFactory$2: java.lang.reflect.Type getType()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r32 = virtualinvoke $r30.<org.apache.zeppelin.helium.HeliumBundleFactory$2: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r33 = virtualinvoke $r31.<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)>($r28, $r32)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r33 = virtualinvoke $r31.<com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)>($r28, $r32) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r79 = (java.util.Map) $r33
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r79 = (java.util.Map) $r33 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r34 = interfaceinvoke r79.<java.util.Map: java.lang.Object get(java.lang.Object)>("dependencies")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r34 = interfaceinvoke r79.<java.util.Map: java.lang.Object get(java.lang.Object)>("dependencies") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r80 = (java.util.Map) $r34
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r80 = (java.util.Map) $r34 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r35 = interfaceinvoke r79.<java.util.Map: java.lang.Object get(java.lang.Object)>("main")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r35 = interfaceinvoke r79.<java.util.Map: java.lang.Object get(java.lang.Object)>("main") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r81 = (java.lang.String) $r35
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r81 = (java.lang.String) $r35 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r36 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r36 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : i2 = 0
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : i2 = 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r37 = interfaceinvoke r80.<java.util.Map: java.util.Set entrySet()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r37 = interfaceinvoke r80.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r7 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r7 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z10 == 0
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z10 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r43 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z10 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r38 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r38 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r38.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "package.json")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r38.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "package.json") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>($r38)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>($r38) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r39 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r39 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r87 = virtualinvoke r70.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("PACKAGE_NAME", $r39)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r87 = virtualinvoke r70.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("PACKAGE_NAME", $r39) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r88 = virtualinvoke r87.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("MAIN_FILE", r81)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r88 = virtualinvoke r87.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("MAIN_FILE", r81) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r89 = virtualinvoke r88.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("DEPENDENCIES", $r40)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r89 = virtualinvoke r88.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("DEPENDENCIES", $r40) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r41 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r41 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r41.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "package.json")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r41.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "package.json") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>($r41, r89)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>($r41, r89) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r42 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r42 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r42.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "webpack.config.js")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r42.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "webpack.config.js") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>($r42, r4)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>($r42, r4) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : return r81
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r43 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r8 = (java.util.Map$Entry) $r43
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r8 = (java.util.Map$Entry) $r43 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r44 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    \"")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r44 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    \"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r45 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r45 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r46 = (java.lang.String) $r45
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r46 = (java.lang.String) $r45 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r49 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r49 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r50 = (java.lang.String) $r49
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r50 = (java.lang.String) $r49 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z6 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>("zeppelin-vis")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z6 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>("zeppelin-vis") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z6 != 0
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z6 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r53 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z6 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r83 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"file:../../local_modules/")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r83 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"file:../../local_modules/") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r84 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r84 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r85 = (java.lang.String) $r84
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r85 = (java.lang.String) $r84 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r86 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r86 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : goto [?= $i0 = interfaceinvoke r80.<java.util.Map: int size()>()]
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : goto [?= $i0 = interfaceinvoke r80.<java.util.Map: int size()>()] >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $i0 = interfaceinvoke r80.<java.util.Map: int size()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $i0 = interfaceinvoke r80.<java.util.Map: int size()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $i1 = $i0 - 1
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $i1 = $i0 - 1 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if i2 >= $i1
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if i2 >= $i1 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\n")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if i2 >= $i1 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : i2 = i2 + 1
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : i2 = i2 + 1 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : i2 = i2 + 1
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r53 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r54 = (java.lang.String) $r53
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r54 = (java.lang.String) $r53 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z7 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>("zeppelin-tabledata")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z7 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>("zeppelin-tabledata") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z7 != 0
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z7 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r55 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z7 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r83 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"file:../../local_modules/")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r55 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r56 = (java.lang.String) $r55
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r56 = (java.lang.String) $r55 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z8 = virtualinvoke $r56.<java.lang.String: boolean equals(java.lang.Object)>("zeppelin-spell")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z8 = virtualinvoke $r56.<java.lang.String: boolean equals(java.lang.Object)>("zeppelin-spell") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z8 == 0
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z8 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r83 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"file:../../local_modules/")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : if $z8 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r57 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r57 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r58 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r58 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r59 = (java.lang.String) $r58
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r59 = (java.lang.String) $r58 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $i0 = interfaceinvoke r80.<java.util.Map: int size()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r62 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r76 = (java.lang.String) $r62
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : r76 = (java.lang.String) $r62 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r64 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: org.slf4j.Logger logger>
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r64 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r63 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r63 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r63.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r63.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracted ")
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracted ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r76)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r76) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : interfaceinvoke $r64.<org.slf4j.Logger: void debug(java.lang.String)>($r67)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : interfaceinvoke $r64.<org.slf4j.Logger: void debug(java.lang.String)>($r67) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : goto [?= $z3 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : goto [?= $z3 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $z3 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r68 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r69 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getArtifact()>()
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r69 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getArtifact()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r68.<java.io.File: void <init>(java.lang.String)>($r69)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : specialinvoke $r68.<java.io.File: void <init>(java.lang.String)>($r69) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>($r68, r3, $r9)
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>($r68, r3, $r9) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : goto [?= $r27 = new java.io.File]
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : goto [?= $r27 = new java.io.File] >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : $r27 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>(r3) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.downloadPackage : staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(r3)
