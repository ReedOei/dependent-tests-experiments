org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r9 = "anonymous"
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z1 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : return ""
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r5 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r5 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, $r5)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, $r5) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : return $r8
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r9 = "anonymous" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z2 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r10 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r10 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r11 = interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r11 = interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = (java.lang.String) $r11
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = (java.lang.String) $r11 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z3 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r12 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : return r18
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r12 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r2 = virtualinvoke $r12.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.lang.String getSession(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r2 = virtualinvoke $r12.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.lang.String getSession(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String getDefaultZeppelinInstanceToken(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r2 = virtualinvoke $r12.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.lang.String getSession(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r16 := @caughtexception
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r17 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot get user token", $r16)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot get user token", $r16) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = ""
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = "" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : return r18
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String getDefaultZeppelinInstanceToken(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String getDefaultZeppelinInstanceToken(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r16 := @caughtexception
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z4 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r16 := @caughtexception
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z4 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r15 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z4 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r13 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r13 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : interfaceinvoke $r13.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, r18)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r13 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r16 := @caughtexception
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : interfaceinvoke $r13.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, r18) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : goto [?= return r18]
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : interfaceinvoke $r13.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, r18) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r16 := @caughtexception
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : goto [?= return r18] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : return r18
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r15 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r15)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r15 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r16 := @caughtexception
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z5 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r16 := @caughtexception
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z5 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z5 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : goto [?= return r18]
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : goto [?= (branch)]
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : goto [?= return r18]
