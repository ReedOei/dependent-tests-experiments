org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r9 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r8 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saving note:")
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saving note:") >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r11 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r11 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r13)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r13) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r3 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String toJson()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r3 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String toJson()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r4 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileObject getRootDir()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r4 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileObject getRootDir()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r14 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r14 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r15 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r15 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r5 = interfaceinvoke r4.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>($r14, $r15)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r5 = interfaceinvoke r4.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>($r14, $r15) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z0 = interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: boolean exists()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z0 = interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: boolean exists()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z0 != 0
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: void createFolder()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: boolean isDirectory(org.apache.commons.vfs2.FileObject)>(r5)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: boolean isDirectory(org.apache.commons.vfs2.FileObject)>(r5) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z1 != 0
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r24 = new java.io.IOException
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r16 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r16 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r6 = interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>(".note.json", $r16)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r6 = interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>(".note.json", $r16) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r17 = interfaceinvoke r6.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileContent getContent()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r17 = interfaceinvoke r6.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileContent getContent()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r7 = interfaceinvoke $r17.<org.apache.commons.vfs2.FileContent: java.io.OutputStream getOutputStream(boolean)>(0)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r7 = interfaceinvoke $r17.<org.apache.commons.vfs2.FileContent: java.io.OutputStream getOutputStream(boolean)>(0) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r19 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r19 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r18 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ENCODING>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r18 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ENCODING> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r20 = virtualinvoke $r19.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r18)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r20 = virtualinvoke $r19.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r18) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r21 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.lang.String)>($r20)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r21 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.lang.String)>($r20) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r7.<java.io.OutputStream: void write(byte[])>($r21)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r7.<java.io.OutputStream: void write(byte[])>($r21) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r7.<java.io.OutputStream: void close()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r7.<java.io.OutputStream: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r22 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r22 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r23 = interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>("note.json", $r22)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r23 = interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>("note.json", $r22) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke r6.<org.apache.commons.vfs2.FileObject: void moveTo(org.apache.commons.vfs2.FileObject)>($r23)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke r6.<org.apache.commons.vfs2.FileObject: void moveTo(org.apache.commons.vfs2.FileObject)>($r23) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : return
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r24 = new java.io.IOException >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r25 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r25 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r26 = interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileName getName()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r26 = interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileName getName()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r27 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r27 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a directory")
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a directory") >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r30)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r30) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : throw $r24
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: void createFolder()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: boolean isDirectory(org.apache.commons.vfs2.FileObject)>(r5)
