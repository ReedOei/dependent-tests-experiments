org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.FolderView: boolean hasFolder(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : if $z0 != 0
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : return
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.FolderView: org.apache.zeppelin.notebook.Folder getFolder(java.lang.String)>(r1)
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.FolderView: org.apache.zeppelin.notebook.Folder getFolder(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : $i0 = virtualinvoke r2.<org.apache.zeppelin.notebook.Folder: int countNotes()>()
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : $i0 = virtualinvoke r2.<org.apache.zeppelin.notebook.Folder: int countNotes()>() >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : if $i0 != 0
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : if $i0 != 0 >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : $z1 = virtualinvoke r2.<org.apache.zeppelin.notebook.Folder: boolean hasChild()>()
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : if $i0 != 0 >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : return
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : $z1 = virtualinvoke r2.<org.apache.zeppelin.notebook.Folder: boolean hasChild()>() >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : if $z1 != 0
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : $r3 = <org.apache.zeppelin.notebook.FolderView: org.slf4j.Logger logger>
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : return
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : $r3 = <org.apache.zeppelin.notebook.FolderView: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : $r4 = virtualinvoke r2.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : $r4 = virtualinvoke r2.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Folder {} is empty", $r4)
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Folder {} is empty", $r4) >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : specialinvoke r0.<org.apache.zeppelin.notebook.FolderView: void removeFolder(java.lang.String)>(r1)
org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : specialinvoke r0.<org.apache.zeppelin.notebook.FolderView: void removeFolder(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.FolderView.removeFolderIfEmpty : return
