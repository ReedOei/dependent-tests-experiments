org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String callbackPortRange> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r46 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: org.apache.thrift.transport.TServerSocket createTServerSocket(java.lang.String)>($r6)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String callbackPortRange> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r43 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r43.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r42)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r43.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r42) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r43
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r46 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: org.apache.thrift.transport.TServerSocket createTServerSocket(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r7 = virtualinvoke r46.<org.apache.thrift.transport.TServerSocket: java.net.ServerSocket getServerSocket()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r46 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: org.apache.thrift.transport.TServerSocket createTServerSocket(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r7 = virtualinvoke r46.<org.apache.thrift.transport.TServerSocket: java.net.ServerSocket getServerSocket()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : i0 = virtualinvoke $r7.<java.net.ServerSocket: int getLocalPort()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r7 = virtualinvoke r46.<org.apache.thrift.transport.TServerSocket: java.net.ServerSocket getServerSocket()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : i0 = virtualinvoke $r7.<java.net.ServerSocket: int getLocalPort()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r2 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: java.lang.String findAvailableHostAddress()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : i0 = virtualinvoke $r7.<java.net.ServerSocket: int getLocalPort()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r2 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: java.lang.String findAvailableHostAddress()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r8 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r2 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: java.lang.String findAvailableHostAddress()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r8 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r8 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r8 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Thrift server for callback will start. Port: {}", $r9)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Thrift server for callback will start. Port: {}", $r9) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r10 = new org.apache.thrift.server.TThreadPoolServer
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r10 = new org.apache.thrift.server.TThreadPoolServer >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r11 = new org.apache.thrift.server.TThreadPoolServer$Args
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r11 = new org.apache.thrift.server.TThreadPoolServer$Args >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r11.<org.apache.thrift.server.TThreadPoolServer$Args: void <init>(org.apache.thrift.transport.TServerTransport)>(r46)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r11 = new org.apache.thrift.server.TThreadPoolServer$Args >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r45 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r45.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("", $r44)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r45.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("", $r44) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r23 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r23 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r49 = staticinvoke <org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine parse(java.lang.String)>($r23)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r49 = staticinvoke <org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine parse(java.lang.String)>($r23) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-d", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-d", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterDir>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterDir> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r24, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r24, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-c", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-c", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r2, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r2, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-p", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-p", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r25, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r25, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-r", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-r", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r26 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterPortRange>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r26 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterPortRange> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r26, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r26, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean isUserImpersonated>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean isUserImpersonated> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String localRepoDir>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String localRepoDir> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r50, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r50, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-g", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-g", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r51 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterSettingName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r51 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterSettingName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r51, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r51, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 = new org.apache.commons.exec.DefaultExecutor
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 = new org.apache.commons.exec.DefaultExecutor >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r52.<org.apache.commons.exec.DefaultExecutor: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r52.<org.apache.commons.exec.DefaultExecutor: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> = $r52
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> = $r52 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r53 = new java.io.ByteArrayOutputStream
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r53 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r53.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r53.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r55 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r55 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r54.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void <init>(org.slf4j.Logger)>($r55)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r54.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void <init>(org.slf4j.Logger)>($r55) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r54.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>($r53)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r54.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>($r53) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r56 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r56 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 = new org.apache.commons.exec.PumpStreamHandler
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 = new org.apache.commons.exec.PumpStreamHandler >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r57.<org.apache.commons.exec.PumpStreamHandler: void <init>(java.io.OutputStream)>($r54)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r57.<org.apache.commons.exec.PumpStreamHandler: void <init>(java.io.OutputStream)>($r54) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r56.<org.apache.commons.exec.DefaultExecutor: void setStreamHandler(org.apache.commons.exec.ExecuteStreamHandler)>($r57)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r56.<org.apache.commons.exec.DefaultExecutor: void setStreamHandler(org.apache.commons.exec.ExecuteStreamHandler)>($r57) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r58 = new org.apache.commons.exec.ExecuteWatchdog
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r58 = new org.apache.commons.exec.ExecuteWatchdog >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r58.<org.apache.commons.exec.ExecuteWatchdog: void <init>(long)>(-1L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r58.<org.apache.commons.exec.ExecuteWatchdog: void <init>(long)>(-1L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> = $r58
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> = $r58 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r59 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r59 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r60 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r60 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r59.<org.apache.commons.exec.DefaultExecutor: void setWatchdog(org.apache.commons.exec.ExecuteWatchdog)>($r60)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r59.<org.apache.commons.exec.DefaultExecutor: void setWatchdog(org.apache.commons.exec.ExecuteWatchdog)>($r60) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r61 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r59.<org.apache.commons.exec.DefaultExecutor: void setWatchdog(org.apache.commons.exec.ExecuteWatchdog)>($r60) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r37.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r37.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 = new java.lang.RuntimeException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r36)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r36) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r38
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r61 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r61 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke r61.<java.util.Map: void putAll(java.util.Map)>($r62)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke r61.<java.util.Map: void putAll(java.util.Map)>($r62) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r63 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke r61.<java.util.Map: void putAll(java.util.Map)>($r62) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r63 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r63.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Run interpreter process {}", r49)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r63 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r63.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Run interpreter process {}", r49) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r64 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r63.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Run interpreter process {}", r49) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r64 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r64.<org.apache.commons.exec.DefaultExecutor: void execute(org.apache.commons.exec.CommandLine,java.util.Map,org.apache.commons.exec.ExecuteResultHandler)>(r49, r61, r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r64 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r64.<org.apache.commons.exec.DefaultExecutor: void execute(org.apache.commons.exec.CommandLine,java.util.Map,org.apache.commons.exec.ExecuteResultHandler)>(r49, r61, r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r27 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r64.<org.apache.commons.exec.DefaultExecutor: void execute(org.apache.commons.exec.CommandLine,java.util.Map,org.apache.commons.exec.ExecuteResultHandler)>(r49, r61, r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r27 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r27 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r27 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : entermonitor $r27
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : entermonitor $r27 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r28 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : entermonitor $r27 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r27 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r39
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r27 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r39 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r41 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r41.<org.slf4j.Logger: void error(java.lang.String)>("Remote interpreter is not accessible")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r41.<org.slf4j.Logger: void error(java.lang.String)>("Remote interpreter is not accessible") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r54.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r54.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r28 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z2 = virtualinvoke $r28.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r28 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z2 = virtualinvoke $r28.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z2 = virtualinvoke $r28.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r34 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r27
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r27 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r27 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z3 = virtualinvoke $r29.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r29 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z3 = virtualinvoke $r29.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z3 = virtualinvoke $r29.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r30 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= virtualinvoke $r54.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= virtualinvoke $r54.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r54.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r30 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r30.<org.apache.thrift.server.TServer: void stop()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r30 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r30.<org.apache.thrift.server.TServer: void stop()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r31 = new java.lang.RuntimeException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r30.<org.apache.thrift.server.TServer: void stop()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r31 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r32 = new java.lang.String
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r32 = new java.lang.String >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r33 = virtualinvoke $r53.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r32 = new java.lang.String >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r33 = virtualinvoke $r53.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r32.<java.lang.String: void <init>(byte[])>($r33)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r33 = virtualinvoke $r53.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r32.<java.lang.String: void <init>(byte[])>($r33) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>($r32)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r32.<java.lang.String: void <init>(byte[])>($r33) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>($r32) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r31
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>($r32) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r34 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int getConnectTimeout()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r34 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int getConnectTimeout()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i2 = $i1 * 2
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int getConnectTimeout()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i2 = $i1 * 2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l3 = (long) $i2
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i2 = $i1 * 2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l3 = (long) $i2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r34.<java.lang.Object: void wait(long)>($l3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l3 = (long) $i2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r34.<java.lang.Object: void wait(long)>($l3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r27
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r34.<java.lang.Object: void wait(long)>($l3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z4 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z4 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-u", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z4 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-u", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r1, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r1, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r49.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r11.<org.apache.thrift.server.TThreadPoolServer$Args: void <init>(org.apache.thrift.transport.TServerTransport)>(r46) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r12 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r11.<org.apache.thrift.server.TThreadPoolServer$Args: void <init>(org.apache.thrift.transport.TServerTransport)>(r46) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r12 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r13 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r13 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r13.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r13 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r13.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r12.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Iface)>($r13)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r13.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r12.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Iface)>($r13) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r14 = virtualinvoke $r11.<org.apache.thrift.server.TThreadPoolServer$Args: org.apache.thrift.server.TServer$AbstractServerArgs processor(org.apache.thrift.TProcessor)>($r12)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r12.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Iface)>($r13) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r14 = virtualinvoke $r11.<org.apache.thrift.server.TThreadPoolServer$Args: org.apache.thrift.server.TServer$AbstractServerArgs processor(org.apache.thrift.TProcessor)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r15 = (org.apache.thrift.server.TThreadPoolServer$Args) $r14
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r14 = virtualinvoke $r11.<org.apache.thrift.server.TThreadPoolServer$Args: org.apache.thrift.server.TServer$AbstractServerArgs processor(org.apache.thrift.TProcessor)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r15 = (org.apache.thrift.server.TThreadPoolServer$Args) $r14 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r10.<org.apache.thrift.server.TThreadPoolServer: void <init>(org.apache.thrift.server.TThreadPoolServer$Args)>($r15)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r15 = (org.apache.thrift.server.TThreadPoolServer$Args) $r14 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r10.<org.apache.thrift.server.TThreadPoolServer: void <init>(org.apache.thrift.server.TThreadPoolServer$Args)>($r15) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> = $r10
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r10.<org.apache.thrift.server.TThreadPoolServer: void <init>(org.apache.thrift.server.TThreadPoolServer$Args)>($r15) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> = $r10 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r16 = new java.lang.Thread
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r16 = new java.lang.Thread >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r17 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r17 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r17.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r17 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r17.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r16.<java.lang.Thread: void <init>(java.lang.Runnable)>($r17)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r17.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r16.<java.lang.Thread: void <init>(java.lang.Runnable)>($r17) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r16.<java.lang.Thread: void start()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r16.<java.lang.Thread: void <init>(java.lang.Runnable)>($r17) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r16.<java.lang.Thread: void start()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r18 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r16.<java.lang.Thread: void start()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r18 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r19 = new java.lang.Thread
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r18 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r19 = new java.lang.Thread >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r20.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r20.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r20.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r18.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r19)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r18.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r19) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r18.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r19) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke $r21.<org.apache.thrift.server.TServer: boolean isServing()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke $r21.<org.apache.thrift.server.TServer: boolean isServing()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z0 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke $r21.<org.apache.thrift.server.TServer: boolean isServing()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r35 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r22 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r22 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is serving now")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r22 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is serving now") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r23 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is serving now") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r23 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r23 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r35 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is not serving")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r35 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is not serving") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is not serving") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r21 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r21 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>
