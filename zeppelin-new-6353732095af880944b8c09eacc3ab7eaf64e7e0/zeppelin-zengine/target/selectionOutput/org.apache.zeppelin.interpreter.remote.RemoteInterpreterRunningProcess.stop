org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r2 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ZEPPELIN_FORCE_STOP") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : if $r2 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : if $r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $z0 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess: boolean isRunning()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : if $r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $z0 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Kill interpreter process")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Kill interpreter process") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r4 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess$1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r4 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess$1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : specialinvoke $r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r4 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess$1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r6 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("ignore the exception when shutting down interpreter process.", $r6)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("ignore the exception when shutting down interpreter process.", $r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : specialinvoke $r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : specialinvoke $r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r6 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : $r6 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterRunningProcess.stop : return
