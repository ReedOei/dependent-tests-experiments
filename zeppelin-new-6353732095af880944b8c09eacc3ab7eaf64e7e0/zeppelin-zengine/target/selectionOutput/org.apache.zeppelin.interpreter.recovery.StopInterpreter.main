org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : r1 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r5 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getRecoveryStorageClass()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r5 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getRecoveryStorageClass()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r6 = newarray (java.lang.Class)[2]
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r6 = newarray (java.lang.Class)[2] >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r6[0] = class "Lorg/apache/zeppelin/conf/ZeppelinConfiguration;"
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r6[0] = class "Lorg/apache/zeppelin/conf/ZeppelinConfiguration;" >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r6[1] = class "Lorg/apache/zeppelin/interpreter/InterpreterSettingManager;"
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r6[1] = class "Lorg/apache/zeppelin/interpreter/InterpreterSettingManager;" >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r7 = newarray (java.lang.Object)[2]
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r7 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r7[0] = r1
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r7[0] = r1 >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r7[1] = null
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r7[1] = null >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r8 = staticinvoke <org.apache.zeppelin.util.ReflectionUtils: java.lang.Object createClazzInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>($r5, $r6, $r7)
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r8 = staticinvoke <org.apache.zeppelin.util.ReflectionUtils: java.lang.Object createClazzInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>($r5, $r6, $r7) >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : r26 = (org.apache.zeppelin.interpreter.recovery.RecoveryStorage) $r8
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : r26 = (org.apache.zeppelin.interpreter.recovery.RecoveryStorage) $r8 >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r10 = <org.apache.zeppelin.interpreter.recovery.StopInterpreter: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r10 = <org.apache.zeppelin.interpreter.recovery.StopInterpreter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r9 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using RecoveryStorage: ")
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using RecoveryStorage: ") >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r12 = virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r12 = virtualinvoke r26.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r15)
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : r2 = virtualinvoke r26.<org.apache.zeppelin.interpreter.recovery.RecoveryStorage: java.util.Map restore()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : r2 = virtualinvoke r26.<org.apache.zeppelin.interpreter.recovery.RecoveryStorage: java.util.Map restore()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : if r2 == null
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r16 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : return
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r16 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : r3 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : r3 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : if $z0 == 0
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : return
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : r4 = (org.apache.zeppelin.interpreter.launcher.InterpreterClient) $r17
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : r4 = (org.apache.zeppelin.interpreter.launcher.InterpreterClient) $r17 >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r19 = <org.apache.zeppelin.interpreter.recovery.StopInterpreter: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r19 = <org.apache.zeppelin.interpreter.recovery.StopInterpreter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r18 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop Interpreter Process: ")
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stop Interpreter Process: ") >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r21 = interfaceinvoke r4.<org.apache.zeppelin.interpreter.launcher.InterpreterClient: java.lang.String getHost()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r21 = interfaceinvoke r4.<org.apache.zeppelin.interpreter.launcher.InterpreterClient: java.lang.String getHost()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $i0 = interfaceinvoke r4.<org.apache.zeppelin.interpreter.launcher.InterpreterClient: int getPort()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $i0 = interfaceinvoke r4.<org.apache.zeppelin.interpreter.launcher.InterpreterClient: int getPort()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r25)
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r25) >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : interfaceinvoke r4.<org.apache.zeppelin.interpreter.launcher.InterpreterClient: void stop()>()
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : interfaceinvoke r4.<org.apache.zeppelin.interpreter.launcher.InterpreterClient: void stop()>() >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.recovery.StopInterpreter.main : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
