org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : if $z0 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r10 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : r19 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r18 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r17)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r17) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : throw $r18
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : r19 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : goto [?= $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : r19 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : goto [?= $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r5 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : interfaceinvoke $r3.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r4, $r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : interfaceinvoke $r3.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r4, $r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r6 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$9
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r6 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$9 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : specialinvoke $r6.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$9: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter,java.lang.String)>(r0, r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : specialinvoke $r6.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$9: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter,java.lang.String)>(r0, r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r7 = virtualinvoke r19.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r6)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r7 = virtualinvoke r19.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r8 = (java.lang.String) $r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : return $r8
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r10 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r9 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getStatus is called when RemoteInterpreter is not opened for ")
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getStatus is called when RemoteInterpreter is not opened for ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String className>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String className> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r14)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r15 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status UNKNOWN>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r15 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status UNKNOWN> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r16 = virtualinvoke $r15.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String name()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : $r16 = virtualinvoke $r15.<org.apache.zeppelin.scheduler.Job$Status: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getStatus : return $r16
