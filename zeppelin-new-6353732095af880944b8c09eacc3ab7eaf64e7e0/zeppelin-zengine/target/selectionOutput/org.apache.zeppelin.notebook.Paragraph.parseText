org.apache.zeppelin.notebook.Paragraph.parseText : $r3 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : if $r3 == null
org.apache.zeppelin.notebook.Paragraph.parseText : if $r3 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $r5 = <org.apache.zeppelin.notebook.Paragraph: java.util.regex.Pattern REPL_PATTERN>
org.apache.zeppelin.notebook.Paragraph.parseText : if $r3 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : return
org.apache.zeppelin.notebook.Paragraph.parseText : $r5 = <org.apache.zeppelin.notebook.Paragraph: java.util.regex.Pattern REPL_PATTERN> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $r4 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text>
org.apache.zeppelin.notebook.Paragraph.parseText : $r4 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : r1 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4)
org.apache.zeppelin.notebook.Paragraph.parseText : r1 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean matches()>()
org.apache.zeppelin.notebook.Paragraph.parseText : $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : if $z0 == 0
org.apache.zeppelin.notebook.Paragraph.parseText : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : r2 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.zeppelin.notebook.Paragraph.parseText : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String intpText> = ""
org.apache.zeppelin.notebook.Paragraph.parseText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String intpText> = "" >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $r6 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text>
org.apache.zeppelin.notebook.Paragraph.parseText : $r6 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.Paragraph.parseText : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String scriptText> = $r7
org.apache.zeppelin.notebook.Paragraph.parseText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String scriptText> = $r7 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : return
org.apache.zeppelin.notebook.Paragraph.parseText : r2 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $r8 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.zeppelin.notebook.Paragraph.parseText : $r8 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String intpText> = $r8
org.apache.zeppelin.notebook.Paragraph.parseText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String intpText> = $r8 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $r9 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text>
org.apache.zeppelin.notebook.Paragraph.parseText : $r9 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $i0 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.zeppelin.notebook.Paragraph.parseText : $i0 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $r10 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String intpText>
org.apache.zeppelin.notebook.Paragraph.parseText : $r10 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String intpText> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $i1 = virtualinvoke $r10.<java.lang.String: int length()>()
org.apache.zeppelin.notebook.Paragraph.parseText : $i1 = virtualinvoke $r10.<java.lang.String: int length()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $i2 = $i0 + $i1
org.apache.zeppelin.notebook.Paragraph.parseText : $i2 = $i0 + $i1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $i3 = $i2 + 1
org.apache.zeppelin.notebook.Paragraph.parseText : $i3 = $i2 + 1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.zeppelin.notebook.Paragraph.parseText : $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.Paragraph.parseText : $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String scriptText> = $r12
org.apache.zeppelin.notebook.Paragraph.parseText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String scriptText> = $r12 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : goto [?= return]
org.apache.zeppelin.notebook.Paragraph.parseText : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.Paragraph.parseText : return
