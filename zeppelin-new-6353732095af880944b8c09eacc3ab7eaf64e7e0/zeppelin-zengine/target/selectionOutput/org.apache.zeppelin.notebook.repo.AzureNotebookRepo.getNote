org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r4 = r0.<org.apache.zeppelin.notebook.repo.AzureNotebookRepo: com.microsoft.azure.storage.file.CloudFileDirectory rootDir> >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r19 = virtualinvoke $r4.<com.microsoft.azure.storage.file.CloudFileDirectory: com.microsoft.azure.storage.file.CloudFileDirectory getDirectoryReference(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r4 = r0.<org.apache.zeppelin.notebook.repo.AzureNotebookRepo: com.microsoft.azure.storage.file.CloudFileDirectory rootDir> >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r15 := @caughtexception
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r16 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r16[0] = r1
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r16[0] = r1 >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Error reading notebook %s from Azure storage", $r16)
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Error reading notebook %s from Azure storage", $r16) >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r17 = <org.apache.zeppelin.notebook.repo.AzureNotebookRepo: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r17 = <org.apache.zeppelin.notebook.repo.AzureNotebookRepo: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r23, $r15)
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r23, $r15) >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r18 = new java.io.IOException
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r18 = new java.io.IOException >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>(r23, $r15)
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>(r23, $r15) >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : throw $r18
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r19 = virtualinvoke $r4.<com.microsoft.azure.storage.file.CloudFileDirectory: com.microsoft.azure.storage.file.CloudFileDirectory getDirectoryReference(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r20 = virtualinvoke r19.<com.microsoft.azure.storage.file.CloudFileDirectory: com.microsoft.azure.storage.file.CloudFile getFileReference(java.lang.String)>("note.json")
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r19 = virtualinvoke $r4.<com.microsoft.azure.storage.file.CloudFileDirectory: com.microsoft.azure.storage.file.CloudFileDirectory getDirectoryReference(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r15 := @caughtexception
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r20 = virtualinvoke r19.<com.microsoft.azure.storage.file.CloudFileDirectory: com.microsoft.azure.storage.file.CloudFile getFileReference(java.lang.String)>("note.json") >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r21 = virtualinvoke r20.<com.microsoft.azure.storage.file.CloudFile: com.microsoft.azure.storage.file.FileInputStream openRead()>()
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r20 = virtualinvoke r19.<com.microsoft.azure.storage.file.CloudFileDirectory: com.microsoft.azure.storage.file.CloudFile getFileReference(java.lang.String)>("note.json") >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r15 := @caughtexception
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r21 = virtualinvoke r20.<com.microsoft.azure.storage.file.CloudFile: com.microsoft.azure.storage.file.FileInputStream openRead()>() >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : goto [?= $r6 = r0.<org.apache.zeppelin.notebook.repo.AzureNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf>]
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r21 = virtualinvoke r20.<com.microsoft.azure.storage.file.CloudFile: com.microsoft.azure.storage.file.FileInputStream openRead()>() >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r15 := @caughtexception
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : goto [?= $r6 = r0.<org.apache.zeppelin.notebook.repo.AzureNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf>] >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r6 = r0.<org.apache.zeppelin.notebook.repo.AzureNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r6 = r0.<org.apache.zeppelin.notebook.repo.AzureNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r5 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ENCODING>
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r5 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ENCODING> >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r7 = virtualinvoke $r6.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r5)
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r7 = virtualinvoke $r6.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r5) >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r24 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>(r21, $r7)
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r24 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>(r21, $r7) >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : virtualinvoke r21.<java.io.InputStream: void close()>()
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : virtualinvoke r21.<java.io.InputStream: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r25 = staticinvoke <org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Note fromJson(java.lang.String)>(r24)
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r25 = staticinvoke <org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Note fromJson(java.lang.String)>(r24) >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r8 = virtualinvoke r25.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>()
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r8 = virtualinvoke r25.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>() >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : if $z0 == 0
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : return r25
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r3 = (org.apache.zeppelin.notebook.Paragraph) $r9
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : r3 = (org.apache.zeppelin.notebook.Paragraph) $r9 >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r10 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r10 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r11 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status PENDING>
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r11 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status PENDING> >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : if $r10 == $r11
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : if $r10 == $r11 >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r13 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : if $r10 == $r11 >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r12 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ABORT>
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r12 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ABORT> >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r12)
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r12) >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r13 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r14 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status RUNNING>
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r14 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status RUNNING> >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : if $r13 != $r14
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : if $r13 != $r14 >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : $r12 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ABORT>
org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : if $r13 != $r14 >>>>>>>> org.apache.zeppelin.notebook.repo.AzureNotebookRepo.getNote : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
