org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r8 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r9 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bundles")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bundles") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r11 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r11 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[-_]", "")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[-_]", "") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $z0 = virtualinvoke r64.<java.lang.String: boolean endsWith(java.lang.String)>(".js")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $z0 = virtualinvoke r64.<java.lang.String: boolean endsWith(java.lang.String)>(".js") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : if $z0 == 0
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $i0 = virtualinvoke r64.<java.lang.String: int length()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("import ")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("import ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r16 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from \"../")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from \"../") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("heliumBundles.push({\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("heliumBundles.push({\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r23 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id: \"")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id: \"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r25 = r2[0]
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r25 = r2[0] >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r30 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name: \"")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name: \"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r32 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r32 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r37 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r37 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("icon: ")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("icon: ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r39 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: com.google.gson.Gson gson>
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r39 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r40 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getIcon()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r40 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getIcon()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r41 = virtualinvoke $r39.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r40)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r41 = virtualinvoke $r39.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r40) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r46 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r46 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type: \"")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type: \"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r48 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: org.apache.zeppelin.helium.HeliumType getType()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r48 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: org.apache.zeppelin.helium.HeliumType getType()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r48)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r48) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r53 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r53 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class: ")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class: ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r60 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r60 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r6 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File getHeliumPackageSourceDirectory(java.lang.String)>($r60)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r6 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File getHeliumPackageSourceDirectory(java.lang.String)>($r60) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(r6)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(r6) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r61 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r61 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r61.<java.io.File: void <init>(java.io.File,java.lang.String)>(r6, "load.js")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r61.<java.io.File: void <init>(java.io.File,java.lang.String)>(r6, "load.js") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r62 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r8)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r62 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r8) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>($r61, $r63)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>($r61, $r63) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : return
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $i0 = virtualinvoke r64.<java.lang.String: int length()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $i1 = $i0 - 3
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $i1 = $i0 - 3 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r64 = virtualinvoke r64.<java.lang.String: java.lang.String substring(int,int)>(0, $i1)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r64 = virtualinvoke r64.<java.lang.String: java.lang.String substring(int,int)>(0, $i1) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("import ")
