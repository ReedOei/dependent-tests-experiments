org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r2 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: org.apache.zeppelin.resource.ResourceId resourceId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.ManagedInterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.ManagedInterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r7 = virtualinvoke $r6.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.InterpreterSetting getInterpreterSetting()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r7 = virtualinvoke $r6.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.InterpreterSetting getInterpreterSetting()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r8 = virtualinvoke $r7.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r8 = virtualinvoke $r7.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r9 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getResourcePoolId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r9 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getResourcePoolId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r3 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroupById(java.lang.String)>($r9)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r3 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroupById(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r3 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r3 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r3 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r4 = virtualinvoke r3.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r4 = virtualinvoke r3.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r4 != null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r4 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r30 = virtualinvoke r3.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r4 != null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $z0 = virtualinvoke $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: boolean isRunning()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $z0 = virtualinvoke $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r11 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller$14
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r11 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller$14 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : specialinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller$14: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller,org.apache.zeppelin.resource.ResourceId,org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage)>(r0, r2, r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : specialinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller$14: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller,org.apache.zeppelin.resource.ResourceId,org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage)>(r0, r2, r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r13 = virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r11)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r13 = virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r32 = (java.nio.ByteBuffer) $r13
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r32 = (java.nio.ByteBuffer) $r13 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r14 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r32)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r32 = (java.nio.ByteBuffer) $r13 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r27 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r28 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r29 = virtualinvoke $r27.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r29 = virtualinvoke $r27.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r29, $r27)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r29, $r27) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r14 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r32) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return $r14
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r14 = staticinvoke <org.apache.zeppelin.resource.Resource: java.lang.Object deserializeObject(java.nio.ByteBuffer)>(r32) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r27 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r30 = virtualinvoke r3.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r30 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r30 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r16 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r30 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r15 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r15 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>("no resource pool")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>("no resource pool") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r16 = virtualinvoke r2.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r31 = interfaceinvoke r30.<org.apache.zeppelin.resource.ResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r16)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : r31 = interfaceinvoke r30.<org.apache.zeppelin.resource.ResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r31 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r31 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r19 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r31 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r18 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : if r31 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r24 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r25 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r26 = virtualinvoke $r24.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r26 = virtualinvoke $r24.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r26, $r24)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r26, $r24) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r18 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r17 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r17 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Can\'t invoke method {} on null object", $r17)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Can\'t invoke method {} on null object", $r17) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r19 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r20 = virtualinvoke r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Class[] getParamTypes()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r19 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String methodName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r24 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r20 = virtualinvoke r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Class[] getParamTypes()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r22 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Object[] params>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r20 = virtualinvoke r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Class[] getParamTypes()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r24 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r22 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Object[] params> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r21 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String returnResourceName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r22 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.Object[] params> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r24 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r21 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String returnResourceName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r23 = virtualinvoke r31.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.Resource invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.String)>($r19, $r20, $r22, $r21)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r21 = r1.<org.apache.zeppelin.interpreter.remote.InvokeResourceMethodEventMessage: java.lang.String returnResourceName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r24 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r23 = virtualinvoke r31.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.Resource invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.String)>($r19, $r20, $r22, $r21) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : return $r23
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r23 = virtualinvoke r31.<org.apache.zeppelin.resource.Resource: org.apache.zeppelin.resource.Resource invokeMethod(java.lang.String,java.lang.Class[],java.lang.Object[],java.lang.String)>($r19, $r20, $r22, $r21) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.invokeResourceMethod : $r24 := @caughtexception
