org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(".") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : if $i0 < 0
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : if $i0 < 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r24 = new java.io.IOException
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : if $i0 < 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map interpreterSettings>
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map interpreterSettings> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : r25 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : r25 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : if $z0 == 0
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r16 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r9 = new org.apache.zeppelin.interpreter.InterpreterSetting
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r9 = new org.apache.zeppelin.interpreter.InterpreterSetting >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map interpreterSettingTemplates>
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map interpreterSettingTemplates> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r12 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r11
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r12 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r11 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void <init>(org.apache.zeppelin.interpreter.InterpreterSetting)>($r12)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void <init>(org.apache.zeppelin.interpreter.InterpreterSetting)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void setName(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void setGroup(java.lang.String)>(r2)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void setGroup(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void appendDependencies(java.util.List)>(r3)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void appendDependencies(java.util.List)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void setInterpreterOption(org.apache.zeppelin.interpreter.InterpreterOption)>(r4)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void setInterpreterOption(org.apache.zeppelin.interpreter.InterpreterOption)>(r4) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void setProperties(java.lang.Object)>(r5)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: void setProperties(java.lang.Object)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: void initInterpreterSetting(org.apache.zeppelin.interpreter.InterpreterSetting)>($r9)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: void initInterpreterSetting(org.apache.zeppelin.interpreter.InterpreterSetting)>($r9) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r13 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map interpreterSettings>
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r13 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map interpreterSettings> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r14 = virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getId()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r14 = virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r9)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r9) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: void saveToFile()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: void saveToFile()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : return $r9
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r16 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : r6 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r16
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : r6 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r16 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r17 = virtualinvoke r6.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r17 = virtualinvoke r6.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : if $z1 == 0
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r18 = new java.io.IOException
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : goto [?= $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : goto [?= $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r18 = new java.io.IOException >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r19 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter ")
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter ") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already existed")
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already existed") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r23)
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r23) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : throw $r18
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : $r24 = new java.io.IOException >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("\'.\' is invalid for InterpreterSetting name.")
org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("\'.\' is invalid for InterpreterSetting name.") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.createNewSetting : throw $r24
