org.apache.zeppelin.notebook.Folder.removeChild : $r2 = <org.apache.zeppelin.notebook.Folder: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.notebook.Folder.removeChild : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Folder.removeChild : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.removeChild : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Remove child {} from {}", r1, $r3)
org.apache.zeppelin.notebook.Folder.removeChild : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Remove child {} from {}", r1, $r3) >>>>>>>> org.apache.zeppelin.notebook.Folder.removeChild : $r4 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children>
org.apache.zeppelin.notebook.Folder.removeChild : $r4 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children> >>>>>>>> org.apache.zeppelin.notebook.Folder.removeChild : interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.Folder.removeChild : interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Folder.removeChild : return
