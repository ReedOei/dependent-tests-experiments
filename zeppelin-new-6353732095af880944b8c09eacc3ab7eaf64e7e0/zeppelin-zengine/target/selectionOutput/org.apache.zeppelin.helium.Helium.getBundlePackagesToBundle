org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r5 = r0.<org.apache.zeppelin.helium.Helium: org.apache.zeppelin.helium.HeliumConf heliumConf> >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r1 = virtualinvoke $r5.<org.apache.zeppelin.helium.HeliumConf: java.util.List getBundleDisplayOrder()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r1 = virtualinvoke $r5.<org.apache.zeppelin.helium.HeliumConf: java.util.List getBundleDisplayOrder()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r6 = new java.util.HashSet
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r6 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r7 = new java.util.LinkedList
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r7 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : specialinvoke $r7.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : specialinvoke $r7.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r19 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r19 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z8 == 0
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z8 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r14 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z8 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r8 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r8 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r23 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r23 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z0 == 0
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r11 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r10 = new java.util.LinkedList
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r10 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : specialinvoke $r10.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : specialinvoke $r10.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : virtualinvoke $r10.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r6)
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : virtualinvoke $r10.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r6) >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : return $r7
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r11 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r24 = (java.util.List) $r11
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r24 = (java.util.List) $r11 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r25 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r25 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z2 == 0
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z2 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r12 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z2 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r12 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r26 = (org.apache.zeppelin.helium.HeliumPackageSearchResult) $r12
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r26 = (org.apache.zeppelin.helium.HeliumPackageSearchResult) $r12 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z3 = specialinvoke r0.<org.apache.zeppelin.helium.Helium: boolean canBundle(org.apache.zeppelin.helium.HeliumPackageSearchResult)>(r26)
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z3 = specialinvoke r0.<org.apache.zeppelin.helium.Helium: boolean canBundle(org.apache.zeppelin.helium.HeliumPackageSearchResult)>(r26) >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z3 == 0
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z3 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r13 = virtualinvoke r26.<org.apache.zeppelin.helium.HeliumPackageSearchResult: org.apache.zeppelin.helium.HeliumPackage getPkg()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z3 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z2 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r13 = virtualinvoke r26.<org.apache.zeppelin.helium.HeliumPackageSearchResult: org.apache.zeppelin.helium.HeliumPackage getPkg()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r13)
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= (branch)]
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r14 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r20 = (java.lang.String) $r14
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r20 = (java.lang.String) $r14 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r15 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r15 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20)
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20) >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r21 = (java.util.List) $r16
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r21 = (java.util.List) $r16 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if r21 != null
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if r21 != null >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if r21 != null >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r22 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r22 = interfaceinvoke r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z5 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z5 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z5 == 0
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z5 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r17 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z5 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r17 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r4 = (org.apache.zeppelin.helium.HeliumPackageSearchResult) $r17
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : r4 = (org.apache.zeppelin.helium.HeliumPackageSearchResult) $r17 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z6 = specialinvoke r0.<org.apache.zeppelin.helium.Helium: boolean canBundle(org.apache.zeppelin.helium.HeliumPackageSearchResult)>(r4)
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z6 = specialinvoke r0.<org.apache.zeppelin.helium.Helium: boolean canBundle(org.apache.zeppelin.helium.HeliumPackageSearchResult)>(r4) >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z6 == 0
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z6 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r18 = virtualinvoke r4.<org.apache.zeppelin.helium.HeliumPackageSearchResult: org.apache.zeppelin.helium.HeliumPackage getPkg()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : if $z6 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z5 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z5 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z5 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $r18 = virtualinvoke r4.<org.apache.zeppelin.helium.HeliumPackageSearchResult: org.apache.zeppelin.helium.HeliumPackage getPkg()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r18)
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= (branch)]
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : goto [?= $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.Helium.getBundlePackagesToBundle : $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
