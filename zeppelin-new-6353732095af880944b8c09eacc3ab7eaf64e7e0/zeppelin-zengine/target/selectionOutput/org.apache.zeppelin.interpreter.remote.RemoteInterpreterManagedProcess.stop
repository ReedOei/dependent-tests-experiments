org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r2 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller getRemoteInterpreterEventPoller()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: void shutdown()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke $r2.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: void shutdown()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $z0 = virtualinvoke $r3.<org.apache.thrift.server.TServer: boolean isServing()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $z0 = virtualinvoke $r3.<org.apache.thrift.server.TServer: boolean isServing()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $z1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean isRunning()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $z1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r4 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> = null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> = null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> = null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke $r11.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke $r11.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r12 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r12 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Remote process terminated")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>("Remote process terminated") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r4 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Kill interpreter process")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Kill interpreter process") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r5 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$4
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r5 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$4 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : specialinvoke $r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$4: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r5 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$4 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r10 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>("ignore the exception when shutting down")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>("ignore the exception when shutting down") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke $r7.<org.apache.commons.exec.ExecuteWatchdog: void destroyProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke $r7.<org.apache.commons.exec.ExecuteWatchdog: void destroyProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> = null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : specialinvoke $r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$4: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : specialinvoke $r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$4: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : goto [?= $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r9 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : goto [?= $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $r8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke $r8.<org.apache.thrift.server.TServer: void stop()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : virtualinvoke $r8.<org.apache.thrift.server.TServer: void stop()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.stop : $z1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean isRunning()>()
