org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.setupPropertiesForPySpark : $z0 = specialinvoke r0.<org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher: boolean isYarnMode()>() >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.setupPropertiesForPySpark : if $z0 == 0
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.setupPropertiesForPySpark : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.setupPropertiesForPySpark : virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("spark.yarn.isPython", "true")
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.setupPropertiesForPySpark : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.setupPropertiesForPySpark : return
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.setupPropertiesForPySpark : virtualinvoke r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("spark.yarn.isPython", "true") >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.setupPropertiesForPySpark : return
