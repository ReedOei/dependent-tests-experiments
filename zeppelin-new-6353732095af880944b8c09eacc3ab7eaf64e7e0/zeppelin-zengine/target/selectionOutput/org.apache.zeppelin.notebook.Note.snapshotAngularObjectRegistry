org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r7 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r0.<org.apache.zeppelin.notebook.Note: java.util.Map angularObjects> = $r7
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r0.<org.apache.zeppelin.notebook.Note: java.util.Map angularObjects> = $r7 >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r8 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r8 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r9 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r9 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r2 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r9)
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r2 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if r2 == null
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if r2 == null >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $i0 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if r2 == null >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : return
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $i0 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if $i0 != 0
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if $i0 != 0 >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : return
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if $i0 != 0 >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if $z0 == 0
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : return
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r4 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r10
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r4 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r10 >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r11 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id>
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r11 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id> >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r5 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>(r1, $r11)
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r5 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>(r1, $r11) >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if r5 == null
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if r5 == null >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r6 = virtualinvoke r5.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>()
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : if r5 == null >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : r6 = virtualinvoke r5.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>() >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r12 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map angularObjects>
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r12 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map angularObjects> >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r13 = virtualinvoke r5.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r13 = virtualinvoke r5.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r14 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id>
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r14 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id> >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r15 = virtualinvoke r6.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.List getAllWithGlobal(java.lang.String)>($r14)
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : $r15 = virtualinvoke r6.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.List getAllWithGlobal(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r15)
org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r15) >>>>>>>> org.apache.zeppelin.notebook.Note.snapshotAngularObjectRegistry : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
