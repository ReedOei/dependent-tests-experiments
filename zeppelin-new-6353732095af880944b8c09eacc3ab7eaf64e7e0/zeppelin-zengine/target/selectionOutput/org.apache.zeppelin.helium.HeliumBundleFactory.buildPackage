org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if r1 != null >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : return null
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if r1 != null >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r2 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.lang.String[] getNpmModuleNameAndVersion(org.apache.zeppelin.helium.HeliumPackage)>(r1)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r2 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.lang.String[] getNpmModuleNameAndVersion(org.apache.zeppelin.helium.HeliumPackage)>(r1) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if r2 != null
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if r2 != null >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r13 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: org.slf4j.Logger logger>
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if r2 != null >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r3 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r3 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r4 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File getHeliumPackageDirectory(java.lang.String)>(r3)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r4 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File getHeliumPackageDirectory(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r5 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File getHeliumPackageBundleCache(java.lang.String)>(r3)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r5 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File getHeliumPackageBundleCache(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if z0 != 0
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if z0 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $z4 = virtualinvoke r5.<java.io.File: boolean exists()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if z0 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : virtualinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void installNodeAndNpm()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if z0 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r20 := @caughtexception
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r21 = new java.io.IOException >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke $r21.<java.io.IOException: void <init>(java.lang.Throwable)>($r20)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke $r21.<java.io.IOException: void <init>(java.lang.Throwable)>($r20) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : throw $r21
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : virtualinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void installNodeAndNpm()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : goto [?= $r8 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory>]
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : virtualinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void installNodeAndNpm()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r20 := @caughtexception
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : goto [?= $r8 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory>] >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r8 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory>
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r8 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $z2 = virtualinvoke $r8.<java.io.File: boolean exists()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $z2 = virtualinvoke $r8.<java.io.File: boolean exists()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z2 == 0
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z2 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r11 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory>
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z2 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r9 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory>
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r9 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>($r9)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>($r9) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r10 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory>
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r10 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r10)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r10) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r23 = new com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r23 = new com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r24 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File nodeInstallationDirectory>
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r24 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File nodeInstallationDirectory> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke $r23.<com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory: void <init>(java.io.File,java.io.File)>(r4, $r24)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke $r23.<com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory: void <init>(java.io.File,java.io.File)>(r4, $r24) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r26 = staticinvoke <com.google.common.io.Resources: java.net.URL getResource(java.lang.String)>("helium/webpack.config.js")
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r26 = staticinvoke <com.google.common.io.Resources: java.net.URL getResource(java.lang.String)>("helium/webpack.config.js") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r27 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r27 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r6 = staticinvoke <com.google.common.io.Resources: java.lang.String toString(java.net.URL,java.nio.charset.Charset)>($r26, $r27)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r6 = staticinvoke <com.google.common.io.Resources: java.lang.String toString(java.net.URL,java.nio.charset.Charset)>($r26, $r27) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r28 = staticinvoke <com.google.common.io.Resources: java.net.URL getResource(java.lang.String)>("helium/package.json")
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r28 = staticinvoke <com.google.common.io.Resources: java.net.URL getResource(java.lang.String)>("helium/package.json") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r29 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r29 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r7 = staticinvoke <com.google.common.io.Resources: java.lang.String toString(java.net.URL,java.nio.charset.Charset)>($r28, $r29)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r7 = staticinvoke <com.google.common.io.Resources: java.lang.String toString(java.net.URL,java.nio.charset.Charset)>($r28, $r29) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r30 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.lang.String downloadPackage(org.apache.zeppelin.helium.HeliumPackage,java.lang.String[],java.io.File,java.lang.String,java.lang.String,com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory)>(r1, r2, r4, r6, r7, $r23)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r7 = staticinvoke <com.google.common.io.Resources: java.lang.String toString(java.net.URL,java.nio.charset.Charset)>($r28, $r29) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r18 := @caughtexception
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r19 = new java.io.IOException >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke $r19.<java.io.IOException: void <init>(java.lang.Throwable)>($r18)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke $r19.<java.io.IOException: void <init>(java.lang.Throwable)>($r18) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : throw $r19
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r30 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.lang.String downloadPackage(org.apache.zeppelin.helium.HeliumPackage,java.lang.String[],java.io.File,java.lang.String,java.lang.String,com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory)>(r1, r2, r4, r6, r7, $r23) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : goto [?= specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void prepareSource(org.apache.zeppelin.helium.HeliumPackage,java.lang.String[],java.lang.String)>(r1, r2, r30)]
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r30 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.lang.String downloadPackage(org.apache.zeppelin.helium.HeliumPackage,java.lang.String[],java.io.File,java.lang.String,java.lang.String,com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory)>(r1, r2, r4, r6, r7, $r23) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r18 := @caughtexception
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : goto [?= specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void prepareSource(org.apache.zeppelin.helium.HeliumPackage,java.lang.String[],java.lang.String)>(r1, r2, r30)] >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void prepareSource(org.apache.zeppelin.helium.HeliumPackage,java.lang.String[],java.lang.String)>(r1, r2, r30)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void prepareSource(org.apache.zeppelin.helium.HeliumPackage,java.lang.String[],java.lang.String)>(r1, r2, r30) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : virtualinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void copyFrameworkModulesToInstallPath(boolean)>(z1)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : virtualinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void copyFrameworkModulesToInstallPath(boolean)>(z1) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void installNodeModules(com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory)>($r23)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void installNodeModules(com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory)>($r23) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r32 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File bundleHeliumPackage(com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory,java.io.File)>($r23, r4)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : r32 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File bundleHeliumPackage(com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory,java.io.File)>($r23, r4) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : virtualinvoke r5.<java.io.File: boolean delete()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : virtualinvoke r5.<java.io.File: boolean delete()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r32, r5)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r32, r5) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : return r5
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r11 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $z3 = virtualinvoke $r11.<java.io.File: boolean isDirectory()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $z3 = virtualinvoke $r11.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z3 != 0
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z3 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r9 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File heliumLocalRepoDirectory>
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z3 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r23 = new com.github.eirslett.maven.plugins.frontend.lib.FrontendPluginFactory
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $z4 = virtualinvoke r5.<java.io.File: boolean exists()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z4 == 0
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z4 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $z5 = virtualinvoke r5.<java.io.File: boolean isDirectory()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z4 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : virtualinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void installNodeAndNpm()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z4 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r20 := @caughtexception
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $z5 = virtualinvoke r5.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z5 != 0
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z5 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : return r5
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z5 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : virtualinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: void installNodeAndNpm()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : if $z5 != 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r20 := @caughtexception
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r13 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r12 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t get module name and version of package ")
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t get module name and version of package ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r15 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r15 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String)>($r17)
org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage : return null
