org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : if $z0 != 0
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("spark.")
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z3 = 0
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z3 = 0 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : return $z3
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("spark.") >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : if $z1 == 0
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r2)
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z3 = 0
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : if $z2 != 0
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z3 = 1
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z3 = 0
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : $z3 = 1 >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : goto [?= return $z3]
org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : goto [?= return $z3] >>>>>>>> org.apache.zeppelin.interpreter.launcher.SparkInterpreterLauncher.isSparkConf : return $z3
