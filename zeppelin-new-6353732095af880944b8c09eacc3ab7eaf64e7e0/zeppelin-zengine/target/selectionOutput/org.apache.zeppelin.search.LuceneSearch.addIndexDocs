org.apache.zeppelin.search.LuceneSearch.addIndexDocs : i7 = 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l0 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l0 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r16 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l0 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l0 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r29 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r29 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r16 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r29 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r29 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r16 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : if $z0 == 0
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : if $z0 == 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r9 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : if $z0 == 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r4 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : if $z0 == 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r16 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : if $z0 == 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r28 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r28.<org.apache.lucene.index.IndexWriter: void commit()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r28 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r21 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r22 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to save index", $r21)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to save index", $r21) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l10 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l10 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r23 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r23 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r25 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r25 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l5 = l10 - l0
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l5 = l10 - l0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l6 = virtualinvoke $r25.<java.util.concurrent.TimeUnit: long toMillis(long)>($l5)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l6 = virtualinvoke $r25.<java.util.concurrent.TimeUnit: long toMillis(long)>($l5) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing {} notebooks took {}ms", $r24, $r26)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing {} notebooks took {}ms", $r24, $r26) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : throw $r27
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r28.<org.apache.lucene.index.IndexWriter: void commit()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= l10 = staticinvoke <java.lang.System: long nanoTime()>()]
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r28.<org.apache.lucene.index.IndexWriter: void commit()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r21 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= l10 = staticinvoke <java.lang.System: long nanoTime()>()] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l10 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r17 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to index all Notebooks", $r16)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r17 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to index all Notebooks", $r16) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r18 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to index all Notebooks", $r16) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r18 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r18.<org.apache.lucene.index.IndexWriter: void commit()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r18 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r10 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r11 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to save index", $r10)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to save index", $r10) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l9 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l9 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r12 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r12 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l3 = l9 - l0
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l3 = l9 - l0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l4 = virtualinvoke $r14.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l4 = virtualinvoke $r14.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing {} notebooks took {}ms", $r13, $r15)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing {} notebooks took {}ms", $r13, $r15) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= return]
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= return] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : return
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r18.<org.apache.lucene.index.IndexWriter: void commit()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= l9 = staticinvoke <java.lang.System: long nanoTime()>()]
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r18.<org.apache.lucene.index.IndexWriter: void commit()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r10 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= l9 = staticinvoke <java.lang.System: long nanoTime()>()] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l9 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r4 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r4.<org.apache.lucene.index.IndexWriter: void commit()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r4 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r19 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r20 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to save index", $r19)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to save index", $r19) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l8 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l8 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r5 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r5 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l1 = l8 - l0
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l1 = l8 - l0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l2 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toMillis(long)>($l1)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l2 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toMillis(long)>($l1) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing {} notebooks took {}ms", $r6, $r8)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing {} notebooks took {}ms", $r6, $r8) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= return]
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= return] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : return
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r4.<org.apache.lucene.index.IndexWriter: void commit()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= l8 = staticinvoke <java.lang.System: long nanoTime()>()]
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r4.<org.apache.lucene.index.IndexWriter: void commit()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r19 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= l8 = staticinvoke <java.lang.System: long nanoTime()>()] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l8 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r9 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r16 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r9 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r9 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r2 = (org.apache.zeppelin.notebook.Note) $r9
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r2 = (org.apache.zeppelin.notebook.Note) $r9 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r16 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r2 = (org.apache.zeppelin.notebook.Note) $r9 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r2 = (org.apache.zeppelin.notebook.Note) $r9 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void addIndexDocAsync(org.apache.zeppelin.notebook.Note)>(r2)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void addIndexDocAsync(org.apache.zeppelin.notebook.Note)>(r2) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r16 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void addIndexDocAsync(org.apache.zeppelin.notebook.Note)>(r2) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void addIndexDocAsync(org.apache.zeppelin.notebook.Note)>(r2) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : i7 = i7 + 1
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : i7 = i7 + 1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : i7 = i7 + 1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r16 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r27 := @caughtexception
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
