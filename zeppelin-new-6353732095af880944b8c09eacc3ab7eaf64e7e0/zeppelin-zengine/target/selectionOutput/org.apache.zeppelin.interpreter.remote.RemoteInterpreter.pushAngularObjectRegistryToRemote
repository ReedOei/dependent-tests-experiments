org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r5 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : r2 = virtualinvoke $r5.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : r2 = virtualinvoke $r5.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : if r2 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r6 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map getRegistry()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : if r2 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r6 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map getRegistry()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : if $r6 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : if $r6 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : r3 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map getRegistry()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : if $r6 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : r3 = virtualinvoke r2.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map getRegistry()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r7 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r7 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r9 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: java.lang.String getId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r9 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Push local angular object registry from ZeppelinServer to remote interpreter group {}", $r9)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Push local angular object registry from ZeppelinServer to remote interpreter group {}", $r9) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r10 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$10
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r10 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$10 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : specialinvoke $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$10: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : specialinvoke $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$10: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : r4 = virtualinvoke $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$10: java.lang.reflect.Type getType()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : r4 = virtualinvoke $r10.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$10: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r11 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: com.google.gson.Gson gson>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r11 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r12 = virtualinvoke $r11.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r3, r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : $r12 = virtualinvoke $r11.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r3, r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : virtualinvoke r1.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void angularRegistryPush(java.lang.String)>($r12)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : virtualinvoke r1.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: void angularRegistryPush(java.lang.String)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.pushAngularObjectRegistryToRemote : return
