org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : $r3 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.Object properties> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : $r5 = (java.util.Map) $r3
org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : $r5 = (java.util.Map) $r3 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : $r4 = new org.apache.zeppelin.interpreter.InterpreterProperty
org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : $r4 = new org.apache.zeppelin.interpreter.InterpreterProperty >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : specialinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterProperty: void <init>(java.lang.String,java.lang.Object)>(r1, r2)
org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : specialinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterProperty: void <init>(java.lang.String,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4)
org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setProperty : return
