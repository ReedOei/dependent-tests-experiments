org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : return $r1
org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long timeToIdleSeconds>
org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long timeToIdleSeconds> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : return $l0
org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : return $l0 >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.setOverflowToDisk : r0.<org.apache.camel.component.cache.CacheConfiguration: boolean overflowToDisk> = z0
org.apache.camel.component.cache.CacheConfiguration.setOverflowToDisk : r0.<org.apache.camel.component.cache.CacheConfiguration: boolean overflowToDisk> = z0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>()
org.apache.camel.component.cache.CacheEndpoint.stop : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : return $r1
org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>()
org.apache.camel.component.cache.CacheEndpoint.stop : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>() >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r3 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r3 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : if $r3 != null
org.apache.camel.component.cache.CacheManagerFactory.getInstance : if $r3 != null >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r4 = virtualinvoke r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager createCacheManagerInstance()>()
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r4 = virtualinvoke r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager createCacheManagerInstance()>() >>>>>>>> org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : $r1 = r0.<org.apache.camel.component.cache.DefaultCacheManagerFactory: java.io.InputStream is>
org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : $r1 = r0.<org.apache.camel.component.cache.DefaultCacheManagerFactory: java.io.InputStream is> >>>>>>>> org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : if $r1 != null
org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : if $r1 != null >>>>>>>> org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : $r6 = <org.apache.camel.component.cache.DefaultCacheManagerFactory: org.slf4j.Logger LOG>
org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : $r6 = <org.apache.camel.component.cache.DefaultCacheManagerFactory: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Creating CacheManager using Ehcache defaults")
org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Creating CacheManager using Ehcache defaults") >>>>>>>> org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : $r7 = staticinvoke <org.apache.camel.component.cache.EHCacheUtil: net.sf.ehcache.CacheManager createCacheManager()>()
org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : $r7 = staticinvoke <org.apache.camel.component.cache.EHCacheUtil: net.sf.ehcache.CacheManager createCacheManager()>() >>>>>>>> org.apache.camel.component.cache.EHCacheUtil.createCacheManager : $z0 = <org.apache.camel.component.cache.EHCacheUtil: boolean useCreateNewMethod>
org.apache.camel.component.cache.EHCacheUtil.createCacheManager : $z0 = <org.apache.camel.component.cache.EHCacheUtil: boolean useCreateNewMethod> >>>>>>>> org.apache.camel.component.cache.EHCacheUtil.createCacheManager : if $z0 == 0
org.apache.camel.component.cache.EHCacheUtil.createCacheManager : if $z0 == 0 >>>>>>>> org.apache.camel.component.cache.EHCacheUtil.createCacheManager : $r1 = staticinvoke <net.sf.ehcache.CacheManager: net.sf.ehcache.CacheManager newInstance()>()
org.apache.camel.component.cache.EHCacheUtil.createCacheManager : $r1 = staticinvoke <net.sf.ehcache.CacheManager: net.sf.ehcache.CacheManager newInstance()>() >>>>>>>> org.apache.camel.component.cache.EHCacheUtil.createCacheManager : return $r1
org.apache.camel.component.cache.EHCacheUtil.createCacheManager : return $r1 >>>>>>>> org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : return $r7
org.apache.camel.component.cache.DefaultCacheManagerFactory.createCacheManagerInstance : return $r7 >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> = $r4
org.apache.camel.component.cache.CacheManagerFactory.getInstance : r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> = $r4 >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r5 = <org.apache.camel.component.cache.CacheManagerFactory: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r5 = <org.apache.camel.component.cache.CacheManagerFactory: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>("Turning off EHCache update checker ...")
org.apache.camel.component.cache.CacheManagerFactory.getInstance : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>("Turning off EHCache update checker ...") >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r6 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r6 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : r1 = virtualinvoke $r6.<net.sf.ehcache.CacheManager: net.sf.ehcache.config.Configuration getConfiguration()>()
org.apache.camel.component.cache.CacheManagerFactory.getInstance : r1 = virtualinvoke $r6.<net.sf.ehcache.CacheManager: net.sf.ehcache.config.Configuration getConfiguration()>() >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("net.sf.ehcache.skipUpdateCheck", "true")
org.apache.camel.component.cache.CacheManagerFactory.getInstance : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("net.sf.ehcache.skipUpdateCheck", "true") >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("updateCheck")
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("updateCheck") >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : staticinvoke <org.apache.camel.util.ReflectionHelper: void setField(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>($r9, r1, $r10)
org.apache.camel.component.cache.CacheManagerFactory.getInstance : staticinvoke <org.apache.camel.util.ReflectionHelper: void setField(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>($r9, r1, $r10) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r11 = <org.apache.camel.component.cache.CacheManagerFactory: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r11 = <org.apache.camel.component.cache.CacheManagerFactory: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $z0 = virtualinvoke r1.<net.sf.ehcache.config.Configuration: boolean getUpdateCheck()>()
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $z0 = virtualinvoke r1.<net.sf.ehcache.config.Configuration: boolean getUpdateCheck()>() >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Turned off EHCache update checker. updateCheck={}", $r12)
org.apache.camel.component.cache.CacheManagerFactory.getInstance : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Turned off EHCache update checker. updateCheck={}", $r12) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : goto [?= $r15 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>]
org.apache.camel.component.cache.CacheManagerFactory.getInstance : goto [?= $r15 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>] >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r15 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r15 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : return $r15
org.apache.camel.component.cache.CacheManagerFactory.getInstance : return $r15 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.stop : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : $r4 = virtualinvoke $r3.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>()
org.apache.camel.component.cache.CacheEndpoint.stop : $r4 = virtualinvoke $r3.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getCacheName : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String cacheName>
org.apache.camel.component.cache.CacheConfiguration.getCacheName : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String cacheName> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getCacheName : return $r1
org.apache.camel.component.cache.CacheConfiguration.getCacheName : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : virtualinvoke r1.<net.sf.ehcache.CacheManager: void removeCache(java.lang.String)>($r4)
org.apache.camel.component.cache.CacheEndpoint.stop : virtualinvoke r1.<net.sf.ehcache.CacheManager: void removeCache(java.lang.String)>($r4) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.isSingleton : return 1
org.apache.camel.component.cache.CacheEndpoint.isSingleton : return 1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r1, "config")
org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r1, "config") >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r3, "cacheManagerFactory")
org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r3, "cacheManagerFactory") >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r5 = new org.apache.camel.component.cache.CacheProducer
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r5 = new org.apache.camel.component.cache.CacheProducer >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r6 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r6 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : specialinvoke $r5.<org.apache.camel.component.cache.CacheProducer: void <init>(org.apache.camel.component.cache.CacheEndpoint,org.apache.camel.component.cache.CacheConfiguration)>(r0, $r6)
org.apache.camel.component.cache.CacheEndpoint.createProducer : specialinvoke $r5.<org.apache.camel.component.cache.CacheProducer: void <init>(org.apache.camel.component.cache.CacheEndpoint,org.apache.camel.component.cache.CacheConfiguration)>(r0, $r6) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : return $r5
