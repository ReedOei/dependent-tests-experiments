org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer.setCacheName : r0.<org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer: java.lang.String cacheName> = r1 >>>>>>>> org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer.setKey : r0.<org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer: org.apache.camel.Expression key> = r1
org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer.setKey : r0.<org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer: org.apache.camel.Expression key> = r1 >>>>>>>> org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer.getKey : $r1 = r0.<org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer: org.apache.camel.Expression key>
org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer.getKey : $r1 = r0.<org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer: org.apache.camel.Expression key> >>>>>>>> org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer.getKey : return $r1
org.apache.camel.processor.cache.CacheBasedMessageBodyReplacer.getKey : return $r1 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.setCacheName : r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String cacheName> = r1
org.apache.camel.processor.cache.CacheBasedTokenReplacer.setCacheName : r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String cacheName> = r1 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.setKey : r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.apache.camel.Expression key> = r1
org.apache.camel.processor.cache.CacheBasedTokenReplacer.setKey : r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.apache.camel.Expression key> = r1 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.setReplacementToken : r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String replacementToken> = r1
org.apache.camel.processor.cache.CacheBasedTokenReplacer.setReplacementToken : r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String replacementToken> = r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : return $r1
org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long timeToIdleSeconds>
org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long timeToIdleSeconds> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : return $l0
org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : return $l0 >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.setOverflowToDisk : r0.<org.apache.camel.component.cache.CacheConfiguration: boolean overflowToDisk> = z0
org.apache.camel.component.cache.CacheConfiguration.setOverflowToDisk : r0.<org.apache.camel.component.cache.CacheConfiguration: boolean overflowToDisk> = z0 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r8 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.apache.camel.Expression key>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r8 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.apache.camel.Expression key> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r9 = interfaceinvoke $r8.<org.apache.camel.Expression: java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)>(r1, class "Ljava/lang/String;")
