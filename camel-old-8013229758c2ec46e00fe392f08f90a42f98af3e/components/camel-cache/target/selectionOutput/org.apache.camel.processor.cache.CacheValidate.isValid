org.apache.camel.processor.cache.CacheValidate.isValid : $r5 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r5.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Cache Name: {}", r2)
org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r5.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Cache Name: {}", r2) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $z0 = virtualinvoke r1.<net.sf.ehcache.CacheManager: boolean cacheExists(java.lang.String)>(r2)
org.apache.camel.processor.cache.CacheValidate.isValid : $z0 = virtualinvoke r1.<net.sf.ehcache.CacheManager: boolean cacheExists(java.lang.String)>(r2) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : if $z0 != 0
org.apache.camel.processor.cache.CacheValidate.isValid : if $z0 != 0 >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $r12 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG>
org.apache.camel.processor.cache.CacheValidate.isValid : if $z0 != 0 >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $r6 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG>
org.apache.camel.processor.cache.CacheValidate.isValid : $r6 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found an existing cache: {}", r2)
org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found an existing cache: {}", r2) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $r7 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG>
org.apache.camel.processor.cache.CacheValidate.isValid : $r7 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $z1 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isTraceEnabled()>()
org.apache.camel.processor.cache.CacheValidate.isValid : $z1 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isTraceEnabled()>() >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : if $z1 == 0
org.apache.camel.processor.cache.CacheValidate.isValid : if $z1 == 0 >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $r9 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG>
org.apache.camel.processor.cache.CacheValidate.isValid : if $z1 == 0 >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : r4 = virtualinvoke r1.<net.sf.ehcache.CacheManager: net.sf.ehcache.Cache getCache(java.lang.String)>(r2)
org.apache.camel.processor.cache.CacheValidate.isValid : r4 = virtualinvoke r1.<net.sf.ehcache.CacheManager: net.sf.ehcache.Cache getCache(java.lang.String)>(r2) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $z2 = interfaceinvoke r4.<net.sf.ehcache.Ehcache: boolean isKeyInCache(java.lang.Object)>(r3)
org.apache.camel.processor.cache.CacheValidate.isValid : $z2 = interfaceinvoke r4.<net.sf.ehcache.Ehcache: boolean isKeyInCache(java.lang.Object)>(r3) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : if $z2 != 0
org.apache.camel.processor.cache.CacheValidate.isValid : if $z2 != 0 >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $r8 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG>
org.apache.camel.processor.cache.CacheValidate.isValid : if $z2 != 0 >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : return 1
org.apache.camel.processor.cache.CacheValidate.isValid : $r8 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("No Key with name: {} presently exists in the cache. It is also possible that the key may have expired in the cache. Replacement will not be performed until an appropriate key/value pair is added to (or) found in the cache.", r3)
org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("No Key with name: {} presently exists in the cache. It is also possible that the key may have expired in the cache. Replacement will not be performed until an appropriate key/value pair is added to (or) found in the cache.", r3) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : return 0
org.apache.camel.processor.cache.CacheValidate.isValid : $r9 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $r10 = virtualinvoke r1.<net.sf.ehcache.CacheManager: net.sf.ehcache.Cache getCache(java.lang.String)>(r2)
org.apache.camel.processor.cache.CacheValidate.isValid : $r10 = virtualinvoke r1.<net.sf.ehcache.CacheManager: net.sf.ehcache.Cache getCache(java.lang.String)>(r2) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $i0 = virtualinvoke $r10.<net.sf.ehcache.Cache: int getSize()>()
org.apache.camel.processor.cache.CacheValidate.isValid : $i0 = virtualinvoke $r10.<net.sf.ehcache.Cache: int getSize()>() >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.camel.processor.cache.CacheValidate.isValid : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Cache {} currently contains {} elements", r2, $r11)
org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Cache {} currently contains {} elements", r2, $r11) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : r4 = virtualinvoke r1.<net.sf.ehcache.CacheManager: net.sf.ehcache.Cache getCache(java.lang.String)>(r2)
org.apache.camel.processor.cache.CacheValidate.isValid : $r12 = <org.apache.camel.processor.cache.CacheValidate: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("No existing Cache found with name: {}. Please ensure a cache is first instantiated using a Cache Consumer or Cache Producer. Replacement will not be performed since the cache {} does not presently exist", r2, r2)
org.apache.camel.processor.cache.CacheValidate.isValid : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("No existing Cache found with name: {}. Please ensure a cache is first instantiated using a Cache Consumer or Cache Producer. Replacement will not be performed since the cache {} does not presently exist", r2, r2) >>>>>>>> org.apache.camel.processor.cache.CacheValidate.isValid : return 0
