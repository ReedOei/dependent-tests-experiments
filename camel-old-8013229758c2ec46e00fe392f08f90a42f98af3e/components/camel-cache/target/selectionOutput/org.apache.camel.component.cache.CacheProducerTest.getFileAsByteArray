org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : $r4 = new java.io.FileInputStream >>>>>>>> org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>(r1)
org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : r2 = staticinvoke <org.apache.camel.util.IOHelper: java.io.BufferedInputStream buffered(java.io.InputStream)>($r4)
org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : r2 = staticinvoke <org.apache.camel.util.IOHelper: java.io.BufferedInputStream buffered(java.io.InputStream)>($r4) >>>>>>>> org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : r3 = staticinvoke <org.apache.camel.converter.IOConverter: byte[] toBytes(java.io.InputStream)>(r2)
org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : r3 = staticinvoke <org.apache.camel.converter.IOConverter: byte[] toBytes(java.io.InputStream)>(r2) >>>>>>>> org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : virtualinvoke r2.<java.io.InputStream: void close()>()
org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : virtualinvoke r2.<java.io.InputStream: void close()>() >>>>>>>> org.apache.camel.component.cache.CacheProducerTest.getFileAsByteArray : return r3
