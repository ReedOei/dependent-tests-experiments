org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z0 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Add") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z0 == 0
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z0 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r30 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z0 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z1 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Update")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z1 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Update") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z1 == 0
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z1 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r28 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z1 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z2 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "DeleteAll")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z2 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "DeleteAll") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z2 == 0
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z2 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r26 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z2 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z3 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Delete")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z3 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Delete") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z3 == 0
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z3 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r24 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z3 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z4 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Get")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z4 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Get") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z4 == 0
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z4 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r16 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z4 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z5 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Check")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z5 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Check") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z5 == 0
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z5 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r10 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z5 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r4 = new net.sf.ehcache.CacheException
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r4 = new net.sf.ehcache.CacheException >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r5 = new java.lang.StringBuilder
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.camel.component.cache.CacheProducer.performCacheOperation : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CamelCacheOperation ")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CamelCacheOperation ") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported.")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported.") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : specialinvoke $r4.<net.sf.ehcache.CacheException: void <init>(java.lang.String)>($r9)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : specialinvoke $r4.<net.sf.ehcache.CacheException: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : throw $r4
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r10 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Querying an element with key {} from the Cache", r3)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Querying an element with key {} from the Cache", r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r11 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r11 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : r35 = interfaceinvoke $r11.<net.sf.ehcache.Ehcache: net.sf.ehcache.Element getQuiet(java.io.Serializable)>(r3)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : r35 = interfaceinvoke $r11.<net.sf.ehcache.Ehcache: net.sf.ehcache.Element getQuiet(java.io.Serializable)>(r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : if r35 == null
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if r35 == null >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r14 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if r35 == null >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r12 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r12 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r12.<org.apache.camel.Message: java.lang.Object removeHeader(java.lang.String)>("CamelCacheElementWasFound")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r12.<org.apache.camel.Message: java.lang.Object removeHeader(java.lang.String)>("CamelCacheElementWasFound") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return] >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : return
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r14 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r14.<org.apache.camel.Message: void setHeader(java.lang.String,java.lang.Object)>("CamelCacheElementWasFound", $r15)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r14.<org.apache.camel.Message: void setHeader(java.lang.String,java.lang.Object)>("CamelCacheElementWasFound", $r15) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= (branch)]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= (branch)] >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r16 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Quering an element with key {} from the Cache", r3)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Quering an element with key {} from the Cache", r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r17 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r17 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : r34 = interfaceinvoke $r17.<net.sf.ehcache.Ehcache: net.sf.ehcache.Element get(java.io.Serializable)>(r3)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : r34 = interfaceinvoke $r17.<net.sf.ehcache.Ehcache: net.sf.ehcache.Element get(java.io.Serializable)>(r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : if r34 == null
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if r34 == null >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r20 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if r34 == null >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r18 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r18 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r18.<org.apache.camel.Message: java.lang.Object removeHeader(java.lang.String)>("CamelCacheElementWasFound")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r18.<org.apache.camel.Message: java.lang.Object removeHeader(java.lang.String)>("CamelCacheElementWasFound") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return] >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : return
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r20 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r20.<org.apache.camel.Message: void setHeader(java.lang.String,java.lang.Object)>("CamelCacheElementWasFound", $r21)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r20.<org.apache.camel.Message: void setHeader(java.lang.String,java.lang.Object)>("CamelCacheElementWasFound", $r21) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r22 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r22 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r23 = virtualinvoke r34.<net.sf.ehcache.Element: java.lang.Object getObjectValue()>()
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r23 = virtualinvoke r34.<net.sf.ehcache.Element: java.lang.Object getObjectValue()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r22.<org.apache.camel.Message: void setBody(java.lang.Object)>($r23)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r22.<org.apache.camel.Message: void setBody(java.lang.Object)>($r23) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= (branch)]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= (branch)] >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r24 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Deleting an element with key {} into the Cache", r3)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Deleting an element with key {} into the Cache", r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r25 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r25 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r25.<net.sf.ehcache.Ehcache: boolean remove(java.io.Serializable)>(r3)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r25.<net.sf.ehcache.Ehcache: boolean remove(java.io.Serializable)>(r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return] >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : return
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r26 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String)>("Deleting All elements from the Cache")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String)>("Deleting All elements from the Cache") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r27 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r27 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r27.<net.sf.ehcache.Ehcache: void removeAll()>()
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r27.<net.sf.ehcache.Ehcache: void removeAll()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return] >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : return
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r28 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Updating an element with key {} into the Cache", r3)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Updating an element with key {} into the Cache", r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : r33 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Element createElementFromBody(java.lang.String,org.apache.camel.Exchange,java.lang.String)>(r3, r1, "CamelCacheUpdate")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : r33 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Element createElementFromBody(java.lang.String,org.apache.camel.Exchange,java.lang.String)>(r3, r1, "CamelCacheUpdate") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r29 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r29 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r29.<net.sf.ehcache.Ehcache: void put(net.sf.ehcache.Element)>(r33)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r29.<net.sf.ehcache.Ehcache: void put(net.sf.ehcache.Element)>(r33) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return] >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : return
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r30 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Adding an element with key {} into the Cache", r3)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Adding an element with key {} into the Cache", r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : r32 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Element createElementFromBody(java.lang.String,org.apache.camel.Exchange,java.lang.String)>(r3, r1, "CamelCacheAdd")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : r32 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Element createElementFromBody(java.lang.String,org.apache.camel.Exchange,java.lang.String)>(r3, r1, "CamelCacheAdd") >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r31 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r31 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r31.<net.sf.ehcache.Ehcache: void put(net.sf.ehcache.Element)>(r32)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r31.<net.sf.ehcache.Ehcache: void put(net.sf.ehcache.Element)>(r32) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return] >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : return
