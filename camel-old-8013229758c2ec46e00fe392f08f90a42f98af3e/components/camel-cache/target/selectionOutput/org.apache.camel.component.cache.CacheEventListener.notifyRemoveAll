org.apache.camel.component.cache.CacheEventListener.notifyRemoveAll : $r2 = <org.apache.camel.component.cache.CacheEventListener: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheEventListener.notifyRemoveAll : $r3 = interfaceinvoke r1.<net.sf.ehcache.Ehcache: java.lang.String getName()>()
org.apache.camel.component.cache.CacheEventListener.notifyRemoveAll : $r3 = interfaceinvoke r1.<net.sf.ehcache.Ehcache: java.lang.String getName()>() >>>>>>>> org.apache.camel.component.cache.CacheEventListener.notifyRemoveAll : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Cache {} is being emptied and all elements removed", $r3)
org.apache.camel.component.cache.CacheEventListener.notifyRemoveAll : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Cache {} is being emptied and all elements removed", $r3) >>>>>>>> org.apache.camel.component.cache.CacheEventListener.notifyRemoveAll : specialinvoke r0.<org.apache.camel.component.cache.CacheEventListener: void dispatchExchange(net.sf.ehcache.Ehcache,net.sf.ehcache.Element,java.lang.String)>(r1, null, "DELETEALL")
org.apache.camel.component.cache.CacheEventListener.notifyRemoveAll : specialinvoke r0.<org.apache.camel.component.cache.CacheEventListener: void dispatchExchange(net.sf.ehcache.Ehcache,net.sf.ehcache.Element,java.lang.String)>(r1, null, "DELETEALL") >>>>>>>> org.apache.camel.component.cache.CacheEventListener.notifyRemoveAll : return
