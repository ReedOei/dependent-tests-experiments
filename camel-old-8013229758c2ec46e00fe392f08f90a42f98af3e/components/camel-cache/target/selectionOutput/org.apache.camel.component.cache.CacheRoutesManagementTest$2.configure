org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:add1") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r2)
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r2) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r5 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r5 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r6 = virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r5)
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r6 = virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r5) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r7 = (org.apache.camel.model.RouteDefinition) $r6
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r7 = (org.apache.camel.model.RouteDefinition) $r6 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r8 = virtualinvoke $r7.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache:foo?cacheManagerFactory=#cacheManagerFactory")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r8 = virtualinvoke $r7.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache:foo?cacheManagerFactory=#cacheManagerFactory") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r9 = (org.apache.camel.model.RouteDefinition) $r8
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r9 = (org.apache.camel.model.RouteDefinition) $r8 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : virtualinvoke $r9.<org.apache.camel.model.RouteDefinition: void setId(java.lang.String)>("TEST_ROUTE_1")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : virtualinvoke $r9.<org.apache.camel.model.RouteDefinition: void setId(java.lang.String)>("TEST_ROUTE_1") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r10 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:add2")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r10 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:add2") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r11 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r11 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r12 = virtualinvoke $r10.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r11)
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r12 = virtualinvoke $r10.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r11) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r13 = (org.apache.camel.model.RouteDefinition) $r12
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r13 = (org.apache.camel.model.RouteDefinition) $r12 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r14 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r14 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r15 = virtualinvoke $r13.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r14)
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r15 = virtualinvoke $r13.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r14) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r16 = (org.apache.camel.model.RouteDefinition) $r15
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r16 = (org.apache.camel.model.RouteDefinition) $r15 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r17 = virtualinvoke $r16.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache:foo?cacheManagerFactory=#cacheManagerFactory")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r17 = virtualinvoke $r16.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache:foo?cacheManagerFactory=#cacheManagerFactory") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r18 = (org.apache.camel.model.RouteDefinition) $r17
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r18 = (org.apache.camel.model.RouteDefinition) $r17 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : virtualinvoke $r18.<org.apache.camel.model.RouteDefinition: void setId(java.lang.String)>("TEST_ROUTE_2")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : virtualinvoke $r18.<org.apache.camel.model.RouteDefinition: void setId(java.lang.String)>("TEST_ROUTE_2") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : return
