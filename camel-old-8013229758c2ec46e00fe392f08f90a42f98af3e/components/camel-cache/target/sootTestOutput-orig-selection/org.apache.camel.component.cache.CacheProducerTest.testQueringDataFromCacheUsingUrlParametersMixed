org.apache.camel.component.BaseCacheTest.createRegistry : r1 = specialinvoke r0.<org.apache.camel.test.junit4.CamelTestSupport: org.apache.camel.impl.JndiRegistry createRegistry()>() >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : $r2 = new org.apache.camel.component.cache.CacheComponent
org.apache.camel.component.BaseCacheTest.createRegistry : $r2 = new org.apache.camel.component.cache.CacheComponent >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : specialinvoke $r2.<org.apache.camel.component.cache.CacheComponent: void <init>()>()
org.apache.camel.component.BaseCacheTest.createRegistry : specialinvoke $r2.<org.apache.camel.component.cache.CacheComponent: void <init>()>() >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache> = $r2
org.apache.camel.component.BaseCacheTest.createRegistry : r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache> = $r2 >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : $r4 = r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache>
org.apache.camel.component.BaseCacheTest.createRegistry : $r4 = r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache> >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : $r3 = new org.apache.camel.component.cache.FileCacheManagerFactory
org.apache.camel.component.BaseCacheTest.createRegistry : $r3 = new org.apache.camel.component.cache.FileCacheManagerFactory >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : specialinvoke $r3.<org.apache.camel.component.cache.FileCacheManagerFactory: void <init>(java.lang.String)>("src/test/resources/test-ehcache.xml")
org.apache.camel.component.BaseCacheTest.createRegistry : specialinvoke $r3.<org.apache.camel.component.cache.FileCacheManagerFactory: void <init>(java.lang.String)>("src/test/resources/test-ehcache.xml") >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : virtualinvoke $r4.<org.apache.camel.component.cache.CacheComponent: void setCacheManagerFactory(org.apache.camel.component.cache.CacheManagerFactory)>($r3)
org.apache.camel.component.BaseCacheTest.createRegistry : virtualinvoke $r4.<org.apache.camel.component.cache.CacheComponent: void setCacheManagerFactory(org.apache.camel.component.cache.CacheManagerFactory)>($r3) >>>>>>>> org.apache.camel.component.cache.CacheComponent.setCacheManagerFactory : r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> = r1
org.apache.camel.component.cache.CacheComponent.setCacheManagerFactory : r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> = r1 >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : $r5 = r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache>
org.apache.camel.component.BaseCacheTest.createRegistry : $r5 = r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache> >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("cache", $r5)
org.apache.camel.component.BaseCacheTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("cache", $r5) >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : return r1
org.apache.camel.component.BaseCacheTest.createRegistry : return r1 >>>>>>>> org.apache.camel.component.cache.CacheProducerTest.isUseRouteBuilder : return 0
org.apache.camel.component.cache.CacheProducerTest.isUseRouteBuilder : return 0 >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.model.OnExceptionDefinition onException(java.lang.Class)>(class "Lnet/sf/ehcache/CacheException;")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.model.OnExceptionDefinition onException(java.lang.Class)>(class "Lnet/sf/ehcache/CacheException;") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r2 = virtualinvoke $r1.<org.apache.camel.model.OnExceptionDefinition: org.apache.camel.model.OnExceptionDefinition handled(boolean)>(1)
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r2 = virtualinvoke $r1.<org.apache.camel.model.OnExceptionDefinition: org.apache.camel.model.OnExceptionDefinition handled(boolean)>(1) >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r3 = virtualinvoke $r2.<org.apache.camel.model.OnExceptionDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("log:LOGGER")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r3 = virtualinvoke $r2.<org.apache.camel.model.OnExceptionDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("log:LOGGER") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r4 = (org.apache.camel.model.OnExceptionDefinition) $r3
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r4 = (org.apache.camel.model.OnExceptionDefinition) $r3 >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : virtualinvoke $r4.<org.apache.camel.model.OnExceptionDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:CacheProducerTest.cacheException")
org.apache.camel.component.cache.CacheProducerTest$23.configure : virtualinvoke $r4.<org.apache.camel.model.OnExceptionDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:CacheProducerTest.cacheException") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r6 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:a")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r6 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:a") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r7 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r7 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r8 = virtualinvoke $r6.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r7)
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r8 = virtualinvoke $r6.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r7) >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r9 = (org.apache.camel.model.RouteDefinition) $r8
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r9 = (org.apache.camel.model.RouteDefinition) $r8 >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r10 = virtualinvoke $r9.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://TestCache1?key=foo")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r10 = virtualinvoke $r9.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://TestCache1?key=foo") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r11 = (org.apache.camel.model.RouteDefinition) $r10
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r11 = (org.apache.camel.model.RouteDefinition) $r10 >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r12 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("Don\'t care. This body will be overridden.")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r12 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("Don\'t care. This body will be overridden.") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r13 = virtualinvoke $r11.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setBody(org.apache.camel.Expression)>($r12)
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r13 = virtualinvoke $r11.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setBody(org.apache.camel.Expression)>($r12) >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r14 = (org.apache.camel.model.RouteDefinition) $r13
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r14 = (org.apache.camel.model.RouteDefinition) $r13 >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r15 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r15 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r16 = virtualinvoke $r14.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r15)
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r16 = virtualinvoke $r14.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r15) >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r17 = (org.apache.camel.model.RouteDefinition) $r16
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r17 = (org.apache.camel.model.RouteDefinition) $r16 >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r18 = virtualinvoke $r17.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://TestCache1?operation=get")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r18 = virtualinvoke $r17.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://TestCache1?operation=get") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r19 = (org.apache.camel.model.RouteDefinition) $r18
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r19 = (org.apache.camel.model.RouteDefinition) $r18 >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r20 = virtualinvoke $r19.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ChoiceDefinition choice()>()
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r20 = virtualinvoke $r19.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ChoiceDefinition choice()>() >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r21 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.builder.ValueBuilder header(java.lang.String)>("CamelCacheElementWasFound")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r21 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducerTest$23: org.apache.camel.builder.ValueBuilder header(java.lang.String)>("CamelCacheElementWasFound") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r22 = virtualinvoke $r21.<org.apache.camel.builder.ValueBuilder: org.apache.camel.Predicate isNotNull()>()
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r22 = virtualinvoke $r21.<org.apache.camel.builder.ValueBuilder: org.apache.camel.Predicate isNotNull()>() >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r23 = virtualinvoke $r20.<org.apache.camel.model.ChoiceDefinition: org.apache.camel.model.ChoiceDefinition when(org.apache.camel.Predicate)>($r22)
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r23 = virtualinvoke $r20.<org.apache.camel.model.ChoiceDefinition: org.apache.camel.model.ChoiceDefinition when(org.apache.camel.Predicate)>($r22) >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r24 = virtualinvoke $r23.<org.apache.camel.model.ChoiceDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:CacheProducerTest.result")
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r24 = virtualinvoke $r23.<org.apache.camel.model.ChoiceDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:CacheProducerTest.result") >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : $r25 = (org.apache.camel.model.ChoiceDefinition) $r24
org.apache.camel.component.cache.CacheProducerTest$23.configure : $r25 = (org.apache.camel.model.ChoiceDefinition) $r24 >>>>>>>> org.apache.camel.component.cache.CacheProducerTest$23.configure : virtualinvoke $r25.<org.apache.camel.model.ChoiceDefinition: org.apache.camel.model.ProcessorDefinition end()>()
org.apache.camel.component.cache.CacheProducerTest$23.configure : virtualinvoke $r25.<org.apache.camel.model.ChoiceDefinition: org.apache.camel.model.ProcessorDefinition end()>() >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : specialinvoke r0.<org.apache.camel.impl.UriEndpointComponent: void doStart()>()
org.apache.camel.component.cache.CacheComponent.doStart : specialinvoke r0.<org.apache.camel.impl.UriEndpointComponent: void doStart()>() >>>>>>>> org.apache.camel.component.cache.CacheComponent.getConfiguration : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration>
org.apache.camel.component.cache.CacheComponent.getConfiguration : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration> >>>>>>>> org.apache.camel.component.cache.CacheComponent.getConfiguration : return $r1
org.apache.camel.component.cache.CacheComponent.getConfiguration : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : return $r1
org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.getConfigurationFile : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: java.lang.String configurationFile>
org.apache.camel.component.cache.CacheComponent.getConfigurationFile : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: java.lang.String configurationFile> >>>>>>>> org.apache.camel.component.cache.CacheComponent.getConfigurationFile : return $r1
org.apache.camel.component.cache.CacheComponent.getConfigurationFile : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : $r2 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.doStart : $r2 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : if $r2 != null
org.apache.camel.component.cache.CacheComponent.doStart : if $r2 != null >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : $r9 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.doStart : $r9 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : staticinvoke <org.apache.camel.util.ServiceHelper: void startService(org.apache.camel.Service)>($r9)
org.apache.camel.component.cache.CacheComponent.doStart : staticinvoke <org.apache.camel.util.ServiceHelper: void startService(org.apache.camel.Service)>($r9) >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : $r6 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration>
org.apache.camel.component.cache.CacheComponent.createEndpoint : $r6 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration> >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r6, "configuration")
org.apache.camel.component.cache.CacheComponent.createEndpoint : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r6, "configuration") >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : $r8 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration>
org.apache.camel.component.cache.CacheComponent.createEndpoint : $r8 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration> >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : r4 = virtualinvoke $r8.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheConfiguration copy()>()
org.apache.camel.component.cache.CacheComponent.createEndpoint : r4 = virtualinvoke $r8.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheConfiguration copy()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.copy : $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.camel.component.cache.CacheConfiguration.copy : $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.copy : r4 = (org.apache.camel.component.cache.CacheConfiguration) $r1
org.apache.camel.component.cache.CacheConfiguration.copy : r4 = (org.apache.camel.component.cache.CacheConfiguration) $r1 >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.copy : return r4
org.apache.camel.component.cache.CacheConfiguration.copy : return r4 >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r0.<org.apache.camel.component.cache.CacheComponent: void setProperties(java.lang.Object,java.util.Map)>(r4, r3)
org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r0.<org.apache.camel.component.cache.CacheComponent: void setProperties(java.lang.Object,java.util.Map)>(r4, r3) >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r4.<org.apache.camel.component.cache.CacheConfiguration: void setCacheName(java.lang.String)>(r2)
org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r4.<org.apache.camel.component.cache.CacheConfiguration: void setCacheName(java.lang.String)>(r2) >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.setCacheName : r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String cacheName> = r1
org.apache.camel.component.cache.CacheConfiguration.setCacheName : r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String cacheName> = r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : $r9 = new org.apache.camel.component.cache.CacheEndpoint
org.apache.camel.component.cache.CacheComponent.createEndpoint : $r9 = new org.apache.camel.component.cache.CacheEndpoint >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : $r10 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.createEndpoint : $r10 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : specialinvoke $r9.<org.apache.camel.component.cache.CacheEndpoint: void <init>(java.lang.String,org.apache.camel.Component,org.apache.camel.component.cache.CacheConfiguration,org.apache.camel.component.cache.CacheManagerFactory)>(r1, r0, r4, $r10)
org.apache.camel.component.cache.CacheComponent.createEndpoint : specialinvoke $r9.<org.apache.camel.component.cache.CacheEndpoint: void <init>(java.lang.String,org.apache.camel.Component,org.apache.camel.component.cache.CacheConfiguration,org.apache.camel.component.cache.CacheManagerFactory)>(r1, r0, r4, $r10) >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r0.<org.apache.camel.component.cache.CacheComponent: void setProperties(java.lang.Object,java.util.Map)>($r9, r3)
org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r0.<org.apache.camel.component.cache.CacheComponent: void setProperties(java.lang.Object,java.util.Map)>($r9, r3) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.setKey : r0.<org.apache.camel.component.cache.CacheEndpoint: java.lang.String key> = r1
org.apache.camel.component.cache.CacheEndpoint.setKey : r0.<org.apache.camel.component.cache.CacheEndpoint: java.lang.String key> = r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : return $r9
org.apache.camel.component.cache.CacheComponent.createEndpoint : return $r9 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.isSingleton : return 1
org.apache.camel.component.cache.CacheEndpoint.isSingleton : return 1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.setOperation : r0.<org.apache.camel.component.cache.CacheEndpoint: java.lang.String operation> = r1
org.apache.camel.component.cache.CacheEndpoint.setOperation : r0.<org.apache.camel.component.cache.CacheEndpoint: java.lang.String operation> = r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r1, "config")
org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r1, "config") >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r3, "cacheManagerFactory")
org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r3, "cacheManagerFactory") >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r5 = new org.apache.camel.component.cache.CacheProducer
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r5 = new org.apache.camel.component.cache.CacheProducer >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r6 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r6 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : specialinvoke $r5.<org.apache.camel.component.cache.CacheProducer: void <init>(org.apache.camel.component.cache.CacheEndpoint,org.apache.camel.component.cache.CacheConfiguration)>(r0, $r6)
org.apache.camel.component.cache.CacheEndpoint.createProducer : specialinvoke $r5.<org.apache.camel.component.cache.CacheProducer: void <init>(org.apache.camel.component.cache.CacheEndpoint,org.apache.camel.component.cache.CacheConfiguration)>(r0, $r6) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : return $r5
org.apache.camel.component.cache.CacheEndpoint.createProducer : return $r5 >>>>>>>> org.apache.camel.component.cache.CacheProducer.doStart : specialinvoke r0.<org.apache.camel.impl.DefaultProducer: void doStart()>()
org.apache.camel.component.cache.CacheProducer.doStart : specialinvoke r0.<org.apache.camel.impl.DefaultProducer: void doStart()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.doStart : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducer: org.apache.camel.component.cache.CacheEndpoint getEndpoint()>()
org.apache.camel.component.cache.CacheProducer.doStart : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducer: org.apache.camel.component.cache.CacheEndpoint getEndpoint()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.getEndpoint : $r1 = specialinvoke r0.<org.apache.camel.impl.DefaultProducer: org.apache.camel.Endpoint getEndpoint()>()
org.apache.camel.component.cache.CacheProducer.getEndpoint : $r1 = specialinvoke r0.<org.apache.camel.impl.DefaultProducer: org.apache.camel.Endpoint getEndpoint()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.getEndpoint : $r2 = (org.apache.camel.component.cache.CacheEndpoint) $r1
org.apache.camel.component.cache.CacheProducer.getEndpoint : $r2 = (org.apache.camel.component.cache.CacheEndpoint) $r1 >>>>>>>> org.apache.camel.component.cache.CacheProducer.getEndpoint : return $r2
org.apache.camel.component.cache.CacheProducer.getEndpoint : return $r2 >>>>>>>> org.apache.camel.component.cache.CacheProducer.doStart : $r2 = virtualinvoke $r1.<org.apache.camel.component.cache.CacheEndpoint: net.sf.ehcache.Ehcache initializeCache()>()
org.apache.camel.component.cache.CacheProducer.doStart : $r2 = virtualinvoke $r1.<org.apache.camel.component.cache.CacheEndpoint: net.sf.ehcache.Ehcache initializeCache()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : return $r1
org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>() >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r3 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r3 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : if $r3 != null
org.apache.camel.component.cache.CacheManagerFactory.getInstance : if $r3 != null >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r4 = virtualinvoke r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager createCacheManagerInstance()>()
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r4 = virtualinvoke r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager createCacheManagerInstance()>() >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r2 = new java.io.FileInputStream
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r2 = new java.io.FileInputStream >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r3 = r0.<org.apache.camel.component.cache.FileCacheManagerFactory: java.lang.String fileName>
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r3 = r0.<org.apache.camel.component.cache.FileCacheManagerFactory: java.lang.String fileName> >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r2.<java.io.FileInputStream: void <init>(java.lang.String)>($r3)
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r2.<java.io.FileInputStream: void <init>(java.lang.String)>($r3) >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r6 = new org.apache.camel.RuntimeCamelException
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r6 = new org.apache.camel.RuntimeCamelException >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r7 = new java.lang.StringBuilder
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating CacheManager from file: ")
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating CacheManager from file: ") >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r9 = r0.<org.apache.camel.component.cache.FileCacheManagerFactory: java.lang.String fileName>
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r9 = r0.<org.apache.camel.component.cache.FileCacheManagerFactory: java.lang.String fileName> >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r6.<org.apache.camel.RuntimeCamelException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r5)
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r6.<org.apache.camel.RuntimeCamelException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r5) >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : throw $r6
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : throw $r6 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>()
org.apache.camel.component.cache.CacheEndpoint.stop : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>()
org.apache.camel.component.cache.CacheEndpoint.stop : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>() >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStop : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.doStop : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStop : staticinvoke <org.apache.camel.util.ServiceHelper: void stopService(java.lang.Object)>($r1)
org.apache.camel.component.cache.CacheComponent.doStop : staticinvoke <org.apache.camel.util.ServiceHelper: void stopService(java.lang.Object)>($r1) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.doStop : $r1 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheManagerFactory.doStop : $r1 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.doStop : if $r1 == null
org.apache.camel.component.cache.CacheManagerFactory.doStop : if $r1 == null >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStop : specialinvoke r0.<org.apache.camel.impl.UriEndpointComponent: void doStop()>()
