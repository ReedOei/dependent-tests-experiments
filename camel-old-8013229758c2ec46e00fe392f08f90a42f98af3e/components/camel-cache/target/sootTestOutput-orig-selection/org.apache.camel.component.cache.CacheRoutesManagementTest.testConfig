org.apache.camel.component.cache.CacheRegistryRefTest.setUp : $r2 = r0.<org.apache.camel.component.cache.CacheRegistryRefTest: org.apache.camel.component.cache.CacheEventListenerRegistry eventListenerRegistry> >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.setUp : $r1 = new org.apache.camel.component.cache.CacheRegistryRefTest$TestCacheEventListener
org.apache.camel.component.cache.CacheRegistryRefTest.setUp : $r1 = new org.apache.camel.component.cache.CacheRegistryRefTest$TestCacheEventListener >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.setUp : specialinvoke $r1.<org.apache.camel.component.cache.CacheRegistryRefTest$TestCacheEventListener: void <init>()>()
org.apache.camel.component.cache.CacheRegistryRefTest.setUp : specialinvoke $r1.<org.apache.camel.component.cache.CacheRegistryRefTest$TestCacheEventListener: void <init>()>() >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.setUp : virtualinvoke $r2.<org.apache.camel.component.cache.CacheEventListenerRegistry: void addCacheEventListener(net.sf.ehcache.event.CacheEventListener)>($r1)
org.apache.camel.component.cache.CacheRegistryRefTest.setUp : virtualinvoke $r2.<org.apache.camel.component.cache.CacheEventListenerRegistry: void addCacheEventListener(net.sf.ehcache.event.CacheEventListener)>($r1) >>>>>>>> org.apache.camel.component.cache.CacheEventListenerRegistry.addCacheEventListener : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List getEventListeners()>()
org.apache.camel.component.cache.CacheEventListenerRegistry.addCacheEventListener : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List getEventListeners()>() >>>>>>>> org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : $r1 = r0.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List eventListeners>
org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : $r1 = r0.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List eventListeners> >>>>>>>> org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : if $r1 != null
org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : if $r1 != null >>>>>>>> org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : $r3 = new java.util.ArrayList
org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : $r3 = new java.util.ArrayList >>>>>>>> org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : r0.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List eventListeners> = $r3
org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : r0.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List eventListeners> = $r3 >>>>>>>> org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : $r2 = r0.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List eventListeners>
org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : $r2 = r0.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List eventListeners> >>>>>>>> org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : return $r2
org.apache.camel.component.cache.CacheEventListenerRegistry.getEventListeners : return $r2 >>>>>>>> org.apache.camel.component.cache.CacheEventListenerRegistry.addCacheEventListener : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.camel.component.cache.CacheEventListenerRegistry.addCacheEventListener : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.setUp : $r4 = r0.<org.apache.camel.component.cache.CacheRegistryRefTest: org.apache.camel.component.cache.CacheLoaderRegistry loaderRegistry>
org.apache.camel.component.cache.CacheRegistryRefTest.setUp : $r4 = r0.<org.apache.camel.component.cache.CacheRegistryRefTest: org.apache.camel.component.cache.CacheLoaderRegistry loaderRegistry> >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.setUp : $r3 = new org.apache.camel.component.cache.CacheRegistryRefTest$TestLoader
org.apache.camel.component.cache.CacheRegistryRefTest.setUp : $r3 = new org.apache.camel.component.cache.CacheRegistryRefTest$TestLoader >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.setUp : specialinvoke $r3.<org.apache.camel.component.cache.CacheRegistryRefTest$TestLoader: void <init>()>()
org.apache.camel.component.cache.CacheRegistryRefTest.setUp : specialinvoke $r3.<org.apache.camel.component.cache.CacheRegistryRefTest$TestLoader: void <init>()>() >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.setUp : virtualinvoke $r4.<org.apache.camel.component.cache.CacheLoaderRegistry: void addCacheLoader(org.apache.camel.component.cache.CacheLoaderWrapper)>($r3)
org.apache.camel.component.cache.CacheRegistryRefTest.setUp : virtualinvoke $r4.<org.apache.camel.component.cache.CacheLoaderRegistry: void addCacheLoader(org.apache.camel.component.cache.CacheLoaderWrapper)>($r3) >>>>>>>> org.apache.camel.component.cache.CacheLoaderRegistry.addCacheLoader : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List getCacheLoaders()>()
org.apache.camel.component.cache.CacheLoaderRegistry.addCacheLoader : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List getCacheLoaders()>() >>>>>>>> org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : $r1 = r0.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List registeredCacheLoaders>
org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : $r1 = r0.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List registeredCacheLoaders> >>>>>>>> org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : if $r1 != null
org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : if $r1 != null >>>>>>>> org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : $r3 = new java.util.ArrayList
org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : $r3 = new java.util.ArrayList >>>>>>>> org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : r0.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List registeredCacheLoaders> = $r3
org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : r0.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List registeredCacheLoaders> = $r3 >>>>>>>> org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : $r2 = r0.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List registeredCacheLoaders>
org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : $r2 = r0.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List registeredCacheLoaders> >>>>>>>> org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : return $r2
org.apache.camel.component.cache.CacheLoaderRegistry.getCacheLoaders : return $r2 >>>>>>>> org.apache.camel.component.cache.CacheLoaderRegistry.addCacheLoader : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.camel.component.cache.CacheLoaderRegistry.addCacheLoader : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.setUp : specialinvoke r0.<org.apache.camel.component.BaseCacheTest: void setUp()>()
org.apache.camel.component.cache.CacheRegistryRefTest.setUp : specialinvoke r0.<org.apache.camel.component.BaseCacheTest: void setUp()>() >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : r1 = specialinvoke r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.impl.JndiRegistry createRegistry()>()
org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : r1 = specialinvoke r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.impl.JndiRegistry createRegistry()>() >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : r1 = specialinvoke r0.<org.apache.camel.test.junit4.CamelTestSupport: org.apache.camel.impl.JndiRegistry createRegistry()>()
org.apache.camel.component.BaseCacheTest.createRegistry : r1 = specialinvoke r0.<org.apache.camel.test.junit4.CamelTestSupport: org.apache.camel.impl.JndiRegistry createRegistry()>() >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : $r2 = new org.apache.camel.component.cache.CacheComponent
org.apache.camel.component.BaseCacheTest.createRegistry : $r2 = new org.apache.camel.component.cache.CacheComponent >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : specialinvoke $r2.<org.apache.camel.component.cache.CacheComponent: void <init>()>()
org.apache.camel.component.BaseCacheTest.createRegistry : specialinvoke $r2.<org.apache.camel.component.cache.CacheComponent: void <init>()>() >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache> = $r2
org.apache.camel.component.BaseCacheTest.createRegistry : r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache> = $r2 >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : $r4 = r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache>
org.apache.camel.component.BaseCacheTest.createRegistry : $r4 = r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache> >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : $r3 = new org.apache.camel.component.cache.FileCacheManagerFactory
org.apache.camel.component.BaseCacheTest.createRegistry : $r3 = new org.apache.camel.component.cache.FileCacheManagerFactory >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : specialinvoke $r3.<org.apache.camel.component.cache.FileCacheManagerFactory: void <init>(java.lang.String)>("src/test/resources/test-ehcache.xml")
org.apache.camel.component.BaseCacheTest.createRegistry : specialinvoke $r3.<org.apache.camel.component.cache.FileCacheManagerFactory: void <init>(java.lang.String)>("src/test/resources/test-ehcache.xml") >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : virtualinvoke $r4.<org.apache.camel.component.cache.CacheComponent: void setCacheManagerFactory(org.apache.camel.component.cache.CacheManagerFactory)>($r3)
org.apache.camel.component.BaseCacheTest.createRegistry : virtualinvoke $r4.<org.apache.camel.component.cache.CacheComponent: void setCacheManagerFactory(org.apache.camel.component.cache.CacheManagerFactory)>($r3) >>>>>>>> org.apache.camel.component.cache.CacheComponent.setCacheManagerFactory : r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> = r1
org.apache.camel.component.cache.CacheComponent.setCacheManagerFactory : r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> = r1 >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : $r5 = r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache>
org.apache.camel.component.BaseCacheTest.createRegistry : $r5 = r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.component.cache.CacheComponent cache> >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("cache", $r5)
org.apache.camel.component.BaseCacheTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("cache", $r5) >>>>>>>> org.apache.camel.component.BaseCacheTest.createRegistry : return r1
org.apache.camel.component.BaseCacheTest.createRegistry : return r1 >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : $r2 = r0.<org.apache.camel.component.cache.CacheRegistryRefTest: org.apache.camel.component.cache.CacheEventListenerRegistry eventListenerRegistry>
org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : $r2 = r0.<org.apache.camel.component.cache.CacheRegistryRefTest: org.apache.camel.component.cache.CacheEventListenerRegistry eventListenerRegistry> >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("eventListenerRegistry", $r2)
org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("eventListenerRegistry", $r2) >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : $r3 = r0.<org.apache.camel.component.cache.CacheRegistryRefTest: org.apache.camel.component.cache.CacheLoaderRegistry loaderRegistry>
org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : $r3 = r0.<org.apache.camel.component.cache.CacheRegistryRefTest: org.apache.camel.component.cache.CacheLoaderRegistry loaderRegistry> >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("cacheLoaderRegistry", $r3)
org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("cacheLoaderRegistry", $r3) >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : return r1
org.apache.camel.component.cache.CacheRegistryRefTest.createRegistry : return r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : $r6 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration>
org.apache.camel.component.cache.CacheComponent.createEndpoint : $r6 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration> >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r6, "configuration")
org.apache.camel.component.cache.CacheComponent.createEndpoint : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r6, "configuration") >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : $r8 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration>
org.apache.camel.component.cache.CacheComponent.createEndpoint : $r8 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration> >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : r4 = virtualinvoke $r8.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheConfiguration copy()>()
org.apache.camel.component.cache.CacheComponent.createEndpoint : r4 = virtualinvoke $r8.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheConfiguration copy()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.copy : $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.camel.component.cache.CacheConfiguration.copy : $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.copy : r4 = (org.apache.camel.component.cache.CacheConfiguration) $r1
org.apache.camel.component.cache.CacheConfiguration.copy : r4 = (org.apache.camel.component.cache.CacheConfiguration) $r1 >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.copy : return r4
org.apache.camel.component.cache.CacheConfiguration.copy : return r4 >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r0.<org.apache.camel.component.cache.CacheComponent: void setProperties(java.lang.Object,java.util.Map)>(r4, r3)
org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r0.<org.apache.camel.component.cache.CacheComponent: void setProperties(java.lang.Object,java.util.Map)>(r4, r3) >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.setCacheLoaderRegistry : r0.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheLoaderRegistry cacheLoaderRegistry> = r1
org.apache.camel.component.cache.CacheConfiguration.setCacheLoaderRegistry : r0.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheLoaderRegistry cacheLoaderRegistry> = r1 >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.setEventListenerRegistry : r0.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheEventListenerRegistry eventListenerRegistry> = r1
org.apache.camel.component.cache.CacheConfiguration.setEventListenerRegistry : r0.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheEventListenerRegistry eventListenerRegistry> = r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r4.<org.apache.camel.component.cache.CacheConfiguration: void setCacheName(java.lang.String)>(r2)
org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r4.<org.apache.camel.component.cache.CacheConfiguration: void setCacheName(java.lang.String)>(r2) >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.setCacheName : r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String cacheName> = r1
org.apache.camel.component.cache.CacheConfiguration.setCacheName : r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String cacheName> = r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : $r9 = new org.apache.camel.component.cache.CacheEndpoint
org.apache.camel.component.cache.CacheComponent.createEndpoint : $r9 = new org.apache.camel.component.cache.CacheEndpoint >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : $r10 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.createEndpoint : $r10 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : specialinvoke $r9.<org.apache.camel.component.cache.CacheEndpoint: void <init>(java.lang.String,org.apache.camel.Component,org.apache.camel.component.cache.CacheConfiguration,org.apache.camel.component.cache.CacheManagerFactory)>(r1, r0, r4, $r10)
org.apache.camel.component.cache.CacheComponent.createEndpoint : specialinvoke $r9.<org.apache.camel.component.cache.CacheEndpoint: void <init>(java.lang.String,org.apache.camel.Component,org.apache.camel.component.cache.CacheConfiguration,org.apache.camel.component.cache.CacheManagerFactory)>(r1, r0, r4, $r10) >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r0.<org.apache.camel.component.cache.CacheComponent: void setProperties(java.lang.Object,java.util.Map)>($r9, r3)
org.apache.camel.component.cache.CacheComponent.createEndpoint : virtualinvoke r0.<org.apache.camel.component.cache.CacheComponent: void setProperties(java.lang.Object,java.util.Map)>($r9, r3) >>>>>>>> org.apache.camel.component.cache.CacheComponent.createEndpoint : return $r9
org.apache.camel.component.cache.CacheComponent.createEndpoint : return $r9 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.isSingleton : return 1
org.apache.camel.component.cache.CacheEndpoint.isSingleton : return 1 >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRegistryRefTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>()
org.apache.camel.component.cache.CacheRegistryRefTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRegistryRefTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>() >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRouteBuilder : $r1 = new org.apache.camel.component.cache.CacheRegistryRefTest$1
org.apache.camel.component.cache.CacheRegistryRefTest.createRouteBuilder : $r1 = new org.apache.camel.component.cache.CacheRegistryRefTest$1 >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRouteBuilder : specialinvoke $r1.<org.apache.camel.component.cache.CacheRegistryRefTest$1: void <init>(org.apache.camel.component.cache.CacheRegistryRefTest)>(r0)
org.apache.camel.component.cache.CacheRegistryRefTest.createRouteBuilder : specialinvoke $r1.<org.apache.camel.component.cache.CacheRegistryRefTest$1: void <init>(org.apache.camel.component.cache.CacheRegistryRefTest)>(r0) >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest.createRouteBuilder : return $r1
org.apache.camel.component.cache.CacheRegistryRefTest.createRouteBuilder : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest$1.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRegistryRefTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:start")
org.apache.camel.component.cache.CacheRegistryRefTest$1.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRegistryRefTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:start") >>>>>>>> org.apache.camel.component.cache.CacheRegistryRefTest$1.configure : virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://foo?eventListenerRegistry=#eventListenerRegistry&cacheLoaderRegistry=#cacheLoaderRegistry")
org.apache.camel.component.cache.CacheRegistryRefTest$1.configure : virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://foo?eventListenerRegistry=#eventListenerRegistry&cacheLoaderRegistry=#cacheLoaderRegistry") >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : specialinvoke r0.<org.apache.camel.impl.UriEndpointComponent: void doStart()>()
org.apache.camel.component.cache.CacheComponent.doStart : specialinvoke r0.<org.apache.camel.impl.UriEndpointComponent: void doStart()>() >>>>>>>> org.apache.camel.component.cache.CacheComponent.getConfiguration : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration>
org.apache.camel.component.cache.CacheComponent.getConfiguration : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheConfiguration configuration> >>>>>>>> org.apache.camel.component.cache.CacheComponent.getConfiguration : return $r1
org.apache.camel.component.cache.CacheComponent.getConfiguration : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : return $r1
org.apache.camel.component.cache.CacheComponent.getCacheManagerFactory : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.getConfigurationFile : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: java.lang.String configurationFile>
org.apache.camel.component.cache.CacheComponent.getConfigurationFile : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: java.lang.String configurationFile> >>>>>>>> org.apache.camel.component.cache.CacheComponent.getConfigurationFile : return $r1
org.apache.camel.component.cache.CacheComponent.getConfigurationFile : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : $r2 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.doStart : $r2 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : if $r2 != null
org.apache.camel.component.cache.CacheComponent.doStart : if $r2 != null >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : $r9 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.doStart : $r9 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStart : staticinvoke <org.apache.camel.util.ServiceHelper: void startService(org.apache.camel.Service)>($r9)
org.apache.camel.component.cache.CacheComponent.doStart : staticinvoke <org.apache.camel.util.ServiceHelper: void startService(org.apache.camel.Service)>($r9) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r1, "config")
org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r1, "config") >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r3, "cacheManagerFactory")
org.apache.camel.component.cache.CacheEndpoint.createProducer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r3, "cacheManagerFactory") >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r5 = new org.apache.camel.component.cache.CacheProducer
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r5 = new org.apache.camel.component.cache.CacheProducer >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : $r6 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.createProducer : $r6 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : specialinvoke $r5.<org.apache.camel.component.cache.CacheProducer: void <init>(org.apache.camel.component.cache.CacheEndpoint,org.apache.camel.component.cache.CacheConfiguration)>(r0, $r6)
org.apache.camel.component.cache.CacheEndpoint.createProducer : specialinvoke $r5.<org.apache.camel.component.cache.CacheProducer: void <init>(org.apache.camel.component.cache.CacheEndpoint,org.apache.camel.component.cache.CacheConfiguration)>(r0, $r6) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createProducer : return $r5
org.apache.camel.component.cache.CacheEndpoint.createProducer : return $r5 >>>>>>>> org.apache.camel.component.cache.CacheProducer.doStart : specialinvoke r0.<org.apache.camel.impl.DefaultProducer: void doStart()>()
org.apache.camel.component.cache.CacheProducer.doStart : specialinvoke r0.<org.apache.camel.impl.DefaultProducer: void doStart()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.doStart : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducer: org.apache.camel.component.cache.CacheEndpoint getEndpoint()>()
org.apache.camel.component.cache.CacheProducer.doStart : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheProducer: org.apache.camel.component.cache.CacheEndpoint getEndpoint()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.getEndpoint : $r1 = specialinvoke r0.<org.apache.camel.impl.DefaultProducer: org.apache.camel.Endpoint getEndpoint()>()
org.apache.camel.component.cache.CacheProducer.getEndpoint : $r1 = specialinvoke r0.<org.apache.camel.impl.DefaultProducer: org.apache.camel.Endpoint getEndpoint()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.getEndpoint : $r2 = (org.apache.camel.component.cache.CacheEndpoint) $r1
org.apache.camel.component.cache.CacheProducer.getEndpoint : $r2 = (org.apache.camel.component.cache.CacheEndpoint) $r1 >>>>>>>> org.apache.camel.component.cache.CacheProducer.getEndpoint : return $r2
org.apache.camel.component.cache.CacheProducer.getEndpoint : return $r2 >>>>>>>> org.apache.camel.component.cache.CacheProducer.doStart : $r2 = virtualinvoke $r1.<org.apache.camel.component.cache.CacheEndpoint: net.sf.ehcache.Ehcache initializeCache()>()
org.apache.camel.component.cache.CacheProducer.doStart : $r2 = virtualinvoke $r1.<org.apache.camel.component.cache.CacheEndpoint: net.sf.ehcache.Ehcache initializeCache()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : $r1 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : return $r1
org.apache.camel.component.cache.CacheEndpoint.getCacheManagerFactory : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>() >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r3 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r3 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : if $r3 != null
org.apache.camel.component.cache.CacheManagerFactory.getInstance : if $r3 != null >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r4 = virtualinvoke r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager createCacheManagerInstance()>()
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r4 = virtualinvoke r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager createCacheManagerInstance()>() >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r2 = new java.io.FileInputStream
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r2 = new java.io.FileInputStream >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r3 = r0.<org.apache.camel.component.cache.FileCacheManagerFactory: java.lang.String fileName>
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r3 = r0.<org.apache.camel.component.cache.FileCacheManagerFactory: java.lang.String fileName> >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r2.<java.io.FileInputStream: void <init>(java.lang.String)>($r3)
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r2.<java.io.FileInputStream: void <init>(java.lang.String)>($r3) >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r6 = new org.apache.camel.RuntimeCamelException
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r6 = new org.apache.camel.RuntimeCamelException >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r7 = new java.lang.StringBuilder
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating CacheManager from file: ")
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating CacheManager from file: ") >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r9 = r0.<org.apache.camel.component.cache.FileCacheManagerFactory: java.lang.String fileName>
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r9 = r0.<org.apache.camel.component.cache.FileCacheManagerFactory: java.lang.String fileName> >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r6.<org.apache.camel.RuntimeCamelException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r5)
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : specialinvoke $r6.<org.apache.camel.RuntimeCamelException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r5) >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : throw $r6
org.apache.camel.component.cache.FileCacheManagerFactory.createCacheManagerInstance : throw $r6 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>()
org.apache.camel.component.cache.CacheEndpoint.stop : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory getCacheManagerFactory()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>()
org.apache.camel.component.cache.CacheEndpoint.stop : r1 = virtualinvoke $r2.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager getInstance()>() >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStop : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheComponent.doStop : $r1 = r0.<org.apache.camel.component.cache.CacheComponent: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStop : staticinvoke <org.apache.camel.util.ServiceHelper: void stopService(java.lang.Object)>($r1)
org.apache.camel.component.cache.CacheComponent.doStop : staticinvoke <org.apache.camel.util.ServiceHelper: void stopService(java.lang.Object)>($r1) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.doStop : $r1 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheManagerFactory.doStop : $r1 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.doStop : if $r1 == null
org.apache.camel.component.cache.CacheManagerFactory.doStop : if $r1 == null >>>>>>>> org.apache.camel.component.cache.CacheComponent.doStop : specialinvoke r0.<org.apache.camel.impl.UriEndpointComponent: void doStop()>()
org.apache.camel.component.cache.CacheComponent.doStop : specialinvoke r0.<org.apache.camel.impl.UriEndpointComponent: void doStop()>() >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerFIFOTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>()
org.apache.camel.component.cache.CacheConsumerFIFOTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerFIFOTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>() >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest.createRouteBuilder : $r1 = new org.apache.camel.component.cache.CacheConsumerFIFOTest$1
org.apache.camel.component.cache.CacheConsumerFIFOTest.createRouteBuilder : $r1 = new org.apache.camel.component.cache.CacheConsumerFIFOTest$1 >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest.createRouteBuilder : specialinvoke $r1.<org.apache.camel.component.cache.CacheConsumerFIFOTest$1: void <init>(org.apache.camel.component.cache.CacheConsumerFIFOTest)>(r0)
org.apache.camel.component.cache.CacheConsumerFIFOTest.createRouteBuilder : specialinvoke $r1.<org.apache.camel.component.cache.CacheConsumerFIFOTest$1: void <init>(org.apache.camel.component.cache.CacheConsumerFIFOTest)>(r0) >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest.createRouteBuilder : return $r1
org.apache.camel.component.cache.CacheConsumerFIFOTest.createRouteBuilder : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerFIFOTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("cache://TestCache1?memoryStoreEvictionPolicy=FIFO")
org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerFIFOTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("cache://TestCache1?memoryStoreEvictionPolicy=FIFO") >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r2 = new org.apache.camel.component.cache.CacheConsumerFIFOTest$1$1
org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r2 = new org.apache.camel.component.cache.CacheConsumerFIFOTest$1$1 >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : specialinvoke $r2.<org.apache.camel.component.cache.CacheConsumerFIFOTest$1$1: void <init>(org.apache.camel.component.cache.CacheConsumerFIFOTest$1)>(r0)
org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : specialinvoke $r2.<org.apache.camel.component.cache.CacheConsumerFIFOTest$1$1: void <init>(org.apache.camel.component.cache.CacheConsumerFIFOTest$1)>(r0) >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition process(org.apache.camel.Processor)>($r2)
org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition process(org.apache.camel.Processor)>($r2) >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3
org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3 >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:result")
org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:result") >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r6 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerFIFOTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:start")
org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : $r6 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerFIFOTest$1: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:start") >>>>>>>> org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : virtualinvoke $r6.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://TestCache1")
org.apache.camel.component.cache.CacheConsumerFIFOTest$1.configure : virtualinvoke $r6.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://TestCache1") >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>()
org.apache.camel.component.cache.CacheConsumerTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>() >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest.createRouteBuilder : $r1 = new org.apache.camel.component.cache.CacheConsumerTest$3
org.apache.camel.component.cache.CacheConsumerTest.createRouteBuilder : $r1 = new org.apache.camel.component.cache.CacheConsumerTest$3 >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest.createRouteBuilder : specialinvoke $r1.<org.apache.camel.component.cache.CacheConsumerTest$3: void <init>(org.apache.camel.component.cache.CacheConsumerTest)>(r0)
org.apache.camel.component.cache.CacheConsumerTest.createRouteBuilder : specialinvoke $r1.<org.apache.camel.component.cache.CacheConsumerTest$3: void <init>(org.apache.camel.component.cache.CacheConsumerTest)>(r0) >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest.createRouteBuilder : return $r1
org.apache.camel.component.cache.CacheConsumerTest.createRouteBuilder : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerTest$3: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("cache://TestCache1")
org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerTest$3: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("cache://TestCache1") >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r2 = new org.apache.camel.component.cache.CacheConsumerTest$3$1
org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r2 = new org.apache.camel.component.cache.CacheConsumerTest$3$1 >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest$3.configure : specialinvoke $r2.<org.apache.camel.component.cache.CacheConsumerTest$3$1: void <init>(org.apache.camel.component.cache.CacheConsumerTest$3)>(r0)
org.apache.camel.component.cache.CacheConsumerTest$3.configure : specialinvoke $r2.<org.apache.camel.component.cache.CacheConsumerTest$3$1: void <init>(org.apache.camel.component.cache.CacheConsumerTest$3)>(r0) >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition process(org.apache.camel.Processor)>($r2)
org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition process(org.apache.camel.Processor)>($r2) >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3
org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3 >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest$3.configure : virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:result")
org.apache.camel.component.cache.CacheConsumerTest$3.configure : virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("mock:result") >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r6 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerTest$3: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:start")
org.apache.camel.component.cache.CacheConsumerTest$3.configure : $r6 = virtualinvoke r0.<org.apache.camel.component.cache.CacheConsumerTest$3: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:start") >>>>>>>> org.apache.camel.component.cache.CacheConsumerTest$3.configure : virtualinvoke $r6.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://TestCache1")
org.apache.camel.component.cache.CacheConsumerTest$3.configure : virtualinvoke $r6.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache://TestCache1") >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createConsumer : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.createConsumer : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createConsumer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r3, "config")
org.apache.camel.component.cache.CacheEndpoint.createConsumer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r3, "config") >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createConsumer : $r5 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory>
org.apache.camel.component.cache.CacheEndpoint.createConsumer : $r5 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createConsumer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r5, "cacheManagerFactory")
org.apache.camel.component.cache.CacheEndpoint.createConsumer : staticinvoke <org.apache.camel.util.ObjectHelper: java.lang.Object notNull(java.lang.Object,java.lang.String)>($r5, "cacheManagerFactory") >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createConsumer : $r7 = new org.apache.camel.component.cache.CacheConsumer
org.apache.camel.component.cache.CacheEndpoint.createConsumer : $r7 = new org.apache.camel.component.cache.CacheConsumer >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createConsumer : $r8 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.createConsumer : $r8 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createConsumer : specialinvoke $r7.<org.apache.camel.component.cache.CacheConsumer: void <init>(org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.component.cache.CacheConfiguration)>(r0, r1, $r8)
org.apache.camel.component.cache.CacheEndpoint.createConsumer : specialinvoke $r7.<org.apache.camel.component.cache.CacheConsumer: void <init>(org.apache.camel.Endpoint,org.apache.camel.Processor,org.apache.camel.component.cache.CacheConfiguration)>(r0, r1, $r8) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createConsumer : virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: void configureConsumer(org.apache.camel.Consumer)>($r7)
org.apache.camel.component.cache.CacheEndpoint.createConsumer : virtualinvoke r0.<org.apache.camel.component.cache.CacheEndpoint: void configureConsumer(org.apache.camel.Consumer)>($r7) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.createConsumer : return $r7
org.apache.camel.component.cache.CacheEndpoint.createConsumer : return $r7 >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : $r2 = new org.apache.camel.impl.JndiRegistry
org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : $r2 = new org.apache.camel.impl.JndiRegistry >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : $r3 = virtualinvoke r0.<org.apache.camel.component.cache.FileCacheManagerFactoyRefTest: javax.naming.Context createJndiContext()>()
org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : $r3 = virtualinvoke r0.<org.apache.camel.component.cache.FileCacheManagerFactoyRefTest: javax.naming.Context createJndiContext()>() >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : specialinvoke $r2.<org.apache.camel.impl.JndiRegistry: void <init>(javax.naming.Context)>($r3)
org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : specialinvoke $r2.<org.apache.camel.impl.JndiRegistry: void <init>(javax.naming.Context)>($r3) >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : $r4 = new org.apache.camel.component.cache.FileCacheManagerFactory
org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : $r4 = new org.apache.camel.component.cache.FileCacheManagerFactory >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : specialinvoke $r4.<org.apache.camel.component.cache.FileCacheManagerFactory: void <init>(java.lang.String)>("src/test/resources/test-ehcache.xml")
org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : specialinvoke $r4.<org.apache.camel.component.cache.FileCacheManagerFactory: void <init>(java.lang.String)>("src/test/resources/test-ehcache.xml") >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : r0.<org.apache.camel.component.cache.FileCacheManagerFactoyRefTest: org.apache.camel.component.cache.CacheManagerFactory testingCacheManagerFactory> = $r4
org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : r0.<org.apache.camel.component.cache.FileCacheManagerFactoyRefTest: org.apache.camel.component.cache.CacheManagerFactory testingCacheManagerFactory> = $r4 >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : $r5 = r0.<org.apache.camel.component.cache.FileCacheManagerFactoyRefTest: org.apache.camel.component.cache.CacheManagerFactory testingCacheManagerFactory>
org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : $r5 = r0.<org.apache.camel.component.cache.FileCacheManagerFactoyRefTest: org.apache.camel.component.cache.CacheManagerFactory testingCacheManagerFactory> >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : virtualinvoke $r2.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("testCacheManagerFactory", $r5)
org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : virtualinvoke $r2.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("testCacheManagerFactory", $r5) >>>>>>>> org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : return $r2
org.apache.camel.component.cache.FileCacheManagerFactoyRefTest.createRegistry : return $r2 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest.createRegistry : r1 = specialinvoke r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.impl.JndiRegistry createRegistry()>()
org.apache.camel.component.cache.CacheRoutesManagementTest.createRegistry : r1 = specialinvoke r0.<org.apache.camel.component.BaseCacheTest: org.apache.camel.impl.JndiRegistry createRegistry()>() >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest.createRegistry : $r2 = r0.<org.apache.camel.component.cache.CacheRoutesManagementTest: org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory cmfRef>
org.apache.camel.component.cache.CacheRoutesManagementTest.createRegistry : $r2 = r0.<org.apache.camel.component.cache.CacheRoutesManagementTest: org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory cmfRef> >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("cacheManagerFactory", $r2)
org.apache.camel.component.cache.CacheRoutesManagementTest.createRegistry : virtualinvoke r1.<org.apache.camel.impl.JndiRegistry: void bind(java.lang.String,java.lang.Object)>("cacheManagerFactory", $r2) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest.createRegistry : return r1
org.apache.camel.component.cache.CacheRoutesManagementTest.createRegistry : return r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.setCacheManagerFactory : r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> = r1
org.apache.camel.component.cache.CacheEndpoint.setCacheManagerFactory : r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheManagerFactory cacheManagerFactory> = r1 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>()
org.apache.camel.component.cache.CacheRoutesManagementTest.createRouteBuilder : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest: org.apache.camel.builder.RouteBuilder createRouteBuilder()>() >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest.createRouteBuilder : $r1 = new org.apache.camel.component.cache.CacheRoutesManagementTest$2
org.apache.camel.component.cache.CacheRoutesManagementTest.createRouteBuilder : $r1 = new org.apache.camel.component.cache.CacheRoutesManagementTest$2 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest.createRouteBuilder : specialinvoke $r1.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: void <init>(org.apache.camel.component.cache.CacheRoutesManagementTest)>(r0)
org.apache.camel.component.cache.CacheRoutesManagementTest.createRouteBuilder : specialinvoke $r1.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: void <init>(org.apache.camel.component.cache.CacheRoutesManagementTest)>(r0) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest.createRouteBuilder : return $r1
org.apache.camel.component.cache.CacheRoutesManagementTest.createRouteBuilder : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:add1")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r1 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:add1") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r2 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r2)
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r3 = virtualinvoke $r1.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r2) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r4 = (org.apache.camel.model.RouteDefinition) $r3 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r5 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r5 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r6 = virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r5)
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r6 = virtualinvoke $r4.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r5) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r7 = (org.apache.camel.model.RouteDefinition) $r6
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r7 = (org.apache.camel.model.RouteDefinition) $r6 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r8 = virtualinvoke $r7.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache:foo?cacheManagerFactory=#cacheManagerFactory")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r8 = virtualinvoke $r7.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache:foo?cacheManagerFactory=#cacheManagerFactory") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r9 = (org.apache.camel.model.RouteDefinition) $r8
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r9 = (org.apache.camel.model.RouteDefinition) $r8 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : virtualinvoke $r9.<org.apache.camel.model.RouteDefinition: void setId(java.lang.String)>("TEST_ROUTE_1")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : virtualinvoke $r9.<org.apache.camel.model.RouteDefinition: void setId(java.lang.String)>("TEST_ROUTE_1") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r10 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:add2")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r10 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.model.RouteDefinition 'from'(java.lang.String)>("direct:add2") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r11 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r11 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("CamelCacheAdd") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r12 = virtualinvoke $r10.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r11)
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r12 = virtualinvoke $r10.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheOperation", $r11) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r13 = (org.apache.camel.model.RouteDefinition) $r12
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r13 = (org.apache.camel.model.RouteDefinition) $r12 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r14 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r14 = virtualinvoke r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$2: org.apache.camel.builder.ValueBuilder constant(java.lang.Object)>("foo") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r15 = virtualinvoke $r13.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r14)
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r15 = virtualinvoke $r13.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition setHeader(java.lang.String,org.apache.camel.Expression)>("CamelCacheKey", $r14) >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r16 = (org.apache.camel.model.RouteDefinition) $r15
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r16 = (org.apache.camel.model.RouteDefinition) $r15 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r17 = virtualinvoke $r16.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache:foo?cacheManagerFactory=#cacheManagerFactory")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r17 = virtualinvoke $r16.<org.apache.camel.model.RouteDefinition: org.apache.camel.model.ProcessorDefinition 'to'(java.lang.String)>("cache:foo?cacheManagerFactory=#cacheManagerFactory") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r18 = (org.apache.camel.model.RouteDefinition) $r17
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : $r18 = (org.apache.camel.model.RouteDefinition) $r17 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : virtualinvoke $r18.<org.apache.camel.model.RouteDefinition: void setId(java.lang.String)>("TEST_ROUTE_2")
org.apache.camel.component.cache.CacheRoutesManagementTest$2.configure : virtualinvoke $r18.<org.apache.camel.model.RouteDefinition: void setId(java.lang.String)>("TEST_ROUTE_2") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : $r1 = r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : $r1 = r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : if $r1 != null
org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : if $r1 != null >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : $r3 = staticinvoke <net.sf.ehcache.CacheManager: net.sf.ehcache.CacheManager create()>()
org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : $r3 = staticinvoke <net.sf.ehcache.CacheManager: net.sf.ehcache.CacheManager create()>() >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> = $r3
org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> = $r3 >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : $r2 = r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : $r2 = r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : return $r2
org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.createCacheManagerInstance : return $r2 >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> = $r4
org.apache.camel.component.cache.CacheManagerFactory.getInstance : r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> = $r4 >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r5 = <org.apache.camel.component.cache.CacheManagerFactory: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r5 = <org.apache.camel.component.cache.CacheManagerFactory: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>("Turning off EHCache update checker ...")
org.apache.camel.component.cache.CacheManagerFactory.getInstance : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>("Turning off EHCache update checker ...") >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r6 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r6 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : r1 = virtualinvoke $r6.<net.sf.ehcache.CacheManager: net.sf.ehcache.config.Configuration getConfiguration()>()
org.apache.camel.component.cache.CacheManagerFactory.getInstance : r1 = virtualinvoke $r6.<net.sf.ehcache.CacheManager: net.sf.ehcache.config.Configuration getConfiguration()>() >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("net.sf.ehcache.skipUpdateCheck", "true")
org.apache.camel.component.cache.CacheManagerFactory.getInstance : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("net.sf.ehcache.skipUpdateCheck", "true") >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("updateCheck")
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("updateCheck") >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : staticinvoke <org.apache.camel.util.ReflectionHelper: void setField(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>($r9, r1, $r10)
org.apache.camel.component.cache.CacheManagerFactory.getInstance : staticinvoke <org.apache.camel.util.ReflectionHelper: void setField(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>($r9, r1, $r10) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r11 = <org.apache.camel.component.cache.CacheManagerFactory: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r11 = <org.apache.camel.component.cache.CacheManagerFactory: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $z0 = virtualinvoke r1.<net.sf.ehcache.config.Configuration: boolean getUpdateCheck()>()
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $z0 = virtualinvoke r1.<net.sf.ehcache.config.Configuration: boolean getUpdateCheck()>() >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Turned off EHCache update checker. updateCheck={}", $r12)
org.apache.camel.component.cache.CacheManagerFactory.getInstance : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Turned off EHCache update checker. updateCheck={}", $r12) >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : goto [?= $r15 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>]
org.apache.camel.component.cache.CacheManagerFactory.getInstance : goto [?= $r15 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>] >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r15 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheManagerFactory.getInstance : $r15 = r0.<org.apache.camel.component.cache.CacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheManagerFactory.getInstance : return $r15
org.apache.camel.component.cache.CacheManagerFactory.getInstance : return $r15 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r4 = virtualinvoke $r3.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r4 = virtualinvoke $r3.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getCacheName : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String cacheName>
org.apache.camel.component.cache.CacheConfiguration.getCacheName : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String cacheName> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getCacheName : return $r1
org.apache.camel.component.cache.CacheConfiguration.getCacheName : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z0 = virtualinvoke r1.<net.sf.ehcache.CacheManager: boolean cacheExists(java.lang.String)>($r4)
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z0 = virtualinvoke r1.<net.sf.ehcache.CacheManager: boolean cacheExists(java.lang.String)>($r4) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z0 == 0
org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z0 == 0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r5 = new net.sf.ehcache.Cache
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r5 = new net.sf.ehcache.Cache >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r6 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r6 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r7 = virtualinvoke $r6.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r7 = virtualinvoke $r6.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r8 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r8 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $i0 = virtualinvoke $r8.<org.apache.camel.component.cache.CacheConfiguration: int getMaxElementsInMemory()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $i0 = virtualinvoke $r8.<org.apache.camel.component.cache.CacheConfiguration: int getMaxElementsInMemory()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getMaxElementsInMemory : $i0 = r0.<org.apache.camel.component.cache.CacheConfiguration: int maxElementsInMemory>
org.apache.camel.component.cache.CacheConfiguration.getMaxElementsInMemory : $i0 = r0.<org.apache.camel.component.cache.CacheConfiguration: int maxElementsInMemory> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getMaxElementsInMemory : return $i0
org.apache.camel.component.cache.CacheConfiguration.getMaxElementsInMemory : return $i0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r9 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r9 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r10 = virtualinvoke $r9.<org.apache.camel.component.cache.CacheConfiguration: net.sf.ehcache.store.MemoryStoreEvictionPolicy getMemoryStoreEvictionPolicy()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r10 = virtualinvoke $r9.<org.apache.camel.component.cache.CacheConfiguration: net.sf.ehcache.store.MemoryStoreEvictionPolicy getMemoryStoreEvictionPolicy()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getMemoryStoreEvictionPolicy : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: net.sf.ehcache.store.MemoryStoreEvictionPolicy memoryStoreEvictionPolicy>
org.apache.camel.component.cache.CacheConfiguration.getMemoryStoreEvictionPolicy : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: net.sf.ehcache.store.MemoryStoreEvictionPolicy memoryStoreEvictionPolicy> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getMemoryStoreEvictionPolicy : return $r1
org.apache.camel.component.cache.CacheConfiguration.getMemoryStoreEvictionPolicy : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r11 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r11 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z1 = virtualinvoke $r11.<org.apache.camel.component.cache.CacheConfiguration: boolean isOverflowToDisk()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z1 = virtualinvoke $r11.<org.apache.camel.component.cache.CacheConfiguration: boolean isOverflowToDisk()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.isOverflowToDisk : $z0 = r0.<org.apache.camel.component.cache.CacheConfiguration: boolean overflowToDisk>
org.apache.camel.component.cache.CacheConfiguration.isOverflowToDisk : $z0 = r0.<org.apache.camel.component.cache.CacheConfiguration: boolean overflowToDisk> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.isOverflowToDisk : return $z0
org.apache.camel.component.cache.CacheConfiguration.isOverflowToDisk : return $z0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r12 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r12 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r13 = virtualinvoke $r12.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getDiskStorePath()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r13 = virtualinvoke $r12.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getDiskStorePath()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getDiskStorePath : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String diskStorePath>
org.apache.camel.component.cache.CacheConfiguration.getDiskStorePath : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String diskStorePath> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getDiskStorePath : return $r1
org.apache.camel.component.cache.CacheConfiguration.getDiskStorePath : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r14 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r14 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z2 = virtualinvoke $r14.<org.apache.camel.component.cache.CacheConfiguration: boolean isEternal()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z2 = virtualinvoke $r14.<org.apache.camel.component.cache.CacheConfiguration: boolean isEternal()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.isEternal : $z0 = r0.<org.apache.camel.component.cache.CacheConfiguration: boolean eternal>
org.apache.camel.component.cache.CacheConfiguration.isEternal : $z0 = r0.<org.apache.camel.component.cache.CacheConfiguration: boolean eternal> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.isEternal : return $z0
org.apache.camel.component.cache.CacheConfiguration.isEternal : return $z0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r15 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r15 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $l1 = virtualinvoke $r15.<org.apache.camel.component.cache.CacheConfiguration: long getTimeToLiveSeconds()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $l1 = virtualinvoke $r15.<org.apache.camel.component.cache.CacheConfiguration: long getTimeToLiveSeconds()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getTimeToLiveSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long timeToLiveSeconds>
org.apache.camel.component.cache.CacheConfiguration.getTimeToLiveSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long timeToLiveSeconds> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getTimeToLiveSeconds : return $l0
org.apache.camel.component.cache.CacheConfiguration.getTimeToLiveSeconds : return $l0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r16 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r16 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $l2 = virtualinvoke $r16.<org.apache.camel.component.cache.CacheConfiguration: long getTimeToIdleSeconds()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $l2 = virtualinvoke $r16.<org.apache.camel.component.cache.CacheConfiguration: long getTimeToIdleSeconds()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long timeToIdleSeconds>
org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long timeToIdleSeconds> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : return $l0
org.apache.camel.component.cache.CacheConfiguration.getTimeToIdleSeconds : return $l0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r17 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r17 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z3 = virtualinvoke $r17.<org.apache.camel.component.cache.CacheConfiguration: boolean isDiskPersistent()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z3 = virtualinvoke $r17.<org.apache.camel.component.cache.CacheConfiguration: boolean isDiskPersistent()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.isDiskPersistent : $z0 = r0.<org.apache.camel.component.cache.CacheConfiguration: boolean diskPersistent>
org.apache.camel.component.cache.CacheConfiguration.isDiskPersistent : $z0 = r0.<org.apache.camel.component.cache.CacheConfiguration: boolean diskPersistent> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.isDiskPersistent : return $z0
org.apache.camel.component.cache.CacheConfiguration.isDiskPersistent : return $z0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r18 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r18 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $l3 = virtualinvoke $r18.<org.apache.camel.component.cache.CacheConfiguration: long getDiskExpiryThreadIntervalSeconds()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $l3 = virtualinvoke $r18.<org.apache.camel.component.cache.CacheConfiguration: long getDiskExpiryThreadIntervalSeconds()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getDiskExpiryThreadIntervalSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long diskExpiryThreadIntervalSeconds>
org.apache.camel.component.cache.CacheConfiguration.getDiskExpiryThreadIntervalSeconds : $l0 = r0.<org.apache.camel.component.cache.CacheConfiguration: long diskExpiryThreadIntervalSeconds> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getDiskExpiryThreadIntervalSeconds : return $l0
org.apache.camel.component.cache.CacheConfiguration.getDiskExpiryThreadIntervalSeconds : return $l0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : specialinvoke $r5.<net.sf.ehcache.Cache: void <init>(java.lang.String,int,net.sf.ehcache.store.MemoryStoreEvictionPolicy,boolean,java.lang.String,boolean,long,long,boolean,long,net.sf.ehcache.event.RegisteredEventListeners)>($r7, $i0, $r10, $z1, $r13, $z2, $l1, $l2, $z3, $l3, null)
org.apache.camel.component.cache.CacheEndpoint.initializeCache : specialinvoke $r5.<net.sf.ehcache.Cache: void <init>(java.lang.String,int,net.sf.ehcache.store.MemoryStoreEvictionPolicy,boolean,java.lang.String,boolean,long,long,boolean,long,net.sf.ehcache.event.RegisteredEventListeners)>($r7, $i0, $r10, $z1, $r13, $z2, $l1, $l2, $z3, $l3, null) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : r48 = $r5
org.apache.camel.component.cache.CacheEndpoint.initializeCache : r48 = $r5 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r19 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r19 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r20 = virtualinvoke $r19.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheEventListenerRegistry getEventListenerRegistry()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r20 = virtualinvoke $r19.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheEventListenerRegistry getEventListenerRegistry()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getEventListenerRegistry : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheEventListenerRegistry eventListenerRegistry>
org.apache.camel.component.cache.CacheConfiguration.getEventListenerRegistry : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheEventListenerRegistry eventListenerRegistry> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getEventListenerRegistry : return $r1
org.apache.camel.component.cache.CacheConfiguration.getEventListenerRegistry : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r21 = virtualinvoke $r20.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List getEventListeners()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r21 = virtualinvoke $r20.<org.apache.camel.component.cache.CacheEventListenerRegistry: java.util.List getEventListeners()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : r49 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : r49 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z4 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z4 == 0
org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z4 == 0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r22 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r22 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r23 = virtualinvoke $r22.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheLoaderRegistry getCacheLoaderRegistry()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r23 = virtualinvoke $r22.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheLoaderRegistry getCacheLoaderRegistry()>() >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getCacheLoaderRegistry : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheLoaderRegistry cacheLoaderRegistry>
org.apache.camel.component.cache.CacheConfiguration.getCacheLoaderRegistry : $r1 = r0.<org.apache.camel.component.cache.CacheConfiguration: org.apache.camel.component.cache.CacheLoaderRegistry cacheLoaderRegistry> >>>>>>>> org.apache.camel.component.cache.CacheConfiguration.getCacheLoaderRegistry : return $r1
org.apache.camel.component.cache.CacheConfiguration.getCacheLoaderRegistry : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r24 = virtualinvoke $r23.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List getCacheLoaders()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r24 = virtualinvoke $r23.<org.apache.camel.component.cache.CacheLoaderRegistry: java.util.List getCacheLoaders()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : r51 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : r51 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z5 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z5 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z5 == 0
org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z5 == 0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : virtualinvoke r1.<net.sf.ehcache.CacheManager: void addCache(net.sf.ehcache.Ehcache)>($r5)
org.apache.camel.component.cache.CacheEndpoint.initializeCache : virtualinvoke r1.<net.sf.ehcache.CacheManager: void addCache(net.sf.ehcache.Ehcache)>($r5) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r25 = <org.apache.camel.component.cache.CacheEndpoint: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r25 = <org.apache.camel.component.cache.CacheEndpoint: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z6 = interfaceinvoke $r25.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z6 = interfaceinvoke $r25.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z6 == 0
org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z6 == 0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : return r48
org.apache.camel.component.cache.CacheEndpoint.initializeCache : return r48 >>>>>>>> org.apache.camel.component.cache.CacheProducer.doStart : r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache> = $r2
org.apache.camel.component.cache.CacheProducer.doStart : r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache> = $r2 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r35 = <org.apache.camel.component.cache.CacheEndpoint: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r35 = <org.apache.camel.component.cache.CacheEndpoint: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z8 = interfaceinvoke $r35.<org.slf4j.Logger: boolean isTraceEnabled()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $z8 = interfaceinvoke $r35.<org.slf4j.Logger: boolean isTraceEnabled()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z8 == 0
org.apache.camel.component.cache.CacheEndpoint.initializeCache : if $z8 == 0 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r36 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r36 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r37 = virtualinvoke $r36.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>()
org.apache.camel.component.cache.CacheEndpoint.initializeCache : $r37 = virtualinvoke $r36.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : r48 = virtualinvoke r1.<net.sf.ehcache.CacheManager: net.sf.ehcache.Ehcache getEhcache(java.lang.String)>($r37)
org.apache.camel.component.cache.CacheEndpoint.initializeCache : r48 = virtualinvoke r1.<net.sf.ehcache.CacheManager: net.sf.ehcache.Ehcache getEhcache(java.lang.String)>($r37) >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.initializeCache : goto [?= return r48]
org.apache.camel.component.cache.CacheEndpoint.initializeCache : goto [?= return r48] >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$1.process : interfaceinvoke r1.<org.apache.camel.Exchange: void setProperty(java.lang.String,java.lang.Object)>("CamelCharsetName", "UTF-8")
org.apache.camel.component.cache.CacheRoutesManagementTest$1.process : interfaceinvoke r1.<org.apache.camel.Exchange: void setProperty(java.lang.String,java.lang.Object)>("CamelCharsetName", "UTF-8") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$1.process : r2 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheRoutesManagementTest$1.process : r2 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$1.process : interfaceinvoke r2.<org.apache.camel.Message: void setBody(java.lang.Object)>("Hello World")
org.apache.camel.component.cache.CacheRoutesManagementTest$1.process : interfaceinvoke r2.<org.apache.camel.Message: void setBody(java.lang.Object)>("Hello World") >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r6 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheProducer.process : $r6 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r5 = r0.<org.apache.camel.component.cache.CacheProducer: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheProducer.process : $r5 = r0.<org.apache.camel.component.cache.CacheProducer: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r7 = virtualinvoke $r5.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>()
org.apache.camel.component.cache.CacheProducer.process : $r7 = virtualinvoke $r5.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Cache Name: {}", $r7)
org.apache.camel.component.cache.CacheProducer.process : interfaceinvoke $r6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Cache Name: {}", $r7) >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r8 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.process : $r8 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : r2 = interfaceinvoke $r8.<org.apache.camel.Message: java.util.Map getHeaders()>()
org.apache.camel.component.cache.CacheProducer.process : r2 = interfaceinvoke $r8.<org.apache.camel.Message: java.util.Map getHeaders()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("CamelCacheKey")
org.apache.camel.component.cache.CacheProducer.process : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("CamelCacheKey") >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : if $z0 == 0
org.apache.camel.component.cache.CacheProducer.process : if $z0 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r18 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.process : $r18 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r19 = interfaceinvoke $r18.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String,java.lang.Class)>("CamelCacheKey", class "Ljava/lang/String;")
org.apache.camel.component.cache.CacheProducer.process : $r19 = interfaceinvoke $r18.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String,java.lang.Class)>("CamelCacheKey", class "Ljava/lang/String;") >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r20 = (java.lang.String) $r19
org.apache.camel.component.cache.CacheProducer.process : $r20 = (java.lang.String) $r19 >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : goto [?= r3 = $r20]
org.apache.camel.component.cache.CacheProducer.process : goto [?= r3 = $r20] >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : r3 = $r20
org.apache.camel.component.cache.CacheProducer.process : r3 = $r20 >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("CamelCacheOperation")
org.apache.camel.component.cache.CacheProducer.process : $z1 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("CamelCacheOperation") >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : if $z1 == 0
org.apache.camel.component.cache.CacheProducer.process : if $z1 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("CamelCacheOperation")
org.apache.camel.component.cache.CacheProducer.process : $r17 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("CamelCacheOperation") >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r21 = (java.lang.String) $r17
org.apache.camel.component.cache.CacheProducer.process : $r21 = (java.lang.String) $r17 >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : goto [?= r4 = $r21]
org.apache.camel.component.cache.CacheProducer.process : goto [?= r4 = $r21] >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : r4 = $r21
org.apache.camel.component.cache.CacheProducer.process : r4 = $r21 >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : if $r21 != null
org.apache.camel.component.cache.CacheProducer.process : if $r21 != null >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : if r3 != null
org.apache.camel.component.cache.CacheProducer.process : if r3 != null >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: void performCacheOperation(org.apache.camel.Exchange,java.lang.String,java.lang.String)>(r1, r4, r3)
org.apache.camel.component.cache.CacheProducer.process : specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: void performCacheOperation(org.apache.camel.Exchange,java.lang.String,java.lang.String)>(r1, r4, r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z0 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Add")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $z0 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: boolean checkIsEqual(java.lang.String,java.lang.String)>(r2, "Add") >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2)
org.apache.camel.component.cache.CacheProducer.checkIsEqual : $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2) >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : if $z0 != 0
org.apache.camel.component.cache.CacheProducer.checkIsEqual : if $z0 != 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : $r3 = new java.lang.StringBuilder
org.apache.camel.component.cache.CacheProducer.checkIsEqual : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.camel.component.cache.CacheProducer.checkIsEqual : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CamelCache")
org.apache.camel.component.cache.CacheProducer.checkIsEqual : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CamelCache") >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.camel.component.cache.CacheProducer.checkIsEqual : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.camel.component.cache.CacheProducer.checkIsEqual : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6)
org.apache.camel.component.cache.CacheProducer.checkIsEqual : $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6) >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : if $z1 == 0
org.apache.camel.component.cache.CacheProducer.checkIsEqual : if $z1 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : $z2 = 1
org.apache.camel.component.cache.CacheProducer.checkIsEqual : $z2 = 1 >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : goto [?= return $z2]
org.apache.camel.component.cache.CacheProducer.checkIsEqual : goto [?= return $z2] >>>>>>>> org.apache.camel.component.cache.CacheProducer.checkIsEqual : return $z2
org.apache.camel.component.cache.CacheProducer.checkIsEqual : return $z2 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z0 == 0
org.apache.camel.component.cache.CacheProducer.performCacheOperation : if $z0 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r30 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r30 = <org.apache.camel.component.cache.CacheProducer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Adding an element with key {} into the Cache", r3)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Adding an element with key {} into the Cache", r3) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : r32 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Element createElementFromBody(java.lang.String,org.apache.camel.Exchange,java.lang.String)>(r3, r1, "CamelCacheAdd")
org.apache.camel.component.cache.CacheProducer.performCacheOperation : r32 = specialinvoke r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Element createElementFromBody(java.lang.String,org.apache.camel.Exchange,java.lang.String)>(r3, r1, "CamelCacheAdd") >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r7 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r7 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : r4 = interfaceinvoke $r7.<org.apache.camel.Message: java.lang.Object getBody()>()
org.apache.camel.component.cache.CacheProducer.createElementFromBody : r4 = interfaceinvoke $r7.<org.apache.camel.Message: java.lang.Object getBody()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : if r4 != null
org.apache.camel.component.cache.CacheProducer.createElementFromBody : if r4 != null >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : $z0 = r4 instanceof java.io.Serializable
org.apache.camel.component.cache.CacheProducer.createElementFromBody : $z0 = r4 instanceof java.io.Serializable >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : if $z0 == 0
org.apache.camel.component.cache.CacheProducer.createElementFromBody : if $z0 == 0 >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r22 = new net.sf.ehcache.Element
org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r22 = new net.sf.ehcache.Element >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : specialinvoke $r22.<net.sf.ehcache.Element: void <init>(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.camel.component.cache.CacheProducer.createElementFromBody : specialinvoke $r22.<net.sf.ehcache.Element: void <init>(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : r28 = $r22
org.apache.camel.component.cache.CacheProducer.createElementFromBody : r28 = $r22 >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : goto [?= $r30 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()]
org.apache.camel.component.cache.CacheProducer.createElementFromBody : goto [?= $r30 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()] >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r30 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r30 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r31 = interfaceinvoke $r30.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String,java.lang.Class)>("CamelCacheTimeToLive", class "Ljava/lang/Integer;")
org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r31 = interfaceinvoke $r30.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String,java.lang.Class)>("CamelCacheTimeToLive", class "Ljava/lang/Integer;") >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : r32 = (java.lang.Integer) $r31
org.apache.camel.component.cache.CacheProducer.createElementFromBody : r32 = (java.lang.Integer) $r31 >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : if r32 == null
org.apache.camel.component.cache.CacheProducer.createElementFromBody : if r32 == null >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r17 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r17 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r18 = interfaceinvoke $r17.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String,java.lang.Class)>("CamelCacheTimeToIdle", class "Ljava/lang/Integer;")
org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r18 = interfaceinvoke $r17.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String,java.lang.Class)>("CamelCacheTimeToIdle", class "Ljava/lang/Integer;") >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : r5 = (java.lang.Integer) $r18
org.apache.camel.component.cache.CacheProducer.createElementFromBody : r5 = (java.lang.Integer) $r18 >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : if r5 == null
org.apache.camel.component.cache.CacheProducer.createElementFromBody : if r5 == null >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r19 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r19 = interfaceinvoke r2.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r20 = interfaceinvoke $r19.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String,java.lang.Class)>("CamelCacheEternal", class "Ljava/lang/Boolean;")
org.apache.camel.component.cache.CacheProducer.createElementFromBody : $r20 = interfaceinvoke $r19.<org.apache.camel.Message: java.lang.Object getHeader(java.lang.String,java.lang.Class)>("CamelCacheEternal", class "Ljava/lang/Boolean;") >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : r6 = (java.lang.Boolean) $r20
org.apache.camel.component.cache.CacheProducer.createElementFromBody : r6 = (java.lang.Boolean) $r20 >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : if r6 == null
org.apache.camel.component.cache.CacheProducer.createElementFromBody : if r6 == null >>>>>>>> org.apache.camel.component.cache.CacheProducer.createElementFromBody : return r28
org.apache.camel.component.cache.CacheProducer.createElementFromBody : return r28 >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r31 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache>
org.apache.camel.component.cache.CacheProducer.performCacheOperation : $r31 = r0.<org.apache.camel.component.cache.CacheProducer: net.sf.ehcache.Ehcache cache> >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r31.<net.sf.ehcache.Ehcache: void put(net.sf.ehcache.Element)>(r32)
org.apache.camel.component.cache.CacheProducer.performCacheOperation : interfaceinvoke $r31.<net.sf.ehcache.Ehcache: void put(net.sf.ehcache.Element)>(r32) >>>>>>>> org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return]
org.apache.camel.component.cache.CacheProducer.performCacheOperation : goto [?= return] >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r11 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.process : $r11 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : interfaceinvoke $r11.<org.apache.camel.Message: java.lang.Object removeHeader(java.lang.String)>("CamelCacheKey")
org.apache.camel.component.cache.CacheProducer.process : interfaceinvoke $r11.<org.apache.camel.Message: java.lang.Object removeHeader(java.lang.String)>("CamelCacheKey") >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : $r13 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.component.cache.CacheProducer.process : $r13 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.component.cache.CacheProducer.process : interfaceinvoke $r13.<org.apache.camel.Message: java.lang.Object removeHeader(java.lang.String)>("CamelCacheOperation")
org.apache.camel.component.cache.CacheProducer.process : interfaceinvoke $r13.<org.apache.camel.Message: java.lang.Object removeHeader(java.lang.String)>("CamelCacheOperation") >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.getCacheManager : $r1 = r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.getCacheManager : $r1 = r0.<org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.getCacheManager : return $r1
org.apache.camel.component.cache.CacheRoutesManagementTest$TestingCacheManagerFactory.getCacheManager : return $r1 >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config>
org.apache.camel.component.cache.CacheEndpoint.stop : $r3 = r0.<org.apache.camel.component.cache.CacheEndpoint: org.apache.camel.component.cache.CacheConfiguration config> >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : $r4 = virtualinvoke $r3.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>()
org.apache.camel.component.cache.CacheEndpoint.stop : $r4 = virtualinvoke $r3.<org.apache.camel.component.cache.CacheConfiguration: java.lang.String getCacheName()>() >>>>>>>> org.apache.camel.component.cache.CacheEndpoint.stop : virtualinvoke r1.<net.sf.ehcache.CacheManager: void removeCache(java.lang.String)>($r4)
