org.apache.zeppelin.interpreter.remote.AppendOutputBuffer.getParagraphId : $r1 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String paragraphId>
org.apache.zeppelin.interpreter.remote.AppendOutputBuffer.getIndex : $i0 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: int index>
org.apache.zeppelin.interpreter.remote.AppendOutputRunnerTest$BombardEvents.run : i0 = 0
org.apache.zeppelin.interpreter.remote.AppendOutputRunnerTest$BombardEvents.run : $r3 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunnerTest$BombardEvents: org.apache.zeppelin.interpreter.remote.AppendOutputRunner runner>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.appendBuffer : $r5 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunner: java.util.concurrent.BlockingQueue queue>
org.apache.zeppelin.interpreter.remote.AppendOutputBuffer.getNoteId : $r1 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String noteId>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $z1 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r68)
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r34 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunner: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener listener>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $l5 = virtualinvoke r70.<java.lang.Long: long longValue()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r31 = interfaceinvoke r72.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : r75 = virtualinvoke r73.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : i16 = virtualinvoke r65.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: int getIndex()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : goto [?= $z2 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r45 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r4 = new java.util.HashMap
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r5 = new java.util.LinkedList
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : goto [?= $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r6 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunner: java.util.concurrent.BlockingQueue queue>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r39 = <org.apache.zeppelin.interpreter.remote.AppendOutputRunner: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r68, $r69)
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $l8 = virtualinvoke r71.<java.lang.Long: long longValue()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : r66 = virtualinvoke r65.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String getNoteId()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r54 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r68)
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r20 = <org.apache.zeppelin.interpreter.remote.AppendOutputRunner: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : r67 = virtualinvoke r65.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String getParagraphId()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : r64 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r44 = interfaceinvoke r64.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $l11 = virtualinvoke r71.<java.lang.Long: long longValue()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : goto [?= $z3 = interfaceinvoke r72.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r11 = <org.apache.zeppelin.interpreter.remote.AppendOutputRunner: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r51 = virtualinvoke r65.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String getData()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r32 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r73)
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r8 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputRunner: java.util.concurrent.BlockingQueue queue>
org.apache.zeppelin.interpreter.remote.AppendOutputRunner.run : $r16 = new java.lang.Long
org.apache.zeppelin.interpreter.remote.AppendOutputBuffer.getData : $r1 = r0.<org.apache.zeppelin.interpreter.remote.AppendOutputBuffer: java.lang.String data>
