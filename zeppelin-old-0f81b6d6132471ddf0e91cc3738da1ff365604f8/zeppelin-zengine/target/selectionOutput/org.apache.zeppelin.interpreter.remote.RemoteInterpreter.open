org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : entermonitor r0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : entermonitor r0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : throw $r19
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z0 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String getUserName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String getUserName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r8 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String getUserName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r10 = virtualinvoke $r7.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: java.util.List getOrCreateSession(java.lang.String,java.lang.String)>($r8, $r9)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r10 = virtualinvoke $r7.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: java.util.List getOrCreateSession(java.lang.String,java.lang.String)>($r8, $r9) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r10 = virtualinvoke $r7.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: java.util.List getOrCreateSession(java.lang.String,java.lang.String)>($r8, $r9) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r17 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r11 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$1
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r11 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r11 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r11)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r11.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> = 1
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r15 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r15 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r15 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : interfaceinvoke $r14.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r15, $r16)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r16 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : interfaceinvoke $r14.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r15, $r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : interfaceinvoke $r14.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r15, $r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r17 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r3 = (org.apache.zeppelin.interpreter.Interpreter) $r17
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r17 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r3 = (org.apache.zeppelin.interpreter.Interpreter) $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r18 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r3
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r3 = (org.apache.zeppelin.interpreter.Interpreter) $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r18 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r18 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r18 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void internal_create()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void internal_create()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void internal_create()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void internal_create()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= (branch)]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r21 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r21.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>($r20)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r21 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r21.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : throw $r21
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r21.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : throw $r21 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
