org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r5 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : specialinvoke $r5.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : specialinvoke $r5.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r6 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r6 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r7 = <org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType NO_OP>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r7 = <org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType NO_OP> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : specialinvoke $r6.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType,java.lang.String)>($r7, "")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : specialinvoke $r6.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEventType,java.lang.String)>($r7, "") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r8 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/zeppelin/interpreter/thrift/RemoteInterpreterService$Client;")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r8 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/zeppelin/interpreter/thrift/RemoteInterpreterService$Client;") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : r3 = (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client) $r8
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : r3 = (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client) $r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r9 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/zeppelin/interpreter/remote/RemoteInterpreterProcess;")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r9 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/apache/zeppelin/interpreter/remote/RemoteInterpreterProcess;") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : r4 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess) $r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : r4 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess) $r9 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r10 = virtualinvoke r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent getEvent()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r10 = virtualinvoke r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent getEvent()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r11 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r10)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r11 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r12 = newarray (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent)[2]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r12 = newarray (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterEvent)[2] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r12[0] = $r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r12[0] = $r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r12[1] = $r6
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r12[1] = $r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : interfaceinvoke $r11.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object,java.lang.Object[])>($r5, $r12)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : interfaceinvoke $r11.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object,java.lang.Object[])>($r5, $r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r14 = virtualinvoke r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r14 = virtualinvoke r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r15 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r14)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : $r15 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r14) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : interfaceinvoke $r15.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : interfaceinvoke $r15.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPollerTest.getMockEventsInterpreterProcess : return r4
