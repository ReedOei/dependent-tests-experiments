org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r14 = r1.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r2 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r2 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z6 == 0
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z6 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z6 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : return
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r3 = (org.apache.zeppelin.notebook.Paragraph) $r15
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r3 = (org.apache.zeppelin.notebook.Paragraph) $r15 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object getPreviousResultFormat()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object getPreviousResultFormat()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if r4 == null
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if r4 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r32 = r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object results>
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if r4 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if r4 == null
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if r4 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z0 = r4 instanceof java.util.Map
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if r4 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= (branch)]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z0 = r4 instanceof java.util.Map >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z0 == 0
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r35 = (java.util.Map) r4
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= (branch)]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r34 = <org.apache.zeppelin.notebook.Notebook: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Conversion failure", $r33)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Conversion failure", $r33) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r35 = (java.util.Map) r4 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z1 = interfaceinvoke r35.<java.util.Map: boolean containsKey(java.lang.Object)>("code")
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r35 = (java.util.Map) r4 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z1 = interfaceinvoke r35.<java.util.Map: boolean containsKey(java.lang.Object)>("code") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z1 == 0
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z1 = interfaceinvoke r35.<java.util.Map: boolean containsKey(java.lang.Object)>("code") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z2 = interfaceinvoke r35.<java.util.Map: boolean containsKey(java.lang.Object)>("msg")
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= (branch)]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z2 = interfaceinvoke r35.<java.util.Map: boolean containsKey(java.lang.Object)>("msg") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z2 == 0
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z2 = interfaceinvoke r35.<java.util.Map: boolean containsKey(java.lang.Object)>("msg") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z3 = interfaceinvoke r35.<java.util.Map: boolean containsKey(java.lang.Object)>("type")
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= (branch)]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z3 = interfaceinvoke r35.<java.util.Map: boolean containsKey(java.lang.Object)>("type") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z3 == 0
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z3 = interfaceinvoke r35.<java.util.Map: boolean containsKey(java.lang.Object)>("type") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r16 = interfaceinvoke r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("code")
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= (branch)]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r16 = interfaceinvoke r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("code") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r17 = (java.lang.String) $r16
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r16 = interfaceinvoke r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("code") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r5 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code valueOf(java.lang.String)>($r17)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r5 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code valueOf(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r18 = interfaceinvoke r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("type")
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r5 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code valueOf(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r18 = interfaceinvoke r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("type") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r19 = (java.lang.String) $r18
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r18 = interfaceinvoke r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("type") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r6 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterResult$Type: org.apache.zeppelin.interpreter.InterpreterResult$Type valueOf(java.lang.String)>($r19)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r6 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterResult$Type: org.apache.zeppelin.interpreter.InterpreterResult$Type valueOf(java.lang.String)>($r19) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r20 = interfaceinvoke r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("msg")
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r6 = staticinvoke <org.apache.zeppelin.interpreter.InterpreterResult$Type: org.apache.zeppelin.interpreter.InterpreterResult$Type valueOf(java.lang.String)>($r19) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r20 = interfaceinvoke r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("msg") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r7 = (java.lang.String) $r20
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r20 = interfaceinvoke r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("msg") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r7 = (java.lang.String) $r20 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r21 = new org.apache.zeppelin.interpreter.InterpreterResult
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r7 = (java.lang.String) $r20 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r21 = new org.apache.zeppelin.interpreter.InterpreterResult >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r21.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.lang.String)>(r5, r7)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r21 = new org.apache.zeppelin.interpreter.InterpreterResult >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r21.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.lang.String)>(r5, r7) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r36 = $r21
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r21.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.lang.String)>(r5, r7) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r36 = $r21 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r22 = virtualinvoke $r21.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r36 = $r21 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r22 = virtualinvoke $r21.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i0 = interfaceinvoke $r22.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r22 = virtualinvoke $r21.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i0 = interfaceinvoke $r22.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $i0 != 1
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i0 = interfaceinvoke $r22.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $i0 != 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r31 = new org.apache.zeppelin.interpreter.InterpreterResult
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $i0 != 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>(r36)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $i0 != 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>(r36) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r8 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>(r36) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r8 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r9 = interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>("graph")
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r8 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r9 = interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>("graph") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r10 = interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>("apps")
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r9 = interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>("graph") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r10 = interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>("apps") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r11 = interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>("helium")
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r10 = interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>("apps") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r11 = interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>("helium") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r23 = new java.util.LinkedList
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r11 = interfaceinvoke r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>("helium") >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r23 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r23.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r23 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r23.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : i3 = 0
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r23.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : i3 = 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r37 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : i3 = 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r37 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i4 = interfaceinvoke $r37.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r37 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i4 = interfaceinvoke $r37.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if i3 >= $i4
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i4 = interfaceinvoke $r37.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if i3 >= $i4 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r25 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if i3 >= $i4 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("results", $r23)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if i3 >= $i4 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("results", $r23) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= (branch)]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("results", $r23) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r25 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i1 = interfaceinvoke $r25.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r25 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i1 = interfaceinvoke $r25.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i2 = $i1 - 1
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i1 = interfaceinvoke $r25.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $i2 = $i1 - 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if i3 != $i2
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if i3 != $i2 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r27 = new java.util.HashMap
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if i3 != $i2 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r26 = new java.util.HashMap
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r26 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r26.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r26 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r26.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r26)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r26.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r26) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : i3 = i3 + 1
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r26) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : i3 = i3 + 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= $r37 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>()]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= $r37 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r37 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= $r37 = virtualinvoke r36.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r27 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r27.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r27 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r27.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("graph", r9)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r27.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("graph", r9) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("apps", r10)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("graph", r9) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("apps", r10) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("helium", r11)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("apps", r10) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("helium", r11) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r27)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("helium", r11) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r27) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= i3 = i3 + 1]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r27) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= i3 = i3 + 1] >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : i3 = i3 + 1
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r31 = new org.apache.zeppelin.interpreter.InterpreterResult >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code)>(r5)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r31 = new org.apache.zeppelin.interpreter.InterpreterResult >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code)>(r5) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r36 = $r31
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : specialinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code)>(r5) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r36 = $r31 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterResult: void add(org.apache.zeppelin.interpreter.InterpreterResult$Type,java.lang.String)>(r6, r7)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : r36 = $r31 >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterResult: void add(org.apache.zeppelin.interpreter.InterpreterResult$Type,java.lang.String)>(r6, r7) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>(r36)
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterResult: void add(org.apache.zeppelin.interpreter.InterpreterResult$Type,java.lang.String)>(r6, r7) >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r33 := @caughtexception
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $r32 = r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object results> >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $r32 == null
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $r32 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if $r32 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : if r4 == null
org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : goto [?= $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.convertFromSingleResultToMultipleResultsFormat : $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
