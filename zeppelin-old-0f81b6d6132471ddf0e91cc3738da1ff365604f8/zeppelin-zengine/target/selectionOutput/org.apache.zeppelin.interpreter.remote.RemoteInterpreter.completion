org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : if $z0 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r11 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : r19 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r18 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : specialinvoke $r18.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>($r17)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : specialinvoke $r18.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>($r17) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : throw $r18
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : r19 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : goto [?= $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : r19 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : goto [?= $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r4 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r5 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r5 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : interfaceinvoke $r4.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r5, $r6)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : interfaceinvoke $r4.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r5, $r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r7 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$8
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r7 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : specialinvoke $r7.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$8: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter,java.lang.String,int,org.apache.zeppelin.interpreter.InterpreterContext)>(r0, r1, i0, r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : specialinvoke $r7.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$8: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter,java.lang.String,int,org.apache.zeppelin.interpreter.InterpreterContext)>(r0, r1, i0, r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r8 = virtualinvoke r19.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r7)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r8 = virtualinvoke r19.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r9 = (java.util.List) $r8
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r9 = (java.util.List) $r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : return $r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r11 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r10 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("completion is called when RemoterInterpreter is not opened for ")
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("completion is called when RemoterInterpreter is not opened for ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r13 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String className>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r13 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String className> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>($r15)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r16 = new java.util.ArrayList
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : $r16 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : specialinvoke $r16.<java.util.ArrayList: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : specialinvoke $r16.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.completion : return $r16
