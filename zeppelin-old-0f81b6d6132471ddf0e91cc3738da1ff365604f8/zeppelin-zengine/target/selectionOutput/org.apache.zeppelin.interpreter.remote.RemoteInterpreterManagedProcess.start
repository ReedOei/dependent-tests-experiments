org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String portRange> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i1 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: int findRandomAvailablePortOnAllLocalInterfaces(java.lang.String)>($r7)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r7 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String portRange> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r48.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r47)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r48.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r47) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r48
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i1 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: int findRandomAvailablePortOnAllLocalInterfaces(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> = $i1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i1 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: int findRandomAvailablePortOnAllLocalInterfaces(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> = $i1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r8 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r8 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Choose port {} for RemoteInterpreterProcess", $r9)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Choose port {} for RemoteInterpreterProcess", $r9) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r3 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: java.lang.String findAvailableHostAddress()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Choose port {} for RemoteInterpreterProcess", $r9) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r3 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: java.lang.String findAvailableHostAddress()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : i0 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: int findRandomAvailablePortOnAllLocalInterfaces()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r3 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: java.lang.String findAvailableHostAddress()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : i0 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: int findRandomAvailablePortOnAllLocalInterfaces()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r10 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : i0 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: int findRandomAvailablePortOnAllLocalInterfaces()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r10 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r10 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r10 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Thrift server for callback will start. Port: {}", $r11)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Thrift server for callback will start. Port: {}", $r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r12 = new org.apache.thrift.server.TThreadPoolServer
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r12 = new org.apache.thrift.server.TThreadPoolServer >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r13 = new org.apache.thrift.server.TThreadPoolServer$Args
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r13 = new org.apache.thrift.server.TThreadPoolServer$Args >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r14 = new org.apache.thrift.transport.TServerSocket
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r14 = new org.apache.thrift.transport.TServerSocket >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r14 = new org.apache.thrift.transport.TServerSocket >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r14 = new org.apache.thrift.transport.TServerSocket >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r14.<org.apache.thrift.transport.TServerSocket: void <init>(int)>(i0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r14.<org.apache.thrift.transport.TServerSocket: void <init>(int)>(i0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r14.<org.apache.thrift.transport.TServerSocket: void <init>(int)>(i0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r14.<org.apache.thrift.transport.TServerSocket: void <init>(int)>(i0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r13.<org.apache.thrift.server.TThreadPoolServer$Args: void <init>(org.apache.thrift.transport.TServerTransport)>($r14)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r13.<org.apache.thrift.server.TThreadPoolServer$Args: void <init>(org.apache.thrift.transport.TServerTransport)>($r14) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r13.<org.apache.thrift.server.TThreadPoolServer$Args: void <init>(org.apache.thrift.transport.TServerTransport)>($r14) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r13.<org.apache.thrift.server.TThreadPoolServer$Args: void <init>(org.apache.thrift.transport.TServerTransport)>($r14) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r15 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r15 = new org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r16 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r16 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r16 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r16 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r16.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r16.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r16.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r16.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$1: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r15.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Iface)>($r16)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r15.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Iface)>($r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r15.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Iface)>($r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r15.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Processor: void <init>(org.apache.zeppelin.interpreter.thrift.RemoteInterpreterCallbackService$Iface)>($r16) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r17 = virtualinvoke $r13.<org.apache.thrift.server.TThreadPoolServer$Args: org.apache.thrift.server.TServer$AbstractServerArgs processor(org.apache.thrift.TProcessor)>($r15)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r17 = virtualinvoke $r13.<org.apache.thrift.server.TThreadPoolServer$Args: org.apache.thrift.server.TServer$AbstractServerArgs processor(org.apache.thrift.TProcessor)>($r15) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r17 = virtualinvoke $r13.<org.apache.thrift.server.TThreadPoolServer$Args: org.apache.thrift.server.TServer$AbstractServerArgs processor(org.apache.thrift.TProcessor)>($r15) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r17 = virtualinvoke $r13.<org.apache.thrift.server.TThreadPoolServer$Args: org.apache.thrift.server.TServer$AbstractServerArgs processor(org.apache.thrift.TProcessor)>($r15) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r18 = (org.apache.thrift.server.TThreadPoolServer$Args) $r17
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r18 = (org.apache.thrift.server.TThreadPoolServer$Args) $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r18 = (org.apache.thrift.server.TThreadPoolServer$Args) $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r18 = (org.apache.thrift.server.TThreadPoolServer$Args) $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r12.<org.apache.thrift.server.TThreadPoolServer: void <init>(org.apache.thrift.server.TThreadPoolServer$Args)>($r18)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r12.<org.apache.thrift.server.TThreadPoolServer: void <init>(org.apache.thrift.server.TThreadPoolServer$Args)>($r18) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r12.<org.apache.thrift.server.TThreadPoolServer: void <init>(org.apache.thrift.server.TThreadPoolServer$Args)>($r18) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r12.<org.apache.thrift.server.TThreadPoolServer: void <init>(org.apache.thrift.server.TThreadPoolServer$Args)>($r18) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> = $r12
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> = $r12 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r19 = new java.lang.Thread
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r19 = new java.lang.Thread >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r20 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r20.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r20.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r20.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r20.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$2: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r19.<java.lang.Thread: void start()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r19.<java.lang.Thread: void start()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r19.<java.lang.Thread: void start()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r19.<java.lang.Thread: void start()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r22 = new java.lang.Thread
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r22 = new java.lang.Thread >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r23 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r23 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r23 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r23 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r23.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r23.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r23.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r23.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$3: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r22.<java.lang.Thread: void <init>(java.lang.Runnable)>($r23)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r22.<java.lang.Thread: void <init>(java.lang.Runnable)>($r23) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r22.<java.lang.Thread: void <init>(java.lang.Runnable)>($r23) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r22.<java.lang.Thread: void <init>(java.lang.Runnable)>($r23) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r21.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r22)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r21.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r22) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r21.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r22) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r21.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r22) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke $r24.<org.apache.thrift.server.TServer: boolean isServing()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke $r24.<org.apache.thrift.server.TServer: boolean isServing()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke $r24.<org.apache.thrift.server.TServer: boolean isServing()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke $r24.<org.apache.thrift.server.TServer: boolean isServing()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z0 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r46 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r25 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r25 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r25 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r25 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is serving now")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is serving now") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is serving now") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r25.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is serving now") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r63 = staticinvoke <org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine parse(java.lang.String)>($r62)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r63 = staticinvoke <org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine parse(java.lang.String)>($r62) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-d", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-d", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r64 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterDir>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r64 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterDir> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r64, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r64, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-c", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-c", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r3, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r3, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-p", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-p", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r65 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r65 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r65, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r65, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z4 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z4 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z4 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z4 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z4 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r66 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String localRepoDir>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r66 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String localRepoDir> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r66, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r66, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-g", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-g", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r67 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterGroupName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r67 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterGroupName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r67, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r67, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r68 = new org.apache.commons.exec.DefaultExecutor
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r68 = new org.apache.commons.exec.DefaultExecutor >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r68.<org.apache.commons.exec.DefaultExecutor: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r68.<org.apache.commons.exec.DefaultExecutor: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> = $r68
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> = $r68 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r69 = new java.io.ByteArrayOutputStream
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r69 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r69.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r69.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r70 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r70 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r71 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r71 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r70.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void <init>(org.slf4j.Logger)>($r71)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r70.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void <init>(org.slf4j.Logger)>($r71) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r70.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>($r69)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r70.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>($r69) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r72 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r72 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r73 = new org.apache.commons.exec.PumpStreamHandler
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r73 = new org.apache.commons.exec.PumpStreamHandler >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r73.<org.apache.commons.exec.PumpStreamHandler: void <init>(java.io.OutputStream)>($r70)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r73.<org.apache.commons.exec.PumpStreamHandler: void <init>(java.io.OutputStream)>($r70) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r72.<org.apache.commons.exec.DefaultExecutor: void setStreamHandler(org.apache.commons.exec.ExecuteStreamHandler)>($r73)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r72.<org.apache.commons.exec.DefaultExecutor: void setStreamHandler(org.apache.commons.exec.ExecuteStreamHandler)>($r73) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r74 = new org.apache.commons.exec.ExecuteWatchdog
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r74 = new org.apache.commons.exec.ExecuteWatchdog >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r74.<org.apache.commons.exec.ExecuteWatchdog: void <init>(long)>(-1L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r74.<org.apache.commons.exec.ExecuteWatchdog: void <init>(long)>(-1L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> = $r74
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> = $r74 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r75 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r75 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r76 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r76 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r75.<org.apache.commons.exec.DefaultExecutor: void setWatchdog(org.apache.commons.exec.ExecuteWatchdog)>($r76)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r75.<org.apache.commons.exec.DefaultExecutor: void setWatchdog(org.apache.commons.exec.ExecuteWatchdog)>($r76) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r77 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r75.<org.apache.commons.exec.DefaultExecutor: void setWatchdog(org.apache.commons.exec.ExecuteWatchdog)>($r76) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r55 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r55.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r55.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r56 = new java.lang.RuntimeException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r56 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r56.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r54)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r56.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r54) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r56
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r77 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r78 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r77 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r78 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke r77.<java.util.Map: void putAll(java.util.Map)>($r78)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r78 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke r77.<java.util.Map: void putAll(java.util.Map)>($r78) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r79 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke r77.<java.util.Map: void putAll(java.util.Map)>($r78) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r79 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r79.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Run interpreter process {}", r63)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r79 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r79.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Run interpreter process {}", r63) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r80 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r79.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Run interpreter process {}", r63) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r80 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r80.<org.apache.commons.exec.DefaultExecutor: void execute(org.apache.commons.exec.CommandLine,java.util.Map,org.apache.commons.exec.ExecuteResultHandler)>(r63, r77, r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r80 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r80.<org.apache.commons.exec.DefaultExecutor: void execute(org.apache.commons.exec.CommandLine,java.util.Map,org.apache.commons.exec.ExecuteResultHandler)>(r63, r77, r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r36 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r80.<org.apache.commons.exec.DefaultExecutor: void execute(org.apache.commons.exec.CommandLine,java.util.Map,org.apache.commons.exec.ExecuteResultHandler)>(r63, r77, r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r36 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : entermonitor $r36
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : entermonitor $r36 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : entermonitor $r36 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r36 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r49
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r36 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r49 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r58 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r58.<org.slf4j.Logger: void error(java.lang.String)>("Remote interpreter is not accessible")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r58.<org.slf4j.Logger: void error(java.lang.String)>("Remote interpreter is not accessible") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r70.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r70.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z1 = virtualinvoke $r37.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z1 = virtualinvoke $r37.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z1 = virtualinvoke $r37.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r43 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r36
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r36 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r38 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r36 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r38 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z2 = virtualinvoke $r38.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z2 = virtualinvoke $r38.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z2 = virtualinvoke $r38.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= virtualinvoke $r70.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= virtualinvoke $r70.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r70.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r39.<org.apache.thrift.server.TServer: void stop()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r39 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r39.<org.apache.thrift.server.TServer: void stop()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 = new java.lang.RuntimeException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r39.<org.apache.thrift.server.TServer: void stop()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r41 = new java.lang.String
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r41 = new java.lang.String >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 = virtualinvoke $r69.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r41 = new java.lang.String >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 = virtualinvoke $r69.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r41.<java.lang.String: void <init>(byte[])>($r42)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 = virtualinvoke $r69.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r41.<java.lang.String: void <init>(byte[])>($r42) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r41.<java.lang.String: void <init>(byte[])>($r42) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r40
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r57 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r43 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int getConnectTimeout()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r43 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int getConnectTimeout()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i4 = $i3 * 2
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int getConnectTimeout()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i4 = $i3 * 2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l5 = (long) $i4
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i4 = $i3 * 2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l5 = (long) $i4 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r43.<java.lang.Object: void wait(long)>($l5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l5 = (long) $i4 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r43.<java.lang.Object: void wait(long)>($l5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : exitmonitor $r36
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r43.<java.lang.Object: void wait(long)>($l5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-u", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-u", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r1, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r1, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r63.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r51 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r51.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("", $r50)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r51.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("", $r50) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r53 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r53.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("callback server error.", $r52)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r53.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("callback server error.", $r52) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r62 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r46 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r46 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r46 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is not serving")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is not serving") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is not serving") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String)>("callbackServer is not serving") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.thrift.server.TServer callbackServer>
