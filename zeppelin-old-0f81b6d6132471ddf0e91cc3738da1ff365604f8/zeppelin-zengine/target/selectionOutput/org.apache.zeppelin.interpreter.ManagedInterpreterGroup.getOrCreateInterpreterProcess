org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r1 = r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : if $r1 != null
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : if $r1 != null >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r4 = <org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : if $r1 != null >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r2 = r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess>
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r2 = r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : return $r2
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r4 = <org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Create InterpreterProcess for InterpreterGroup: ")
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Create InterpreterProcess for InterpreterGroup: ") >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r6 = virtualinvoke r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: java.lang.String getId()>()
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r6 = virtualinvoke r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8)
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8) >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r9 = r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting>
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r9 = r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting> >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r10 = virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess createInterpreterProcess()>()
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r10 = virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess createInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> = $r10
org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess> = $r10 >>>>>>>> org.apache.zeppelin.interpreter.ManagedInterpreterGroup.getOrCreateInterpreterProcess : $r2 = r0.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess remoteInterpreterProcess>
