org.apache.zeppelin.notebook.Paragraph.execute : $z1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: boolean isBlankParagraph()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : if $z1 == 0
org.apache.zeppelin.notebook.Paragraph.execute : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r28 = <org.apache.zeppelin.notebook.Paragraph: org.slf4j.Logger logger>
org.apache.zeppelin.notebook.Paragraph.execute : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void clearRuntimeInfo(java.lang.String)>(null)
org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void clearRuntimeInfo(java.lang.String)>(null) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter getBindedInterpreter()>()
org.apache.zeppelin.notebook.Paragraph.execute : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter getBindedInterpreter()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter interpreter> = $r3
org.apache.zeppelin.notebook.Paragraph.execute : r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter interpreter> = $r3 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r4 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter interpreter>
org.apache.zeppelin.notebook.Paragraph.execute : $r4 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter interpreter> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : if $r4 != null
org.apache.zeppelin.notebook.Paragraph.execute : if $r4 != null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r16 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Paragraph.execute : if $r4 != null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r5 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Paragraph.execute : $r5 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("enabled")
org.apache.zeppelin.notebook.Paragraph.execute : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("enabled") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : if $r6 == null
org.apache.zeppelin.notebook.Paragraph.execute : if $r6 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r13 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Paragraph.execute : if $r6 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r7 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo getAuthenticationInfo()>()
org.apache.zeppelin.notebook.Paragraph.execute : $r7 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo getAuthenticationInfo()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setAuthenticationInfo(org.apache.zeppelin.user.AuthenticationInfo)>($r7)
org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setAuthenticationInfo(org.apache.zeppelin.user.AuthenticationInfo)>($r7) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r8 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter interpreter>
org.apache.zeppelin.notebook.Paragraph.execute : $r8 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter interpreter> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r9 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>()
org.apache.zeppelin.notebook.Paragraph.execute : $r9 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : interfaceinvoke $r9.<org.apache.zeppelin.scheduler.Scheduler: void submit(org.apache.zeppelin.scheduler.Job)>(r0)
org.apache.zeppelin.notebook.Paragraph.execute : interfaceinvoke $r9.<org.apache.zeppelin.scheduler.Scheduler: void submit(org.apache.zeppelin.scheduler.Job)>(r0) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : if z0 == 0
org.apache.zeppelin.notebook.Paragraph.execute : if z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r10 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.Paragraph.execute : if z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : return 1
org.apache.zeppelin.notebook.Paragraph.execute : $r10 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $z2 = virtualinvoke $r10.<org.apache.zeppelin.scheduler.Job$Status: boolean isCompleted()>()
org.apache.zeppelin.notebook.Paragraph.execute : $z2 = virtualinvoke $r10.<org.apache.zeppelin.scheduler.Job$Status: boolean isCompleted()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : if $z2 != 0
org.apache.zeppelin.notebook.Paragraph.execute : if $z2 != 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : staticinvoke <java.lang.Thread: void sleep(long)>(100L)
org.apache.zeppelin.notebook.Paragraph.execute : if $z2 != 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r11 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.Paragraph.execute : if $z2 != 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r31 := @caughtexception
org.apache.zeppelin.notebook.Paragraph.execute : $r32 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r31)
org.apache.zeppelin.notebook.Paragraph.execute : specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r31) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : throw $r32
org.apache.zeppelin.notebook.Paragraph.execute : $r11 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r12 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED>
org.apache.zeppelin.notebook.Paragraph.execute : $r12 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : if $r11 != $r12
org.apache.zeppelin.notebook.Paragraph.execute : if $r11 != $r12 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $z4 = 1
org.apache.zeppelin.notebook.Paragraph.execute : if $r11 != $r12 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $z4 = 0
org.apache.zeppelin.notebook.Paragraph.execute : $z4 = 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : return $z4
org.apache.zeppelin.notebook.Paragraph.execute : $z4 = 1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : goto [?= return $z4]
org.apache.zeppelin.notebook.Paragraph.execute : goto [?= return $z4] >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : return $z4
org.apache.zeppelin.notebook.Paragraph.execute : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : goto [?= $r10 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()]
org.apache.zeppelin.notebook.Paragraph.execute : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r31 := @caughtexception
org.apache.zeppelin.notebook.Paragraph.execute : goto [?= $r10 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()] >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r10 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.Paragraph.execute : $r13 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("enabled")
org.apache.zeppelin.notebook.Paragraph.execute : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("enabled") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r15 = (java.lang.Boolean) $r14
org.apache.zeppelin.notebook.Paragraph.execute : $r15 = (java.lang.Boolean) $r14 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $z3 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>()
org.apache.zeppelin.notebook.Paragraph.execute : $z3 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : if $z3 == 0
org.apache.zeppelin.notebook.Paragraph.execute : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r7 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo getAuthenticationInfo()>()
org.apache.zeppelin.notebook.Paragraph.execute : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : if z0 == 0
org.apache.zeppelin.notebook.Paragraph.execute : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.execute : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r17 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getJobName()>()
org.apache.zeppelin.notebook.Paragraph.execute : $r17 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getJobName()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.zeppelin.notebook.Paragraph.execute : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'s Interpreter ")
org.apache.zeppelin.notebook.Paragraph.execute : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'s Interpreter ") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r20 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getIntpText()>()
org.apache.zeppelin.notebook.Paragraph.execute : $r20 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getIntpText()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.zeppelin.notebook.Paragraph.execute : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found")
org.apache.zeppelin.notebook.Paragraph.execute : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : r33 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.Paragraph.execute : r33 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r23 = new java.lang.RuntimeException
org.apache.zeppelin.notebook.Paragraph.execute : $r23 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String)>(r33)
org.apache.zeppelin.notebook.Paragraph.execute : specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String)>(r33) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r24 = new org.apache.zeppelin.interpreter.InterpreterResult
org.apache.zeppelin.notebook.Paragraph.execute : $r24 = new org.apache.zeppelin.interpreter.InterpreterResult >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r25 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code ERROR>
org.apache.zeppelin.notebook.Paragraph.execute : $r25 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code ERROR> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r26 = virtualinvoke $r23.<java.lang.RuntimeException: java.lang.String getMessage()>()
org.apache.zeppelin.notebook.Paragraph.execute : $r26 = virtualinvoke $r23.<java.lang.RuntimeException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : specialinvoke $r24.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.lang.String)>($r25, $r26)
org.apache.zeppelin.notebook.Paragraph.execute : specialinvoke $r24.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.lang.String)>($r25, $r26) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setReturn(org.apache.zeppelin.interpreter.InterpreterResult,java.lang.Throwable)>($r24, $r23)
org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setReturn(org.apache.zeppelin.interpreter.InterpreterResult,java.lang.Throwable)>($r24, $r23) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r27 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ERROR>
org.apache.zeppelin.notebook.Paragraph.execute : $r27 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ERROR> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r27)
org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r27) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : throw $r23
org.apache.zeppelin.notebook.Paragraph.execute : $r28 = <org.apache.zeppelin.notebook.Paragraph: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r29 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.execute : $r29 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("skip to run blank paragraph. {}", $r29)
org.apache.zeppelin.notebook.Paragraph.execute : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("skip to run blank paragraph. {}", $r29) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : $r30 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED>
org.apache.zeppelin.notebook.Paragraph.execute : $r30 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r30)
org.apache.zeppelin.notebook.Paragraph.execute : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r30) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.execute : return 1
