org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_INTERPRETER_LIFECYCLE_MANAGER_CLASS> >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r2 = virtualinvoke $r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r2 = virtualinvoke $r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r3 = class "Lorg/apache/zeppelin/interpreter/lifecycle/TimeoutLifecycleManager;"
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r3 = class "Lorg/apache/zeppelin/interpreter/lifecycle/TimeoutLifecycleManager;" >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>()
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>($r2, $r4)
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>($r2, $r4) >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r6 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_INTERPRETER_LIFECYCLE_MANAGER_TIMEOUT_CHECK_INTERVAL>
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r6 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_INTERPRETER_LIFECYCLE_MANAGER_TIMEOUT_CHECK_INTERVAL> >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r7 = virtualinvoke $r6.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r7 = virtualinvoke $r6.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>($r7, "1000")
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>($r7, "1000") >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r9 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_INTERPRETER_LIFECYCLE_MANAGER_TIMEOUT_THRESHOLD>
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r9 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_INTERPRETER_LIFECYCLE_MANAGER_TIMEOUT_THRESHOLD> >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r10 = virtualinvoke $r9.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : $r10 = virtualinvoke $r9.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>($r10, "10000")
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>($r10, "10000") >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : specialinvoke r0.<org.apache.zeppelin.interpreter.AbstractInterpreterTest: void setUp()>()
org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : specialinvoke r0.<org.apache.zeppelin.interpreter.AbstractInterpreterTest: void setUp()>() >>>>>>>> org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManagerTest.setUp : return
