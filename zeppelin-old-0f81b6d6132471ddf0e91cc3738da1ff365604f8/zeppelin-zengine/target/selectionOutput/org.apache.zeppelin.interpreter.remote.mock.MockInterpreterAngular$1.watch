org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular$1.watch : $r4 = r0.<org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular$1: org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular this$0> >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular$1.watch : $r5 = $r4.<org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular: java.util.concurrent.atomic.AtomicInteger numWatch>
org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular$1.watch : $r5 = $r4.<org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular: java.util.concurrent.atomic.AtomicInteger numWatch> >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular$1.watch : virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>()
org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular$1.watch : virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.MockInterpreterAngular$1.watch : return
