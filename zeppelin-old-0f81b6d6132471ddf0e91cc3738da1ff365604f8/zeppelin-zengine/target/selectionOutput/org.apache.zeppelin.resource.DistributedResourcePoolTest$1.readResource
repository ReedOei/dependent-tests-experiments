org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r2 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getResourcePoolId()>() >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r3 = r0.<org.apache.zeppelin.resource.DistributedResourcePoolTest$1: org.apache.zeppelin.resource.LocalResourcePool val$pool2>
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r3 = r0.<org.apache.zeppelin.resource.DistributedResourcePoolTest$1: org.apache.zeppelin.resource.LocalResourcePool val$pool2> >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r4 = virtualinvoke $r3.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String id()>()
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r4 = virtualinvoke $r3.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String id()>() >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : if $z0 == 0
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : if $z0 == 0 >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r12 = r0.<org.apache.zeppelin.resource.DistributedResourcePoolTest$1: org.apache.zeppelin.resource.LocalResourcePool val$pool2>
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : if $z0 == 0 >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r5 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getResourcePoolId()>()
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r5 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getResourcePoolId()>() >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r6 = r0.<org.apache.zeppelin.resource.DistributedResourcePoolTest$1: org.apache.zeppelin.resource.LocalResourcePool val$pool3>
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r6 = r0.<org.apache.zeppelin.resource.DistributedResourcePoolTest$1: org.apache.zeppelin.resource.LocalResourcePool val$pool3> >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r7 = virtualinvoke $r6.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String id()>()
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r7 = virtualinvoke $r6.<org.apache.zeppelin.resource.LocalResourcePool: java.lang.String id()>() >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : if $z1 == 0
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : if $z1 == 0 >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r8 = r0.<org.apache.zeppelin.resource.DistributedResourcePoolTest$1: org.apache.zeppelin.resource.LocalResourcePool val$pool3>
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : if $z1 == 0 >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : return null
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r8 = r0.<org.apache.zeppelin.resource.DistributedResourcePoolTest$1: org.apache.zeppelin.resource.LocalResourcePool val$pool3> >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r9 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>()
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r9 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r10 = virtualinvoke $r8.<org.apache.zeppelin.resource.LocalResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r9)
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r10 = virtualinvoke $r8.<org.apache.zeppelin.resource.LocalResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r11 = virtualinvoke $r10.<org.apache.zeppelin.resource.Resource: java.lang.Object get()>()
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r11 = virtualinvoke $r10.<org.apache.zeppelin.resource.Resource: java.lang.Object get()>() >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : return $r11
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r12 = r0.<org.apache.zeppelin.resource.DistributedResourcePoolTest$1: org.apache.zeppelin.resource.LocalResourcePool val$pool2> >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r13 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>()
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r13 = virtualinvoke r1.<org.apache.zeppelin.resource.ResourceId: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r14 = virtualinvoke $r12.<org.apache.zeppelin.resource.LocalResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r13)
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r14 = virtualinvoke $r12.<org.apache.zeppelin.resource.LocalResourcePool: org.apache.zeppelin.resource.Resource get(java.lang.String)>($r13) >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r15 = virtualinvoke $r14.<org.apache.zeppelin.resource.Resource: java.lang.Object get()>()
org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : $r15 = virtualinvoke $r14.<org.apache.zeppelin.resource.Resource: java.lang.Object get()>() >>>>>>>> org.apache.zeppelin.resource.DistributedResourcePoolTest$1.readResource : return $r15
