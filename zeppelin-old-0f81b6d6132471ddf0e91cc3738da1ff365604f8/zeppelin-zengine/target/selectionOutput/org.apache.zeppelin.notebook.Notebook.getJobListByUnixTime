org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: void reloadAllNotes(org.apache.zeppelin.user.AuthenticationInfo)>(r1)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r49 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r46 := @caughtexception
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r47 = <org.apache.zeppelin.notebook.Notebook: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String)>("Fail to reload notes from repository")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String)>("Fail to reload notes from repository") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r49 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r49 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r50 = new java.util.LinkedList
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r50 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r50.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r50.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r4 = interfaceinvoke r49.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r4 = interfaceinvoke r49.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z6 == 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z6 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z6 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : return $r50
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r5 = (org.apache.zeppelin.notebook.Note) $r11
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r5 = (org.apache.zeppelin.notebook.Note) $r11 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z7 = 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z7 = 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z8 = 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z8 = 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : l4 = 0L
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : l4 = 0L >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r12 = new java.util.HashMap
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r12 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r12.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r12.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r13 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r13 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteId", $r13)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteId", $r13) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r7 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r7 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if r7 == null
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if r7 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z5 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if r7 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r15 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Note ")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Note ") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r17 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r17 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteName", $r19)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteName", $r19) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r51 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r51 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z9 = interfaceinvoke $r51.<java.util.Map: boolean containsKey(java.lang.Object)>("cron")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z9 = interfaceinvoke $r51.<java.util.Map: boolean containsKey(java.lang.Object)>("cron") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z9 == 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z9 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r41 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z9 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "normal")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "normal") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r52 = new java.util.LinkedList
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r52 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r52.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r52.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r53 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r53 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r54 = interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r54 = interfaceinvoke $r53.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z10 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z10 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z10 == 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z10 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r39 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z10 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r55 = null
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r55 = null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r22 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r22 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r23 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r23 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r24 = virtualinvoke $r22.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r23)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r24 = virtualinvoke $r22.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r23) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $r24 == null
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $r24 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r31 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $r24 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z8 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z8 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z7 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z8 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("interpreter", r55)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("interpreter", r55) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z7)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z7) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("isRunningJob", $r26)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("isRunningJob", $r26) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unixTimeLastRun", $r28)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unixTimeLastRun", $r28) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("paragraphs", $r52)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("paragraphs", $r52) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r50.<java.util.List: boolean add(java.lang.Object)>($r12)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r50.<java.util.List: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z7 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z7 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("interpreter", r55)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r31 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r32 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r32 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r33 = virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r32)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r33 = virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r32) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $i1 = interfaceinvoke $r33.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $i1 = interfaceinvoke $r33.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $i1 < 1
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $i1 < 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r34 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $i1 < 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z8 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r34 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r35 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r35 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r36 = virtualinvoke $r34.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r35)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r36 = virtualinvoke $r34.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r35) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r37 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r37 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r38 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r37
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r38 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r37 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r55 = virtualinvoke $r38.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r55 = virtualinvoke $r38.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z8 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r39 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r9 = (org.apache.zeppelin.notebook.Paragraph) $r39
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r9 = (org.apache.zeppelin.notebook.Paragraph) $r39 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r40 = virtualinvoke r9.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r40 = virtualinvoke r9.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z2 = virtualinvoke $r40.<org.apache.zeppelin.scheduler.Job$Status: boolean isRunning()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z2 = virtualinvoke $r40.<org.apache.zeppelin.scheduler.Job$Status: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z2 == 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z7 = 1
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r10 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.Map getParagraphForJobManagerItem(org.apache.zeppelin.notebook.Paragraph)>(r9)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r10 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.Map getParagraphForJobManagerItem(org.apache.zeppelin.notebook.Paragraph)>(r9) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $l2 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: long getUnixTimeLastRunParagraph(org.apache.zeppelin.notebook.Paragraph)>(r9)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $l2 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: long getUnixTimeLastRunParagraph(org.apache.zeppelin.notebook.Paragraph)>(r9) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : l4 = staticinvoke <java.lang.Math: long max(long,long)>($l2, l4)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : l4 = staticinvoke <java.lang.Math: long max(long,long)>($l2, l4) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $b3 = l4 cmp l0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $b3 = l4 cmp l0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $b3 <= 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $b3 <= 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z8 = 1
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $b3 <= 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r52.<java.util.List: boolean add(java.lang.Object)>(r10)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r52.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z10 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z10 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z10 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z8 = 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r52.<java.util.List: boolean add(java.lang.Object)>(r10)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z7 = 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z8 = 1
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z8 = 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r10 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.Map getParagraphForJobManagerItem(org.apache.zeppelin.notebook.Paragraph)>(r9)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r41 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>("cron")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>("cron") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z4 = virtualinvoke $r42.<java.lang.Object: boolean equals(java.lang.Object)>("")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z4 = virtualinvoke $r42.<java.lang.Object: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z4 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z4 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "cron")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z4 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "normal")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "cron") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $r52 = new java.util.LinkedList]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $r52 = new java.util.LinkedList] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r52 = new java.util.LinkedList
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z5 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z5 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z5 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r44 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z5 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r15 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r44 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteName", $r44)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteName", $r44) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $r51 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $r51 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r51 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: void reloadAllNotes(org.apache.zeppelin.user.AuthenticationInfo)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= r49 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: void reloadAllNotes(org.apache.zeppelin.user.AuthenticationInfo)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r46 := @caughtexception
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= r49 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r49 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()
