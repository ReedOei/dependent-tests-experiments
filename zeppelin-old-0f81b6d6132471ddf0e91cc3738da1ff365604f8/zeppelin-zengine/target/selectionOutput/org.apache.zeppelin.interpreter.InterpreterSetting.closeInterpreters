org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : r3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : if r3 == null
org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : if r3 == null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : r4 = specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getInterpreterSessionId(java.lang.String,java.lang.String)>(r1, r2)
org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : if r3 == null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : return
org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : r4 = specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getInterpreterSessionId(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : virtualinvoke r3.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: void close(java.lang.String)>(r4)
org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : virtualinvoke r3.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: void close(java.lang.String)>(r4) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeInterpreters : return
