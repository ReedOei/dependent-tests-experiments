org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r2 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r3 = (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client) $r2
org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r3 = (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client) $r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r4 = virtualinvoke $r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: org.apache.thrift.protocol.TProtocol getOutputProtocol()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r4 = virtualinvoke $r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: org.apache.thrift.protocol.TProtocol getOutputProtocol()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r5 = virtualinvoke $r4.<org.apache.thrift.protocol.TProtocol: org.apache.thrift.transport.TTransport getTransport()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r5 = virtualinvoke $r4.<org.apache.thrift.protocol.TProtocol: org.apache.thrift.transport.TTransport getTransport()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $z0 = virtualinvoke $r5.<org.apache.thrift.transport.TTransport: boolean isOpen()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $z0 = virtualinvoke $r5.<org.apache.thrift.transport.TTransport: boolean isOpen()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : return $z0
