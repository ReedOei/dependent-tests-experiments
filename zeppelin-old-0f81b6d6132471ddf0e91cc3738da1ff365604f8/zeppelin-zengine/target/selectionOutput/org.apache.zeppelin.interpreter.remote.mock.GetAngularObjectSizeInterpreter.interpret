org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r3 = new org.apache.zeppelin.interpreter.InterpreterResult >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r5 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code SUCCESS>
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r5 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code SUCCESS> >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r4 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("")
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("") >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r7 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterContext: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>()
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r7 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterContext: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r8 = virtualinvoke $r7.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map getRegistry()>()
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r8 = virtualinvoke $r7.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.Map getRegistry()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $i0 = interfaceinvoke $r8.<java.util.Map: int size()>()
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $i0 = interfaceinvoke $r8.<java.util.Map: int size()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : specialinvoke $r3.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.lang.String)>($r5, $r10)
org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : specialinvoke $r3.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.lang.String)>($r5, $r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.mock.GetAngularObjectSizeInterpreter.interpret : return $r3
