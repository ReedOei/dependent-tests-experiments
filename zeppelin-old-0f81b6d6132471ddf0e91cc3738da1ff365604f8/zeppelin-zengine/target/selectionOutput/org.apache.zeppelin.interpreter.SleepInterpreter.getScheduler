org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.SleepInterpreter: java.lang.String getProperty(java.lang.String,java.lang.String)>("zeppelin.SleepInterpreter.parallel", "false") >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r1)
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r1) >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : if $z0 == 0
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r3 = staticinvoke <org.apache.zeppelin.scheduler.SchedulerFactory: org.apache.zeppelin.scheduler.SchedulerFactory singleton()>()
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r2 = specialinvoke r0.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>()
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r2 = specialinvoke r0.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.scheduler.Scheduler getScheduler()>() >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : return $r2
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r3 = staticinvoke <org.apache.zeppelin.scheduler.SchedulerFactory: org.apache.zeppelin.scheduler.SchedulerFactory singleton()>() >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r4 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parallel-")
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parallel-") >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r6 = class "Lorg/apache/zeppelin/interpreter/SleepInterpreter;"
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r6 = class "Lorg/apache/zeppelin/interpreter/SleepInterpreter;" >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>()
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r10 = virtualinvoke $r3.<org.apache.zeppelin.scheduler.SchedulerFactory: org.apache.zeppelin.scheduler.Scheduler createOrGetParallelScheduler(java.lang.String,int)>($r9, 10)
org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : $r10 = virtualinvoke $r3.<org.apache.zeppelin.scheduler.SchedulerFactory: org.apache.zeppelin.scheduler.Scheduler createOrGetParallelScheduler(java.lang.String,int)>($r9, 10) >>>>>>>> org.apache.zeppelin.interpreter.SleepInterpreter.getScheduler : return $r10
