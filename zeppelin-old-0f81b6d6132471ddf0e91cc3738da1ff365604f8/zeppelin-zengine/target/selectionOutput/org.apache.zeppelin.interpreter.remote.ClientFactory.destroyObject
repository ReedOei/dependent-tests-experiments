org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r4 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap> >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : entermonitor $r4
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : entermonitor $r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r5 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap>
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : entermonitor $r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : exitmonitor $r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : throw $r14
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : exitmonitor $r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r5 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap> >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r6 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r5 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap> >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r6 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r6)
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r6 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : if $z0 == 0
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r7 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap>
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : exitmonitor $r4
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : exitmonitor $r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : goto [?= return]
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : exitmonitor $r4 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : return
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r7 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap> >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r8 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r7 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap> >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r8 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r8 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r10 = (org.apache.thrift.transport.TSocket) $r9
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r10 = (org.apache.thrift.transport.TSocket) $r9 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : virtualinvoke $r10.<org.apache.thrift.transport.TSocket: void close()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r10 = (org.apache.thrift.transport.TSocket) $r9 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : virtualinvoke $r10.<org.apache.thrift.transport.TSocket: void close()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r11 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap>
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : virtualinvoke $r10.<org.apache.thrift.transport.TSocket: void close()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r11 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap> >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r12 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r11 = r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: java.util.Map clientSocketMap> >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r12 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r12)
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r12 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : exitmonitor $r4
org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.destroyObject : $r14 := @caughtexception
