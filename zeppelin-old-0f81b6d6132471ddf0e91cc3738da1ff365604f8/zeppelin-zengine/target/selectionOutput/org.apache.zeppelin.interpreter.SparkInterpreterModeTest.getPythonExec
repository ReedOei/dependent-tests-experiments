org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r3 = newarray (java.lang.String)[2]
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r3 = newarray (java.lang.String)[2] >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r3[0] = "which"
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r3[0] = "which" >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r3[1] = "python"
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r3[1] = "python" >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : r1 = virtualinvoke $r2.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>($r3)
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : r1 = virtualinvoke $r2.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>($r3) >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $i0 = virtualinvoke r1.<java.lang.Process: int waitFor()>()
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $i0 = virtualinvoke r1.<java.lang.Process: int waitFor()>() >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : if $i0 == 0
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : if $i0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r7 = new java.lang.RuntimeException
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : if $i0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r4 = virtualinvoke r1.<java.lang.Process: java.io.InputStream getInputStream()>()
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r4 = virtualinvoke r1.<java.lang.Process: java.io.InputStream getInputStream()>() >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r5 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream)>($r4)
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r5 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream)>($r4) >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : return $r6
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : $r7 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Fail to run command: which python.")
org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Fail to run command: which python.") >>>>>>>> org.apache.zeppelin.interpreter.SparkInterpreterModeTest.getPythonExec : throw $r7
