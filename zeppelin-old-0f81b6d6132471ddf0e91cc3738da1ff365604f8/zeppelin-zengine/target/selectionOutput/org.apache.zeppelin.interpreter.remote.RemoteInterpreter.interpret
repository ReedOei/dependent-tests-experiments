org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r6 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r9 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.Interpreter$FormType getFormType()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.Interpreter$FormType getFormType()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r12 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.Interpreter$FormType getFormType()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r10 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r11 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : specialinvoke $r11.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>($r10)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : specialinvoke $r11.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : throw $r11
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r12 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : goto [?= r14 = virtualinvoke r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool getInterpreterContextRunnerPool()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r12 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getOrCreateInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r10 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : goto [?= r14 = virtualinvoke r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool getInterpreterContextRunnerPool()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r14 = virtualinvoke r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool getInterpreterContextRunnerPool()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r14 = virtualinvoke r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool getInterpreterContextRunnerPool()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r4 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterContext: java.util.List getRunners()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r4 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterContext: java.util.List getRunners()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : if r4 == null
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : if r4 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $i0 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : if r4 == null >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r15 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r15 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r16 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r16 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.ManagedInterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r17 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionId> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : interfaceinvoke $r15.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r16, $r17)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : interfaceinvoke $r15.<org.apache.zeppelin.interpreter.LifecycleManager: void onInterpreterUse(org.apache.zeppelin.interpreter.ManagedInterpreterGroup,java.lang.String)>($r16, $r17) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r18 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r18 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : specialinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter,java.lang.String,org.apache.zeppelin.interpreter.InterpreterContext,org.apache.zeppelin.interpreter.Interpreter$FormType)>(r0, r1, r2, r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : specialinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4: void <init>(org.apache.zeppelin.interpreter.remote.RemoteInterpreter,java.lang.String,org.apache.zeppelin.interpreter.InterpreterContext,org.apache.zeppelin.interpreter.Interpreter$FormType)>(r0, r1, r2, r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r19 = virtualinvoke r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r18)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r19 = virtualinvoke r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: java.lang.Object callRemoteFunction(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess$RemoteFunction)>($r18) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r20 = (org.apache.zeppelin.interpreter.InterpreterResult) $r19
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r20 = (org.apache.zeppelin.interpreter.InterpreterResult) $r19 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : return $r20
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $i0 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : if $i0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : if $i0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r7 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : if $i0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r15 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r7 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r8 = (org.apache.zeppelin.interpreter.InterpreterContextRunner) $r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r8 = (org.apache.zeppelin.interpreter.InterpreterContextRunner) $r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r5 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.InterpreterContextRunner: java.lang.String getNoteId()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r5 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.InterpreterContextRunner: java.lang.String getNoteId()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : virtualinvoke r14.<org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool: void clear(java.lang.String)>(r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : virtualinvoke r14.<org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool: void clear(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : virtualinvoke r14.<org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool: void addAll(java.lang.String,java.util.List)>(r5, r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : virtualinvoke r14.<org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool: void addAll(java.lang.String,java.util.List)>(r5, r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r15 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : $r9 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("st:\n{}", r1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("st:\n{}", r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret : r3 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.Interpreter$FormType getFormType()>()
