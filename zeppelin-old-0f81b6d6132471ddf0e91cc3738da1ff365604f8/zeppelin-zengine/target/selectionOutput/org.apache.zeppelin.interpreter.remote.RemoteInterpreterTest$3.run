org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r4 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code SUCCESS> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3: org.apache.zeppelin.interpreter.Interpreter val$interpreter1>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3: org.apache.zeppelin.interpreter.Interpreter val$interpreter1> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3: org.apache.zeppelin.interpreter.InterpreterContext val$context1>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3: org.apache.zeppelin.interpreter.InterpreterContext val$context1> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r5 = virtualinvoke $r3.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.InterpreterResult interpret(java.lang.String,org.apache.zeppelin.interpreter.InterpreterContext)>("100", $r2)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3: org.apache.zeppelin.interpreter.InterpreterContext val$context1> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r7 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : virtualinvoke $r7.<org.apache.zeppelin.interpreter.InterpreterException: void printStackTrace()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : staticinvoke <org.junit.Assert: void fail()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : staticinvoke <org.junit.Assert: void fail()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r5 = virtualinvoke $r3.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.InterpreterResult interpret(java.lang.String,org.apache.zeppelin.interpreter.InterpreterContext)>("100", $r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r6 = virtualinvoke $r5.<org.apache.zeppelin.interpreter.InterpreterResult: org.apache.zeppelin.interpreter.InterpreterResult$Code code()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r5 = virtualinvoke $r3.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.InterpreterResult interpret(java.lang.String,org.apache.zeppelin.interpreter.InterpreterContext)>("100", $r2) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r7 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r6 = virtualinvoke $r5.<org.apache.zeppelin.interpreter.InterpreterResult: org.apache.zeppelin.interpreter.InterpreterResult$Code code()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r6)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r6 = virtualinvoke $r5.<org.apache.zeppelin.interpreter.InterpreterResult: org.apache.zeppelin.interpreter.InterpreterResult$Code code()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r7 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r4, $r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : $r7 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterTest$3.run : return
