org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : $r4 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED> >>>>>>>> org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : if r3 != $r4
org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : if r3 != $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : $r5 = r0.<org.apache.zeppelin.notebook.NotebookTest$1: java.util.concurrent.CountDownLatch val$jobsToExecuteCount>
org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : if r3 != $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : return
org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : $r5 = r0.<org.apache.zeppelin.notebook.NotebookTest$1: java.util.concurrent.CountDownLatch val$jobsToExecuteCount> >>>>>>>> org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : virtualinvoke $r5.<java.util.concurrent.CountDownLatch: void countDown()>()
org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : virtualinvoke $r5.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookTest$1.onStatusChanged : return
