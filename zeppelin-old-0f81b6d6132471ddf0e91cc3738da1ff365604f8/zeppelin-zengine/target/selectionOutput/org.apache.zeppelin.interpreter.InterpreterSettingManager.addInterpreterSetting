org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map interpreterSettingTemplates> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r3 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r3 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r5 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.helium.ApplicationEventListener appEventListener>
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r5 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.helium.ApplicationEventListener appEventListener> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setAppEventListener(org.apache.zeppelin.helium.ApplicationEventListener)>($r5)
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setAppEventListener(org.apache.zeppelin.helium.ApplicationEventListener)>($r5) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.dep.DependencyResolver dependencyResolver>
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.dep.DependencyResolver dependencyResolver> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setDependencyResolver(org.apache.zeppelin.dep.DependencyResolver)>($r6)
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setDependencyResolver(org.apache.zeppelin.dep.DependencyResolver)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setLifecycleManager(org.apache.zeppelin.interpreter.LifecycleManager)>($r7)
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setLifecycleManager(org.apache.zeppelin.interpreter.LifecycleManager)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r8 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener>
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r8 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setAngularObjectRegistryListener(org.apache.zeppelin.display.AngularObjectRegistryListener)>($r8)
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setAngularObjectRegistryListener(org.apache.zeppelin.display.AngularObjectRegistryListener)>($r8) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r9 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener>
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r9 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setRemoteInterpreterProcessListener(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener)>($r9)
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setRemoteInterpreterProcessListener(org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener)>($r9) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setInterpreterSettingManager(org.apache.zeppelin.interpreter.InterpreterSettingManager)>(r0)
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void setInterpreterSettingManager(org.apache.zeppelin.interpreter.InterpreterSettingManager)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map interpreterSettings>
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.Map interpreterSettings> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r11 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getId()>()
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : $r11 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r1)
org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSettingManager.addInterpreterSetting : return
