org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r4 = <org.apache.zeppelin.interpreter.MiniHadoopCluster: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Starting MiniHadoopCluster ...")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Starting MiniHadoopCluster ...") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r5 = new org.apache.hadoop.conf.Configuration
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r5 = new org.apache.hadoop.conf.Configuration >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r5.<org.apache.hadoop.conf.Configuration: void <init>()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r5.<org.apache.hadoop.conf.Configuration: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.conf.Configuration hadoopConf> = $r5
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.conf.Configuration hadoopConf> = $r5 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r6 = new java.io.File
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r6 = new java.io.File >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r7 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: java.lang.String configPath>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r7 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: java.lang.String configPath> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r6.<java.io.File: boolean mkdirs()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r6.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r8 = new org.apache.hadoop.hdfs.MiniDFSCluster$Builder
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r8 = new org.apache.hadoop.hdfs.MiniDFSCluster$Builder >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r9 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.conf.Configuration hadoopConf>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r9 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.conf.Configuration hadoopConf> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r8.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: void <init>(org.apache.hadoop.conf.Configuration)>($r9)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r8.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: void <init>(org.apache.hadoop.conf.Configuration)>($r9) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r10 = virtualinvoke $r8.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: org.apache.hadoop.hdfs.MiniDFSCluster$Builder numDataNodes(int)>(2)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r10 = virtualinvoke $r8.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: org.apache.hadoop.hdfs.MiniDFSCluster$Builder numDataNodes(int)>(2) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r11 = virtualinvoke $r10.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: org.apache.hadoop.hdfs.MiniDFSCluster$Builder format(boolean)>(1)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r11 = virtualinvoke $r10.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: org.apache.hadoop.hdfs.MiniDFSCluster$Builder format(boolean)>(1) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r12 = virtualinvoke $r11.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: org.apache.hadoop.hdfs.MiniDFSCluster$Builder waitSafeMode(boolean)>(1)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r12 = virtualinvoke $r11.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: org.apache.hadoop.hdfs.MiniDFSCluster$Builder waitSafeMode(boolean)>(1) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r13 = virtualinvoke $r12.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: org.apache.hadoop.hdfs.MiniDFSCluster build()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r13 = virtualinvoke $r12.<org.apache.hadoop.hdfs.MiniDFSCluster$Builder: org.apache.hadoop.hdfs.MiniDFSCluster build()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.hdfs.MiniDFSCluster dfsCluster> = $r13
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.hdfs.MiniDFSCluster dfsCluster> = $r13 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r14 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.hdfs.MiniDFSCluster dfsCluster>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r14 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.hdfs.MiniDFSCluster dfsCluster> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r14.<org.apache.hadoop.hdfs.MiniDFSCluster: void waitActive()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r14.<org.apache.hadoop.hdfs.MiniDFSCluster: void waitActive()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r16 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.conf.Configuration hadoopConf>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r16 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.conf.Configuration hadoopConf> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r15 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r17 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: java.lang.String configPath>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r17 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: java.lang.String configPath> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/core-site.xml")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/core-site.xml") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: void saveConfig(org.apache.hadoop.conf.Configuration,java.lang.String)>($r16, $r20)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: void saveConfig(org.apache.hadoop.conf.Configuration,java.lang.String)>($r16, $r20) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r21 = new org.apache.hadoop.yarn.conf.YarnConfiguration
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r21 = new org.apache.hadoop.yarn.conf.YarnConfiguration >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r22 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.conf.Configuration hadoopConf>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r22 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.conf.Configuration hadoopConf> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r21.<org.apache.hadoop.yarn.conf.YarnConfiguration: void <init>(org.apache.hadoop.conf.Configuration)>($r22)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r21.<org.apache.hadoop.yarn.conf.YarnConfiguration: void <init>(org.apache.hadoop.conf.Configuration)>($r22) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r23 = new org.apache.hadoop.yarn.server.MiniYARNCluster
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r23 = new org.apache.hadoop.yarn.server.MiniYARNCluster >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r24 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r24 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r23.<org.apache.hadoop.yarn.server.MiniYARNCluster: void <init>(java.lang.String,int,int,int)>($r25, 2, 1, 1)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r23.<org.apache.hadoop.yarn.server.MiniYARNCluster: void <init>(java.lang.String,int,int,int)>($r25, 2, 1, 1) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.yarn.server.MiniYARNCluster yarnCluster> = $r23
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.yarn.server.MiniYARNCluster yarnCluster> = $r23 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r26 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.yarn.server.MiniYARNCluster yarnCluster>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r26 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.yarn.server.MiniYARNCluster yarnCluster> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r26.<org.apache.hadoop.yarn.server.MiniYARNCluster: void init(org.apache.hadoop.conf.Configuration)>($r21)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r26.<org.apache.hadoop.yarn.server.MiniYARNCluster: void init(org.apache.hadoop.conf.Configuration)>($r21) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r27 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r27 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r28 = new org.apache.zeppelin.interpreter.MiniHadoopCluster$1
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r28 = new org.apache.zeppelin.interpreter.MiniHadoopCluster$1 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r28.<org.apache.zeppelin.interpreter.MiniHadoopCluster$1: void <init>(org.apache.zeppelin.interpreter.MiniHadoopCluster)>(r0)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r28.<org.apache.zeppelin.interpreter.MiniHadoopCluster$1: void <init>(org.apache.zeppelin.interpreter.MiniHadoopCluster)>(r0) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r27.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r28)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r27.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r28) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r29 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.yarn.server.MiniYARNCluster yarnCluster>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r29 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.yarn.server.MiniYARNCluster yarnCluster> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r29.<org.apache.hadoop.yarn.server.MiniYARNCluster: void start()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke $r29.<org.apache.hadoop.yarn.server.MiniYARNCluster: void start()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r30 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.yarn.server.MiniYARNCluster yarnCluster>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r30 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: org.apache.hadoop.yarn.server.MiniYARNCluster yarnCluster> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : r2 = virtualinvoke $r30.<org.apache.hadoop.yarn.server.MiniYARNCluster: org.apache.hadoop.conf.Configuration getConfig()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : r2 = virtualinvoke $r30.<org.apache.hadoop.yarn.server.MiniYARNCluster: org.apache.hadoop.conf.Configuration getConfig()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $l2 = $l1 - l0
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $l2 = $l1 - l0 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $b3 = $l2 cmp 30000L
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $b3 = $l2 cmp 30000L >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $b3 >= 0
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $b3 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : staticinvoke <java.lang.Thread: void sleep(long)>(100L)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $b3 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r31 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $b3 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r50 = new java.io.IOException >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r50.<java.io.IOException: void <init>(java.lang.Throwable)>($r49)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r50.<java.io.IOException: void <init>(java.lang.Throwable)>($r49) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : throw $r50
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r31 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r32 = virtualinvoke $r31.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r32 = virtualinvoke $r31.<java.lang.String: java.lang.String[] split(java.lang.String)>(":") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r33 = $r32[1]
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r33 = $r32[1] >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $z1 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("0")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $z1 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("0") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $z1 == 0
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r45 = new java.io.IOException
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r35 = <org.apache.zeppelin.interpreter.MiniHadoopCluster: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r35 = <org.apache.zeppelin.interpreter.MiniHadoopCluster: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r34 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r34 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RM address in configuration is ")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RM address in configuration is ") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r37 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r37 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String)>($r39)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String)>($r39) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r40 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r40 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r41 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: java.lang.String configPath>
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r41 = r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: java.lang.String configPath> >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/yarn-site.xml")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/yarn-site.xml") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: void saveConfig(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, $r44)
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : virtualinvoke r0.<org.apache.zeppelin.interpreter.MiniHadoopCluster: void saveConfig(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, $r44) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : return
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r45 = new java.io.IOException >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r45.<java.io.IOException: void <init>(java.lang.String)>("RM not up yes")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : specialinvoke $r45.<java.io.IOException: void <init>(java.lang.String)>("RM not up yes") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : throw $r45
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : goto [?= $r46 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address")]
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r49 := @caughtexception
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : goto [?= $r46 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address")] >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r46 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r46 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r47 = virtualinvoke $r46.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r47 = virtualinvoke $r46.<java.lang.String: java.lang.String[] split(java.lang.String)>(":") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r48 = $r47[1]
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r48 = $r47[1] >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $z2 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>("0")
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $z2 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>("0") >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $z2 != 0
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : goto [?= $r31 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address")]
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.MiniHadoopCluster.start : goto [?= $r31 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address")] >>>>>>>> org.apache.zeppelin.interpreter.MiniHadoopCluster.start : $r31 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.resourcemanager.address")
