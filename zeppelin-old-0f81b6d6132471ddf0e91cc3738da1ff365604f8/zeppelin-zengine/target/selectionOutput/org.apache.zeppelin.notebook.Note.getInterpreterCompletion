org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r8 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : specialinvoke $r8.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : specialinvoke $r8.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r9 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r9 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r10 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r10 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r11 = virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r10)
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r11 = virtualinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r2 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r2 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : if $z0 == 0
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : return $r8
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r3 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r12
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r3 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r12 >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r4 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.List getInterpreterInfos()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r4 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.List getInterpreterInfos()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $i0 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $i0 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : if $i0 <= 1
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : if $i0 <= 1 >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : if $i0 <= 1 >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r13 = new org.apache.zeppelin.interpreter.thrift.InterpreterCompletion
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r13 = new org.apache.zeppelin.interpreter.thrift.InterpreterCompletion >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r14 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r14 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r15 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r15 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r16 = <org.apache.zeppelin.completer.CompletionType: org.apache.zeppelin.completer.CompletionType setting>
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r16 = <org.apache.zeppelin.completer.CompletionType: org.apache.zeppelin.completer.CompletionType setting> >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r17 = virtualinvoke $r16.<org.apache.zeppelin.completer.CompletionType: java.lang.String name()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r17 = virtualinvoke $r16.<org.apache.zeppelin.completer.CompletionType: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : specialinvoke $r13.<org.apache.zeppelin.interpreter.thrift.InterpreterCompletion: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, $r17)
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : specialinvoke $r13.<org.apache.zeppelin.interpreter.thrift.InterpreterCompletion: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, $r17) >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r13)
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : if $z2 == 0
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : goto [?= (branch)]
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r6 = (org.apache.zeppelin.interpreter.InterpreterInfo) $r18
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r6 = (org.apache.zeppelin.interpreter.InterpreterInfo) $r18 >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r19 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r20 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r20 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r23 = virtualinvoke r6.<org.apache.zeppelin.interpreter.InterpreterInfo: java.lang.String getName()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r23 = virtualinvoke r6.<org.apache.zeppelin.interpreter.InterpreterInfo: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r7 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : r7 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r25 = new org.apache.zeppelin.interpreter.thrift.InterpreterCompletion
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r25 = new org.apache.zeppelin.interpreter.thrift.InterpreterCompletion >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r26 = <org.apache.zeppelin.completer.CompletionType: org.apache.zeppelin.completer.CompletionType setting>
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r26 = <org.apache.zeppelin.completer.CompletionType: org.apache.zeppelin.completer.CompletionType setting> >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r27 = virtualinvoke $r26.<org.apache.zeppelin.completer.CompletionType: java.lang.String name()>()
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $r27 = virtualinvoke $r26.<org.apache.zeppelin.completer.CompletionType: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : specialinvoke $r25.<org.apache.zeppelin.interpreter.thrift.InterpreterCompletion: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r7, r7, $r27)
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : specialinvoke $r25.<org.apache.zeppelin.interpreter.thrift.InterpreterCompletion: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r7, r7, $r27) >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r25)
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Note.getInterpreterCompletion : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Note.getInterpreterCompletion : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
