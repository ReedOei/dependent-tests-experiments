org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r4 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r4 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Cannot update {} with empty settings", $r6)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Cannot update {} with empty settings", $r6) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : return
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if $z0 == 0
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r4 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : r15 = ""
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : r15 = "" >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("Notebook Path")
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("Notebook Path") >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if $z1 == 0
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Notebook Path")
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r15)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r15) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if $z2 == 0
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r11 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r8 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r8 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r7 = newarray (java.lang.Object)[3]
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r7 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r9 = virtualinvoke r2.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r9 = virtualinvoke r2.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r7[0] = $r9
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r7[0] = $r9 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r10 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.lang.String getNotebookDirPath()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r10 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.lang.String getNotebookDirPath()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r7[1] = $r10
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r7[1] = $r10 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r7[2] = r15
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r7[2] = r15 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("{} will change notebook dir from {} to {}", $r7)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("{} will change notebook dir from {} to {}", $r7) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: void setNotebookDirectory(java.lang.String)>(r15)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("{} will change notebook dir from {} to {}", $r7) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r13 := @caughtexception
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r14 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot update notebook directory", $r13)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot update notebook directory", $r13) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : return
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: void setNotebookDirectory(java.lang.String)>(r15) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : goto [?= return]
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: void setNotebookDirectory(java.lang.String)>(r15) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r13 := @caughtexception
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : return
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r11 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String)>("Notebook path is invalid")
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String)>("Notebook path is invalid") >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : return
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Notebook Path") >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : r15 = (java.lang.String) $r12
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : r15 = (java.lang.String) $r12 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.updateSettings : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r15)
