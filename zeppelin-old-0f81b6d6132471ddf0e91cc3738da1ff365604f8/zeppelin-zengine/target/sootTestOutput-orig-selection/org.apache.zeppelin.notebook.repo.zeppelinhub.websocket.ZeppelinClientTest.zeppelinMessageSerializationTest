org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping mock echo websocket server")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping mock echo websocket server") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void join()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void join()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: java.util.concurrent.ExecutorService executor> = $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: java.util.concurrent.ExecutorService executor> = $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r2 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r2 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : specialinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void <init>(int)>(8080)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : specialinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void <init>(int)>(8080) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> = $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> = $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: java.util.concurrent.ExecutorService executor>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: java.util.concurrent.ExecutorService executor> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : if $r3 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : if $r3 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting mock echo websocket server")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting mock echo websocket server") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean credentialsAvailable()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean credentialsAvailable()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $r1 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $r1 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : if $r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : if $r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $z0 = virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: boolean isAuthenticated()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $z0 = virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: boolean isAuthenticated()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.isAuthenticated : $z0 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: boolean authenticated>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.isAuthenticated : $z0 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: boolean authenticated> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.isAuthenticated : return $z0
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.isAuthenticated : return $z0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $z1 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : return $z1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : return $z1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : r2 = virtualinvoke r1.<org.apache.zeppelin.notebook.socket.Message: java.lang.String toJson()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : r2 = virtualinvoke r1.<org.apache.zeppelin.notebook.socket.Message: java.lang.String toJson()>() >>>>>>>> org.apache.zeppelin.notebook.socket.Message.toJson : $r1 = <org.apache.zeppelin.notebook.socket.Message: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.socket.Message.toJson : $r1 = <org.apache.zeppelin.notebook.socket.Message: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.socket.Message.toJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0)
org.apache.zeppelin.notebook.socket.Message.toJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void start()>() >>>>>>>> org.apache.zeppelin.notebook.socket.Message.toJson : return $r2
org.apache.zeppelin.notebook.socket.Message.toJson : return $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : return r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : return r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $r3 = staticinvoke <org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message fromJson(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $r3 = staticinvoke <org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message fromJson(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.socket.Message.fromJson : $r1 = <org.apache.zeppelin.notebook.socket.Message: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.socket.Message.fromJson : $r1 = <org.apache.zeppelin.notebook.socket.Message: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.socket.Message.fromJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r0, class "Lorg/apache/zeppelin/notebook/socket/Message;")
org.apache.zeppelin.notebook.socket.Message.fromJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r0, class "Lorg/apache/zeppelin/notebook/socket/Message;") >>>>>>>> org.apache.zeppelin.notebook.socket.Message.fromJson : $r3 = (org.apache.zeppelin.notebook.socket.Message) $r2
org.apache.zeppelin.notebook.socket.Message.fromJson : $r3 = (org.apache.zeppelin.notebook.socket.Message) $r2 >>>>>>>> org.apache.zeppelin.notebook.socket.Message.fromJson : return $r3
org.apache.zeppelin.notebook.socket.Message.fromJson : return $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : return $r3
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : return $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Fail to parse zeppelinMessage", $r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Fail to parse zeppelinMessage", $r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : return null
