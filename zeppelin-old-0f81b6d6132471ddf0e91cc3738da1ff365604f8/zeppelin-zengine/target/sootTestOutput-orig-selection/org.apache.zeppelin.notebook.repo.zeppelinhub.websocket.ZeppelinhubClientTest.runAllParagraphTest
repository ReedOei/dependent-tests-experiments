org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping mock echo websocket server")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping mock echo websocket server") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void join()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void join()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: java.util.concurrent.ExecutorService executor> = $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: java.util.concurrent.ExecutorService executor> = $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r2 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r2 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : specialinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void <init>(int)>(8090)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : specialinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void <init>(int)>(8090) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> = $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> = $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: java.util.concurrent.ExecutorService executor>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: java.util.concurrent.ExecutorService executor> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : if $r4 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : if $r4 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : return $r5
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : return $r5 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : virtualinvoke $r2.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : virtualinvoke $r2.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void addRoutines()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 23)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 23) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l3 = (long) i0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l3 = (long) i0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l2 = (long) i1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l2 = (long) i1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r1, $l3, $l2, $r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r1, $l3, $l2, $r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 60)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 60) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r3 = new java.util.Timer
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r3 = new java.util.Timer >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : specialinvoke $r3.<java.util.Timer: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : specialinvoke $r3.<java.util.Timer: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting mock echo websocket server")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting mock echo websocket server") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r4 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r4 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : specialinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : specialinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r3.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r4, 5000L)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r3.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r4, 5000L) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : goto [?= (branch)]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Running paragraph with noteId {}", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Running paragraph with noteId {}", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r8 = new com.amazonaws.util.json.JSONObject
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r8 = new com.amazonaws.util.json.JSONObject >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r8.<com.amazonaws.util.json.JSONObject: void <init>(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r8.<com.amazonaws.util.json.JSONObject: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r9 = <com.amazonaws.util.json.JSONObject: java.lang.Object NULL>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r9 = <com.amazonaws.util.json.JSONObject: java.lang.Object NULL> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r11 = virtualinvoke $r8.<com.amazonaws.util.json.JSONObject: java.lang.Object get(java.lang.String)>("data")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r11 = virtualinvoke $r8.<com.amazonaws.util.json.JSONObject: java.lang.Object get(java.lang.String)>("data") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z1 = $r11 instanceof com.amazonaws.util.json.JSONArray
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z1 = $r11 instanceof com.amazonaws.util.json.JSONArray >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z1 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r3 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r3 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if r3 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if r3 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r12 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r12 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r13 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP RUN_PARAGRAPH>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r13 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP RUN_PARAGRAPH> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r12.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r13)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r12.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r13) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r5 = virtualinvoke $r8.<com.amazonaws.util.json.JSONObject: com.amazonaws.util.json.JSONArray getJSONArray(java.lang.String)>("data")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r5 = virtualinvoke $r8.<com.amazonaws.util.json.JSONObject: com.amazonaws.util.json.JSONArray getJSONArray(java.lang.String)>("data") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r14 = virtualinvoke $r8.<com.amazonaws.util.json.JSONObject: com.amazonaws.util.json.JSONObject getJSONObject(java.lang.String)>("meta")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r14 = virtualinvoke $r8.<com.amazonaws.util.json.JSONObject: com.amazonaws.util.json.JSONObject getJSONObject(java.lang.String)>("meta") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r6 = virtualinvoke $r14.<com.amazonaws.util.json.JSONObject: java.lang.String getString(java.lang.String)>("owner")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r6 = virtualinvoke $r14.<com.amazonaws.util.json.JSONObject: java.lang.String getString(java.lang.String)>("owner") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : i1 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : i1 = 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $i0 = virtualinvoke r5.<com.amazonaws.util.json.JSONArray: int length()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $i0 = virtualinvoke r5.<com.amazonaws.util.json.JSONArray: int length()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if i1 >= $i0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if i1 >= $i0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r15 = virtualinvoke r5.<com.amazonaws.util.json.JSONArray: java.lang.Object get(int)>(i1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r15 = virtualinvoke r5.<com.amazonaws.util.json.JSONArray: java.lang.Object get(int)>(i1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z2 = $r15 instanceof com.amazonaws.util.json.JSONObject
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z2 = $r15 instanceof com.amazonaws.util.json.JSONObject >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z2 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z2 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r16 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r16 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r17 = virtualinvoke r5.<com.amazonaws.util.json.JSONArray: java.lang.String getString(int)>(i1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r17 = virtualinvoke r5.<com.amazonaws.util.json.JSONArray: java.lang.String getString(int)>(i1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r18 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient$1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r18 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient$1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r18.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient$1: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r18.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient$1: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r19 = virtualinvoke $r18.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient$1: java.lang.reflect.Type getType()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r19 = virtualinvoke $r18.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r20 = virtualinvoke $r16.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r17, $r19)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r20 = virtualinvoke $r16.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r17, $r19) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r21 = (java.util.Map) $r20
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r21 = (java.util.Map) $r20 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r12.<org.apache.zeppelin.notebook.socket.Message: java.util.Map data> = $r21
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r12.<org.apache.zeppelin.notebook.socket.Message: java.util.Map data> = $r21 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r12.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> = r6
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r12.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> = r6 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r22 = <org.apache.zeppelin.ticket.TicketContainer: org.apache.zeppelin.ticket.TicketContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r22 = <org.apache.zeppelin.ticket.TicketContainer: org.apache.zeppelin.ticket.TicketContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r23 = virtualinvoke $r22.<org.apache.zeppelin.ticket.TicketContainer: java.lang.String getTicket(java.lang.String)>(r6)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r23 = virtualinvoke $r22.<org.apache.zeppelin.ticket.TicketContainer: java.lang.String getTicket(java.lang.String)>(r6) >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r2 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions>
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r2 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions> >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : r6 = (org.apache.zeppelin.ticket.TicketContainer$Entry) $r3
org.apache.zeppelin.ticket.TicketContainer.getTicket : r6 = (org.apache.zeppelin.ticket.TicketContainer$Entry) $r3 >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : if r6 != null
org.apache.zeppelin.ticket.TicketContainer.getTicket : if r6 != null >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous")
org.apache.zeppelin.ticket.TicketContainer.getTicket : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous") >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : if $z0 == 0
org.apache.zeppelin.ticket.TicketContainer.getTicket : if $z0 == 0 >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r5 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r5 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : r7 = virtualinvoke $r5.<java.util.UUID: java.lang.String toString()>()
org.apache.zeppelin.ticket.TicketContainer.getTicket : r7 = virtualinvoke $r5.<java.util.UUID: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : goto [?= $r8 = new org.apache.zeppelin.ticket.TicketContainer$Entry]
org.apache.zeppelin.ticket.TicketContainer.getTicket : goto [?= $r8 = new org.apache.zeppelin.ticket.TicketContainer$Entry] >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r8 = new org.apache.zeppelin.ticket.TicketContainer$Entry
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r8 = new org.apache.zeppelin.ticket.TicketContainer$Entry >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : specialinvoke $r8.<org.apache.zeppelin.ticket.TicketContainer$Entry: void <init>(java.lang.String)>(r7)
org.apache.zeppelin.ticket.TicketContainer.getTicket : specialinvoke $r8.<org.apache.zeppelin.ticket.TicketContainer$Entry: void <init>(java.lang.String)>(r7) >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r10 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions>
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r10 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions> >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8)
org.apache.zeppelin.ticket.TicketContainer.getTicket : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8) >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : return r7
org.apache.zeppelin.ticket.TicketContainer.getTicket : return r7 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r12.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> = $r23
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r12.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> = $r23 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : virtualinvoke r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: void relayToZeppelin(org.apache.zeppelin.notebook.socket.Message,java.lang.String)>($r12, r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : virtualinvoke r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: void relayToZeppelin(org.apache.zeppelin.notebook.socket.Message,java.lang.String)>($r12, r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.relayToZeppelin : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.relayToZeppelin : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.relayToZeppelin : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void send(org.apache.zeppelin.notebook.socket.Message,java.lang.String)>(r1, r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.relayToZeppelin : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void send(org.apache.zeppelin.notebook.socket.Message,java.lang.String)>(r1, r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : $r5 = r1.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : $r5 = r1.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : $r4 = r1.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : $r4 = r1.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session getZeppelinConnection(java.lang.String,java.lang.String,java.lang.String)>(r2, $r5, $r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session getZeppelinConnection(java.lang.String,java.lang.String,java.lang.String)>(r2, $r5, $r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : $r4 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session getNoteSession(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : $r4 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session getNoteSession(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Getting Note websocket connection for note {}", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Getting Note websocket connection for note {}", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r5 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r5 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : r10 = (org.eclipse.jetty.websocket.api.Session) $r6
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : r10 = (org.eclipse.jetty.websocket.api.Session) $r6 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isSessionOpen(org.eclipse.jetty.websocket.api.Session)>(r10)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isSessionOpen(org.eclipse.jetty.websocket.api.Session)>(r10) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : if r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : if r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : $z1 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : $z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : return $z1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : return $z1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("No open connection for note {}, opening one", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("No open connection for note {}, opening one", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : r10 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session openNoteSession(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : r10 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session openNoteSession(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r6 = new org.eclipse.jetty.websocket.client.ClientUpgradeRequest
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r6 = new org.eclipse.jetty.websocket.client.ClientUpgradeRequest >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : specialinvoke $r6.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : specialinvoke $r6.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setHeader(java.lang.String,java.lang.String)>("Origin", "*")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setHeader(java.lang.String,java.lang.String)>("Origin", "*") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r7 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r7 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : specialinvoke $r7.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: void <init>(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : specialinvoke $r7.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.net.URI zeppelinWebsocketUrl>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.net.URI zeppelinWebsocketUrl> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : r19 = virtualinvoke $r9.<org.eclipse.jetty.websocket.client.WebSocketClient: java.util.concurrent.Future connect(java.lang.Object,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest)>($r7, $r8, $r6)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : r19 = virtualinvoke $r9.<org.eclipse.jetty.websocket.client.WebSocketClient: java.util.concurrent.Future connect(java.lang.Object,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest)>($r7, $r8, $r6) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r10 = interfaceinvoke r19.<java.util.concurrent.Future: java.lang.Object get()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r10 = interfaceinvoke r19.<java.util.concurrent.Future: java.lang.Object get()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Zeppelin socket connection error ", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Zeppelin socket connection error ", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : $r3 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : $r3 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: java.lang.String noteId>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: java.lang.String noteId> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeNoteConnection(java.lang.String)>($r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketError : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeNoteConnection(java.lang.String)>($r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z1 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z1 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z1 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r9 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r9 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Removed note websocket connection for note {}", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Removed note websocket connection for note {}", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r18 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r18 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Couldn\'t establish websocket connection to Zeppelin ", $r17)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Couldn\'t establish websocket connection to Zeppelin ", $r17) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : return null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : return null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : return r10
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : return r10 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isSessionOpen(org.eclipse.jetty.websocket.api.Session)>(r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isSessionOpen(org.eclipse.jetty.websocket.api.Session)>(r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : $r9 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : $r9 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Cannot open websocket connection to Zeppelin note {}", r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.send : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Cannot open websocket connection to Zeppelin note {}", r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r24 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r24 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String)>("\nSending RUN_PARAGRAPH message to Zeppelin ")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String)>("\nSending RUN_PARAGRAPH message to Zeppelin ") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : i1 = i1 + 1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : i1 = i1 + 1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : goto [?= $i0 = virtualinvoke r5.<com.amazonaws.util.json.JSONArray: int length()>()]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : goto [?= $i0 = virtualinvoke r5.<com.amazonaws.util.json.JSONArray: int length()>()] >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : r7 = r6.<org.apache.zeppelin.ticket.TicketContainer$Entry: java.lang.String ticket>
org.apache.zeppelin.ticket.TicketContainer.getTicket : r7 = r6.<org.apache.zeppelin.ticket.TicketContainer$Entry: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : goto [?= return 1]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : goto [?= return 1] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : return 1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : return 1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r28 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r28 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to parse RUN_NOTEBOOK message from ZeppelinHub ", $r27)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to parse RUN_NOTEBOOK message from ZeppelinHub ", $r27) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : return 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : return 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : if $r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : if $r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Stopping Zeppelinhub websocket client")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Stopping Zeppelinhub websocket client") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void close()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: void shutdown()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: void shutdown()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeAllConnections()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeAllConnections()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $r3 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $r3 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r1 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r1 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $z2 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void clear()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void clear()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r4 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r4 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= return]
