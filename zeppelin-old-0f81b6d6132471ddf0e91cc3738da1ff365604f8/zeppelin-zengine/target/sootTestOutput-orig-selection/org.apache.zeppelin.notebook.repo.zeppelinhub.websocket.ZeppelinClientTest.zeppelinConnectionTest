org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping mock echo websocket server")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping mock echo websocket server") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: java.util.concurrent.ExecutorService executor> = $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: java.util.concurrent.ExecutorService executor> = $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r2 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r2 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : specialinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void <init>(int)>(8080)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : specialinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void <init>(int)>(8080) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> = $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> = $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: java.util.concurrent.ExecutorService executor>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: java.util.concurrent.ExecutorService executor> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClientTest.startWebsocketServer : interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting mock echo websocket server")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting mock echo websocket server") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void join()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void join()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : if $r3 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : if $r3 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.initialize : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 60)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 60) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l3 = (long) i0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l3 = (long) i0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l2 = (long) i1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l2 = (long) i1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r1, $l3, $l2, $r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r1, $l3, $l2, $r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot start Zeppelin websocket client", $r5)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot start Zeppelin websocket client", $r5) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : $r4 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session getNoteSession(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : $r4 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session getNoteSession(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Getting Note websocket connection for note {}", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Getting Note websocket connection for note {}", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r5 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r5 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r6 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : r10 = (org.eclipse.jetty.websocket.api.Session) $r6
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : r10 = (org.eclipse.jetty.websocket.api.Session) $r6 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isSessionOpen(org.eclipse.jetty.websocket.api.Session)>(r10)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isSessionOpen(org.eclipse.jetty.websocket.api.Session)>(r10) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : if r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : if r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : $z1 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : $z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : return $z1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : return $z1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("No open connection for note {}, opening one", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("No open connection for note {}, opening one", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : r10 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session openNoteSession(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : r10 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session openNoteSession(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r6 = new org.eclipse.jetty.websocket.client.ClientUpgradeRequest
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r6 = new org.eclipse.jetty.websocket.client.ClientUpgradeRequest >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : specialinvoke $r6.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : specialinvoke $r6.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setHeader(java.lang.String,java.lang.String)>("Origin", "*")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setHeader(java.lang.String,java.lang.String)>("Origin", "*") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r7 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r7 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : specialinvoke $r7.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: void <init>(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : specialinvoke $r7.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.net.URI zeppelinWebsocketUrl>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.net.URI zeppelinWebsocketUrl> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : r19 = virtualinvoke $r9.<org.eclipse.jetty.websocket.client.WebSocketClient: java.util.concurrent.Future connect(java.lang.Object,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest)>($r7, $r8, $r6)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : r19 = virtualinvoke $r9.<org.eclipse.jetty.websocket.client.WebSocketClient: java.util.concurrent.Future connect(java.lang.Object,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest)>($r7, $r8, $r6) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r10 = interfaceinvoke r19.<java.util.concurrent.Future: java.lang.Object get()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r10 = interfaceinvoke r19.<java.util.concurrent.Future: java.lang.Object get()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventServlet.configure : interfaceinvoke r1.<org.eclipse.jetty.websocket.servlet.WebSocketServletFactory: void register(java.lang.Class)>(class "Lorg/apache/zeppelin/notebook/repo/zeppelinhub/websocket/mock/MockEventSocket;")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventServlet.configure : interfaceinvoke r1.<org.eclipse.jetty.websocket.servlet.WebSocketServletFactory: void register(java.lang.Class)>(class "Lorg/apache/zeppelin/notebook/repo/zeppelinhub/websocket/mock/MockEventSocket;") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session> = r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r2 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Socket Connected: ")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Socket Connected: ") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketConnect : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketConnect : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketConnect : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Zeppelin connection opened")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketConnect : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Zeppelin connection opened") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.eclipse.jetty.websocket.api.Session connection> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.eclipse.jetty.websocket.api.Session connection> = r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : r20 = (org.eclipse.jetty.websocket.api.Session) $r10
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : r20 = (org.eclipse.jetty.websocket.api.Session) $r10 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : goto [?= $r11 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : goto [?= $r11 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r11 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r11 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $z0 = virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $z0 = virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r12 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.socket.Message zeppelinGetNoteMsg(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r12 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.socket.Message zeppelinGetNoteMsg(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r6 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r6 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r7 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP GET_NOTE>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r7 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP GET_NOTE> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : specialinvoke $r6.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r7)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : specialinvoke $r6.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r7) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r8 = new java.util.HashMap
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r8 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("id", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("id", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r6.<org.apache.zeppelin.notebook.socket.Message: java.util.Map data> = $r8
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r6.<org.apache.zeppelin.notebook.socket.Message: java.util.Map data> = $r8 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r6.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> = r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r6.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> = r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r6.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> = r3
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : $r6.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> = r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : return $r6
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.zeppelinGetNoteMsg : return $r6 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : r22 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.lang.String serialize(org.apache.zeppelin.notebook.socket.Message)>($r12)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : r22 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.lang.String serialize(org.apache.zeppelin.notebook.socket.Message)>($r12) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean credentialsAvailable()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean credentialsAvailable()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $r1 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $r1 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : if $r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : if $r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $z0 = virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: boolean isAuthenticated()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $z0 = virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: boolean isAuthenticated()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.isAuthenticated : $z0 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: boolean authenticated>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.isAuthenticated : $z0 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: boolean authenticated> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.isAuthenticated : return $z0
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.isAuthenticated : return $z0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $z1 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : $z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : return $z1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.credentialsAvailable : return $z1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : r2 = virtualinvoke r1.<org.apache.zeppelin.notebook.socket.Message: java.lang.String toJson()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : r2 = virtualinvoke r1.<org.apache.zeppelin.notebook.socket.Message: java.lang.String toJson()>() >>>>>>>> org.apache.zeppelin.notebook.socket.Message.toJson : $r1 = <org.apache.zeppelin.notebook.socket.Message: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.socket.Message.toJson : $r1 = <org.apache.zeppelin.notebook.socket.Message: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.socket.Message.toJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0)
org.apache.zeppelin.notebook.socket.Message.toJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0) >>>>>>>> org.apache.zeppelin.notebook.socket.Message.toJson : return $r2
org.apache.zeppelin.notebook.socket.Message.toJson : return $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : return r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.serialize : return r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r13 = interfaceinvoke r20.<org.eclipse.jetty.websocket.api.Session: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemote()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r13 = interfaceinvoke r20.<org.eclipse.jetty.websocket.api.Session: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemote()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : interfaceinvoke $r13.<org.eclipse.jetty.websocket.api.RemoteEndpoint: java.util.concurrent.Future sendStringByFuture(java.lang.String)>(r22)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : interfaceinvoke $r13.<org.eclipse.jetty.websocket.api.RemoteEndpoint: java.util.concurrent.Future sendStringByFuture(java.lang.String)>(r22) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r6)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r14 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : $r14 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : virtualinvoke $r14.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r20)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : virtualinvoke $r14.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r20) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : return r20
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openNoteSession : return r20 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : return r10
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getNoteSession : return r10 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getZeppelinConnection : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.countConnectedNotes : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.countConnectedNotes : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.countConnectedNotes : $i0 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: int size()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.countConnectedNotes : $i0 = virtualinvoke $r1.<java.util.concurrent.ConcurrentHashMap: int size()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.countConnectedNotes : return $i0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.countConnectedNotes : return $i0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : $z0 = interfaceinvoke r1.<org.eclipse.jetty.websocket.api.Session: boolean isOpen()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : $z0 = interfaceinvoke r1.<org.eclipse.jetty.websocket.api.Session: boolean isOpen()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : $z1 = 1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : $z1 = 1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : goto [?= return $z1]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isSessionOpen : goto [?= return $z1] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketText(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketText(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r3 = interfaceinvoke $r2.<org.eclipse.jetty.websocket.api.Session: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemote()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r3 = interfaceinvoke $r2.<org.eclipse.jetty.websocket.api.Session: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemote()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : interfaceinvoke $r3.<org.eclipse.jetty.websocket.api.RemoteEndpoint: java.util.concurrent.Future sendStringByFuture(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : interfaceinvoke $r3.<org.eclipse.jetty.websocket.api.RemoteEndpoint: java.util.concurrent.Future sendStringByFuture(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Received TEXT message: {}", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Received TEXT message: {}", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r2 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zeppelin client received Message: ")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zeppelin client received Message: ") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r6)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : r11 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : r11 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : if r11 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : if r11 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r7 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: java.lang.String noteId>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : $r7 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: java.lang.String noteId> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : virtualinvoke r11.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void handleMsgFromZeppelin(java.lang.String,java.lang.String)>(r1, $r7)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : virtualinvoke r11.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void handleMsgFromZeppelin(java.lang.String,java.lang.String)>(r1, $r7) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : $r8 = new java.util.HashMap
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : $r8 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteId", r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteId", r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : r4 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.socket.Message deserialize(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : r4 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.socket.Message deserialize(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $r3 = staticinvoke <org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message fromJson(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : $r3 = staticinvoke <org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message fromJson(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.socket.Message.fromJson : $r1 = <org.apache.zeppelin.notebook.socket.Message: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.socket.Message.fromJson : $r1 = <org.apache.zeppelin.notebook.socket.Message: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.socket.Message.fromJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r0, class "Lorg/apache/zeppelin/notebook/socket/Message;")
org.apache.zeppelin.notebook.socket.Message.fromJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r0, class "Lorg/apache/zeppelin/notebook/socket/Message;") >>>>>>>> org.apache.zeppelin.notebook.socket.Message.fromJson : $r3 = (org.apache.zeppelin.notebook.socket.Message) $r2
org.apache.zeppelin.notebook.socket.Message.fromJson : $r3 = (org.apache.zeppelin.notebook.socket.Message) $r2 >>>>>>>> org.apache.zeppelin.notebook.socket.Message.fromJson : return $r3
org.apache.zeppelin.notebook.socket.Message.fromJson : return $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : return $r3
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.deserialize : return $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : if r4 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : if r4 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : $r10 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : $r10 = r4.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message$OP op> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isActionable(org.apache.zeppelin.notebook.socket.Message$OP)>($r10)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isActionable(org.apache.zeppelin.notebook.socket.Message$OP)>($r10) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : if r1 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : if r1 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.Set actionable>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.Set actionable> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : $r3 = virtualinvoke r1.<org.apache.zeppelin.notebook.socket.Message$OP: java.lang.String name()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : $r3 = virtualinvoke r1.<org.apache.zeppelin.notebook.socket.Message$OP: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : return $z0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.isActionable : return $z0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.handleMsgFromZeppelin : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketText : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z1 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z1 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z1 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : r2 = (org.eclipse.jetty.websocket.api.Session) $r5
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : r2 = (org.eclipse.jetty.websocket.api.Session) $r5 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z2 = interfaceinvoke r2.<org.eclipse.jetty.websocket.api.Session: boolean isOpen()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $z2 = interfaceinvoke r2.<org.eclipse.jetty.websocket.api.Session: boolean isOpen()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z2 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : interfaceinvoke r2.<org.eclipse.jetty.websocket.api.Session: void close()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : interfaceinvoke r2.<org.eclipse.jetty.websocket.api.Session: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r9 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : $r9 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Removed note websocket connection for note {}", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeNoteConnection : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Removed note websocket connection for note {}", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Zeppelin connection closed with code: {}, message: {}", $r3, r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Zeppelin connection closed with code: {}, message: {}", $r3, r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketClose(int,java.lang.String)>(i0, r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketClose(int,java.lang.String)>(i0, r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Socket Closed: [{}] {}", $r3, r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Socket Closed: [{}] {}", $r3, r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : $r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : $r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : $r5 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: java.lang.String noteId>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : $r5 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket: java.lang.String noteId> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeNoteConnection(java.lang.String)>($r5)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinWebsocket.onWebSocketClose : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeNoteConnection(java.lang.String)>($r5) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeAllConnections()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeAllConnections()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $r3 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $r3 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r1 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r1 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $z2 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r2 = (java.util.Map$Entry) $r5
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r2 = (java.util.Map$Entry) $r5 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r11 = (org.eclipse.jetty.websocket.api.Session) $r6
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r11 = (org.eclipse.jetty.websocket.api.Session) $r6 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isSessionOpen(org.eclipse.jetty.websocket.api.Session)>(r11)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: boolean isSessionOpen(org.eclipse.jetty.websocket.api.Session)>(r11) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : interfaceinvoke r11.<org.eclipse.jetty.websocket.api.Session: void close()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : interfaceinvoke r11.<org.eclipse.jetty.websocket.api.Session: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : goto [?= $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : goto [?= $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void clear()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void clear()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r4 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r4 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= return]
