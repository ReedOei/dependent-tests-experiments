org.apache.zeppelin.helium.Helium.loadConf : $r3 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $r3 == null
org.apache.zeppelin.helium.Helium.loadConf : if $r3 == null >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r7 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths>
org.apache.zeppelin.helium.Helium.loadConf : $r7 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $z0 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.helium.Helium.loadConf : $z0 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $z0 != 0
org.apache.zeppelin.helium.Helium.loadConf : if $z0 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r8 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths>
org.apache.zeppelin.helium.Helium.loadConf : $r8 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : r16 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.zeppelin.helium.Helium.loadConf : r16 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : i0 = lengthof r16
org.apache.zeppelin.helium.Helium.loadConf : i0 = lengthof r16 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : i1 = 0
org.apache.zeppelin.helium.Helium.loadConf : i1 = 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if i1 >= i0
org.apache.zeppelin.helium.Helium.loadConf : if i1 >= i0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : r2 = r16[i1]
org.apache.zeppelin.helium.Helium.loadConf : r2 = r16[i1] >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("http://")
org.apache.zeppelin.helium.Helium.loadConf : $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("http://") >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $z1 != 0
org.apache.zeppelin.helium.Helium.loadConf : if $z1 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("https://")
org.apache.zeppelin.helium.Helium.loadConf : $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("https://") >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $z3 == 0
org.apache.zeppelin.helium.Helium.loadConf : if $z3 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r13 = r0.<org.apache.zeppelin.helium.Helium: org.slf4j.Logger logger>
org.apache.zeppelin.helium.Helium.loadConf : $r13 = r0.<org.apache.zeppelin.helium.Helium: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Add helium local registry {}", r2)
org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Add helium local registry {}", r2) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r15 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.loadConf : $r15 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r14 = new org.apache.zeppelin.helium.HeliumLocalRegistry
org.apache.zeppelin.helium.Helium.loadConf : $r14 = new org.apache.zeppelin.helium.HeliumLocalRegistry >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r14.<org.apache.zeppelin.helium.HeliumLocalRegistry: void <init>(java.lang.String,java.lang.String)>(r2, r2)
org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r14.<org.apache.zeppelin.helium.HeliumLocalRegistry: void <init>(java.lang.String,java.lang.String)>(r2, r2) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r14)
org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : i1 = i1 + 1
org.apache.zeppelin.helium.Helium.loadConf : i1 = i1 + 1 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : goto [?= (branch)]
org.apache.zeppelin.helium.Helium.loadConf : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r18 = new java.io.File
org.apache.zeppelin.helium.Helium.loadConf : $r18 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $z5 = virtualinvoke $r18.<java.io.File: boolean isFile()>()
org.apache.zeppelin.helium.Helium.loadConf : $z5 = virtualinvoke $r18.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $z5 != 0
org.apache.zeppelin.helium.Helium.loadConf : if $z5 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r5 = r0.<org.apache.zeppelin.helium.Helium: org.slf4j.Logger logger>
org.apache.zeppelin.helium.Helium.loadConf : $r5 = r0.<org.apache.zeppelin.helium.Helium: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("{} does not exists", r1)
org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("{} does not exists", r1) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r6 = new org.apache.zeppelin.helium.HeliumConf
org.apache.zeppelin.helium.Helium.loadConf : $r6 = new org.apache.zeppelin.helium.HeliumConf >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r6.<org.apache.zeppelin.helium.HeliumConf: void <init>()>()
org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r6.<org.apache.zeppelin.helium.HeliumConf: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : return $r6
org.apache.zeppelin.helium.Helium.loadConf : return $r6 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r1 = virtualinvoke r0.<org.apache.zeppelin.helium.Helium: java.util.Map getAllPackageInfo(boolean,java.lang.String)>(1, null)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r1 = virtualinvoke r0.<org.apache.zeppelin.helium.Helium: java.util.Map getAllPackageInfo(boolean,java.lang.String)>(1, null) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r5 = r0.<org.apache.zeppelin.helium.Helium: org.apache.zeppelin.helium.HeliumConf heliumConf>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r5 = r0.<org.apache.zeppelin.helium.Helium: org.apache.zeppelin.helium.HeliumConf heliumConf> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r2 = virtualinvoke $r5.<org.apache.zeppelin.helium.HeliumConf: java.util.Map getEnabledPackages()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r2 = virtualinvoke $r5.<org.apache.zeppelin.helium.HeliumConf: java.util.Map getEnabledPackages()>() >>>>>>>> org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : $r1 = new java.util.HashMap
org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : $r1 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : $r2 = r0.<org.apache.zeppelin.helium.HeliumConf: java.util.Map enabled>
org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : $r2 = r0.<org.apache.zeppelin.helium.HeliumConf: java.util.Map enabled> >>>>>>>> org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r2)
org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r2) >>>>>>>> org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : return $r1
org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : return $r1 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r6 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r6 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : entermonitor $r6
org.apache.zeppelin.helium.Helium.getAllPackageInfo : entermonitor $r6 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if z0 != 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if z0 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r7 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r7 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r49 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r49 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z10 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z10 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z10 == 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z10 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r15 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r15 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r50 = (org.apache.zeppelin.helium.HeliumRegistry) $r15
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r50 = (org.apache.zeppelin.helium.HeliumRegistry) $r15 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r16 = virtualinvoke r50.<org.apache.zeppelin.helium.HeliumRegistry: java.util.List getAll()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r16 = virtualinvoke r50.<org.apache.zeppelin.helium.HeliumRegistry: java.util.List getAll()>() >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r7 = new java.util.LinkedList
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r7 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : specialinvoke $r7.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : specialinvoke $r7.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r8 = new java.io.File
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r8 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r9 = virtualinvoke r0.<org.apache.zeppelin.helium.HeliumLocalRegistry: java.lang.String uri()>()
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r9 = virtualinvoke r0.<org.apache.zeppelin.helium.HeliumLocalRegistry: java.lang.String uri()>() >>>>>>>> org.apache.zeppelin.helium.HeliumRegistry.uri : $r1 = r0.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String uri>
org.apache.zeppelin.helium.HeliumRegistry.uri : $r1 = r0.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String uri> >>>>>>>> org.apache.zeppelin.helium.HeliumRegistry.uri : return $r1
org.apache.zeppelin.helium.HeliumRegistry.uri : return $r1 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9)
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r3 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles()>()
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r3 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : if r3 != null
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : if r3 != null >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : i0 = lengthof r3
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : i0 = lengthof r3 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : i1 = 0
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : i1 = 0 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : if i1 >= i0
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : if i1 >= i0 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : return $r7
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : return $r7 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r51 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r51 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z11 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z11 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z11 == 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z11 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= (branch)]
org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z10 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z10 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $r8 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>]
org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $r8 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>] >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r8 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r8 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r61 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r61 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z15 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z15 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z15 == 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z15 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r10 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r10 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : exitmonitor $r6
org.apache.zeppelin.helium.Helium.getAllPackageInfo : exitmonitor $r6 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : return $r10
org.apache.zeppelin.helium.Helium.getAllPackageInfo : return $r10 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : return $r1
org.apache.zeppelin.helium.Helium.getAllPackageInfo : return $r1 >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : $r4 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.addRegistry : $r4 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : entermonitor $r4
org.apache.zeppelin.helium.Helium.addRegistry : entermonitor $r4 >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : $r5 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.addRegistry : $r5 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.zeppelin.helium.Helium.addRegistry : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : exitmonitor $r4
org.apache.zeppelin.helium.Helium.addRegistry : exitmonitor $r4 >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : goto [?= return]
org.apache.zeppelin.helium.Helium.addRegistry : goto [?= return] >>>>>>>> org.apache.zeppelin.helium.HeliumTestRegistry.add : $r2 = r0.<org.apache.zeppelin.helium.HeliumTestRegistry: java.util.List infos>
org.apache.zeppelin.helium.HeliumTestRegistry.add : $r2 = r0.<org.apache.zeppelin.helium.HeliumTestRegistry: java.util.List infos> >>>>>>>> org.apache.zeppelin.helium.HeliumTestRegistry.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.zeppelin.helium.HeliumTestRegistry.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.helium.HeliumTestRegistry.getAll : $r1 = r0.<org.apache.zeppelin.helium.HeliumTestRegistry: java.util.List infos>
org.apache.zeppelin.helium.HeliumTestRegistry.getAll : $r1 = r0.<org.apache.zeppelin.helium.HeliumTestRegistry: java.util.List infos> >>>>>>>> org.apache.zeppelin.helium.HeliumTestRegistry.getAll : return $r1
org.apache.zeppelin.helium.HeliumTestRegistry.getAll : return $r1 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r17 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r17 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r52 = (org.apache.zeppelin.helium.HeliumPackage) $r17
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r52 = (org.apache.zeppelin.helium.HeliumPackage) $r17 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r53 = virtualinvoke r52.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r53 = virtualinvoke r52.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z2 != 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z2 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r18 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r18 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z3 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>(r53)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z3 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>(r53) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z3 == 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z3 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r20 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r20 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r19 = new java.util.LinkedList
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r19 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r19.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r19.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r53, $r19)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r53, $r19) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r22 = virtualinvoke r52.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r22 = virtualinvoke r52.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : z12 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r22)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : z12 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r22) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r23 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r23 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r53)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r53) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r26 = (java.util.List) $r24
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r26 = (java.util.List) $r24 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r25 = new org.apache.zeppelin.helium.HeliumPackageSearchResult
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r25 = new org.apache.zeppelin.helium.HeliumPackageSearchResult >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r27 = virtualinvoke r50.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String name()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r27 = virtualinvoke r50.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.helium.HeliumRegistry.name : $r1 = r0.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String name>
org.apache.zeppelin.helium.HeliumRegistry.name : $r1 = r0.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String name> >>>>>>>> org.apache.zeppelin.helium.HeliumRegistry.name : return $r1
org.apache.zeppelin.helium.HeliumRegistry.name : return $r1 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r25.<org.apache.zeppelin.helium.HeliumPackageSearchResult: void <init>(java.lang.String,org.apache.zeppelin.helium.HeliumPackage,boolean)>($r27, r52, z12)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r25.<org.apache.zeppelin.helium.HeliumPackageSearchResult: void <init>(java.lang.String,org.apache.zeppelin.helium.HeliumPackage,boolean)>($r27, r52, z12) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r25)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z11 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z11 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r11 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r11 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r62 = (java.lang.String) $r11
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r62 = (java.lang.String) $r11 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r12 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r12 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r62)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r62) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r63 = (java.util.List) $r13
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r63 = (java.util.List) $r13 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r14 = new org.apache.zeppelin.helium.Helium$1
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r14 = new org.apache.zeppelin.helium.Helium$1 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r14.<org.apache.zeppelin.helium.Helium$1: void <init>(org.apache.zeppelin.helium.Helium)>(r0)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r14.<org.apache.zeppelin.helium.Helium$1: void <init>(org.apache.zeppelin.helium.Helium)>(r0) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r63, $r14)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r63, $r14) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z15 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>()]
