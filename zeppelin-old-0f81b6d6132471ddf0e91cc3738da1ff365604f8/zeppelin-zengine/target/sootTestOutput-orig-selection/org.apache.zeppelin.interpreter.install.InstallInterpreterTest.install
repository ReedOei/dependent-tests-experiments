org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r10 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z0 = virtualinvoke $r10.<java.io.File: boolean isFile()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z0 = virtualinvoke $r10.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z0 != 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r11 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile>
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r11 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r1 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r11)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r1 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r11) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n")
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S+)\\s+(\\S+)\\s+(.*)")
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S+)\\s+(\\S+)\\s+(.*)") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i3 = 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i3 = 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = lengthof r2
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = lengthof r2 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i4 = 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i4 = 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if i4 >= i0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if i4 >= i0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r5 = r2[i4]
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r5 = r2[i4] >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i3 = i3 + 1
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i3 = i3 + 1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if r5 == null
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if r5 == null >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i1 = virtualinvoke r5.<java.lang.String: int length()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i1 = virtualinvoke r5.<java.lang.String: int length()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i1 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("#")
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("#") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z1 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r6 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r6 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i2 = virtualinvoke r6.<java.util.regex.Matcher: int groupCount()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i2 = virtualinvoke r6.<java.util.regex.Matcher: int groupCount()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i2 == 3
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i2 == 3 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : virtualinvoke r6.<java.util.regex.Matcher: boolean find()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : virtualinvoke r6.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r7 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r7 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r8 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r8 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r9 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r9 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(3) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r13 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters>
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r13 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r12 = new org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r12 = new org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : specialinvoke $r12.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r7, r8, r9)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : specialinvoke $r12.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r7, r8, r9) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i4 = i4 + 1
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i4 = i4 + 1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : goto [?= (branch)]
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r4 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r4 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $z0 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : r3 = (org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo) $r11
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : r3 = (org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo) $r11 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r12 = r3.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String name>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r12 = r3.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String name> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r12)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $z1 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r13 = r3.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String artifact>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r13 = r3.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String artifact> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: void install(java.lang.String,java.lang.String)>(r1, $r13)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: void install(java.lang.String,java.lang.String)>(r1, $r13) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r5 = new org.apache.zeppelin.dep.DependencyResolver
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r5 = new org.apache.zeppelin.dep.DependencyResolver >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r6 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.lang.String localRepoDir>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r6 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.lang.String localRepoDir> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r5.<org.apache.zeppelin.dep.DependencyResolver: void <init>(java.lang.String)>($r6)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r5.<org.apache.zeppelin.dep.DependencyResolver: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r7 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.net.URL proxyUrl>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r7 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.net.URL proxyUrl> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $r7 == null
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $r7 == null >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r8 = new java.io.File
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r8 = new java.io.File >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r9 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterBaseDir>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r9 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterBaseDir> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, r1)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, r1) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r11 = <java.lang.System: java.io.PrintStream out>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r11 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r10 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Install ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Install ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r17 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r17 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r20)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r20) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r5.<org.apache.zeppelin.dep.DependencyResolver: java.util.List load(java.lang.String,java.io.File)>(r2, $r8)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r5.<org.apache.zeppelin.dep.DependencyResolver: java.util.List load(java.lang.String,java.io.File)>(r2, $r8) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r23 = <java.lang.System: java.io.PrintStream out>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r23 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r22 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" installed under ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" installed under ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r27 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r27 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r30)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r30) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : staticinvoke <org.apache.zeppelin.interpreter.install.InstallInterpreter: void startTip()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : staticinvoke <org.apache.zeppelin.interpreter.install.InstallInterpreter: void startTip()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.startTip : $r0 = <java.lang.System: java.io.PrintStream out>
org.apache.zeppelin.interpreter.install.InstallInterpreter.startTip : $r0 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.startTip : virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("\n1. Restart Zeppelin\n2. Create interpreter setting in \'Interpreter\' menu on Zeppelin GUI\n3. Then you can bind the interpreter on your note")
org.apache.zeppelin.interpreter.install.InstallInterpreter.startTip : virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("\n1. Restart Zeppelin\n2. Create interpreter setting in \'Interpreter\' menu on Zeppelin GUI\n3. Then you can bind the interpreter on your note") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : goto [?= return]
