org.apache.zeppelin.interpreter.InterpreterSetting.setErrorReason : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String errorReason> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterRunner : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterRunner interpreterRunner> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterRunner : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterRunner interpreterRunner> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterDir : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String interpreterDir> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterDir : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String interpreterDir> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : return $r1
org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : return $r1
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.isOpened : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.isOpened : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.isOpened : return $z0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.isOpened : return $z0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean isOpened> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : if $z0 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r10 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r10 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r9 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getProgress is called when RemoterInterpreter is not opened for ")
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getProgress is called when RemoterInterpreter is not opened for ") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String className>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r12 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String className> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r14)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : return 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getProgress : return 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setProperties : $z0 = r1 instanceof com.google.gson.internal.StringMap
org.apache.zeppelin.interpreter.InterpreterSetting.setProperties : $z0 = r1 instanceof com.google.gson.internal.StringMap >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setProperties : if $z0 == 0
org.apache.zeppelin.interpreter.InterpreterSetting.setProperties : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setProperties : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.Object properties> = r1
