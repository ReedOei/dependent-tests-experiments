org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r6 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : entermonitor $r6
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : entermonitor $r6 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : if $z0 == 0
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : if $z0 == 0 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : exitmonitor $r6
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : exitmonitor $r6 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : goto [?= return null]
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : goto [?= return null] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : return null
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : return null >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : r0.<org.apache.zeppelin.scheduler.RemoteScheduler: boolean terminate> = 1
org.apache.zeppelin.scheduler.RemoteScheduler.stop : r0.<org.apache.zeppelin.scheduler.RemoteScheduler: boolean terminate> = 1 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r3 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r3 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : entermonitor $r3
org.apache.zeppelin.scheduler.RemoteScheduler.stop : entermonitor $r3 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r4 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r4 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : virtualinvoke $r4.<java.lang.Object: void notify()>()
org.apache.zeppelin.scheduler.RemoteScheduler.stop : virtualinvoke $r4.<java.lang.Object: void notify()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : exitmonitor $r3
org.apache.zeppelin.scheduler.RemoteScheduler.stop : exitmonitor $r3 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : goto [?= return]
org.apache.zeppelin.scheduler.RemoteScheduler.stop : goto [?= return] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r6 = new java.util.LinkedList
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r6 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : specialinvoke $r6.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : specialinvoke $r6.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : entermonitor $r7
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : entermonitor $r7 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r8 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r8 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : if $z0 == 0
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : if $z0 == 0 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : exitmonitor $r7
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : exitmonitor $r7 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : goto [?= return $r6]
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : goto [?= return $r6] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : return $r6
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : return $r6 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r6 = new java.util.LinkedList
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r6 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : specialinvoke $r6.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : specialinvoke $r6.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : entermonitor $r7
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : entermonitor $r7 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r8 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List running>
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $r8 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List running> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : if $z0 == 0
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : if $z0 == 0 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : exitmonitor $r7
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : exitmonitor $r7 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : goto [?= return $r6]
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : goto [?= return $r6] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : return $r6
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsRunning : return $r6 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.run : $z2 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: boolean terminate>
org.apache.zeppelin.scheduler.RemoteScheduler.run : $z2 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: boolean terminate> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.run : if $z2 != 0
