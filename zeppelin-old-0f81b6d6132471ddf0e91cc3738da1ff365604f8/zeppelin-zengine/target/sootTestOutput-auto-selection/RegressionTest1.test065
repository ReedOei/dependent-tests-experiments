org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : if $r2 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : return $r3
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : return $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r1 = new java.util.ArrayList
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r1 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r9 = "anonymous"
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r9 = "anonymous" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z2 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r10 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r10 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r11 = interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r11 = interfaceinvoke $r10.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = (java.lang.String) $r11
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = (java.lang.String) $r11 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z3 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r12 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r12 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r2 = virtualinvoke $r12.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.lang.String getSession(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r2 = virtualinvoke $r12.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.lang.String getSession(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.util.Map sessions>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.util.Map sessions> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : r2 = (org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer$Entity) $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : r2 = (org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer$Entity) $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : if r2 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : if r2 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : return ""
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : return "" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String getDefaultZeppelinInstanceToken(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String getDefaultZeppelinInstanceToken(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.List getUserInstances(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.List getUserInstances(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : return ""
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : return "" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z4 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z4 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r15 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r15 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r15)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z5 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : if $z5 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : goto [?= return r18]
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : goto [?= return r18] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : return r18
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : return r18 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler restApiClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler restApiClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $r3 = virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: java.util.List getInstances(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $r3 = virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: java.util.List getInstances(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r9 = new org.eclipse.jetty.client.util.InputStreamResponseListener
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r9 = new org.eclipse.jetty.client.util.InputStreamResponseListener >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : specialinvoke $r9.<org.eclipse.jetty.client.util.InputStreamResponseListener: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : specialinvoke $r9.<org.eclipse.jetty.client.util.InputStreamResponseListener: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r10 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r11 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: java.lang.String zepelinhubUrl>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r11 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: java.lang.String zepelinhubUrl> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("instances")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("instances") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r14 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.eclipse.jetty.client.HttpClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r14 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.eclipse.jetty.client.HttpClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r15 = virtualinvoke $r14.<org.eclipse.jetty.client.HttpClient: org.eclipse.jetty.client.api.Request newRequest(java.lang.String)>(r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r15 = virtualinvoke $r14.<org.eclipse.jetty.client.HttpClient: org.eclipse.jetty.client.api.Request newRequest(java.lang.String)>(r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : r6 = interfaceinvoke $r15.<org.eclipse.jetty.client.api.Request: org.eclipse.jetty.client.api.Request header(java.lang.String,java.lang.String)>("X-User-Session", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : r6 = interfaceinvoke $r15.<org.eclipse.jetty.client.api.Request: org.eclipse.jetty.client.api.Request header(java.lang.String,java.lang.String)>("X-User-Session", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : interfaceinvoke r6.<org.eclipse.jetty.client.api.Request: void send(org.eclipse.jetty.client.api.Response$CompleteListener)>($r9)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : interfaceinvoke r6.<org.eclipse.jetty.client.api.Request: void send(org.eclipse.jetty.client.api.Response$CompleteListener)>($r9) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r16 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r16 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : r3 = virtualinvoke $r9.<org.eclipse.jetty.client.util.InputStreamResponseListener: org.eclipse.jetty.client.api.Response get(long,java.util.concurrent.TimeUnit)>(30L, $r16)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : r3 = virtualinvoke $r9.<org.eclipse.jetty.client.util.InputStreamResponseListener: org.eclipse.jetty.client.api.Response get(long,java.util.concurrent.TimeUnit)>(30L, $r16) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : goto [?= i0 = interfaceinvoke r3.<org.eclipse.jetty.client.api.Response: int getStatus()>()]
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : goto [?= i0 = interfaceinvoke r3.<org.eclipse.jetty.client.api.Response: int getStatus()>()] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : i0 = interfaceinvoke r3.<org.eclipse.jetty.client.api.Response: int getStatus()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : i0 = interfaceinvoke r3.<org.eclipse.jetty.client.api.Response: int getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : if i0 != 200
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : if i0 != 200 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r17 = <org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r17 = <org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("ZeppelinHub GET {} returned with status {} ", r4, $r18)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("ZeppelinHub GET {} returned with status {} ", r4, $r18) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r19 = new java.io.IOException
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r19 = new java.io.IOException >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>("Cannot perform  GET request to ZeppelinHub")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>("Cannot perform  GET request to ZeppelinHub") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : throw $r19
