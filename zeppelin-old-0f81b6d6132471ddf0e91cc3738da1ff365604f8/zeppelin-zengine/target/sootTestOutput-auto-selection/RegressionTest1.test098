org.apache.zeppelin.interpreter.remote.ClientFactory.wrap : $r2 = new org.apache.commons.pool2.impl.DefaultPooledObject >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.wrap : specialinvoke $r2.<org.apache.commons.pool2.impl.DefaultPooledObject: void <init>(java.lang.Object)>(r1)
org.apache.zeppelin.interpreter.remote.ClientFactory.wrap : specialinvoke $r2.<org.apache.commons.pool2.impl.DefaultPooledObject: void <init>(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.wrap : return $r2
org.apache.zeppelin.interpreter.remote.ClientFactory.wrap : return $r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r2 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r2 = interfaceinvoke r1.<org.apache.commons.pool2.PooledObject: java.lang.Object getObject()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r3 = (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client) $r2
org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r3 = (org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client) $r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.ClientFactory.validateObject : $r4 = virtualinvoke $r3.<org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client: org.apache.thrift.protocol.TProtocol getOutputProtocol()>()
