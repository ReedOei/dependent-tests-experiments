org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setRemoteInterpreterProcessListener : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting$Builder: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setRemoteInterpreterProcessListener : staticinvoke <org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener access$1202(org.apache.zeppelin.interpreter.InterpreterSetting,org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener)>($r2, r1)
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setRemoteInterpreterProcessListener : staticinvoke <org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener access$1202(org.apache.zeppelin.interpreter.InterpreterSetting,org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener)>($r2, r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.access$1202 : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.access$1202 : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.access$1202 : return r1
org.apache.zeppelin.interpreter.InterpreterSetting.access$1202 : return r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setRemoteInterpreterProcessListener : return r0
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setRemoteInterpreterProcessListener : return r0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setDependencyResolver : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting$Builder: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting>
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setDependencyResolver : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting$Builder: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setDependencyResolver : staticinvoke <org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.dep.DependencyResolver access$1002(org.apache.zeppelin.interpreter.InterpreterSetting,org.apache.zeppelin.dep.DependencyResolver)>($r2, r1)
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setDependencyResolver : staticinvoke <org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.dep.DependencyResolver access$1002(org.apache.zeppelin.interpreter.InterpreterSetting,org.apache.zeppelin.dep.DependencyResolver)>($r2, r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.access$1002 : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.dep.DependencyResolver dependencyResolver> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.access$1002 : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.dep.DependencyResolver dependencyResolver> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.access$1002 : return r1
org.apache.zeppelin.interpreter.InterpreterSetting.access$1002 : return r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setDependencyResolver : return r0
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setDependencyResolver : return r0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting$Builder.create : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting$Builder: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting>
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.create : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting$Builder: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting$Builder.create : virtualinvoke $r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void postProcessing()>()
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.create : virtualinvoke $r1.<org.apache.zeppelin.interpreter.InterpreterSetting: void postProcessing()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : $r1 = <org.apache.zeppelin.interpreter.InterpreterSetting$Status: org.apache.zeppelin.interpreter.InterpreterSetting$Status READY>
org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : $r1 = <org.apache.zeppelin.interpreter.InterpreterSetting$Status: org.apache.zeppelin.interpreter.InterpreterSetting$Status READY> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSetting$Status status> = $r1
org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSetting$Status status> = $r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : if $r2 != null
org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : if $r2 != null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : $r3 = new org.apache.zeppelin.interpreter.lifecycle.NullLifecycleManager
org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : $r3 = new org.apache.zeppelin.interpreter.lifecycle.NullLifecycleManager >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : $r4 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : $r4 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : specialinvoke $r3.<org.apache.zeppelin.interpreter.lifecycle.NullLifecycleManager: void <init>(org.apache.zeppelin.conf.ZeppelinConfiguration)>($r4)
org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : specialinvoke $r3.<org.apache.zeppelin.interpreter.lifecycle.NullLifecycleManager: void <init>(org.apache.zeppelin.conf.ZeppelinConfiguration)>($r4) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> = $r3
org.apache.zeppelin.interpreter.InterpreterSetting.postProcessing : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> = $r3 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting$Builder.create : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting$Builder: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting>
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.create : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting$Builder: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting$Builder.create : return $r2
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.create : return $r2 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInfos : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map infos>
org.apache.zeppelin.interpreter.InterpreterSetting.getInfos : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map infos> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInfos : return $r1
