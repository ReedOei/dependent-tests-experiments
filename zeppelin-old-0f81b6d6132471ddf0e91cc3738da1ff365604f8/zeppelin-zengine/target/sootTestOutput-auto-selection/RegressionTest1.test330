org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: void <init>(java.lang.String)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketText : r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketText : r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketText : if r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketText : if r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketText : virtualinvoke r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void handleMsgFromZeppelinHub(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketText : virtualinvoke r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void handleMsgFromZeppelinHub(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage fromJson(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage fromJson(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : $r3 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r0, class "Lorg/apache/zeppelin/notebook/repo/zeppelinhub/websocket/protocol/ZeppelinhubMessage;")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : $r3 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r0, class "Lorg/apache/zeppelin/notebook/repo/zeppelinhub/websocket/protocol/ZeppelinhubMessage;") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot fromJson zeppelinhub message", $r5)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot fromJson zeppelinhub message", $r5) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage EMPTY>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage EMPTY> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : return r7
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.fromJson : return r7 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage EMPTY>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage EMPTY> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : $r10 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : $r10 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String)>("Cannot handle ZeppelinHub message is empty")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.handleMsgFromZeppelinHub : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String)>("Cannot handle ZeppelinHub message is empty") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Closing websocket connection [{}] : {}", $r3, r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Closing websocket connection [{}] : {}", $r3, r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: java.lang.String token>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: java.lang.String token> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : $r5 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils: java.lang.String deadMessage(java.lang.String)>($r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : $r5 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils: java.lang.String deadMessage(java.lang.String)>($r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r2 = new java.util.HashMap
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r2 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinHubOp: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinHubOp DEAD>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinHubOp: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinHubOp DEAD> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r4 = new java.util.HashMap
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r4 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : specialinvoke $r4.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r6 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage newMessage(java.lang.Object,java.lang.Object,java.util.Map)>($r5, $r2, $r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r6 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage newMessage(java.lang.Object,java.lang.Object,java.util.Map)>($r5, $r2, $r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : $r3 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : $r3 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : specialinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: void <init>(java.lang.Object,java.lang.Object,java.util.Map)>(r0, r1, r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : specialinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: void <init>(java.lang.Object,java.lang.Object,java.util.Map)>(r0, r1, r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : return $r3
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : return $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r7 = virtualinvoke $r6.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: java.lang.String toJson()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r7 = virtualinvoke $r6.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: java.lang.String toJson()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.toJson : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.toJson : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.toJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r0, class "Lorg/apache/zeppelin/notebook/repo/zeppelinhub/websocket/protocol/ZeppelinhubMessage;")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.toJson : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r0, class "Lorg/apache/zeppelin/notebook/repo/zeppelinhub/websocket/protocol/ZeppelinhubMessage;") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.toJson : return $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.toJson : return $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : return $r7
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : return $r7 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: void send(java.lang.String)>($r5)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: void send(java.lang.String)>($r5) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.send : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: boolean isSessionOpen()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.send : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: boolean isSessionOpen()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.isSessionOpen : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: org.eclipse.jetty.websocket.api.Session zeppelinHubSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.isSessionOpen : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: org.eclipse.jetty.websocket.api.Session zeppelinHubSession> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.isSessionOpen : if $r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.isSessionOpen : if $r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.isSessionOpen : $z1 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.isSessionOpen : $z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.isSessionOpen : return $z1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.isSessionOpen : return $z1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.send : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.send : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.onWebSocketClose : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: org.eclipse.jetty.websocket.api.Session zeppelinHubSession> = null
