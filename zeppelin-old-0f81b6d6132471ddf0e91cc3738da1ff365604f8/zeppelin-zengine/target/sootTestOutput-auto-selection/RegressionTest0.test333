org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.createNewAngularObject : $r5 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObject >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.createNewAngularObject : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: org.apache.zeppelin.interpreter.ManagedInterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.createNewAngularObject : $r6 = r0.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: org.apache.zeppelin.interpreter.ManagedInterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.createNewAngularObject : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: org.apache.zeppelin.display.AngularObjectListener getAngularObjectListener()>()
org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.createNewAngularObject : $r7 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: org.apache.zeppelin.display.AngularObjectListener getAngularObjectListener()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.createNewAngularObject : specialinvoke $r5.<org.apache.zeppelin.interpreter.remote.RemoteAngularObject: void <init>(java.lang.String,java.lang.Object,java.lang.String,java.lang.String,org.apache.zeppelin.interpreter.ManagedInterpreterGroup,org.apache.zeppelin.display.AngularObjectListener)>(r1, r2, r3, r4, $r6, $r7)
org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.createNewAngularObject : specialinvoke $r5.<org.apache.zeppelin.interpreter.remote.RemoteAngularObject: void <init>(java.lang.String,java.lang.Object,java.lang.String,java.lang.String,org.apache.zeppelin.interpreter.ManagedInterpreterGroup,org.apache.zeppelin.display.AngularObjectListener)>(r1, r2, r3, r4, $r6, $r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.createNewAngularObject : return $r5
org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.createNewAngularObject : return $r5 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r6 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r6 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : entermonitor $r6
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : entermonitor $r6 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : if $z0 == 0
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : if $z0 == 0 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : exitmonitor $r6
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : exitmonitor $r6 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : goto [?= return null]
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : goto [?= return null] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : return null
org.apache.zeppelin.scheduler.RemoteScheduler.removeFromWaitingQueue : return null >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : r0.<org.apache.zeppelin.scheduler.RemoteScheduler: boolean terminate> = 1
org.apache.zeppelin.scheduler.RemoteScheduler.stop : r0.<org.apache.zeppelin.scheduler.RemoteScheduler: boolean terminate> = 1 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r3 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r3 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : entermonitor $r3
org.apache.zeppelin.scheduler.RemoteScheduler.stop : entermonitor $r3 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r4 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.stop : $r4 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : virtualinvoke $r4.<java.lang.Object: void notify()>()
org.apache.zeppelin.scheduler.RemoteScheduler.stop : virtualinvoke $r4.<java.lang.Object: void notify()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : exitmonitor $r3
org.apache.zeppelin.scheduler.RemoteScheduler.stop : exitmonitor $r3 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.stop : goto [?= return]
org.apache.zeppelin.scheduler.RemoteScheduler.stop : goto [?= return] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r6 = new java.util.LinkedList
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r6 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : specialinvoke $r6.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : specialinvoke $r6.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r7 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : entermonitor $r7
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : entermonitor $r7 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r8 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue>
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $r8 = r0.<org.apache.zeppelin.scheduler.RemoteScheduler: java.util.List queue> >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : if $z0 == 0
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : if $z0 == 0 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : exitmonitor $r7
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : exitmonitor $r7 >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : goto [?= return $r6]
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : goto [?= return $r6] >>>>>>>> org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : return $r6
org.apache.zeppelin.scheduler.RemoteScheduler.getJobsWaiting : return $r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.addAndNotifyRemoteProcess : r5 = specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.addAndNotifyRemoteProcess : r5 = specialinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.getRemoteInterpreterProcess : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: org.apache.zeppelin.interpreter.ManagedInterpreterGroup interpreterGroup>
org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.getRemoteInterpreterProcess : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: org.apache.zeppelin.interpreter.ManagedInterpreterGroup interpreterGroup> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry.getRemoteInterpreterProcess : $r2 = virtualinvoke $r1.<org.apache.zeppelin.interpreter.ManagedInterpreterGroup: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getRemoteInterpreterProcess()>()
