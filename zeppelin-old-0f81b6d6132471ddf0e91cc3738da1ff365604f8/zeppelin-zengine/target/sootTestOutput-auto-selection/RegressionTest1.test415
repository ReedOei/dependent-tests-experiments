org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r0 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : if $r0 != null
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : if $r0 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance>
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : return $r1
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : $z0 = virtualinvoke $r3.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isAnonymousAllowed()>()
org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : $z0 = virtualinvoke $r3.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isAnonymousAllowed()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : if $z0 == 0
org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Zeppelin runs in anonymous mode, everybody is reader")
org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Zeppelin runs in anonymous mode, everybody is reader") >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : return 1
org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : return 1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set getRunners(java.lang.String)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set getRunners(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : r2 = (java.util.Map) $r4
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : r2 = (java.util.Map) $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : if r2 != null
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : if r2 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : $r7 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : $r7 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : specialinvoke $r7.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : specialinvoke $r7.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : r8 = $r7
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : r8 = $r7 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : goto [?= return r8]
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : goto [?= return r8] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : return r8
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : return r8 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: boolean isMember(java.util.Set,java.util.Set)>(r2, $r3)
org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: boolean isMember(java.util.Set,java.util.Set)>(r2, $r3) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $r4 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $r4 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>(r2)
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>(r2) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : interfaceinvoke $r4.<java.util.Set: boolean retainAll(java.util.Collection)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : interfaceinvoke $r4.<java.util.Set: boolean retainAll(java.util.Collection)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : if $z1 != 0
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $z2 = 1
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $z2 = 1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : goto [?= return $z2]
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : goto [?= return $z2] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : return $z2
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : return $z2 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : if $z0 != 0
org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : $z3 = 1
org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : $z3 = 1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : goto [?= return $z3]
org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : goto [?= return $z3] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : return $z3
org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : return $z3 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r18 = (java.util.Map) $r3
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r18 = (java.util.Map) $r3 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r19 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r17)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r19 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r17) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r5 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r5 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : if $z0 == 0
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r4 = (java.lang.String) $r6
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r4 = (java.lang.String) $r6 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r7 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r7 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $z1 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $z1 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : if $z1 != 0
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r8 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r8 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r8)
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r8) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : return $r5
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : return $r5 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : if r18 != null
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : if r18 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r4 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r4 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r4.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r19)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r4.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r19) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("readers", $r4)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("readers", $r4) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r6 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r6 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r18)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r18) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : entermonitor $r2
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : entermonitor $r2 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r3 = new org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r3 = new org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r3.<org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r3.<org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r3.<org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving: java.util.Map authInfo> = $r4
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r3.<org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving: java.util.Map authInfo> = $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r5 = <org.apache.zeppelin.notebook.NotebookAuthorization: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r5 = <org.apache.zeppelin.notebook.NotebookAuthorization: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r1 = virtualinvoke $r5.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r3)
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r1 = virtualinvoke $r5.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r3) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : exitmonitor $r2
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : exitmonitor $r2 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : goto [?= $r6 = new java.io.File]
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : goto [?= $r6 = new java.io.File] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r6 = new java.io.File
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r6 = new java.io.File >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r7 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.lang.String filePath>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r7 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.lang.String filePath> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7)
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : if $z0 != 0
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : virtualinvoke $r6.<java.io.File: boolean createNewFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : virtualinvoke $r6.<java.io.File: boolean createNewFile()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r13 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r13 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r12 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error saving notebook authorization file: ")
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error saving notebook authorization file: ") >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r15 = virtualinvoke $r11.<java.io.IOException: java.lang.String getMessage()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r15 = virtualinvoke $r11.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>($r17)
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : r18 = (java.util.Map) $r3
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : r18 = (java.util.Map) $r3 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : r19 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r17)
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : r19 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r17) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : if r18 != null
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : if r18 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r4 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r4 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : specialinvoke $r4.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r19)
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : specialinvoke $r4.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r19) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("runners", $r4)
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("runners", $r4) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r6 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r6 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r18)
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r18) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set getOwners(java.lang.String)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set getOwners(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : r2 = (java.util.Map) $r4
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : r2 = (java.util.Map) $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : if r2 != null
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : if r2 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r7 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r7 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : specialinvoke $r7.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : specialinvoke $r7.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : r8 = $r7
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : r8 = $r7 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : goto [?= return r8]
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : goto [?= return r8] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : return r8
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : return r8 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: boolean isMember(java.util.Set,java.util.Set)>(r2, $r3)
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: boolean isMember(java.util.Set,java.util.Set)>(r2, $r3) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : return $z0
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : return $z0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $z0 = virtualinvoke $r3.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isAnonymousAllowed()>()
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $z0 = virtualinvoke $r3.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isAnonymousAllowed()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : if $z0 == 0
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Zeppelin runs in anonymous mode, everybody is owner")
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Zeppelin runs in anonymous mode, everybody is owner") >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : return 1
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : return 1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>()
org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map userRoles>
org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map userRoles> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : if $z0 == 0
org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : return r2
org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : return r2 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setErrorReason : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String errorReason> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.setErrorReason : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String errorReason> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterRunner : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterRunner interpreterRunner> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterRunner : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterRunner interpreterRunner> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterDir : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String interpreterDir> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterDir : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String interpreterDir> = r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : return $r1
org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : return $r1
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : r3 = specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getInterpreterGroupId(java.lang.String,java.lang.String)>(r1, r2)
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : r3 = specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getInterpreterGroupId(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r3 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption option>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r3 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption option> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $z0 = $r3.<org.apache.zeppelin.interpreter.InterpreterOption: boolean isExistingProcess>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $z0 = $r3.<org.apache.zeppelin.interpreter.InterpreterOption: boolean isExistingProcess> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : if $z0 == 0
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption getOption()>()
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption getOption()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getOption : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption option>
org.apache.zeppelin.interpreter.InterpreterSetting.getOption : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption option> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getOption : return $r1
org.apache.zeppelin.interpreter.InterpreterSetting.getOption : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $z1 = virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterOption: boolean isProcess()>()
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $z1 = virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterOption: boolean isProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : if $z1 == 0
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : r11 = "shared_process"
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : r11 = "shared_process" >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r14 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r15 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String id>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r15 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String id> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : return $r19
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : return $r19 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock interpreterGroupReadLock>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock interpreterGroupReadLock> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : virtualinvoke $r6.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>()
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : virtualinvoke $r6.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void lock()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroups>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroups> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : r4 = (org.apache.zeppelin.interpreter.ManagedInterpreterGroup) $r8
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : r4 = (org.apache.zeppelin.interpreter.ManagedInterpreterGroup) $r8 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r9 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock interpreterGroupReadLock>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r9 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock interpreterGroupReadLock> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>()
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : return r4
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : return r4 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getConf : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.interpreter.InterpreterSetting.getConf : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.getConf : return $r1
org.apache.zeppelin.interpreter.InterpreterSetting.getConf : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : if $r2 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if r1 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if r1 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r17 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>("ZEPPELINHUB_API_ADDRESS", "zeppelinhub.api.address", "https://www.zeppelinhub.com")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r17 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>("ZEPPELINHUB_API_ADDRESS", "zeppelinhub.api.address", "https://www.zeppelinhub.com") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r3 = new java.net.URI
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r3 = new java.net.URI >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>(r17)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>(r17) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : goto [?= r19 = virtualinvoke $r3.<java.net.URI: java.lang.String getScheme()>()]
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : goto [?= r19 = virtualinvoke $r3.<java.net.URI: java.lang.String getScheme()>()] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r19 = virtualinvoke $r3.<java.net.URI: java.lang.String getScheme()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r19 = virtualinvoke $r3.<java.net.URI: java.lang.String getScheme()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if r19 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if r19 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r4 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r7 = virtualinvoke $r3.<java.net.URI: java.lang.String getHost()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r7 = virtualinvoke $r3.<java.net.URI: java.lang.String getHost()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r20 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r20 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $i0 = virtualinvoke $r3.<java.net.URI: int getPort()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $i0 = virtualinvoke $r3.<java.net.URI: int getPort()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if $i0 <= 0
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if $i0 <= 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : return r20
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : return r20 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: void <init>(java.lang.String)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r2 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("https_proxy")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r2 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("https_proxy") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r8 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HTTPS_PROXY")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r8 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HTTPS_PROXY") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : goto [?= r9 = $r8]
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : goto [?= r9 = $r8] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : r9 = $r8
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : r9 = $r8 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r8)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r8) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : if $z1 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r5 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("http_proxy")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r5 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("http_proxy") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r5)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r5) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : if $z2 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r10 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HTTP_PROXY")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r10 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HTTP_PROXY") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : goto [?= r9 = $r10]
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : goto [?= r9 = $r10] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : r9 = $r10
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : r9 = $r10 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r9)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r9) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : if $z3 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : if $z3 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : $r3 = new org.eclipse.jetty.util.ssl.SslContextFactory
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : $r3 = new org.eclipse.jetty.util.ssl.SslContextFactory >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : specialinvoke $r3.<org.eclipse.jetty.util.ssl.SslContextFactory: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : specialinvoke $r3.<org.eclipse.jetty.util.ssl.SslContextFactory: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : $r4 = new org.eclipse.jetty.client.HttpClient
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : $r4 = new org.eclipse.jetty.client.HttpClient >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : specialinvoke $r4.<org.eclipse.jetty.client.HttpClient: void <init>(org.eclipse.jetty.util.ssl.SslContextFactory)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : specialinvoke $r4.<org.eclipse.jetty.client.HttpClient: void <init>(org.eclipse.jetty.util.ssl.SslContextFactory)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : virtualinvoke $r4.<org.eclipse.jetty.client.HttpClient: void setFollowRedirects(boolean)>(0)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : virtualinvoke $r4.<org.eclipse.jetty.client.HttpClient: void setFollowRedirects(boolean)>(0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : virtualinvoke $r4.<org.eclipse.jetty.client.HttpClient: void setMaxConnectionsPerDestination(int)>(100)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : virtualinvoke $r4.<org.eclipse.jetty.client.HttpClient: void setMaxConnectionsPerDestination(int)>(100) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : if $r2 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : return $r3
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : return $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : i0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getServerPort()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : i0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getServerPort()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : if i0 > 0
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : if i0 > 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r9 = "ws"
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r9 = "ws" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://localhost:")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://localhost:") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ws")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ws") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : return $r8
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : return $r8 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : r7 = ""
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : r7 = "" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : $r3 = new java.net.URI
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : $r3 = new java.net.URI >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>("ZEPPELINHUB_API_ADDRESS", "zeppelinhub.api.address", "https://www.zeppelinhub.com")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>("ZEPPELINHUB_API_ADDRESS", "zeppelinhub.api.address", "https://www.zeppelinhub.com") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : specialinvoke $r3.<java.net.URI: void <init>(java.lang.String)>($r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : r7 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: java.lang.String getZeppelinHubWsUri(java.net.URI)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : r7 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: java.lang.String getZeppelinHubWsUri(java.net.URI)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : r13 = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : r13 = r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : r14 = virtualinvoke r1.<java.net.URI: java.lang.String getScheme()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : r14 = virtualinvoke r1.<java.net.URI: java.lang.String getScheme()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : i0 = virtualinvoke r1.<java.net.URI: int getPort()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : i0 = virtualinvoke r1.<java.net.URI: int getPort()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if i0 > 0
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if i0 > 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if r14 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if r14 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $z1 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("https")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $z1 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("https") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if $z1 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $s1 = 443
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $s1 = 443 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : goto [?= i0 = $s1]
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : goto [?= i0 = $s1] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : i0 = $s1
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : i0 = $s1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if r14 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if r14 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $z2 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("https")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $z2 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("https") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if $z2 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r15 = "wss://"
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r15 = "wss://" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : goto [?= $r3 = new java.lang.StringBuilder]
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : goto [?= $r3 = new java.lang.StringBuilder] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r5 = virtualinvoke r13.<java.net.URI: java.lang.String getHost()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r5 = virtualinvoke r13.<java.net.URI: java.lang.String getHost()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/async")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/async") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : return $r10
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : return $r10 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : goto [?= return r7]
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : goto [?= return r7] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : return r7
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : return r7 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : if $r4 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : if $r4 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : return $r5
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : return $r5 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : virtualinvoke $r2.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : virtualinvoke $r2.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void addRoutines()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 23)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 23) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l3 = (long) i0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l3 = (long) i0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l2 = (long) i1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l2 = (long) i1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r1, $l3, $l2, $r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r1, $l3, $l2, $r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot connect to zeppelinhub via websocket", $r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot connect to zeppelinhub via websocket", $r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 60)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 60) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot start Zeppelin websocket client", $r5)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot start Zeppelin websocket client", $r5) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client websocketClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client websocketClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : if $r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : if $r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Stopping Zeppelinhub websocket client")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Stopping Zeppelinhub websocket client") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void close()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: void shutdown()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: void shutdown()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : virtualinvoke $r4.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeAllConnections()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeAllConnections()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $r3 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $r3 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r1 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : r1 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $z2 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void clear()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: void clear()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : virtualinvoke $r6.<org.eclipse.jetty.websocket.client.WebSocketClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r4 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : if $r4 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler restApiClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler restApiClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: void close()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.eclipse.jetty.client.HttpClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.eclipse.jetty.client.HttpClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : virtualinvoke $r2.<org.eclipse.jetty.client.HttpClient: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : virtualinvoke $r2.<org.eclipse.jetty.client.HttpClient: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient proxyClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient proxyClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : if $r3 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : if $r3 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: boolean isSubjectValid(org.apache.zeppelin.user.AuthenticationInfo)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: boolean isSubjectValid(org.apache.zeppelin.user.AuthenticationInfo)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.isSubjectValid : if r1 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.isSubjectValid : if r1 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.isSubjectValid : return 0
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.isSubjectValid : return 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : return $r13
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : return $r13 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : r3 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>()
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : r3 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : if r2 == null
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : if r2 == null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r4 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r4 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r5 = new org.apache.zeppelin.notebook.NotebookAuthorization$1
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r5 = new org.apache.zeppelin.notebook.NotebookAuthorization$1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : specialinvoke $r5.<org.apache.zeppelin.notebook.NotebookAuthorization$1: void <init>(org.apache.zeppelin.notebook.NotebookAuthorization,java.util.Set)>(r0, r3)
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : specialinvoke $r5.<org.apache.zeppelin.notebook.NotebookAuthorization$1: void <init>(org.apache.zeppelin.notebook.NotebookAuthorization,java.util.Set)>(r0, r3) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r6 = virtualinvoke $r4.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r5)
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r6 = virtualinvoke $r4.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r5) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r7 = virtualinvoke $r6.<com.google.common.collect.FluentIterable: com.google.common.collect.ImmutableList toList()>()
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r7 = virtualinvoke $r6.<com.google.common.collect.FluentIterable: com.google.common.collect.ImmutableList toList()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : return $r7
