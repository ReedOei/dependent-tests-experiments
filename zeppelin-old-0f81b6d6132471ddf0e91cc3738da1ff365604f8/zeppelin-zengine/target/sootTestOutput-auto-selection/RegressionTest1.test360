org.apache.zeppelin.notebook.Folder.countNotes : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes> >>>>>>>> org.apache.zeppelin.notebook.Folder.countNotes : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>()
org.apache.zeppelin.notebook.Folder.countNotes : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.countNotes : return $i0
org.apache.zeppelin.notebook.Folder.countNotes : return $i0 >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotesRecursively : r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.util.List getNotes()>()
org.apache.zeppelin.notebook.Folder.getNotesRecursively : r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.util.List getNotes()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotes : $r1 = new java.util.LinkedList
org.apache.zeppelin.notebook.Folder.getNotes : $r1 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotes : $r2 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes>
org.apache.zeppelin.notebook.Folder.getNotes : $r2 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes> >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotes : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.zeppelin.notebook.Folder.getNotes : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotes : specialinvoke $r1.<java.util.LinkedList: void <init>(java.util.Collection)>($r3)
org.apache.zeppelin.notebook.Folder.getNotes : specialinvoke $r1.<java.util.LinkedList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotes : return $r1
org.apache.zeppelin.notebook.Folder.getNotes : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotesRecursively : $r4 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children>
org.apache.zeppelin.notebook.Folder.getNotesRecursively : $r4 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children> >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotesRecursively : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>()
org.apache.zeppelin.notebook.Folder.getNotesRecursively : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotesRecursively : r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Folder.getNotesRecursively : r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotesRecursively : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Folder.getNotesRecursively : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotesRecursively : if $z0 == 0
org.apache.zeppelin.notebook.Folder.getNotesRecursively : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Folder.getNotesRecursively : return r1
