org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.util.Map sessions>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : return ""
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer.getSession : if r2 != null goto $r5 = r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer$Entity: java.lang.String userSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler restApiClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserInstances : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r1 = new java.util.ArrayList
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : r18 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String getDefaultZeppelinInstanceToken(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : return r18
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r12 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r18)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : goto [?= return r18]
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r9 = "anonymous"
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r15 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String defaultToken>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getUserToken : $r10 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : return ""
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getDefaultZeppelinInstanceToken : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.List getUserInstances(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r14 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.eclipse.jetty.client.HttpClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : i0 = interfaceinvoke r3.<org.eclipse.jetty.client.api.Response: int getStatus()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : if i0 != 200 goto $r17 = <org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : interfaceinvoke r6.<org.eclipse.jetty.client.api.Request: void send(org.eclipse.jetty.client.api.Response$CompleteListener)>($r9)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : goto [?= i0 = interfaceinvoke r3.<org.eclipse.jetty.client.api.Response: int getStatus()>()]
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r19 = new java.io.IOException
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r16 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r9 = new org.eclipse.jetty.client.util.InputStreamResponseListener
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r17 = <org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getInstances : $r10 = new java.lang.StringBuilder
