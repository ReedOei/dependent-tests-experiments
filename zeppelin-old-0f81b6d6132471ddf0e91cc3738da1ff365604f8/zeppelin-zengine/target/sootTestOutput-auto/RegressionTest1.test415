org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.NotebookAuthorization.isRunner : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set getRunners(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterDir : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String interpreterDir> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.setErrorReason : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String errorReason> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : $r4 = new org.eclipse.jetty.client.HttpClient
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : virtualinvoke $r4.<org.eclipse.jetty.client.HttpClient: void setMaxConnectionsPerDestination(int)>(100)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : $r3 = new org.eclipse.jetty.util.ssl.SslContextFactory
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : virtualinvoke $r4.<org.eclipse.jetty.client.HttpClient: void setFollowRedirects(boolean)>(0)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : goto [?= return r7]
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : return r7
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : $r3 = new java.net.URI
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : r7 = ""
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if i0 > 0 goto (branch)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : r13 = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if r14 == null goto $s1 = 80
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r15 = "wss://"
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $z1 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("https")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : i0 = virtualinvoke r1.<java.net.URI: int getPort()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : r14 = virtualinvoke r1.<java.net.URI: java.lang.String getScheme()>()
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : if r2 != null goto $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("owners")
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : return r8
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r7 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : r19 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r17)
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r6 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : $r4 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setRunners : if r18 != null goto $r4 = new java.util.LinkedHashSet
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption getOption()>()
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r3 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption option>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : r11 = "shared_process"
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : return r8
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : $r7 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.getRunners : if r2 != null goto $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("runners")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if r19 != null goto $r4 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $i0 = virtualinvoke $r3.<java.net.URI: int getPort()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if r1 != null goto r17 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>("ZEPPELINHUB_API_ADDRESS", "zeppelinhub.api.address", "https://www.zeppelinhub.com")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r17 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>("ZEPPELINHUB_API_ADDRESS", "zeppelinhub.api.address", "https://www.zeppelinhub.com")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : goto [?= r19 = virtualinvoke $r3.<java.net.URI: java.lang.String getScheme()>()]
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r4 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : return r20
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r3 = new java.net.URI
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r19 = virtualinvoke $r3.<java.net.URI: java.lang.String getScheme()>()
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : return 1
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.NotebookAuthorization.isOwner : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set getOwners(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.stop : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map userRoles>
org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : return r2
org.apache.zeppelin.notebook.NotebookAuthorization.getRoles : r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>()
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r7 = virtualinvoke $r6.<com.google.common.collect.FluentIterable: com.google.common.collect.ImmutableList toList()>()
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : $r4 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : r3 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>()
org.apache.zeppelin.notebook.NotebookAuthorization.filterByUser : if r2 == null goto $r4 = staticinvoke <com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable 'from'(java.lang.Iterable)>(r1)
org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r19 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r17)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r6 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r4 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : if r18 != null goto $r4 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.isSubjectValid : if r1 != null goto $z0 = virtualinvoke r1.<org.apache.zeppelin.user.AuthenticationInfo: boolean isAnonymous()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.isSubjectValid : return 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.interpreter.InterpreterSetting.getOption : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption option>
org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : return 1
org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.NotebookAuthorization.hasReadAuthorization : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler restApiClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client websocketClient>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock interpreterGroupReadLock>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : r3 = specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getInterpreterGroupId(java.lang.String,java.lang.String)>(r1, r2)
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroups>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r9 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock interpreterGroupReadLock>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : exitmonitor $r2
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r5 = <org.apache.zeppelin.notebook.NotebookAuthorization: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r3 = new org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r6 = new java.io.File
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : virtualinvoke $r6.<java.io.File: boolean createNewFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r13 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.interpreter.InterpreterSetting.getConf : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : i0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getServerPort()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : if i0 > 0 goto $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>()
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : interfaceinvoke $r4.<java.util.Set: boolean retainAll(java.util.Collection)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $r4 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance>
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r0 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance>
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r7 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r8 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r5 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.removeAllConnections : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.util.concurrent.ConcurrentHashMap notesConnection>
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo: boolean isSubjectValid(org.apache.zeppelin.user.AuthenticationInfo)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.list : $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.eclipse.jetty.client.HttpClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler: org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient proxyClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.close : goto [?= return]
org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterRunner : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterRunner interpreterRunner> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r5 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("http_proxy")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r9)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r10 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HTTP_PROXY")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r2 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("https_proxy")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r8 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HTTPS_PROXY")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r8)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void removeAllConnections()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.stop : $r6 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance>
