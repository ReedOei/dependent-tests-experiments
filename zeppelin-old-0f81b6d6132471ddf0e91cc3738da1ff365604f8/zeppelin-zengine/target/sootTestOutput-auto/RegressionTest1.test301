org.apache.zeppelin.notebook.Note.generateId : $r1 = staticinvoke <org.apache.zeppelin.notebook.utility.IdHashes: java.lang.String generateId()>()
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterSettingManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterDir : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String interpreterDir> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.setErrorReason : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String errorReason> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : $r4 = new org.eclipse.jetty.client.HttpClient
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : virtualinvoke $r4.<org.eclipse.jetty.client.HttpClient: void setMaxConnectionsPerDestination(int)>(100)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : $r3 = new org.eclipse.jetty.util.ssl.SslContextFactory
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.getAsyncClient : virtualinvoke $r4.<org.eclipse.jetty.client.HttpClient: void setFollowRedirects(boolean)>(0)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getSettings : r2 = staticinvoke <org.apache.zeppelin.notebook.repo.NotebookRepoSettingsInfo: org.apache.zeppelin.notebook.repo.NotebookRepoSettingsInfo newInstance()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getSettings : return r3
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getSettings : $r4 = <org.apache.zeppelin.notebook.repo.NotebookRepoSettingsInfo$Type: org.apache.zeppelin.notebook.repo.NotebookRepoSettingsInfo$Type INPUT>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getSettings : $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getSettings : $r6 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.lang.String getNotebookDirPath()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getSettings : r2.<org.apache.zeppelin.notebook.repo.NotebookRepoSettingsInfo: java.lang.String name> = "Notebook Path"
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getSettings : r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getSettings : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : goto [?= return r7]
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : return r7
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : $r3 = new java.net.URI
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinhubWebsocketUri : r7 = ""
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if i0 > 0 goto (branch)
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : r13 = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : if r14 == null goto $s1 = 80
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $r15 = "wss://"
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : $z1 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("https")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : i0 = virtualinvoke r1.<java.net.URI: int getPort()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubWsUri : r14 = virtualinvoke r1.<java.net.URI: java.lang.String getScheme()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getPath : $r12 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getPath : $r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getPath : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/")
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getPath : if r1 == null goto $r2 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot>
org.apache.zeppelin.notebook.Note.getConfig : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config>
org.apache.zeppelin.notebook.Note.getConfig : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption getOption()>()
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : $r3 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption option>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroupId : r11 = "shared_process"
org.apache.zeppelin.notebook.repo.GitNotebookRepo.get : if $z2 == 0 goto $r11 = r0.<org.apache.zeppelin.notebook.repo.GitNotebookRepo: org.eclipse.jgit.api.Git git>
org.apache.zeppelin.notebook.repo.GitNotebookRepo.get : $z1 = interfaceinvoke r46.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.notebook.repo.GitNotebookRepo.get : r44 = null
org.apache.zeppelin.notebook.repo.GitNotebookRepo.get : r45 = null
org.apache.zeppelin.notebook.repo.GitNotebookRepo.get : $r7 = r0.<org.apache.zeppelin.notebook.repo.GitNotebookRepo: org.eclipse.jgit.api.Git git>
org.apache.zeppelin.notebook.repo.GitNotebookRepo.get : $r13 = r0.<org.apache.zeppelin.notebook.repo.GitNotebookRepo: org.eclipse.jgit.api.Git git>
org.apache.zeppelin.notebook.repo.GitNotebookRepo.get : $r43 = <org.apache.zeppelin.notebook.repo.GitNotebookRepo: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.GitNotebookRepo.get : $r11 = r0.<org.apache.zeppelin.notebook.repo.GitNotebookRepo: org.eclipse.jgit.api.Git git>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getRootDir : $r2 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileSystemManager fsManager>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getRootDir : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: boolean isDirectory(org.apache.commons.vfs2.FileObject)>(r1)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getRootDir : $z0 = interfaceinvoke r1.<org.apache.commons.vfs2.FileObject: boolean exists()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getRootDir : return r1
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if r19 != null goto $r4 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $i0 = virtualinvoke $r3.<java.net.URI: int getPort()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : if r1 != null goto r17 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>("ZEPPELINHUB_API_ADDRESS", "zeppelinhub.api.address", "https://www.zeppelinhub.com")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r17 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>("ZEPPELINHUB_API_ADDRESS", "zeppelinhub.api.address", "https://www.zeppelinhub.com")
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : goto [?= r19 = virtualinvoke $r3.<java.net.URI: java.lang.String getScheme()>()]
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r4 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : return r20
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : $r3 = new java.net.URI
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinHubUrl : r19 = virtualinvoke $r3.<java.net.URI: java.lang.String getScheme()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r4 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileObject getRootDir()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r19 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r22 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r16 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: boolean isDirectory(org.apache.commons.vfs2.FileObject)>(r5)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r14 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: void createFolder()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r7.<java.io.OutputStream: void close()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r3 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String toJson()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z0 = interfaceinvoke r5.<org.apache.commons.vfs2.FileObject: boolean exists()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r9 = <org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r17 = interfaceinvoke r6.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileContent getContent()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.getNotebookDirPath : $r1 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot>
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r16 = <java.math.BigInteger: java.math.BigInteger ZERO>
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i4 = interfaceinvoke $r5.<java.util.List: int size()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r5 = new java.util.ArrayList
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r6 = new java.math.BigInteger
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r17 = new java.lang.StringBuffer
org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("r22 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger pow(int)>(i5)", "org.apache.zeppelin.notebook.utility.IdHashes.encode")]
org.apache.zeppelin.notebook.utility.IdHashes.encode : r22 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger pow(int)>(i5)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r4 = virtualinvoke r23.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r3)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r23 = virtualinvoke r21.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r22)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r21 = virtualinvoke r21.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r23)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r19 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i6)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r12 = new java.math.BigInteger
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i1 = i5 - 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : i5 = i5 + 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= $r17 = new java.lang.StringBuffer]
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r14 = <org.apache.zeppelin.notebook.utility.IdHashes: char[] DICTIONARY>
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : i5 = 1
org.apache.zeppelin.notebook.Note.isNameEmpty : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $z1 = interfaceinvoke r24.<org.apache.commons.vfs2.FileObject: boolean exists()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r2 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r8 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileSystemManager fsManager>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r4 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r17 = virtualinvoke $r12.<java.io.File: java.net.URI toURI()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : goto [?= $r4 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot>]
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r3 = new java.net.URI
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r6 = staticinvoke <org.apache.commons.vfs2.VFS: org.apache.commons.vfs2.FileSystemManager getManager()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r12 = new java.io.File
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.interpreter.InterpreterSetting.getLifecycleManager : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.LifecycleManager lifecycleManager>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.isDirectory : if r1 != null goto $r2 = interfaceinvoke r1.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileType getType()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.isDirectory : $r2 = interfaceinvoke r1.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileType getType()>()
org.apache.zeppelin.notebook.Note.isPersonalizedMode : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Note.isPersonalizedMode : if null == r1 goto $z1 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler
org.apache.zeppelin.notebook.repo.NotebookRepoSettingsInfo.newInstance : $r0 = new org.apache.zeppelin.notebook.repo.NotebookRepoSettingsInfo
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.GitNotebookRepo.setNoteRevision : return r4
org.apache.zeppelin.notebook.repo.GitNotebookRepo.setNoteRevision : r4 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.GitNotebookRepo: org.apache.zeppelin.notebook.Note get(java.lang.String,java.lang.String,org.apache.zeppelin.user.AuthenticationInfo)>(r1, r2, r3)
org.apache.zeppelin.notebook.repo.GitNotebookRepo.setNoteRevision : if r4 == null goto return r4
org.apache.zeppelin.notebook.Note.setIndex : r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.search.SearchService index> = r1
org.apache.zeppelin.interpreter.InterpreterSetting.getOption : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption option>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r6 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock interpreterGroupReadLock>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : r3 = specialinvoke r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getInterpreterGroupId(java.lang.String,java.lang.String)>(r1, r2)
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroups>
org.apache.zeppelin.interpreter.InterpreterSetting.getInterpreterGroup : $r9 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock interpreterGroupReadLock>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.init : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.Note.getId : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id>
org.apache.zeppelin.interpreter.InterpreterSetting.getConf : $r1 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : i0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getServerPort()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.ZeppelinHubRepo.getZeppelinWebsocketUri : if i0 > 0 goto $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>()
org.apache.zeppelin.notebook.Note.toJson : $r1 = <org.apache.zeppelin.notebook.Note: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.repo.GitNotebookRepo.save : specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: void save(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.user.AuthenticationInfo)>(r1, r2)
org.apache.zeppelin.notebook.Note.getName : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: boolean isNameEmpty()>()
org.apache.zeppelin.notebook.Note.getName : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.Note.isLastParagraph : return 1
org.apache.zeppelin.notebook.Note.isLastParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat
org.apache.zeppelin.interpreter.InterpreterSetting.setInterpreterRunner : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterRunner interpreterRunner> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r5 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("http_proxy")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r9)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r10 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HTTP_PROXY")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r2 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("https_proxy")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $r8 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HTTPS_PROXY")
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.ZeppelinhubRestApiHandler.readProxyConf : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r8)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance>
