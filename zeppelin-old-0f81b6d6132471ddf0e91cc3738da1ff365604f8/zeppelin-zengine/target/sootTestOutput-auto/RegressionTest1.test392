org.apache.zeppelin.notebook.Note.generateId : $r1 = staticinvoke <org.apache.zeppelin.notebook.utility.IdHashes: java.lang.String generateId()>()
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.setInterpreterProcess : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess interpreterProcess> = r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.getHost : return "localhost"
org.apache.zeppelin.notebook.Note.getAngularObjects : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map angularObjects>
org.apache.zeppelin.notebook.Note.getConfig : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config>
org.apache.zeppelin.notebook.Note.getConfig : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.getInterpreterGroupName : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterGroupName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient : $r2 = new org.apache.commons.pool2.impl.GenericObjectPool
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.commons.pool2.impl.GenericObjectPool clientPool>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.shutdown : entermonitor r0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.shutdown : virtualinvoke r0.<java.lang.Object: void notify()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.shutdown : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller: boolean shutdown> = 1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller.shutdown : exitmonitor r0
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r16 = <java.math.BigInteger: java.math.BigInteger ZERO>
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i4 = interfaceinvoke $r5.<java.util.List: int size()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r5 = new java.util.ArrayList
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r6 = new java.math.BigInteger
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r17 = new java.lang.StringBuffer
org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("r22 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger pow(int)>(i5)", "org.apache.zeppelin.notebook.utility.IdHashes.encode")]
org.apache.zeppelin.notebook.utility.IdHashes.encode : r22 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger pow(int)>(i5)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r4 = virtualinvoke r23.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r3)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r23 = virtualinvoke r21.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r22)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r21 = virtualinvoke r21.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r23)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r19 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i6)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r12 = new java.math.BigInteger
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i1 = i5 - 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : i5 = i5 + 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= $r17 = new java.lang.StringBuffer]
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r14 = <org.apache.zeppelin.notebook.utility.IdHashes: char[] DICTIONARY>
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : i5 = 1
org.apache.zeppelin.notebook.Note.isNameEmpty : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.getUserNote : $r9 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getAngularObjects()>()
org.apache.zeppelin.notebook.Note.getUserNote : $r7 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.getUserNote : $r10 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.getUserNote : $r5 = new org.apache.zeppelin.notebook.Note
org.apache.zeppelin.notebook.Note.getUserNote : $r8 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Note.getUserNote : $r6 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.onProcessFailed : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.onProcessFailed : $r2 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setRemoteInterpreterProcessListener : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting$Builder: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting>
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setRemoteInterpreterProcessListener : return r0
org.apache.zeppelin.interpreter.InterpreterSetting.access$1202 : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcessListener remoteInterpreterProcessListener> = r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.setRemoteInterpreterEventPoller : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.remote.RemoteInterpreterEventPoller remoteInterpreterEventPoller> = r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getInterpreterContextRunnerPool : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.remote.InterpreterContextRunnerPool interpreterContextRunnerPool>
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setId : $r2 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting$Builder: org.apache.zeppelin.interpreter.InterpreterSetting interpreterSetting>
org.apache.zeppelin.interpreter.InterpreterSetting$Builder.setId : return r0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.getPort : $i0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.isRunning : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.notebook.Note.setIndex : r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.search.SearchService index> = r1
org.apache.zeppelin.interpreter.remote.ClientFactory.create : $r14 = new org.apache.zeppelin.interpreter.InterpreterException
org.apache.zeppelin.interpreter.remote.ClientFactory.create : $r5 = new org.apache.thrift.transport.TSocket
org.apache.zeppelin.interpreter.remote.ClientFactory.create : virtualinvoke $r5.<org.apache.thrift.transport.TSocket: void open()>()
org.apache.zeppelin.interpreter.remote.ClientFactory.create : $r1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.ClientFactory: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client create()>()
org.apache.zeppelin.interpreter.InterpreterSetting.access$002 : r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String id> = r1
org.apache.zeppelin.notebook.Note.getId : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id>
org.apache.zeppelin.notebook.Note.getName : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: boolean isNameEmpty()>()
org.apache.zeppelin.notebook.Note.getName : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.updateRemoteAngularObject : z0 = 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.updateRemoteAngularObject : r17 = null
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.updateRemoteAngularObject : $r12 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.updateRemoteAngularObject : $r7 = virtualinvoke $r6.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.updateRemoteAngularObject : r17 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client getClient()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.updateRemoteAngularObject : $r9 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.updateRemoteAngularObject : $r6 = new com.google.gson.Gson
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.getInterpreterDir : $r1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterDir>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.onProcessComplete : $r3 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.concurrent.atomic.AtomicBoolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.onProcessComplete : $r1 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
