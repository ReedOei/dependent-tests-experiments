com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $r3 = new java.util.ArrayList >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : r4 = $r3
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : r4 = $r3 >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : if $z0 == 0
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $r7 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Class getRequiredType()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $r7 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Class getRequiredType()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getComponentType()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getComponentType()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $i1 = interfaceinvoke r4.<java.util.List: int size()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $i1 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r8, $i1)
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r8, $i1) >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : i0 = 0
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : i0 = 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : if $z2 == 0
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $i2 = i0
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : return r9
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $i2 = i0 >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : i0 = i0 + 1
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : i0 = i0 + 1 >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(r9, $i2, $r10)
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(r9, $i2, $r10) >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : r5 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)>(r1, r2, null)
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : r5 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.ArrayConverter: java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)>(r1, r2, null) >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5)
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()]
com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()] >>>>>>>> com.thoughtworks.xstream.converters.collections.ArrayConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
