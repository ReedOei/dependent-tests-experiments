com.thoughtworks.xstream.io.path.PathTest.addTest : $r4 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.io.path.PathTest.addTest : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.io.path.PathTest.addTest : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.path.PathTest.addTest : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
com.thoughtworks.xstream.io.path.PathTest.addTest : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.path.PathTest.addTest : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ")
com.thoughtworks.xstream.io.path.PathTest.addTest : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ") >>>>>>>> com.thoughtworks.xstream.io.path.PathTest.addTest : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
com.thoughtworks.xstream.io.path.PathTest.addTest : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> com.thoughtworks.xstream.io.path.PathTest.addTest : r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.io.path.PathTest.addTest : r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.path.PathTest.addTest : $r9 = new com.thoughtworks.xstream.io.path.PathTest$1
com.thoughtworks.xstream.io.path.PathTest.addTest : $r9 = new com.thoughtworks.xstream.io.path.PathTest$1 >>>>>>>> com.thoughtworks.xstream.io.path.PathTest.addTest : specialinvoke $r9.<com.thoughtworks.xstream.io.path.PathTest$1: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(r5, r3, r1, r2, z0)
com.thoughtworks.xstream.io.path.PathTest.addTest : specialinvoke $r9.<com.thoughtworks.xstream.io.path.PathTest$1: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(r5, r3, r1, r2, z0) >>>>>>>> com.thoughtworks.xstream.io.path.PathTest.addTest : virtualinvoke r0.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r9)
com.thoughtworks.xstream.io.path.PathTest.addTest : virtualinvoke r0.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r9) >>>>>>>> com.thoughtworks.xstream.io.path.PathTest.addTest : return
