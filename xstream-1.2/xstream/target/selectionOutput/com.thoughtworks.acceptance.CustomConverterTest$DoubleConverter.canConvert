com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : $r2 = <java.lang.Double: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : if r1 == $r2
com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : if r1 == $r2 >>>>>>>> com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : if r1 != class "java/lang/Double"
com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : if r1 == $r2 >>>>>>>> com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : $z0 = 1
com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : $z0 = 1 >>>>>>>> com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : goto [?= return $z0]
com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : goto [?= return $z0] >>>>>>>> com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : return $z0
com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : if r1 != class "java/lang/Double" >>>>>>>> com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : $z0 = 1
com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : if r1 != class "java/lang/Double" >>>>>>>> com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : $z0 = 0
com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : $z0 = 0 >>>>>>>> com.thoughtworks.acceptance.CustomConverterTest$DoubleConverter.canConvert : return $z0
