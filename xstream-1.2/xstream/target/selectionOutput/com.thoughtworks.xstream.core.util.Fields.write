com.thoughtworks.xstream.core.util.Fields.write : r3 = $r4 >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r5 = new java.lang.RuntimeException
com.thoughtworks.xstream.core.util.Fields.write : $r5 = new java.lang.RuntimeException >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r6 = new java.lang.StringBuilder
com.thoughtworks.xstream.core.util.Fields.write : $r6 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.core.util.Fields.write : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not write ")
com.thoughtworks.xstream.core.util.Fields.write : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not write ") >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r8 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Class getType()>()
com.thoughtworks.xstream.core.util.Fields.write : $r8 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Class getType()>() >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.core.util.Fields.write : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
com.thoughtworks.xstream.core.util.Fields.write : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
com.thoughtworks.xstream.core.util.Fields.write : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r12 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>()
com.thoughtworks.xstream.core.util.Fields.write : $r12 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
com.thoughtworks.xstream.core.util.Fields.write : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field")
com.thoughtworks.xstream.core.util.Fields.write : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" field") >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.core.util.Fields.write : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15)
com.thoughtworks.xstream.core.util.Fields.write : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15) >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : throw $r5
com.thoughtworks.xstream.core.util.Fields.write : virtualinvoke r0.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : goto [?= return]
com.thoughtworks.xstream.core.util.Fields.write : virtualinvoke r0.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : $r4 := @caughtexception
com.thoughtworks.xstream.core.util.Fields.write : goto [?= return] >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : return
