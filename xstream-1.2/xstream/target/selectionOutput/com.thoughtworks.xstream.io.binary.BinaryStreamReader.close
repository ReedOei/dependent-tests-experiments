com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : r1 = $r3 >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : $r4 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : $r4 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : specialinvoke $r4.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r1)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : specialinvoke $r4.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r1) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : throw $r4
com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : $r2 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: java.io.DataInputStream in> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : virtualinvoke $r2.<java.io.DataInputStream: void close()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : $r2 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: java.io.DataInputStream in> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : $r3 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : virtualinvoke $r2.<java.io.DataInputStream: void close()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : goto [?= return]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : virtualinvoke $r2.<java.io.DataInputStream: void close()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : $r3 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : goto [?= return] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.close : return
