com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r2 = <com.thoughtworks.xstream.annotations.Annotations: java.util.Set configuredTypes> >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1)
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : if $z0 == 0
com.thoughtworks.xstream.annotations.Annotations.registerConverter : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : return
com.thoughtworks.xstream.annotations.Annotations.registerConverter : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r5 = class "com/thoughtworks/xstream/converters/collections/AbstractCollectionConverter"
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r5 = class "com/thoughtworks/xstream/converters/collections/AbstractCollectionConverter" >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $z1 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1)
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $z1 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : if $z1 == 0
com.thoughtworks.xstream.annotations.Annotations.registerConverter : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r6 = newarray (java.lang.Class)[1]
com.thoughtworks.xstream.annotations.Annotations.registerConverter : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r12 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>()
com.thoughtworks.xstream.annotations.Annotations.registerConverter : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r13 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r10 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : r11 = $r10 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : virtualinvoke r11.<java.lang.Exception: void printStackTrace()>()
com.thoughtworks.xstream.annotations.Annotations.registerConverter : virtualinvoke r11.<java.lang.Exception: void printStackTrace()>() >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : return
com.thoughtworks.xstream.annotations.Annotations.registerConverter : r14 = $r13 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : virtualinvoke r14.<java.lang.Exception: void printStackTrace()>()
com.thoughtworks.xstream.annotations.Annotations.registerConverter : virtualinvoke r14.<java.lang.Exception: void printStackTrace()>() >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : return
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r12 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : r4 = (com.thoughtworks.xstream.converters.Converter) $r12
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r12 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r13 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : r4 = (com.thoughtworks.xstream.converters.Converter) $r12 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : goto [?= virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>(r4)]
com.thoughtworks.xstream.annotations.Annotations.registerConverter : r4 = (com.thoughtworks.xstream.converters.Converter) $r12 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r13 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : goto [?= virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>(r4)] >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>(r4)
com.thoughtworks.xstream.annotations.Annotations.registerConverter : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>(r4) >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r15 = <com.thoughtworks.xstream.annotations.Annotations: java.util.Set configuredTypes>
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r15 = <com.thoughtworks.xstream.annotations.Annotations: java.util.Set configuredTypes> >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r1)
com.thoughtworks.xstream.annotations.Annotations.registerConverter : interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : return
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r6 = newarray (java.lang.Class)[1] >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r6[0] = class "com/thoughtworks/xstream/mapper/Mapper"
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r6 = newarray (java.lang.Class)[1] >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r10 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r6[0] = class "com/thoughtworks/xstream/mapper/Mapper" >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r6)
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r6[0] = class "com/thoughtworks/xstream/mapper/Mapper" >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r10 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r6) >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r7 = newarray (java.lang.Object)[1]
com.thoughtworks.xstream.annotations.Annotations.registerConverter : r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r6) >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r10 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r7 = newarray (java.lang.Object)[1] >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r8 = virtualinvoke r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper getMapper()>()
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r7 = newarray (java.lang.Object)[1] >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r10 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r8 = virtualinvoke r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper getMapper()>() >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r7[0] = $r8
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r8 = virtualinvoke r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper getMapper()>() >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r10 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r7[0] = $r8 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r9 = virtualinvoke r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7)
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r7[0] = $r8 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r10 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r9 = virtualinvoke r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7) >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : r4 = (com.thoughtworks.xstream.converters.Converter) $r9
com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r9 = virtualinvoke r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r7) >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r10 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : r4 = (com.thoughtworks.xstream.converters.Converter) $r9 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : goto [?= virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>(r4)]
com.thoughtworks.xstream.annotations.Annotations.registerConverter : r4 = (com.thoughtworks.xstream.converters.Converter) $r9 >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : $r10 := @caughtexception
com.thoughtworks.xstream.annotations.Annotations.registerConverter : goto [?= virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>(r4)] >>>>>>>> com.thoughtworks.xstream.annotations.Annotations.registerConverter : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter)>(r4)
