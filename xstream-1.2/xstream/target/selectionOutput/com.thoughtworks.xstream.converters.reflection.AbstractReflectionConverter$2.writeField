com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r9 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r10 = $r9.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r10 = $r9.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $z0 = interfaceinvoke $r10.<com.thoughtworks.xstream.mapper.Mapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>(r4, r2)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $z0 = interfaceinvoke $r10.<com.thoughtworks.xstream.mapper.Mapper: boolean shouldSerializeMember(java.lang.Class,java.lang.String)>(r4, r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : if $z0 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : return
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r12 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r12 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r13 = $r12.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r13 = $r12.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r14 = interfaceinvoke $r13.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedMember(java.lang.Class,java.lang.String)>(r4, r2)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r14 = interfaceinvoke $r13.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedMember(java.lang.Class,java.lang.String)>(r4, r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>($r11, $r14, r3)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>($r11, $r14, r3) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r15 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r15 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r16 = $r15.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r16 = $r15.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : r7 = interfaceinvoke $r16.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class defaultImplementationOf(java.lang.Class)>(r3)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : r7 = interfaceinvoke $r16.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class defaultImplementationOf(java.lang.Class)>(r3) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $z1 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>(r7)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $z1 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>(r7) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : if $z1 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r24 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: java.util.Set val$seenFields>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r24 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: java.util.Set val$seenFields> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $z2 = interfaceinvoke $r24.<java.util.Set: boolean contains(java.lang.Object)>(r2)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $z2 = interfaceinvoke $r24.<java.util.Set: boolean contains(java.lang.Object)>(r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : if $z2 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r25 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r32 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r32 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r33 = $r32.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r33 = $r32.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : r8 = interfaceinvoke $r33.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>(r4, r1)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : r8 = interfaceinvoke $r33.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>(r4, r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r35 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.MarshallingContext val$context>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r35 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.MarshallingContext val$context> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : virtualinvoke $r34.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)>($r35, r5, r8)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : virtualinvoke $r34.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field)>($r35, r5, r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r36 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r36 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : interfaceinvoke $r36.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : interfaceinvoke $r36.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : return
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r25 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r26 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r26 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r27 = $r26.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r27 = $r26.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r28 = interfaceinvoke $r27.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("defined-in")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r28 = interfaceinvoke $r27.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("defined-in") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r29 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r29 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r30 = $r29.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r30 = $r29.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r31 = interfaceinvoke $r30.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(r4)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r31 = interfaceinvoke $r30.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(r4) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : interfaceinvoke $r25.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r28, $r31)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : interfaceinvoke $r25.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r28, $r31) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r32 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r18 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r18 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r19 = $r18.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r19 = $r18.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r20 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("class")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r20 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("class") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r21 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r21 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r22 = $r21.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r22 = $r21.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r23 = interfaceinvoke $r22.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(r6)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r23 = interfaceinvoke $r22.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(r6) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : interfaceinvoke $r17.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r20, $r23)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : interfaceinvoke $r17.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r20, $r23) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField : $r24 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: java.util.Set val$seenFields>
