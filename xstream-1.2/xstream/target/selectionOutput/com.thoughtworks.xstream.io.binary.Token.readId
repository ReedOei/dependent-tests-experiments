com.thoughtworks.xstream.io.binary.Token.readId : lookupswitch(b0) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $b1 = interfaceinvoke r1.<java.io.DataInput: byte readByte()>()
com.thoughtworks.xstream.io.binary.Token.readId : lookupswitch(b0) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $s4 = interfaceinvoke r1.<java.io.DataInput: short readShort()>()
com.thoughtworks.xstream.io.binary.Token.readId : lookupswitch(b0) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $i7 = interfaceinvoke r1.<java.io.DataInput: int readInt()>()
com.thoughtworks.xstream.io.binary.Token.readId : lookupswitch(b0) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $l10 = interfaceinvoke r1.<java.io.DataInput: long readLong()>()
com.thoughtworks.xstream.io.binary.Token.readId : lookupswitch(b0) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $r2 = new java.lang.Error
com.thoughtworks.xstream.io.binary.Token.readId : $r2 = new java.lang.Error >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $r3 = new java.lang.StringBuilder
com.thoughtworks.xstream.io.binary.Token.readId : $r3 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.io.binary.Token.readId : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown idType ")
com.thoughtworks.xstream.io.binary.Token.readId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown idType ") >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
com.thoughtworks.xstream.io.binary.Token.readId : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.io.binary.Token.readId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>($r6)
com.thoughtworks.xstream.io.binary.Token.readId : specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>($r6) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : throw $r2
com.thoughtworks.xstream.io.binary.Token.readId : $l10 = interfaceinvoke r1.<java.io.DataInput: long readLong()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $l11 = $l10 - -9223372036854775808L
com.thoughtworks.xstream.io.binary.Token.readId : $l11 = $l10 - -9223372036854775808L >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : return $l11
com.thoughtworks.xstream.io.binary.Token.readId : $i7 = interfaceinvoke r1.<java.io.DataInput: int readInt()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $i8 = $i7 - -2147483648
com.thoughtworks.xstream.io.binary.Token.readId : $i8 = $i7 - -2147483648 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $l9 = (long) $i8
com.thoughtworks.xstream.io.binary.Token.readId : $l9 = (long) $i8 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : return $l9
com.thoughtworks.xstream.io.binary.Token.readId : $s4 = interfaceinvoke r1.<java.io.DataInput: short readShort()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $i5 = $s4 - -32768
com.thoughtworks.xstream.io.binary.Token.readId : $i5 = $s4 - -32768 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $l6 = (long) $i5
com.thoughtworks.xstream.io.binary.Token.readId : $l6 = (long) $i5 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : return $l6
com.thoughtworks.xstream.io.binary.Token.readId : $b1 = interfaceinvoke r1.<java.io.DataInput: byte readByte()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $i2 = $b1 - -128
com.thoughtworks.xstream.io.binary.Token.readId : $i2 = $b1 - -128 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : $l3 = (long) $i2
com.thoughtworks.xstream.io.binary.Token.readId : $l3 = (long) $i2 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.readId : return $l3
