com.thoughtworks.xstream.mapper.DefaultMapper.realClass : r2 = $r6 >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r7 = new com.thoughtworks.xstream.mapper.CannotResolveClassException
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r7 = new com.thoughtworks.xstream.mapper.CannotResolveClassException >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r3 = new java.lang.StringBuilder
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r3 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ")
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r10 = virtualinvoke r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>()
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r10 = virtualinvoke r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>() >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : specialinvoke $r7.<com.thoughtworks.xstream.mapper.CannotResolveClassException: void <init>(java.lang.String)>($r12)
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : specialinvoke $r7.<com.thoughtworks.xstream.mapper.CannotResolveClassException: void <init>(java.lang.String)>($r12) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : throw $r7
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r4 = r0.<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.ClassLoader classLoader> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r4 = r0.<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.ClassLoader classLoader> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r6 := @caughtexception
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : return $r5
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r6 := @caughtexception
