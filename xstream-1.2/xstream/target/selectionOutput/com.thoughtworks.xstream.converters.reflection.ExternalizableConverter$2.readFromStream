com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r2 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : interfaceinvoke $r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : interfaceinvoke $r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r3 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r3 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r4 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: java.io.Externalizable val$externalizable>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r4 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: java.io.Externalizable val$externalizable> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r5 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r5 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r6 = staticinvoke <com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter)>($r5)
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r6 = staticinvoke <com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter)>($r5) >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r7 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r7 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r8 = interfaceinvoke $r7.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r8 = interfaceinvoke $r7.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r9 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r8)
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r9 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : r1 = interfaceinvoke $r3.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>($r4, $r9)
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : r1 = interfaceinvoke $r3.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>($r4, $r9) >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : interfaceinvoke $r10.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : interfaceinvoke $r10.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2.readFromStream : return r1
