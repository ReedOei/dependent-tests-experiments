com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : $r2 = staticinvoke <com.thoughtworks.acceptance.SerializationCallbackOrderTest: com.thoughtworks.xstream.testutil.CallLog access$000()>() >>>>>>>> com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : virtualinvoke $r2.<com.thoughtworks.xstream.testutil.CallLog: void actual(java.lang.String)>("Base.writeObject() start")
com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : virtualinvoke $r2.<com.thoughtworks.xstream.testutil.CallLog: void actual(java.lang.String)>("Base.writeObject() start") >>>>>>>> com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>()
com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>() >>>>>>>> com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : $r3 = staticinvoke <com.thoughtworks.acceptance.SerializationCallbackOrderTest: com.thoughtworks.xstream.testutil.CallLog access$000()>()
com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : $r3 = staticinvoke <com.thoughtworks.acceptance.SerializationCallbackOrderTest: com.thoughtworks.xstream.testutil.CallLog access$000()>() >>>>>>>> com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : virtualinvoke $r3.<com.thoughtworks.xstream.testutil.CallLog: void actual(java.lang.String)>("Base.writeObject() end")
com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : virtualinvoke $r3.<com.thoughtworks.xstream.testutil.CallLog: void actual(java.lang.String)>("Base.writeObject() end") >>>>>>>> com.thoughtworks.acceptance.SerializationCallbackOrderTest$Base.writeObject : return
