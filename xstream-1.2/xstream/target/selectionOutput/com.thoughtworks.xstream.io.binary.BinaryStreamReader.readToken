com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r2 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token pushback> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : if $r2 != null
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : if $r2 != null >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r3 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : if $r2 != null >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : r12 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token pushback>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : if $r2 != null >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : r10 = $r9 >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r11 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r11 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : specialinvoke $r11.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r10)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : specialinvoke $r11.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r10) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : throw $r11
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : r12 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token pushback> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token pushback> = null
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token pushback> = null >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : return r12
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r3 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r4 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: java.io.DataInputStream in>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r3 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r4 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: java.io.DataInputStream in> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : r1 = virtualinvoke $r3.<com.thoughtworks.xstream.io.binary.Token$Formatter: com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)>($r4)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r4 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: java.io.DataInputStream in> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : r1 = virtualinvoke $r3.<com.thoughtworks.xstream.io.binary.Token$Formatter: com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)>($r4) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $b0 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: byte getType()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : r1 = virtualinvoke $r3.<com.thoughtworks.xstream.io.binary.Token$Formatter: com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput)>($r4) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $b0 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: byte getType()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : lookupswitch($b0) {     case 2:
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $b0 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: byte getType()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : lookupswitch($b0) {     case 2: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r5 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : lookupswitch($b0) {     case 2: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : return r1
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : lookupswitch($b0) {     case 2: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r5 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $l1 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: long getId()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r5 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $l1 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: long getId()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r6 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: java.lang.String getValue()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $l1 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: long getId()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r6 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: java.lang.String getValue()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : virtualinvoke $r5.<com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry: void put(long,java.lang.String)>($l1, $r6)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r6 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: java.lang.String getValue()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : virtualinvoke $r5.<com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry: void put(long,java.lang.String)>($l1, $r6) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r7 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : virtualinvoke $r5.<com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry: void put(long,java.lang.String)>($l1, $r6) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r7 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : return $r7
com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r7 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.readToken : $r9 := @caughtexception
