com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r7 = class "net/sf/cglib/proxy/Factory"
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r7 = class "net/sf/cglib/proxy/Factory" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, "type", r4)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, "type", r4) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r8 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r8 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r3.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>($r8)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r3.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>($r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("interfaces")
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("interfaces") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r5 = virtualinvoke r4.<java.lang.Class: java.lang.Class[] getInterfaces()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r5 = virtualinvoke r4.<java.lang.Class: java.lang.Class[] getInterfaces()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : i0 = 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : i0 = 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $i2 = lengthof r5
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $i2 = lengthof r5 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if i0 >= $i2
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if i0 >= $i2 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r9 = r5[i0]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if i0 >= $i2 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("hasFactory")
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("hasFactory") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z0 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r18 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $z2 = 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $z2 = 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void setValue(java.lang.String)>($r19)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void setValue(java.lang.String)>($r19) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z0 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r20 = (net.sf.cglib.proxy.Factory) r1
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r21 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)>(r1)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r21 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r22 = $r21
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r22 = $r21 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $i3 = lengthof r22
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $i3 = lengthof r22 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $i3 <= 1
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $i3 <= 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r23 = new com.thoughtworks.xstream.converters.ConversionException
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $i3 <= 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r24 = class "net/sf/cglib/proxy/MethodInterceptor"
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r24 = class "net/sf/cglib/proxy/MethodInterceptor" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r25 = r22[0]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r25 = r22[0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : z1 = virtualinvoke $r24.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r26)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : z1 = virtualinvoke $r24.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r26) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r27 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r27 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r28 = r22[0]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r28 = r22[0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r29 = virtualinvoke $r28.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r29 = virtualinvoke $r28.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r30 = interfaceinvoke $r27.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r29)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r30 = interfaceinvoke $r27.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r29) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r31 = r22[0]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r31 = r22[0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r32 = virtualinvoke $r31.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r32 = virtualinvoke $r31.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, $r30, $r32)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, $r30, $r32) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r33 = r22[0]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r33 = r22[0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r3.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>($r33)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r3.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>($r33) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r35 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r37 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r6 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("serialVersionUID")
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r6 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("serialVersionUID") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r35 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r6 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("serialVersionUID") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r37 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r6 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("serialVersionUID") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r35 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r37 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : virtualinvoke r6.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : l1 = virtualinvoke r6.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : l1 = virtualinvoke r6.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r35 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : l1 = virtualinvoke r6.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r37 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : l1 = virtualinvoke r6.<java.lang.reflect.Field: long getLong(java.lang.Object)>(null) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, "serialVersionUID", class "java/lang/String")
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, "serialVersionUID", class "java/lang/String") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r35 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, "serialVersionUID", class "java/lang/String") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r37 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, "serialVersionUID", class "java/lang/String") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r35 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r37 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void setValue(java.lang.String)>($r34)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void setValue(java.lang.String)>($r34) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r35 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void setValue(java.lang.String)>($r34) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r37 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void setValue(java.lang.String)>($r34) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r35 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r37 := @caughtexception
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= (branch)]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z1 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r39 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : return
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r39 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $r39 == class "java/lang/Object"
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $r39 == class "java/lang/Object" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("instance")
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $r39 == class "java/lang/Object" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : return
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("instance") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, r2, r3)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, r2, r3) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : return
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r38 = $r37 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z1 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r36 = $r35 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= (branch)]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if z1 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r23 = new com.thoughtworks.xstream.converters.ConversionException >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : specialinvoke $r23.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("Cannot handle CGLIB enhanced proxies with multiple callbacks")
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : specialinvoke $r23.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("Cannot handle CGLIB enhanced proxies with multiple callbacks") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : throw $r23
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r20 = (net.sf.cglib.proxy.Factory) r1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r21 = interfaceinvoke $r20.<net.sf.cglib.proxy.Factory: net.sf.cglib.proxy.Callback[] getCallbacks()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r21 = interfaceinvoke $r20.<net.sf.cglib.proxy.Factory: net.sf.cglib.proxy.Callback[] getCallbacks()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= r22 = $r21]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= r22 = $r21] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : r22 = $r21
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r18 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $r18 == class "java/lang/Object"
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $r18 == class "java/lang/Object" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $z2 = 1
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $r18 == class "java/lang/Object" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $z2 = 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $z2 = 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2)]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r9 = r5[i0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $r9 != class "net/sf/cglib/proxy/Factory"
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $r9 != class "net/sf/cglib/proxy/Factory" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= i0 = i0 + 1]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : if $r9 != class "net/sf/cglib/proxy/Factory" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r11 = r5[i0]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r11 = r5[i0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r13 = interfaceinvoke $r10.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r12)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r13 = interfaceinvoke $r10.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r12) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r14 = r5[i0]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r14 = r5[i0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, $r13, $r15)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r2, $r13, $r15) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r16 = r5[i0]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $r16 = r5[i0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r3.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>($r16)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r3.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>($r16) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : i0 = i0 + 1
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : i0 = i0 + 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= $i2 = lengthof r5]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= $i2 = lengthof r5] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : $i2 = lengthof r5
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : goto [?= i0 = i0 + 1] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.marshal : i0 = i0 + 1
