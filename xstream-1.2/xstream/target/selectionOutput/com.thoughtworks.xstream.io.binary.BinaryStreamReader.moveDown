com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r3 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r3.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void push()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r3.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void push()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : r1 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : r1 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $b0 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: byte getType()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $b0 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: byte getType()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : lookupswitch($b0) {     case 3:
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : lookupswitch($b0) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r4 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : lookupswitch($b0) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r7 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r7 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : specialinvoke $r7.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.String)>("Expected StartNode")
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : specialinvoke $r7.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.String)>("Expected StartNode") >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : throw $r7
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r4 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r5 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r5 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $l1 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: long getId()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $l1 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: long getId()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r6 = virtualinvoke $r5.<com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry: java.lang.String get(long)>($l1)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r6 = virtualinvoke $r5.<com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry: java.lang.String get(long)>($l1) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r4.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setName(java.lang.String)>($r6)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r4.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setName(java.lang.String)>($r6) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : goto [?= r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : goto [?= r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $b2 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: byte getType()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $b2 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: byte getType()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : tableswitch($b2) {     case 3:
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : tableswitch($b2) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r15 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : tableswitch($b2) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r14 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : tableswitch($b2) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r8 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : tableswitch($b2) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r12 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : tableswitch($b2) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r16 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r16 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r17 = new java.lang.StringBuilder
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r17 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected token ")
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected token ") >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : specialinvoke $r16.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.String)>($r20)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : specialinvoke $r16.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.String)>($r20) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : throw $r16
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r12 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r13 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: java.lang.String getValue()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r13 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: java.lang.String getValue()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r12.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setValue(java.lang.String)>($r13)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r12.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setValue(java.lang.String)>($r13) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : goto [?= (branch)]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : goto [?= r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : goto [?= r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r8 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r9 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r9 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $l3 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: long getId()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $l3 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: long getId()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r10 = virtualinvoke $r9.<com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry: java.lang.String get(long)>($l3)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r10 = virtualinvoke $r9.<com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry: java.lang.String get(long)>($l3) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r11 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: java.lang.String getValue()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r11 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: java.lang.String getValue()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r8.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void addAttribute(java.lang.String,java.lang.String)>($r10, $r11)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r8.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void addAttribute(java.lang.String,java.lang.String)>($r10, $r11) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : goto [?= (branch)]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : goto [?= r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r14 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r14.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setHasMoreChildren(boolean)>(0)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r14.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setHasMoreChildren(boolean)>(0) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r2)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r2) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : return
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : $r15 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r15.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setHasMoreChildren(boolean)>(1)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke $r15.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setHasMoreChildren(boolean)>(1) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r2)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r2) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveDown : return
