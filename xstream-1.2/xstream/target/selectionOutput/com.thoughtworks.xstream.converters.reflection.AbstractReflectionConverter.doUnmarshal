com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r4 = new com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r4.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1)>(null)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r4.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1)>(null) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r5 = $r4
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r5 = $r4 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r6 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.util.Iterator getAttributeNames()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r6 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.util.Iterator getAttributeNames()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z1 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r24 = null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r24 = null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z2 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z2 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z2 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : return r1
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r25 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r25 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r26 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r26 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r27 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r27 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r28 = interfaceinvoke $r25.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String realMember(java.lang.Class,java.lang.String)>($r26, $r27)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r28 = interfaceinvoke $r25.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String realMember(java.lang.Class,java.lang.String)>($r26, $r27) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r29 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r29 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r30 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r30 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r31 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r31 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r32 = interfaceinvoke $r29.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>($r30, $r31)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r32 = interfaceinvoke $r29.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>($r30, $r31) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $r32 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $r32 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z3 = 1
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $r32 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z3 = 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z3 = 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z4 = $z3
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z4 = $z3 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r33 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader)>(r2)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r33 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader)>(r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z4 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z4 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z4 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z6 = 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z6 = 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z7 = $z6
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z7 = $z6 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r36 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,boolean,java.lang.Object,java.lang.String,java.lang.Class)>(r2, z7, r1, r28, r33)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r36 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,boolean,java.lang.Object,java.lang.String,java.lang.Class)>(r2, z7, r1, r28, r33) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z7 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z7 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r37 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z7 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r13 = interfaceinvoke r3.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(r1, r36)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r13 = interfaceinvoke r3.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(r1, r36) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r13 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r13 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r39 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r13 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z7 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z7 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r50 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z7 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r24 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.util.Map writeValueToImplicitCollection(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>(r3, r13, r24, r1, r28)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r24 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.util.Map writeValueToImplicitCollection(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>(r3, r13, r24, r1, r28) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z2 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z2 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z2 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r50 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke $r50.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r1, r28, r13, r33)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke $r50.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r1, r28, r13, r33) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : virtualinvoke r5.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void add(java.lang.Class,java.lang.String)>(r33, r28)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : virtualinvoke r5.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void add(java.lang.Class,java.lang.String)>(r33, r28) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r39 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z8 = virtualinvoke r36.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r39)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z8 = virtualinvoke r36.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r39) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z8 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z8 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r40 = new com.thoughtworks.xstream.converters.ConversionException
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z8 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z7 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r40 = new com.thoughtworks.xstream.converters.ConversionException >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r41 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r41 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot convert type ")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot convert type ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r43 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r43 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r44 = virtualinvoke $r43.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r44 = virtualinvoke $r43.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to type ")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to type ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r47 = virtualinvoke r36.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r47 = virtualinvoke r36.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r40.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>($r49)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r40.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>($r49) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : throw $r40
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r37 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r38 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r38 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r12 = interfaceinvoke $r37.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>($r38, r28)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r12 = interfaceinvoke $r37.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>($r38, r28) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r13 = virtualinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>(r3, r1, r36, r12)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r13 = virtualinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>(r3, r1, r36, r12) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= (branch)]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r13 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r35 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r35 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z5 = interfaceinvoke $r34.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r28, $r35)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z5 = interfaceinvoke $r34.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r28, $r35) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z5 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z5 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z6 = 1
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z5 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z6 = 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z6 = 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= z7 = $z6]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= z7 = $z6] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z7 = $z6
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z3 = 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= z4 = $z3]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= z4 = $z3] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z4 = $z3
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r7 = (java.lang.String) $r14
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r7 = (java.lang.String) $r14 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r15 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r15 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r8 = interfaceinvoke $r15.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String attributeForAlias(java.lang.String)>(r7)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r8 = interfaceinvoke $r15.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String attributeForAlias(java.lang.String)>(r7) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r9 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader)>(r2)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r9 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader)>(r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r16 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r16 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r17 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r17 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z0 = interfaceinvoke $r16.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r8, $r17)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z0 = interfaceinvoke $r16.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r8, $r17) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z0 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r18 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r18 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r10 = interfaceinvoke $r18.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)>(r8)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r10 = interfaceinvoke $r18.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)>(r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 != null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r19 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r22 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>(r7)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r22 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>(r7) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r11 = interfaceinvoke r10.<com.thoughtworks.xstream.converters.SingleValueConverter: java.lang.Object fromString(java.lang.String)>($r22)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r11 = interfaceinvoke r10.<com.thoughtworks.xstream.converters.SingleValueConverter: java.lang.Object fromString(java.lang.String)>($r22) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r23 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r23 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke $r23.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r1, r8, r11, r9)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke $r23.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r1, r8, r11, r9) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : virtualinvoke r5.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void add(java.lang.Class,java.lang.String)>(r9, r8)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : virtualinvoke r5.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void add(java.lang.Class,java.lang.String)>(r9, r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r19 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r20 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r20 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r21 = interfaceinvoke $r20.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r1, r8, r9)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r21 = interfaceinvoke $r20.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r1, r8, r9) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r10 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class)>($r21)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r10 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class)>($r21) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 == null
