com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r4 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r5 = virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r5 = virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r3 = (com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node) $r5
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r3 = (com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node) $r5 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 != null
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 != null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r6 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 != null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z0 = r3.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: boolean fieldAlready>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r8 = class "java/util/Collection"
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r11 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r11 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r11.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("\"")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r11.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("\"") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r12 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r12 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r12.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>(r1)
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r12.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r13 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r13 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r13.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("\": ")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r13.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("\": ") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r14 = class "java/util/Collection"
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r14 = class "java/util/Collection" >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z3 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2)
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z3 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z3 != 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z3 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z4 = virtualinvoke r2.<java.lang.Class: boolean isArray()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z3 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r15 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r15 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r15.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("[")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r15.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("[") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : goto [?= (branch)]
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r3.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: boolean fieldAlready> = 1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r17 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r17 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r18 = new com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r18 = new com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : specialinvoke $r18.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: void <init>(com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r0, r1, r2)
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : specialinvoke $r18.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: void <init>(com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r0, r1, r2) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r17.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r18)
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r17.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r18) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $i0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $i0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $i1 = $i0 + 1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $i1 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> = $i1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> = $i1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : return
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r3.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: boolean fieldAlready> = 1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r17 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z4 = virtualinvoke r2.<java.lang.Class: boolean isArray()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z4 == 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z4 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r15 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z4 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z5 = specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean hasChildren(java.lang.Class)>(r2)
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z5 = specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean hasChildren(java.lang.Class)>(r2) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z5 == 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z5 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r16 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z5 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r16 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r16.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("{")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r16.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("{") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r8 = class "java/util/Collection" >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r9 = r3.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r9 = r3.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z1 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9)
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z1 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z1 != 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r10 = r3.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r14 = class "java/util/Collection"
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r10 = r3.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z2 = virtualinvoke $r10.<java.lang.Class: boolean isArray()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z2 = virtualinvoke $r10.<java.lang.Class: boolean isArray()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z2 != 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z2 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r11 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z2 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r14 = class "java/util/Collection"
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z0 = r3.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: boolean fieldAlready> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z0 == 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r7 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r7 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r7.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>(",")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r7.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>(",") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r6 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r6.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("{")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r6.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("{") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null
