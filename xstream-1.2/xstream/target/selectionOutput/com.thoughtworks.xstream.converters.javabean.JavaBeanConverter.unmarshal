com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : r3 = specialinvoke r0.<com.thoughtworks.xstream.converters.javabean.JavaBeanConverter: java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.converters.UnmarshallingContext)>(r2) >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $z1 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $z1 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : if $z1 == 0
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : return r3
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r7 = r0.<com.thoughtworks.xstream.converters.javabean.JavaBeanConverter: com.thoughtworks.xstream.mapper.Mapper classMapper>
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r7 = r0.<com.thoughtworks.xstream.converters.javabean.JavaBeanConverter: com.thoughtworks.xstream.mapper.Mapper classMapper> >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r8 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r8 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r9 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r9 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : r4 = interfaceinvoke $r7.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String realMember(java.lang.Class,java.lang.String)>($r8, $r9)
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : r4 = interfaceinvoke $r7.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String realMember(java.lang.Class,java.lang.String)>($r8, $r9) >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r10 = r0.<com.thoughtworks.xstream.converters.javabean.JavaBeanConverter: com.thoughtworks.xstream.converters.javabean.BeanProvider beanProvider>
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r10 = r0.<com.thoughtworks.xstream.converters.javabean.JavaBeanConverter: com.thoughtworks.xstream.converters.javabean.BeanProvider beanProvider> >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r11 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r11 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : z0 = virtualinvoke $r10.<com.thoughtworks.xstream.converters.javabean.BeanProvider: boolean propertyDefinedInClass(java.lang.String,java.lang.Class)>(r4, $r11)
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : z0 = virtualinvoke $r10.<com.thoughtworks.xstream.converters.javabean.BeanProvider: boolean propertyDefinedInClass(java.lang.String,java.lang.Class)>(r4, $r11) >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : r5 = specialinvoke r0.<com.thoughtworks.xstream.converters.javabean.JavaBeanConverter: java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)>(r1, r3, r4)
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : r5 = specialinvoke r0.<com.thoughtworks.xstream.converters.javabean.JavaBeanConverter: java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String)>(r1, r3, r4) >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : r6 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(r3, r5)
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : r6 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(r3, r5) >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : if z0 == 0
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r12 = r0.<com.thoughtworks.xstream.converters.javabean.JavaBeanConverter: com.thoughtworks.xstream.converters.javabean.BeanProvider beanProvider>
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : goto [?= $z1 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()]
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : goto [?= $z1 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()] >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $z1 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : $r12 = r0.<com.thoughtworks.xstream.converters.javabean.JavaBeanConverter: com.thoughtworks.xstream.converters.javabean.BeanProvider beanProvider> >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : virtualinvoke $r12.<com.thoughtworks.xstream.converters.javabean.BeanProvider: void writeProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r3, r4, r6)
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : virtualinvoke $r12.<com.thoughtworks.xstream.converters.javabean.BeanProvider: void writeProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r3, r4, r6) >>>>>>>> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
