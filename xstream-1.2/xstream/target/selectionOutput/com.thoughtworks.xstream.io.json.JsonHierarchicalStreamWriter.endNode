com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $i0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $i1 = $i0 - 1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $i1 = $i0 - 1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> = $i1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> = $i1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z0 == 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r4 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r4 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r5 = virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object pop()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r5 = virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object pop()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r2 = (com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node) $r5
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r2 = (com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node) $r5 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r6 = class "java/util/Collection"
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r6 = class "java/util/Collection" >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r7 = r2.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r7 = r2.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z1 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7)
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z1 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z1 != 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r8 = r2.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r9 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r9 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r9.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("]")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r9.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("]") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : goto [?= r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1]
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : goto [?= r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1] >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $i2 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $i2 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $i2 != 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $i2 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r12 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $i2 != 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : return
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r12 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r12.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("}")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r12.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("}") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r13 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r13 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r13.<com.thoughtworks.xstream.core.util.QuickWriter: void flush()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r13.<com.thoughtworks.xstream.core.util.QuickWriter: void flush()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : return
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r8 = r2.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z2 = virtualinvoke $r8.<java.lang.Class: boolean isArray()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z2 = virtualinvoke $r8.<java.lang.Class: boolean isArray()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z2 == 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r9 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r10 = r2.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r10 = r2.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node: java.lang.Class clazz> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z3 = specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean hasChildren(java.lang.Class)>($r10)
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z3 = specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean hasChildren(java.lang.Class)>($r10) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z3 == 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r11 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r11 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r11.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("}")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r11.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("}") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r3 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r3 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: void popSilently()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: void popSilently()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : goto [?= r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1]
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : goto [?= r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1] >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 1
