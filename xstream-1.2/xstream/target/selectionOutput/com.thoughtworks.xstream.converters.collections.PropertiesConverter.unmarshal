com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $r3 = new java.util.Properties >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : specialinvoke $r3.<java.util.Properties: void <init>()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : specialinvoke $r3.<java.util.Properties: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : r4 = $r3
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : r4 = $r3 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : if $z0 == 0
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : return r4
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $r7 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $r7 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("defaults")
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("defaults") >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : if $z1 == 0
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $r8 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.PropertiesConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>(r1, r2)
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : r10 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("name")
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : r10 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("name") >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : r6 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("value")
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : r6 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("value") >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r10, r6)
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r10, r6) >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()]
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()] >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $r8 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.PropertiesConverter: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : r5 = (java.util.Properties) $r8
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : r5 = (java.util.Properties) $r8 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $r9 = <com.thoughtworks.xstream.converters.collections.PropertiesConverter: java.lang.reflect.Field defaultsField>
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : $r9 = <com.thoughtworks.xstream.converters.collections.PropertiesConverter: java.lang.reflect.Field defaultsField> >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : staticinvoke <com.thoughtworks.xstream.core.util.Fields: void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>($r9, r4, r5)
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : staticinvoke <com.thoughtworks.xstream.core.util.Fields: void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>($r9, r4, r5) >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()]
com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()] >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
