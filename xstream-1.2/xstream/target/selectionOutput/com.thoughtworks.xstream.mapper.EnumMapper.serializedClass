com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $z0 = <com.thoughtworks.xstream.mapper.EnumMapper: boolean active> >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $z0 != 0
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r2 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r3 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumClass>
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r3 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumClass> >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $z1 == 0
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r4 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>()
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r8 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumSetClass>
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r8 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumSetClass> >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $z2 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $z2 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $z2 == 0
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r9 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumSetClass>
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r11 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r11 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : return $r11
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r9 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumSetClass> >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r10 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>($r9)
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r10 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>($r9) >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : return $r10
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r4 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>() >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r5 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumClass>
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r5 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumClass> >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $r4 == $r5
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $r4 == $r5 >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r6 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>()
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : if $r4 == $r5 >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r8 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumSetClass>
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r6 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>() >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r7 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>($r6)
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r7 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>($r6) >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : return $r7
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r2 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : return $r2
