com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r1 = new java.util.HashMap >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r1.<java.util.HashMap: void <init>()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r2 = $r1
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r2 = $r1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r8 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r8 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r8.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r8.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r9 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r9 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r10 = interfaceinvoke $r9.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r10 = interfaceinvoke $r9.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("fields")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("fields") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z0 == 0
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r25 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r25 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r26 = interfaceinvoke $r25.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r26 = interfaceinvoke $r25.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("default")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("default") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z3 == 0
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r27 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Class[] val$currentType>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r53 = new com.thoughtworks.xstream.converters.ConversionException
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r53 = new com.thoughtworks.xstream.converters.ConversionException >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r53.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("Expected <fields/> or <default/> element when calling ObjectInputStream.readFields()")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r53.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("Expected <fields/> or <default/> element when calling ObjectInputStream.readFields()") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : throw $r53
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r27 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Class[] val$currentType> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r28 = $r27[0]
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r28 = $r27[0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r29 = staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class)>($r28)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r29 = staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class)>($r28) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r30 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r30 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z4 = interfaceinvoke $r30.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z4 = interfaceinvoke $r30.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z4 == 0
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z4 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r31 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z4 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : goto [?= $r54 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>]
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : goto [?= $r54 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>] >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r54 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r54 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r54.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r54.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : return r2
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r31 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r31.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r31.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r32 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r32 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r33 = interfaceinvoke $r32.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r33 = interfaceinvoke $r32.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r35 = interfaceinvoke $r34.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("class")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r35 = interfaceinvoke $r34.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("class") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if r35 == null
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if r35 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r36 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if r35 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r7 = virtualinvoke r29.<java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String)>(r33)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r7 = virtualinvoke r29.<java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String)>(r33) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if r7 != null
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if r7 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r38 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if r7 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r6 = virtualinvoke r7.<java.io.ObjectStreamField: java.lang.Class getType()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r6 = virtualinvoke r7.<java.io.ObjectStreamField: java.lang.Class getType()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r48 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r48 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r49 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Object val$result>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r49 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Object val$result> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r50 = interfaceinvoke $r48.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>($r49, r6)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r50 = interfaceinvoke $r48.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>($r49, r6) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r33, r50)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r33, r50) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r52 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r52 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r52.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r52.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : goto [?= $r30 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>]
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : goto [?= $r30 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>] >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r30 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r38 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r39 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r39 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r41 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Class[] val$currentType>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r41 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Class[] val$currentType> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r42 = $r41[0]
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r42 = $r41[0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not contain a field named \'")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not contain a field named \'") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r38.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String)>($r47)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r38.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String)>($r47) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : throw $r38
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r36 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r37 = $r36.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r37 = $r36.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r6 = interfaceinvoke $r37.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r35)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r6 = interfaceinvoke $r37.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r35) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : goto [?= $r48 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context>]
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : goto [?= $r48 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context>] >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r48 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z1 = interfaceinvoke $r11.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z1 = interfaceinvoke $r11.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z1 == 0
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r12 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r54 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r12 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r12.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r12.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r13 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r13 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r14 = interfaceinvoke $r13.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r14 = interfaceinvoke $r13.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("field")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("field") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z2 != 0
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z2 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r15 = new com.thoughtworks.xstream.converters.ConversionException
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : if $z2 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r16 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r16 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r3 = interfaceinvoke $r16.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("name")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r3 = interfaceinvoke $r16.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("name") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r18 = $r17.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r18 = $r17.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r19 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r19 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r20 = interfaceinvoke $r19.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("class")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r20 = interfaceinvoke $r19.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("class") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r4 = interfaceinvoke $r18.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r20)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r4 = interfaceinvoke $r18.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r20) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r21 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r21 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r22 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Object val$result>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r22 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Object val$result> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r5 = interfaceinvoke $r21.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>($r22, r4)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : r5 = interfaceinvoke $r21.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>($r22, r4) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r24 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r24 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r24.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : interfaceinvoke $r24.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : goto [?= $r11 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>]
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : goto [?= $r11 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>] >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : $r15 = new com.thoughtworks.xstream.converters.ConversionException >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r15.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("Expected <field/> element inside <field/>")
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : specialinvoke $r15.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("Expected <field/> element inside <field/>") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFieldsFromStream : throw $r15
