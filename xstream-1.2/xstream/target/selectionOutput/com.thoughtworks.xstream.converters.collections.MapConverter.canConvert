com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/HashMap") >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z0 != 0
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/Hashtable")
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z4 = 1
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z4 = 1 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : goto [?= return $z4]
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : goto [?= return $z4] >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : return $z4
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/Hashtable") >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z1 != 0
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z2 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is14()>()
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z4 = 1
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z2 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is14()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z2 == 0
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z4 = 0
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z4 = 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : return $z4
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("java.util.LinkedHashMap")
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("java.util.LinkedHashMap") >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z3 == 0
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z4 = 1
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z4 = 0
