com.thoughtworks.xstream.XStream.aliasField : $r5 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper> >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : if $r5 != null
com.thoughtworks.xstream.XStream.aliasField : if $r5 != null >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : $r6 = new com.thoughtworks.xstream.XStream$InitializationException
com.thoughtworks.xstream.XStream.aliasField : if $r5 != null >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : $r13 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper>
com.thoughtworks.xstream.XStream.aliasField : $r13 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper> >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : virtualinvoke $r13.<com.thoughtworks.xstream.mapper.FieldAliasingMapper: void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String)>(r1, r2, r3)
com.thoughtworks.xstream.XStream.aliasField : virtualinvoke $r13.<com.thoughtworks.xstream.mapper.FieldAliasingMapper: void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String)>(r1, r2, r3) >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : return
com.thoughtworks.xstream.XStream.aliasField : $r6 = new com.thoughtworks.xstream.XStream$InitializationException >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : $r4 = new java.lang.StringBuilder
com.thoughtworks.xstream.XStream.aliasField : $r4 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.XStream.aliasField : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No ")
com.thoughtworks.xstream.XStream.aliasField : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No ") >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : $r8 = class "com/thoughtworks/xstream/mapper/FieldAliasingMapper"
com.thoughtworks.xstream.XStream.aliasField : $r8 = class "com/thoughtworks/xstream/mapper/FieldAliasingMapper" >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.XStream.aliasField : $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
com.thoughtworks.xstream.XStream.aliasField : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available")
com.thoughtworks.xstream.XStream.aliasField : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available") >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.XStream.aliasField : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : specialinvoke $r6.<com.thoughtworks.xstream.XStream$InitializationException: void <init>(java.lang.String)>($r12)
com.thoughtworks.xstream.XStream.aliasField : specialinvoke $r6.<com.thoughtworks.xstream.XStream$InitializationException: void <init>(java.lang.String)>($r12) >>>>>>>> com.thoughtworks.xstream.XStream.aliasField : throw $r6
