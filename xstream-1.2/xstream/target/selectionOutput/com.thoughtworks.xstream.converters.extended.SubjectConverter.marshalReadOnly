com.thoughtworks.xstream.converters.extended.SubjectConverter.marshalReadOnly : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("readOnly") >>>>>>>> com.thoughtworks.xstream.converters.extended.SubjectConverter.marshalReadOnly : $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0)
com.thoughtworks.xstream.converters.extended.SubjectConverter.marshalReadOnly : $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0) >>>>>>>> com.thoughtworks.xstream.converters.extended.SubjectConverter.marshalReadOnly : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void setValue(java.lang.String)>($r2)
com.thoughtworks.xstream.converters.extended.SubjectConverter.marshalReadOnly : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void setValue(java.lang.String)>($r2) >>>>>>>> com.thoughtworks.xstream.converters.extended.SubjectConverter.marshalReadOnly : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.extended.SubjectConverter.marshalReadOnly : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.SubjectConverter.marshalReadOnly : return
