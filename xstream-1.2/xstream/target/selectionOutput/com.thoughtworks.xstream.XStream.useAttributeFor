com.thoughtworks.xstream.XStream.useAttributeFor : $r3 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper> >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : if $r3 != null
com.thoughtworks.xstream.XStream.useAttributeFor : if $r3 != null >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : $r4 = new com.thoughtworks.xstream.XStream$InitializationException
com.thoughtworks.xstream.XStream.useAttributeFor : if $r3 != null >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : $r11 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper>
com.thoughtworks.xstream.XStream.useAttributeFor : $r11 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper> >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : virtualinvoke $r11.<com.thoughtworks.xstream.mapper.AttributeMapper: void addAttributeFor(java.lang.Class)>(r1)
com.thoughtworks.xstream.XStream.useAttributeFor : virtualinvoke $r11.<com.thoughtworks.xstream.mapper.AttributeMapper: void addAttributeFor(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : return
com.thoughtworks.xstream.XStream.useAttributeFor : $r4 = new com.thoughtworks.xstream.XStream$InitializationException >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : $r2 = new java.lang.StringBuilder
com.thoughtworks.xstream.XStream.useAttributeFor : $r2 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.XStream.useAttributeFor : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No ")
com.thoughtworks.xstream.XStream.useAttributeFor : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No ") >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : $r6 = class "com/thoughtworks/xstream/mapper/AttributeMapper"
com.thoughtworks.xstream.XStream.useAttributeFor : $r6 = class "com/thoughtworks/xstream/mapper/AttributeMapper" >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.XStream.useAttributeFor : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
com.thoughtworks.xstream.XStream.useAttributeFor : $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available")
com.thoughtworks.xstream.XStream.useAttributeFor : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available") >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.XStream.useAttributeFor : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : specialinvoke $r4.<com.thoughtworks.xstream.XStream$InitializationException: void <init>(java.lang.String)>($r10)
com.thoughtworks.xstream.XStream.useAttributeFor : specialinvoke $r4.<com.thoughtworks.xstream.XStream$InitializationException: void <init>(java.lang.String)>($r10) >>>>>>>> com.thoughtworks.xstream.XStream.useAttributeFor : throw $r4
