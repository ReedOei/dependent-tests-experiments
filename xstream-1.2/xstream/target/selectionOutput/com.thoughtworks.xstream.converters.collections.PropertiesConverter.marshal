com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : r4 = (java.util.Properties) r1 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r7 = virtualinvoke r4.<java.util.Properties: java.util.Set entrySet()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r7 = virtualinvoke r4.<java.util.Properties: java.util.Set entrySet()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : r5 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : r5 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : if $z0 == 0
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r13 = <com.thoughtworks.xstream.converters.collections.PropertiesConverter: java.lang.reflect.Field defaultsField>
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r13 = <com.thoughtworks.xstream.converters.collections.PropertiesConverter: java.lang.reflect.Field defaultsField> >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r14 = staticinvoke <com.thoughtworks.xstream.core.util.Fields: java.lang.Object read(java.lang.reflect.Field,java.lang.Object)>($r13, r4)
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r14 = staticinvoke <com.thoughtworks.xstream.core.util.Fields: java.lang.Object read(java.lang.reflect.Field,java.lang.Object)>($r13, r4) >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : r15 = (java.util.Properties) $r14
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : r15 = (java.util.Properties) $r14 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : if r15 == null
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : if r15 == null >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("defaults")
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : if r15 == null >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : return
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("defaults") >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r15, r2, r3)
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.PropertiesConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r15, r2, r3) >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : return
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : r6 = (java.util.Map$Entry) $r8
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : r6 = (java.util.Map$Entry) $r8 >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("property")
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("property") >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>("name", $r10)
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>("name", $r10) >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>("value", $r12)
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>("value", $r12) >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.thoughtworks.xstream.converters.collections.PropertiesConverter.marshal : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
