com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback peekCallback()>() >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : $r1 = new java.lang.Character
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : $r1 = new java.lang.Character >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : $c1 = (char) i0
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : $c1 = (char) i0 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : interfaceinvoke $r2.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback: void writeToStream(java.lang.Object)>($r1)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : interfaceinvoke $r2.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback: void writeToStream(java.lang.Object)>($r1) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeChar : return
