com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r3 = new java.util.ArrayList >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r4 = $r3
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r4 = $r3 >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r5 = null
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r5 = null >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if $z0 == 0
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if r5 != null
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if r5 != null >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r14 = new com.thoughtworks.xstream.converters.ConversionException
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if r5 != null >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $i0 = interfaceinvoke r4.<java.util.List: int size()>()
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $i0 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r15 = newarray (java.lang.Class)[$i0]
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r15 = newarray (java.lang.Class)[$i0] >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r15)
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r15) >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r17 = r0.<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: java.lang.ClassLoader classLoader>
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r17 = r0.<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: java.lang.ClassLoader classLoader> >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r18 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r17, r15, r5)
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r18 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r17, r15, r5) >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : return $r18
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r14 = new com.thoughtworks.xstream.converters.ConversionException >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : specialinvoke $r14.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("No InvocationHandler specified for dynamic proxy")
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : specialinvoke $r14.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("No InvocationHandler specified for dynamic proxy") >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : throw $r14
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r6 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r6 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("interface")
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("interface") >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if $z1 == 0
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r8 = r0.<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("handler")
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("handler") >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if $z3 == 0
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r11 = r0.<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()]
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()] >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r11 = r0.<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r12 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("class")
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r12 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("class") >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r7 = interfaceinvoke $r11.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r12)
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r7 = interfaceinvoke $r11.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r12) >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r13 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, r7)
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r13 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, r7) >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r5 = (java.lang.reflect.InvocationHandler) $r13
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : r5 = (java.lang.reflect.InvocationHandler) $r13 >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r8 = r0.<com.thoughtworks.xstream.converters.extended.DynamicProxyConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r9 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>()
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r9 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r10 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r9)
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : $r10 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r9) >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r10)
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()]
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()] >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
