com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r9 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: java.util.Set val$seenAsAttributes> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $z0 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r1)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $z0 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if $z0 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if r4 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : return
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if r4 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if r4 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : return
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r11 = $r10.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r11 = $r10.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r12 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: java.lang.Object val$source>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r12 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: java.lang.Object val$source> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : r5 = interfaceinvoke $r11.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>($r13, r1)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : r5 = interfaceinvoke $r11.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>($r13, r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if r5 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if r5 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r14 = interfaceinvoke r5.<com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping: java.lang.String getItemFieldName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if r5 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>(r1, r1, r2, r3, r4)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>(r1, r1, r2, r3, r4) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r18 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: java.util.Set val$seenFields>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r18 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: java.util.Set val$seenFields> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>(r1)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : return
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r14 = interfaceinvoke r5.<com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping: java.lang.String getItemFieldName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if $r14 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if $r14 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : r6 = (java.util.Collection) r4
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if $r14 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.MarshallingContext val$context>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: com.thoughtworks.xstream.converters.MarshallingContext val$context> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : interfaceinvoke $r17.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>(r4)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : interfaceinvoke $r17.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>(r4) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : goto [?= return]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : goto [?= return] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : return
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : r6 = (java.util.Collection) r4 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : r7 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : r7 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if $z1 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : goto [?= return]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : goto [?= return] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : return
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r15 = interfaceinvoke r5.<com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping: java.lang.String getItemFieldName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r15 = interfaceinvoke r5.<com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping: java.lang.String getItemFieldName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r16 = interfaceinvoke r5.<com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping: java.lang.Class getItemType()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $r16 = interfaceinvoke r5.<com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping: java.lang.Class getItemType()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r15, $r16, r3, r8)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2: void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r15, $r16, r3, r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.visit : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
