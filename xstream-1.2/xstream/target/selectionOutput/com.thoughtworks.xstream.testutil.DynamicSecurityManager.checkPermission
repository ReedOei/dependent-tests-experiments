com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r3 = r0.<com.thoughtworks.xstream.testutil.DynamicSecurityManager: java.security.AccessControlContext acc> >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : if $r3 == null
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : if $r3 == null >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r4 = r0.<com.thoughtworks.xstream.testutil.DynamicSecurityManager: java.security.AccessControlContext acc>
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : if $r3 == null >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : return
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : if $r3 == null >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r5 := @caughtexception
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : r2 = $r5 >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $z0 = r0.<com.thoughtworks.xstream.testutil.DynamicSecurityManager: boolean printFailingPermissions>
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $z0 = r0.<com.thoughtworks.xstream.testutil.DynamicSecurityManager: boolean printFailingPermissions> >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : if $z0 == 0
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r6 = <java.lang.System: java.io.PrintStream out>
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : throw r2
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r6 = <java.lang.System: java.io.PrintStream out> >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r7 = new java.lang.StringBuilder
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r7 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SecurityException: Permission ")
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SecurityException: Permission ") >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r9 = virtualinvoke r1.<java.security.Permission: java.lang.String toString()>()
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r9 = virtualinvoke r1.<java.security.Permission: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11)
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11) >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : throw r2
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r4 = r0.<com.thoughtworks.xstream.testutil.DynamicSecurityManager: java.security.AccessControlContext acc> >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : virtualinvoke r0.<com.thoughtworks.xstream.testutil.DynamicSecurityManager: void checkPermission(java.security.Permission,java.lang.Object)>(r1, $r4)
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r4 = r0.<com.thoughtworks.xstream.testutil.DynamicSecurityManager: java.security.AccessControlContext acc> >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r5 := @caughtexception
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : virtualinvoke r0.<com.thoughtworks.xstream.testutil.DynamicSecurityManager: void checkPermission(java.security.Permission,java.lang.Object)>(r1, $r4) >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : goto [?= return]
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : virtualinvoke r0.<com.thoughtworks.xstream.testutil.DynamicSecurityManager: void checkPermission(java.security.Permission,java.lang.Object)>(r1, $r4) >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : $r5 := @caughtexception
com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : goto [?= return] >>>>>>>> com.thoughtworks.xstream.testutil.DynamicSecurityManager.checkPermission : return
