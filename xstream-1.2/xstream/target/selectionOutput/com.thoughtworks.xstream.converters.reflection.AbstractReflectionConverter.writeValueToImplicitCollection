com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r9 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r10 = interfaceinvoke r1.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Class getRequiredType()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r10 = interfaceinvoke r1.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Class getRequiredType()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r11 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r11 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r6 = interfaceinvoke $r9.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>($r10, $r11, r5)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r6 = interfaceinvoke $r9.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)>($r10, $r11, r5) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if r6 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if r6 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if r3 != null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if r6 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : return r3
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if r3 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r12 = new java.util.HashMap
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if r3 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r7 = (java.util.Collection) $r13
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r7 = (java.util.Collection) $r13 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if r7 != null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if r7 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r14 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if r7 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>(r2)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>(r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : return r3
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r14 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r15 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r15 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r16 = interfaceinvoke $r15.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r4, r6, null)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r16 = interfaceinvoke $r15.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r4, r6, null) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r8 = interfaceinvoke $r14.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class defaultImplementationOf(java.lang.Class)>($r16)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r8 = interfaceinvoke $r14.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class defaultImplementationOf(java.lang.Class)>($r16) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r17 = class "java/util/Collection"
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r17 = class "java/util/Collection" >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $z0 = virtualinvoke $r17.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r8)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $z0 = virtualinvoke $r17.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if $z0 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r18 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r30 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r30 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if $r30 != null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if $r30 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r31 = new com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : if $r30 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r32 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r32 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r33 = interfaceinvoke $r32.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Object newInstance(java.lang.Class)>(r8)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r33 = interfaceinvoke $r32.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Object newInstance(java.lang.Class)>(r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r7 = (java.util.Collection) $r33
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r7 = (java.util.Collection) $r33 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : interfaceinvoke $r34.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r4, r6, r7, null)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : interfaceinvoke $r34.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r4, r6, r7, null) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>(r2)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r31 = new com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : specialinvoke $r31.<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void <init>()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : specialinvoke $r31.<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider> = $r31
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider> = $r31 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r32 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r18 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r19 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r19 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r23 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r23 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is configured for an implicit Collection, but field is of type ")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is configured for an implicit Collection, but field is of type ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r27 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r27 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : specialinvoke $r18.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String)>($r29)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : specialinvoke $r18.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String)>($r29) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : throw $r18
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r12 = new java.util.HashMap >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : specialinvoke $r12.<java.util.HashMap: void <init>()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : specialinvoke $r12.<java.util.HashMap: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r3 = $r12
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : r3 = $r12 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.writeValueToImplicitCollection : $r13 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
