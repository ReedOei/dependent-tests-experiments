com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : $r1 = new com.thoughtworks.acceptance.WriteReplaceTest$Thing >>>>>>>> com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : $i0 = r0.<com.thoughtworks.acceptance.WriteReplaceTest$Thing: int a>
com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : $i0 = r0.<com.thoughtworks.acceptance.WriteReplaceTest$Thing: int a> >>>>>>>> com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : $i1 = $i0 * 1000
com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : $i1 = $i0 * 1000 >>>>>>>> com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : $i2 = r0.<com.thoughtworks.acceptance.WriteReplaceTest$Thing: int b>
com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : $i2 = r0.<com.thoughtworks.acceptance.WriteReplaceTest$Thing: int b> >>>>>>>> com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : $i3 = $i2 * 1000
com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : $i3 = $i2 * 1000 >>>>>>>> com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : specialinvoke $r1.<com.thoughtworks.acceptance.WriteReplaceTest$Thing: void <init>(int,int)>($i1, $i3)
com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : specialinvoke $r1.<com.thoughtworks.acceptance.WriteReplaceTest$Thing: void <init>(int,int)>($i1, $i3) >>>>>>>> com.thoughtworks.acceptance.WriteReplaceTest$Thing.writeReplace : return $r1
