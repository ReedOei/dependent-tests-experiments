com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $c0 = r0.<com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer: char dollarReplacementInClass> >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(36, $c0)
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(36, $c0) >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0)
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0) >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $c2 = r0.<com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer: char dollarReplacementInClass>
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $c2 = r0.<com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer: char dollarReplacementInClass> >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : if $c1 != $c2
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : if $c1 != $c2 >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $r3 = new java.lang.StringBuilder
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : if $c1 != $c2 >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : return r2
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $r3 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $r4 = r0.<com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer: java.lang.String noPackagePrefix>
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $r4 = r0.<com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer: java.lang.String noPackagePrefix> >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer.escapeClassName : return r2
