com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : if r1 != null >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : if r1 != null >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r6 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r6 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : r8 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r7)
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : r8 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r7) >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r3, r8, $r9)
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>(r3, r8, $r9) >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r2.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>(r1)
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r2.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : return
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : r4 = interfaceinvoke $r5.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(null)
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : r4 = interfaceinvoke $r5.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(null) >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>(r4)
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>(r4) >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : goto [?= return]
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : goto [?= return] >>>>>>>> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : return
