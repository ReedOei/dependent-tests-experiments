com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r3 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : virtualinvoke $r3.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void pop()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : virtualinvoke $r3.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void pop()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : i0 = 0
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : r1 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : r1 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $b1 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: byte getType()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $b1 = virtualinvoke r1.<com.thoughtworks.xstream.io.binary.Token: byte getType()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : lookupswitch($b1) {     case 3:
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : lookupswitch($b1) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : i0 = i0 + 1
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : lookupswitch($b1) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : if i0 != 0
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : lookupswitch($b1) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= r1 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= r1 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : r1 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : if i0 != 0 >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= r4 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : if i0 != 0 >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : i0 = i0 + -1
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : i0 = i0 + -1 >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= (branch)]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= r1 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= r4 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : r4 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : r4 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $b2 = virtualinvoke r4.<com.thoughtworks.xstream.io.binary.Token: byte getType()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $b2 = virtualinvoke r4.<com.thoughtworks.xstream.io.binary.Token: byte getType()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : lookupswitch($b2) {     case 3:
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : lookupswitch($b2) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r6 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : lookupswitch($b2) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r5 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState>
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : lookupswitch($b2) {     case 3: >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r7 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r7 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r2 = new java.lang.StringBuilder
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r2 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected token ")
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected token ") >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : specialinvoke $r7.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.String)>($r10)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : specialinvoke $r7.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.String)>($r10) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : throw $r7
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r5 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : virtualinvoke $r5.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setHasMoreChildren(boolean)>(0)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : virtualinvoke $r5.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setHasMoreChildren(boolean)>(0) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r4)]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r4)] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r4)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r4) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : return
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : $r6 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.ReaderDepthState depthState> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : virtualinvoke $r6.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setHasMoreChildren(boolean)>(1)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : virtualinvoke $r6.<com.thoughtworks.xstream.io.binary.ReaderDepthState: void setHasMoreChildren(boolean)>(1) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r4)]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r4)] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: void pushBack(com.thoughtworks.xstream.io.binary.Token)>(r4)
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : i0 = i0 + 1 >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= (branch)]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.moveUp : goto [?= r1 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token readToken()>()]
