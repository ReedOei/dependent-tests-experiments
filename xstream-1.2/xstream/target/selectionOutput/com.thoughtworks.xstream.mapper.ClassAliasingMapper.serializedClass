com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r5 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map classToName> >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : r2 = (java.lang.String) $r7
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : r2 = (java.lang.String) $r7 >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if r2 == null
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if r2 == null >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : return r2
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if r2 == null >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r8 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map typeToName>
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r8 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map typeToName> >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>()
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if $z0 == 0
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r14 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r14 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : return $r14
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : r4 = (java.lang.Class) $r10
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : r4 = (java.lang.Class) $r10 >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $z1 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $z1 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if $z1 == 0
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r11 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map typeToName>
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r11 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map typeToName> >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r13 = (java.lang.String) $r12
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r13 = (java.lang.String) $r12 >>>>>>>> com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : return $r13
