com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke r0.<com.thoughtworks.xstream.io.StatefulWriter: void checkClosed()>() >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_VALUE>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_VALUE> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : if $i1 != $i0
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : if $i1 != $i0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r2 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : if $i1 != $i0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i2 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_NODE_START>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i2 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_NODE_START> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> = $i2
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> = $i2 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i3 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i3 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i4 = $i3 + 1
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i4 = $i3 + 1 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance> = $i4
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance> = $i4 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r4 = r0.<com.thoughtworks.xstream.io.StatefulWriter: com.thoughtworks.xstream.core.util.FastStack attributes>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r4 = r0.<com.thoughtworks.xstream.io.StatefulWriter: com.thoughtworks.xstream.core.util.FastStack attributes> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r5 = new java.util.HashSet
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r5 = new java.util.HashSet >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke $r5.<java.util.HashSet: void <init>()>()
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r5)
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r5) >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : return
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r2 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r1 = new java.lang.IllegalStateException
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r1 = new java.lang.IllegalStateException >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Opening node after writing text")
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Opening node after writing text") >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke $r2.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>($r1)
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke $r2.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>($r1) >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : throw $r2
