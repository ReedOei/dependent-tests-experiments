com.thoughtworks.xstream.io.binary.Token$MapIdToValue.writeTo : $l1 = r0.<com.thoughtworks.xstream.io.binary.Token$MapIdToValue: long id> >>>>>>>> com.thoughtworks.xstream.io.binary.Token$MapIdToValue.writeTo : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.Token$MapIdToValue: void writeId(java.io.DataOutput,long,byte)>(r1, $l1, b0)
com.thoughtworks.xstream.io.binary.Token$MapIdToValue.writeTo : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.Token$MapIdToValue: void writeId(java.io.DataOutput,long,byte)>(r1, $l1, b0) >>>>>>>> com.thoughtworks.xstream.io.binary.Token$MapIdToValue.writeTo : $r2 = r0.<com.thoughtworks.xstream.io.binary.Token$MapIdToValue: java.lang.String value>
com.thoughtworks.xstream.io.binary.Token$MapIdToValue.writeTo : $r2 = r0.<com.thoughtworks.xstream.io.binary.Token$MapIdToValue: java.lang.String value> >>>>>>>> com.thoughtworks.xstream.io.binary.Token$MapIdToValue.writeTo : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.Token$MapIdToValue: void writeString(java.io.DataOutput,java.lang.String)>(r1, $r2)
com.thoughtworks.xstream.io.binary.Token$MapIdToValue.writeTo : virtualinvoke r0.<com.thoughtworks.xstream.io.binary.Token$MapIdToValue: void writeString(java.io.DataOutput,java.lang.String)>(r1, $r2) >>>>>>>> com.thoughtworks.xstream.io.binary.Token$MapIdToValue.writeTo : return
