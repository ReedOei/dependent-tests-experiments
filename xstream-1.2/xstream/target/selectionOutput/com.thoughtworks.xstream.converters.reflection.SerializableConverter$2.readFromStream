com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r3 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : interfaceinvoke $r3.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : interfaceinvoke $r3.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r4 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r4 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r5 = $r4.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r5 = $r4.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r6 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r6 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r7 = interfaceinvoke $r6.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r7 = interfaceinvoke $r6.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : r1 = interfaceinvoke $r5.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r7)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : r1 = interfaceinvoke $r5.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r8 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r8 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.converters.UnmarshallingContext val$context> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r9 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Object val$result>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r9 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: java.lang.Object val$result> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : r2 = interfaceinvoke $r8.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>($r9, r1)
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : r2 = interfaceinvoke $r8.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>($r9, r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader>
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter$2: com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : interfaceinvoke $r10.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : interfaceinvoke $r10.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2.readFromStream : return r2
