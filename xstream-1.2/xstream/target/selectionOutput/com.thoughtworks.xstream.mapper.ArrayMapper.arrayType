com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r2 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : r3 = $r2
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : i1 = 0
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : i1 = 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : if i1 >= i0
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91)
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $z0 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>()
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $z0 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : if $z0 == 0
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $c2 = specialinvoke r0.<com.thoughtworks.xstream.mapper.ArrayMapper: char charThatJavaUsesToRepresentPrimitiveArrayType(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r8 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76)
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r8 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9)
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59)
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r12 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r12 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r13 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r13 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r12, 0, $r13)
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r12, 0, $r13) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : return $r14
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $c2 = specialinvoke r0.<com.thoughtworks.xstream.mapper.ArrayMapper: char charThatJavaUsesToRepresentPrimitiveArrayType(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2)
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r6 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r6 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r6)
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r6) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : return $r7
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : i1 = i1 + 1
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : i1 = i1 + 1 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : goto [?= (branch)]
com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.arrayType : if i1 >= i0
