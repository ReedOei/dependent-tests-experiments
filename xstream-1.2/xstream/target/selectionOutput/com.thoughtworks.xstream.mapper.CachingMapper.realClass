com.thoughtworks.xstream.mapper.CachingMapper.realClass : $r4 = r0.<com.thoughtworks.xstream.mapper.CachingMapper: java.util.Map cache> >>>>>>>> com.thoughtworks.xstream.mapper.CachingMapper.realClass : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.mapper.CachingMapper.realClass : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.CachingMapper.realClass : r2 = (java.lang.Class) $r5
com.thoughtworks.xstream.mapper.CachingMapper.realClass : r2 = (java.lang.Class) $r5 >>>>>>>> com.thoughtworks.xstream.mapper.CachingMapper.realClass : if r2 == null
com.thoughtworks.xstream.mapper.CachingMapper.realClass : if r2 == null >>>>>>>> com.thoughtworks.xstream.mapper.CachingMapper.realClass : return r2
com.thoughtworks.xstream.mapper.CachingMapper.realClass : if r2 == null >>>>>>>> com.thoughtworks.xstream.mapper.CachingMapper.realClass : r3 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.CachingMapper.realClass : r3 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.CachingMapper.realClass : $r6 = r0.<com.thoughtworks.xstream.mapper.CachingMapper: java.util.Map cache>
com.thoughtworks.xstream.mapper.CachingMapper.realClass : $r6 = r0.<com.thoughtworks.xstream.mapper.CachingMapper: java.util.Map cache> >>>>>>>> com.thoughtworks.xstream.mapper.CachingMapper.realClass : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3)
com.thoughtworks.xstream.mapper.CachingMapper.realClass : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> com.thoughtworks.xstream.mapper.CachingMapper.realClass : return r3
