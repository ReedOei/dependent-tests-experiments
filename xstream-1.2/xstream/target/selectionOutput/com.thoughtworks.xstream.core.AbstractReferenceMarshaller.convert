com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r6 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.mapper.Mapper getMapper()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z0 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: boolean isImmutableValueType(java.lang.Class)>($r7)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z0 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: boolean isImmutableValueType(java.lang.Class)>($r7) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z0 == 0
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r8 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r9 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.PathTracker pathTracker>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r9 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.PathTracker pathTracker> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r3 = virtualinvoke $r9.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path getPath()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r3 = virtualinvoke $r9.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path getPath()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r10 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r10 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r4 = virtualinvoke $r10.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.lang.Object lookupId(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r4 = virtualinvoke $r10.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.lang.Object lookupId(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if r4 == null
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if r4 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r11 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.util.Set implicitElements>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if r4 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r5 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path)>(r3)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r5 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path)>(r3) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r22 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r22 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $r22 == null
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $r22 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r23 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $r22 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void fireValidReference(java.lang.Object)>(r5)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void fireValidReference(java.lang.Object)>(r5) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath> = r3
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath> = r3 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= $r25 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references>]
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= $r25 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references>] >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r25 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r25 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke $r25.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>(r1, r5)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke $r25.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>(r1, r5) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r26 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r26 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r26, r0)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r26, r0) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : return
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r23 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z2 = virtualinvoke r3.<com.thoughtworks.xstream.io.path.Path: boolean isAncestor(com.thoughtworks.xstream.io.path.Path)>($r23)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z2 = virtualinvoke r3.<com.thoughtworks.xstream.io.path.Path: boolean isAncestor(com.thoughtworks.xstream.io.path.Path)>($r23) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z2 != 0
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z2 != 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void fireValidReference(java.lang.Object)>(r5)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z2 != 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r24 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.util.Set implicitElements>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r24 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.util.Set implicitElements> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke $r24.<java.util.Set: boolean add(java.lang.Object)>(r5)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke $r24.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r25 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r11 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.util.Set implicitElements> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z1 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r4)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z1 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r4) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z1 == 0
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r12 = new com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r18 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r18 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r19 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.mapper.Mapper getMapper()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r19 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.mapper.Mapper getMapper()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r20 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("reference")
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r20 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("reference") >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r21 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>(r3, r4)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r21 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>(r3, r4) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke $r18.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r20, $r21)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke $r18.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r20, $r21) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= return]
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= return] >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : return
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r12 = new com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r13 = new java.lang.StringBuilder
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r13 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot reference implicit element: ")
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot reference implicit element: ") >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r15 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r15 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : specialinvoke $r12.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException: void <init>(java.lang.String)>($r17)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : specialinvoke $r12.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException: void <init>(java.lang.String)>($r17) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : throw $r12
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r8 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r8, r0)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r8, r0) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= return]
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= return] >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : return
