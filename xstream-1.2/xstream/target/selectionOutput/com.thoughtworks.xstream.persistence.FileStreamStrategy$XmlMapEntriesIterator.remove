com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : $r1 = r0.<com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator: java.io.File current> >>>>>>>> com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : if $r1 != null
com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : if $r1 != null >>>>>>>> com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : $r2 = new java.lang.IllegalStateException
com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : if $r1 != null >>>>>>>> com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : $r3 = r0.<com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator: java.io.File current>
com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : $r3 = r0.<com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator: java.io.File current> >>>>>>>> com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : virtualinvoke $r3.<java.io.File: boolean delete()>()
com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : virtualinvoke $r3.<java.io.File: boolean delete()>() >>>>>>>> com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : return
com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : $r2 = new java.lang.IllegalStateException >>>>>>>> com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>()
com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>() >>>>>>>> com.thoughtworks.xstream.persistence.FileStreamStrategy$XmlMapEntriesIterator.remove : throw $r2
