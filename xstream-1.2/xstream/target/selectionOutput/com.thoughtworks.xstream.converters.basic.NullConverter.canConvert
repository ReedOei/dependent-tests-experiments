com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : if r1 == null >>>>>>>> com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : $r2 = class "com/thoughtworks/xstream/mapper/Mapper$Null"
com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : if r1 == null >>>>>>>> com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : $z1 = 1
com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : $z1 = 1 >>>>>>>> com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : goto [?= return $z1]
com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : goto [?= return $z1] >>>>>>>> com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : return $z1
com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : $r2 = class "com/thoughtworks/xstream/mapper/Mapper$Null" >>>>>>>> com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1)
com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : if $z0 == 0
com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : $z1 = 1
com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : $z1 = 0
com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : $z1 = 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : return $z1
