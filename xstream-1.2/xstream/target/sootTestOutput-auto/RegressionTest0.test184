com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.MapBackedDataHolder.get : $r2 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map>
com.thoughtworks.xstream.core.util.CustomObjectInputStream.getInstance : $r5 = new com.thoughtworks.xstream.core.util.CustomObjectInputStream
com.thoughtworks.xstream.core.util.CustomObjectInputStream.getInstance : if r3 != null goto virtualinvoke r3.<com.thoughtworks.xstream.core.util.CustomObjectInputStream: void pushCallback(com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback)>(r1)
com.thoughtworks.xstream.core.util.CustomObjectInputStream.getInstance : $r2 = <com.thoughtworks.xstream.core.util.CustomObjectInputStream: java.lang.String DATA_HOLDER_KEY>
com.thoughtworks.xstream.core.util.CustomObjectInputStream.getInstance : return r3
com.thoughtworks.xstream.core.util.CustomObjectInputStream.getInstance : $r6 = <com.thoughtworks.xstream.core.util.CustomObjectInputStream: java.lang.String DATA_HOLDER_KEY>
com.thoughtworks.xstream.core.TreeMarshaller.put : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>()
com.thoughtworks.xstream.core.TreeMarshaller.put : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.util.CustomObjectInputStream.peekCallback : $r1 = r0.<com.thoughtworks.xstream.core.util.CustomObjectInputStream: com.thoughtworks.xstream.core.util.FastStack callbacks>
com.thoughtworks.xstream.core.TreeMarshaller.get : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>()
com.thoughtworks.xstream.core.TreeMarshaller.get : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.MapBackedDataHolder.put : $r3 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map>
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r1 = newarray (java.lang.Object)[i0]
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> = r1
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r1 = new com.thoughtworks.xstream.core.MapBackedDataHolder
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.util.CustomObjectInputStream.readBoolean : $r1 = virtualinvoke r0.<com.thoughtworks.xstream.core.util.CustomObjectInputStream: com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback peekCallback()>()
