com.thoughtworks.xstream.converters.javabean.BeanProperty.getType : $r1 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.Class type> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.getType : return $r1
com.thoughtworks.xstream.converters.javabean.BeanProperty.getType : return $r1 >>>>>>>> com.thoughtworks.xstream.mapper.XmlFriendlyMapper.mapNameToXML : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.mapper.XmlFriendlyMapper: java.lang.String escapeFieldName(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.XmlFriendlyMapper.mapNameToXML : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.mapper.XmlFriendlyMapper: java.lang.String escapeFieldName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : $r2 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : r3 = $r2
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : i1 = 0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : i1 = 0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : if i1 >= i0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : return $r9
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : return $r9 >>>>>>>> com.thoughtworks.xstream.mapper.XmlFriendlyMapper.mapNameToXML : return $r2
com.thoughtworks.xstream.mapper.XmlFriendlyMapper.mapNameToXML : return $r2 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $r4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : if $r4 != null
com.thoughtworks.xstream.io.path.PathTracker.getPath : if $r4 != null >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $i2 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i2 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $i3 = $i2 + 1
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i3 = $i2 + 1 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : r1 = newarray (java.lang.String)[$i3]
com.thoughtworks.xstream.io.path.PathTracker.getPath : r1 = newarray (java.lang.String)[$i3] >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : r1[0] = ""
com.thoughtworks.xstream.io.path.PathTracker.getPath : r1[0] = "" >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : i0 = 0
com.thoughtworks.xstream.io.path.PathTracker.getPath : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $i4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : if i0 >= $i4
com.thoughtworks.xstream.io.path.PathTracker.getPath : if i0 >= $i4 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $r22 = new com.thoughtworks.xstream.io.path.Path
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r22 = new com.thoughtworks.xstream.io.path.Path >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : specialinvoke $r22.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r1)
com.thoughtworks.xstream.io.path.PathTracker.getPath : specialinvoke $r22.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r1) >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> = $r22
com.thoughtworks.xstream.io.path.PathTracker.getPath : r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> = $r22 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $r23 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r23 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : return $r23
com.thoughtworks.xstream.io.path.PathTracker.getPath : return $r23 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $z0 = virtualinvoke r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: boolean isWritable()>()
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $z0 = virtualinvoke r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: boolean isWritable()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $r1 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.reflect.Method setter>
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $r1 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.reflect.Method setter> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : if $r1 == null
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : if $r1 == null >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $z0 = 0
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $z0 = 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : return $z0
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : return $z0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : if $z0 != 0
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r5 = new java.lang.IllegalStateException
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r5 = new java.lang.IllegalStateException >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r3 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r3 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property ")
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property ") >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r7 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.String propertyName>
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r7 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.String propertyName> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ")
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ") >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r10 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.Class memberClass>
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r10 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.Class memberClass> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not writable")
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not writable") >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13)
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : throw $r5
