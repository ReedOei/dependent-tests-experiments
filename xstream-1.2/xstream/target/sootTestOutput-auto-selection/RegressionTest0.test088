com.thoughtworks.xstream.mapper.XmlFriendlyMapper.mapNameToXML : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.mapper.XmlFriendlyMapper: java.lang.String escapeFieldName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : $r2 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : r3 = $r2
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : i1 = 0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : i1 = 0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : if i1 >= i0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : return $r9
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.escapeFieldName : return $r9 >>>>>>>> com.thoughtworks.xstream.mapper.XmlFriendlyMapper.mapNameToXML : return $r2
com.thoughtworks.xstream.mapper.XmlFriendlyMapper.mapNameToXML : return $r2 >>>>>>>> com.thoughtworks.xstream.mapper.XmlFriendlyMapper.realClass : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.mapper.XmlFriendlyMapper: java.lang.String unescapeClassName(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.XmlFriendlyMapper.realClass : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.mapper.XmlFriendlyMapper: java.lang.String unescapeClassName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r2 = new java.lang.StringBuilder
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r2 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r3 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String noPackagePrefix>
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r3 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String noPackagePrefix> >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $c0 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: char dollarReplacementInClass>
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $c0 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: char dollarReplacementInClass> >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r6)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r6) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : if $z0 == 0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $c2 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: char dollarReplacementInClass>
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $c2 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: char dollarReplacementInClass> >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : r8 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>($c2, 36)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : r8 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>($c2, 36) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : return r8
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : return r8 >>>>>>>> com.thoughtworks.xstream.mapper.XmlFriendlyMapper.realClass : $r3 = specialinvoke r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.Class realClass(java.lang.String)>($r2)
com.thoughtworks.xstream.mapper.XmlFriendlyMapper.realClass : $r3 = specialinvoke r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.Class realClass(java.lang.String)>($r2) >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.realClass : $r2 = r0.<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper wrapped>
com.thoughtworks.xstream.mapper.MapperWrapper.realClass : $r2 = r0.<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper wrapped> >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.realClass : $r3 = interfaceinvoke $r2.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r1)
