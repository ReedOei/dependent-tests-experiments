com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory getOutputFactory()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r2 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory>
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r2 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : if $r2 != null
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : if $r2 != null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r1 = staticinvoke <javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLOutputFactory newInstance()>()
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r1 = staticinvoke <javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLOutputFactory newInstance()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory> = $r1
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory> = $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r3 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory>
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r3 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : return $r3
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r1 = "javax.xml.stream.isRepairingNamespaces"
com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r1 = "javax.xml.stream.isRepairingNamespaces" >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : if z0 == 0
com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>
com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r3 = <java.lang.Boolean: java.lang.Boolean FALSE> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>($r1, $r3)
com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>($r1, $r3) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createWriter : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory getOutputFactory()>()
com.thoughtworks.xstream.io.xml.StaxDriver.createWriter : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory getOutputFactory()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createWriter : $r4 = virtualinvoke $r3.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>(r1)
com.thoughtworks.xstream.io.xml.StaxDriver.createWriter : $r4 = virtualinvoke $r3.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createWriter : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter)>($r4)
com.thoughtworks.xstream.io.xml.StaxDriver.createWriter : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter)>($r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter,boolean)>(r1, 1)
com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter,boolean)>(r1, 1) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $r2 = new com.thoughtworks.xstream.io.xml.StaxWriter
com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $r2 = new com.thoughtworks.xstream.io.xml.StaxWriter >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $r3 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.QNameMap qnameMap>
com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $r3 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.QNameMap qnameMap> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $z1 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: boolean isRepairingNamespace()>()
com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $z1 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: boolean isRepairingNamespace()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>
com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : $r1 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory getOutputFactory()>()
com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory getOutputFactory()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : $r3 = virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: java.lang.Object getProperty(java.lang.String)>("javax.xml.stream.isRepairingNamespaces")
com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : $r3 = virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: java.lang.Object getProperty(java.lang.String)>("javax.xml.stream.isRepairingNamespaces") >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r3)
com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r3) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : return $z0
com.thoughtworks.xstream.io.xml.StaxDriver.isRepairingNamespace : return $z0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>()
com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createStaxWriter : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.StaxWriter: void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter,boolean,boolean,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>($r3, r1, z0, $z1, $r4)
