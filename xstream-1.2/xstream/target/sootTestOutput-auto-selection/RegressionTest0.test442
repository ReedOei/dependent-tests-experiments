com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i4 = lengthof $r3
com.thoughtworks.xstream.core.util.FastStack.push : $i4 = lengthof $r3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i5 = $i4 * 2
com.thoughtworks.xstream.core.util.FastStack.push : $i5 = $i4 * 2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : specialinvoke r0.<com.thoughtworks.xstream.core.util.FastStack: void resizeStack(int)>($i5)
com.thoughtworks.xstream.core.util.FastStack.push : specialinvoke r0.<com.thoughtworks.xstream.core.util.FastStack: void resizeStack(int)>($i5) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : r1 = newarray (java.lang.Object)[i0]
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r1 = newarray (java.lang.Object)[i0] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0)
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2)
com.thoughtworks.xstream.core.util.FastStack.resizeStack : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> = r1
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r2 = new java.io.InputStreamReader
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r2 = new java.io.InputStreamReader >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1)
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomDriver: com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)>($r2)
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomDriver: com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader)>($r2) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r2 = new com.thoughtworks.xstream.io.xml.XppDomReader
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r2 = new com.thoughtworks.xstream.io.xml.XppDomReader >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r4 = staticinvoke <com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader)>(r1)
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r4 = staticinvoke <com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r1 = new java.util.ArrayList
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r1 = new java.util.ArrayList >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r2 = $r1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r2 = $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r11 = new java.util.ArrayList
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r11 = new java.util.ArrayList >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r3 = $r11
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r3 = $r11 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r4 = null
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r4 = null >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r12 = new org.xmlpull.mxp1.MXParser
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r12 = new org.xmlpull.mxp1.MXParser >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r12.<org.xmlpull.mxp1.MXParser: void <init>()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r12.<org.xmlpull.mxp1.MXParser: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r5 = $r12
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r5 = $r12 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r0)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r0) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int getEventType()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int getEventType()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 == 1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 == 1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 2
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 2 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 4
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 4 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 3
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 3 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int next()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int next()>() >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectInputStream.read : $r2 = new java.lang.UnsupportedOperationException
com.thoughtworks.xstream.core.util.CustomObjectInputStream.read : $r2 = new java.lang.UnsupportedOperationException >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectInputStream.read : specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>()
com.thoughtworks.xstream.core.util.CustomObjectInputStream.read : specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>() >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectInputStream.read : throw $r2
com.thoughtworks.xstream.core.util.CustomObjectInputStream.read : throw $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : r3 = $r6
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : r3 = $r6 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r7 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r7 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : specialinvoke $r7.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r3)
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : specialinvoke $r7.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r3) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : throw $r7
