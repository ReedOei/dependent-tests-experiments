com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0
com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = null
com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = null >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : goto [?= return $r1]
com.thoughtworks.xstream.core.util.FastStack.peek : goto [?= return $r1] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : return $r1
com.thoughtworks.xstream.core.util.FastStack.peek : return $r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : $r1 = new java.lang.StringBuffer
com.thoughtworks.xstream.core.util.FastStack.toString : $r1 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("[")
com.thoughtworks.xstream.core.util.FastStack.toString : specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("[") >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : r2 = $r1
com.thoughtworks.xstream.core.util.FastStack.toString : r2 = $r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : i0 = 0
com.thoughtworks.xstream.core.util.FastStack.toString : i0 = 0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.toString : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : if i0 >= $i1
com.thoughtworks.xstream.core.util.FastStack.toString : if i0 >= $i1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93)
com.thoughtworks.xstream.core.util.FastStack.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.core.util.FastStack.toString : $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : return $r8
com.thoughtworks.xstream.core.util.FastStack.toString : return $r8 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.setOutputFormat : r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: org.dom4j.io.OutputFormat outputFormat> = r1
com.thoughtworks.xstream.io.xml.Dom4JDriver.setOutputFormat : r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: org.dom4j.io.OutputFormat outputFormat> = r1 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.getOutputFormat : $r1 = r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: org.dom4j.io.OutputFormat outputFormat>
com.thoughtworks.xstream.io.xml.Dom4JDriver.getOutputFormat : $r1 = r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: org.dom4j.io.OutputFormat outputFormat> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.getOutputFormat : return $r1
com.thoughtworks.xstream.io.xml.Dom4JDriver.getOutputFormat : return $r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $z0 = virtualinvoke r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: boolean isWritable()>()
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $z0 = virtualinvoke r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: boolean isWritable()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $r1 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.reflect.Method setter>
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $r1 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.reflect.Method setter> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : if $r1 == null
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : if $r1 == null >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $z0 = 0
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $z0 = 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : return $z0
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : return $z0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : if $z0 != 0
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r5 = new java.lang.IllegalStateException
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r5 = new java.lang.IllegalStateException >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r3 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r3 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property ")
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property ") >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r7 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.String propertyName>
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r7 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.String propertyName> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ")
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ") >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r10 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.Class memberClass>
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r10 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.Class memberClass> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not writable")
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not writable") >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13)
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : throw $r5
