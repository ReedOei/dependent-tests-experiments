com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("void") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z0 == 0
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("byte")
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("byte") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z1 == 0
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("int")
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("int") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z2 == 0
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("long")
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("long") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z3 == 0
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("float")
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("float") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z4 == 0
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z4 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean")
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z5 == 0
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z5 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("double")
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("double") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z6 == 0
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z6 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("char")
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("char") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z7 == 0
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z7 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("short")
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("short") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z8 == 0
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : if $z8 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r4 = r0.<com.thoughtworks.xstream.converters.extended.JavaClassConverter: java.lang.ClassLoader classLoader>
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r4 = r0.<com.thoughtworks.xstream.converters.extended.JavaClassConverter: java.lang.ClassLoader classLoader> >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, $r4)
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, $r4) >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : r2 = $r5
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : r2 = $r5 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r6 = new com.thoughtworks.xstream.converters.ConversionException
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r6 = new com.thoughtworks.xstream.converters.ConversionException >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r7 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r7 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot load java class ")
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot load java class ") >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : specialinvoke $r6.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r2)
com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : specialinvoke $r6.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r2) >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.add : $r3 = r0.<com.thoughtworks.xstream.converters.ConversionException: java.util.Map stuff>
com.thoughtworks.xstream.converters.ConversionException.add : $r3 = r0.<com.thoughtworks.xstream.converters.ConversionException: java.util.Map stuff> >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.add : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.converters.ConversionException.add : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaClassConverter.fromString : throw $r6
