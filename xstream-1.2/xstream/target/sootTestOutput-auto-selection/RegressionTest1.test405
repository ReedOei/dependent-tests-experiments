com.thoughtworks.xstream.io.xml.XomDriver.createWriter : $r2 = new com.thoughtworks.xstream.io.xml.PrettyPrintWriter >>>>>>>> com.thoughtworks.xstream.io.xml.XomDriver.createWriter : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XomDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>()
com.thoughtworks.xstream.io.xml.XomDriver.createWriter : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XomDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.XomDriver.createWriter : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>(r1, $r3)
com.thoughtworks.xstream.io.xml.XomDriver.createWriter : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>(r1, $r3) >>>>>>>> com.thoughtworks.xstream.io.xml.XomDriver.createWriter : return $r2
com.thoughtworks.xstream.io.xml.XomDriver.createWriter : return $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i4 = lengthof $r3
com.thoughtworks.xstream.core.util.FastStack.push : $i4 = lengthof $r3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i5 = $i4 * 2
com.thoughtworks.xstream.core.util.FastStack.push : $i5 = $i4 * 2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : specialinvoke r0.<com.thoughtworks.xstream.core.util.FastStack: void resizeStack(int)>($i5)
com.thoughtworks.xstream.core.util.FastStack.push : specialinvoke r0.<com.thoughtworks.xstream.core.util.FastStack: void resizeStack(int)>($i5) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : r1 = newarray (java.lang.Object)[i0]
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r1 = newarray (java.lang.Object)[i0] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0)
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2)
com.thoughtworks.xstream.core.util.FastStack.resizeStack : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> = r1
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : $r1 = new com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : $r1 = new com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : specialinvoke $r1.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField: void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1)>(r0, null)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : specialinvoke $r1.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField: void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1)>(r0, null) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : r2 = $r1
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : r2 = $r1 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : $r3 = r0.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.FastStack customFields>
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : $r3 = r0.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.FastStack customFields> >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>(r2)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>(r2) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : return r2
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : return r2 >>>>>>>> com.thoughtworks.xstream.io.xml.DomDriver.createWriter : $r2 = new java.io.OutputStreamWriter
com.thoughtworks.xstream.io.xml.DomDriver.createWriter : $r2 = new java.io.OutputStreamWriter >>>>>>>> com.thoughtworks.xstream.io.xml.DomDriver.createWriter : $r4 = r0.<com.thoughtworks.xstream.io.xml.DomDriver: java.lang.String encoding>
com.thoughtworks.xstream.io.xml.DomDriver.createWriter : $r4 = r0.<com.thoughtworks.xstream.io.xml.DomDriver: java.lang.String encoding> >>>>>>>> com.thoughtworks.xstream.io.xml.DomDriver.createWriter : specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, $r4)
com.thoughtworks.xstream.io.xml.DomDriver.createWriter : specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, $r4) >>>>>>>> com.thoughtworks.xstream.io.xml.DomDriver.createWriter : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.DomDriver: com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)>($r2)
com.thoughtworks.xstream.io.xml.DomDriver.createWriter : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.DomDriver: com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)>($r2) >>>>>>>> com.thoughtworks.xstream.io.xml.DomDriver.createWriter : $r2 = new com.thoughtworks.xstream.io.xml.PrettyPrintWriter
com.thoughtworks.xstream.io.xml.DomDriver.createWriter : $r2 = new com.thoughtworks.xstream.io.xml.PrettyPrintWriter >>>>>>>> com.thoughtworks.xstream.io.xml.DomDriver.createWriter : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void <init>(java.io.Writer)>(r1)
com.thoughtworks.xstream.io.xml.DomDriver.createWriter : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void <init>(java.io.Writer)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.DomDriver.createWriter : return $r2
com.thoughtworks.xstream.io.xml.DomDriver.createWriter : return $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.DomDriver.createWriter : return $r5
com.thoughtworks.xstream.io.xml.DomDriver.createWriter : return $r5 >>>>>>>> com.thoughtworks.xstream.io.xml.XomDriver.createWriter : $r3 = new java.io.OutputStreamWriter
com.thoughtworks.xstream.io.xml.XomDriver.createWriter : $r3 = new java.io.OutputStreamWriter >>>>>>>> com.thoughtworks.xstream.io.xml.XomDriver.createWriter : specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1)
com.thoughtworks.xstream.io.xml.XomDriver.createWriter : specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.XomDriver.createWriter : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XomDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>()
com.thoughtworks.xstream.io.xml.XomDriver.createWriter : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XomDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XomDriver.createWriter : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>($r3, $r4)
com.thoughtworks.xstream.io.xml.XomDriver.createWriter : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>($r3, $r4) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.reset : $r1 = new java.lang.UnsupportedOperationException
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.reset : $r1 = new java.lang.UnsupportedOperationException >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.reset : specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>()
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.reset : specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>() >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.reset : throw $r1
