com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callWriteReplace : if r1 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callWriteReplace : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callWriteReplace : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callWriteReplace : r2 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>($r4, "writeReplace", null, 1)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callWriteReplace : r2 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>($r4, "writeReplace", null, 1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r4 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r4 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r7 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r7 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r13 = r0.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.util.Map cache>
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r13 = r0.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.util.Map cache> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $z1 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>(r5)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $z1 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>(r5) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : if $z1 == 0
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : if z0 == 0
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : if r1 == null
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : if r1 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : r19 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r2, r3)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : r19 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r2, r3) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : r24 = $r23
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : r24 = $r23 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : goto [?= (branch)]
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r25 = r0.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.util.Map cache>
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r25 = r0.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.util.Map cache> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r26 = <com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object NO_METHOD>
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : $r26 = <com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object NO_METHOD> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r26)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r26) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : return null
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.getMethod : return null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callWriteReplace : if r2 == null
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callWriteReplace : if r2 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callWriteReplace : return r1
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callWriteReplace : return r1 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.underlyingWriter : return r0
com.thoughtworks.xstream.io.xml.SaxWriter.underlyingWriter : return r0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i4 = lengthof $r3
com.thoughtworks.xstream.core.util.FastStack.push : $i4 = lengthof $r3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i5 = $i4 * 2
com.thoughtworks.xstream.core.util.FastStack.push : $i5 = $i4 * 2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : specialinvoke r0.<com.thoughtworks.xstream.core.util.FastStack: void resizeStack(int)>($i5)
com.thoughtworks.xstream.core.util.FastStack.push : specialinvoke r0.<com.thoughtworks.xstream.core.util.FastStack: void resizeStack(int)>($i5) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : r1 = newarray (java.lang.Object)[i0]
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r1 = newarray (java.lang.Object)[i0] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0)
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2)
com.thoughtworks.xstream.core.util.FastStack.resizeStack : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> = r1
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : $r1 = new com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : $r1 = new com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : specialinvoke $r1.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField: void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1)>(r0, null)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : specialinvoke $r1.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField: void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1)>(r0, null) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : r2 = $r1
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : r2 = $r1 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : $r3 = r0.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.FastStack customFields>
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : $r3 = r0.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.FastStack customFields> >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>(r2)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>(r2) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : return r2
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.putFields : return r2 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>()
com.thoughtworks.xstream.core.TreeMarshaller.put : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : if $r2 != null
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : if $r2 != null >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r1 = new com.thoughtworks.xstream.core.MapBackedDataHolder
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r1 = new com.thoughtworks.xstream.core.MapBackedDataHolder >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : specialinvoke $r1.<com.thoughtworks.xstream.core.MapBackedDataHolder: void <init>()>()
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : specialinvoke $r1.<com.thoughtworks.xstream.core.MapBackedDataHolder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = $r1
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = $r1 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.put : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : interfaceinvoke $r3.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.core.TreeMarshaller.put : interfaceinvoke $r3.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.put : $r3 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map>
com.thoughtworks.xstream.core.MapBackedDataHolder.put : $r3 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.core.MapBackedDataHolder.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.get : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>()
com.thoughtworks.xstream.core.TreeMarshaller.get : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.get : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.get : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.get : $r3 = interfaceinvoke $r2.<com.thoughtworks.xstream.converters.DataHolder: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.TreeMarshaller.get : $r3 = interfaceinvoke $r2.<com.thoughtworks.xstream.converters.DataHolder: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.get : $r2 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map>
com.thoughtworks.xstream.core.MapBackedDataHolder.get : $r2 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.get : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.MapBackedDataHolder.get : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.get : return $r3
com.thoughtworks.xstream.core.MapBackedDataHolder.get : return $r3 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.get : return $r3
com.thoughtworks.xstream.core.TreeMarshaller.get : return $r3 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r2 = <com.thoughtworks.xstream.core.util.CustomObjectOutputStream: java.lang.String DATA_HOLDER_KEY>
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r2 = <com.thoughtworks.xstream.core.util.CustomObjectOutputStream: java.lang.String DATA_HOLDER_KEY> >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r4 = interfaceinvoke r0.<com.thoughtworks.xstream.converters.DataHolder: java.lang.Object get(java.lang.Object)>($r2)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r4 = interfaceinvoke r0.<com.thoughtworks.xstream.converters.DataHolder: java.lang.Object get(java.lang.Object)>($r2) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : r3 = (com.thoughtworks.xstream.core.util.CustomObjectOutputStream) $r4
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : r3 = (com.thoughtworks.xstream.core.util.CustomObjectOutputStream) $r4 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : if r3 != null
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : if r3 != null >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r5 = new com.thoughtworks.xstream.core.util.CustomObjectOutputStream
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r5 = new com.thoughtworks.xstream.core.util.CustomObjectOutputStream >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : specialinvoke $r5.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)>(r1)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : specialinvoke $r5.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)>(r1) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : r3 = $r5
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : r3 = $r5 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r6 = <com.thoughtworks.xstream.core.util.CustomObjectOutputStream: java.lang.String DATA_HOLDER_KEY>
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r6 = <com.thoughtworks.xstream.core.util.CustomObjectOutputStream: java.lang.String DATA_HOLDER_KEY> >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : interfaceinvoke r0.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>($r6, r3)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : interfaceinvoke r0.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>($r6, r3) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : goto [?= return r3]
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : goto [?= return r3] >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : return r3
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : return r3 >>>>>>>> com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter.marshal : r4 = (java.util.GregorianCalendar) r1
