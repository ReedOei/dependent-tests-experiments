com.thoughtworks.xstream.io.xml.SaxWriter.underlyingWriter : return r0 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>()
com.thoughtworks.xstream.core.TreeMarshaller.put : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : if $r2 != null
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : if $r2 != null >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r1 = new com.thoughtworks.xstream.core.MapBackedDataHolder
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r1 = new com.thoughtworks.xstream.core.MapBackedDataHolder >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : specialinvoke $r1.<com.thoughtworks.xstream.core.MapBackedDataHolder: void <init>()>()
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : specialinvoke $r1.<com.thoughtworks.xstream.core.MapBackedDataHolder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = $r1
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = $r1 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.put : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : interfaceinvoke $r3.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.core.TreeMarshaller.put : interfaceinvoke $r3.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.put : $r3 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map>
com.thoughtworks.xstream.core.MapBackedDataHolder.put : $r3 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.core.MapBackedDataHolder.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespaces")
com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespaces") >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : if $z0 != 0
com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespace-prefixes")
com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespace-prefixes") >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : if $z1 == 0
com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : $r6 = new org.xml.sax.SAXNotRecognizedException
com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : $r6 = new org.xml.sax.SAXNotRecognizedException >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : specialinvoke $r6.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : specialinvoke $r6.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.getFeature : throw $r6
