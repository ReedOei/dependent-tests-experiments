com.thoughtworks.xstream.io.path.Path.toString : $r2 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString> >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : if $r2 != null
com.thoughtworks.xstream.io.path.Path.toString : if $r2 != null >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r10 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString>
com.thoughtworks.xstream.io.path.Path.toString : $r10 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString> >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : return $r10
com.thoughtworks.xstream.io.path.Path.toString : return $r10 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $r4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : if $r4 != null
com.thoughtworks.xstream.io.path.PathTracker.getPath : if $r4 != null >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $i2 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i2 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $i3 = $i2 + 1
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i3 = $i2 + 1 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : r1 = newarray (java.lang.String)[$i3]
com.thoughtworks.xstream.io.path.PathTracker.getPath : r1 = newarray (java.lang.String)[$i3] >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : r1[0] = ""
com.thoughtworks.xstream.io.path.PathTracker.getPath : r1[0] = "" >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : i0 = 0
com.thoughtworks.xstream.io.path.PathTracker.getPath : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $i4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : if i0 >= $i4
com.thoughtworks.xstream.io.path.PathTracker.getPath : if i0 >= $i4 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $r22 = new com.thoughtworks.xstream.io.path.Path
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r22 = new com.thoughtworks.xstream.io.path.Path >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : specialinvoke $r22.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r1)
com.thoughtworks.xstream.io.path.PathTracker.getPath : specialinvoke $r22.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r1) >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> = $r22
com.thoughtworks.xstream.io.path.PathTracker.getPath : r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> = $r22 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $r23 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r23 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : return $r23
com.thoughtworks.xstream.io.path.PathTracker.getPath : return $r23 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r2 = new com.thoughtworks.xstream.core.util.FastStack
com.thoughtworks.xstream.io.path.Path.apply : $r2 = new com.thoughtworks.xstream.core.util.FastStack >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : specialinvoke $r2.<com.thoughtworks.xstream.core.util.FastStack: void <init>(int)>(16)
com.thoughtworks.xstream.io.path.Path.apply : specialinvoke $r2.<com.thoughtworks.xstream.core.util.FastStack: void <init>(int)>(16) >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : r3 = $r2
com.thoughtworks.xstream.io.path.Path.apply : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : i0 = 0
com.thoughtworks.xstream.io.path.Path.apply : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.apply : $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $i1 = lengthof $r5
com.thoughtworks.xstream.io.path.Path.apply : $i1 = lengthof $r5 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : if i0 >= $i1
com.thoughtworks.xstream.io.path.Path.apply : if i0 >= $i1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r6 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.apply : $r6 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r7 = $r6[i0]
com.thoughtworks.xstream.io.path.Path.apply : $r7 = $r6[i0] >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r7)
com.thoughtworks.xstream.io.path.Path.apply : virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r7) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : i0 = i0 + 1
com.thoughtworks.xstream.io.path.Path.apply : i0 = i0 + 1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : goto [?= $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>]
com.thoughtworks.xstream.io.path.Path.apply : goto [?= $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>] >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : i2 = 0
com.thoughtworks.xstream.io.path.Path.apply : i2 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r9 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.apply : $r9 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $i3 = lengthof $r9
com.thoughtworks.xstream.io.path.Path.apply : $i3 = lengthof $r9 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : if i2 >= $i3
com.thoughtworks.xstream.io.path.Path.apply : if i2 >= $i3 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r10 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.apply : $r10 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : r4 = $r10[i2]
com.thoughtworks.xstream.io.path.Path.apply : r4 = $r10[i2] >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("..")
com.thoughtworks.xstream.io.path.Path.apply : $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("..") >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : if $z0 == 0
com.thoughtworks.xstream.io.path.Path.apply : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(".")
com.thoughtworks.xstream.io.path.Path.apply : $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(".") >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : if $z1 != 0
com.thoughtworks.xstream.io.path.Path.apply : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>(r4)
com.thoughtworks.xstream.io.path.Path.apply : virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>(r4) >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : i2 = i2 + 1
com.thoughtworks.xstream.io.path.Path.apply : i2 = i2 + 1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : goto [?= $r9 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>]
com.thoughtworks.xstream.io.path.Path.apply : goto [?= $r9 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>] >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $i4 = virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: int size()>()
com.thoughtworks.xstream.io.path.Path.apply : $i4 = virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: int size()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.size : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.size : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.size : return $i0
com.thoughtworks.xstream.core.util.FastStack.size : return $i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : r13 = newarray (java.lang.String)[$i4]
com.thoughtworks.xstream.io.path.Path.apply : r13 = newarray (java.lang.String)[$i4] >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : i5 = 0
com.thoughtworks.xstream.io.path.Path.apply : i5 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $i6 = lengthof r13
com.thoughtworks.xstream.io.path.Path.apply : $i6 = lengthof r13 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : if i5 >= $i6
com.thoughtworks.xstream.io.path.Path.apply : if i5 >= $i6 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r14 = virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object get(int)>(i5)
com.thoughtworks.xstream.io.path.Path.apply : $r14 = virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object get(int)>(i5) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.get : $r1 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.get : $r1 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.get : $r2 = $r1[i0]
com.thoughtworks.xstream.core.util.FastStack.get : $r2 = $r1[i0] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.get : return $r2
com.thoughtworks.xstream.core.util.FastStack.get : return $r2 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r15 = (java.lang.String) $r14
com.thoughtworks.xstream.io.path.Path.apply : $r15 = (java.lang.String) $r14 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : r13[i5] = $r15
com.thoughtworks.xstream.io.path.Path.apply : r13[i5] = $r15 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : i5 = i5 + 1
com.thoughtworks.xstream.io.path.Path.apply : i5 = i5 + 1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : goto [?= $i6 = lengthof r13]
com.thoughtworks.xstream.io.path.Path.apply : goto [?= $i6 = lengthof r13] >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r16 = new com.thoughtworks.xstream.io.path.Path
com.thoughtworks.xstream.io.path.Path.apply : $r16 = new com.thoughtworks.xstream.io.path.Path >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : specialinvoke $r16.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r13)
com.thoughtworks.xstream.io.path.Path.apply : specialinvoke $r16.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r13) >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : return $r16
com.thoughtworks.xstream.io.path.Path.apply : return $r16 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r3 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.path.Path.toString : $r3 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.io.path.Path.toString : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : r1 = $r3
com.thoughtworks.xstream.io.path.Path.toString : r1 = $r3 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : i0 = 0
com.thoughtworks.xstream.io.path.Path.toString : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.toString : $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $i1 = lengthof $r4
com.thoughtworks.xstream.io.path.Path.toString : $i1 = lengthof $r4 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : if i0 >= $i1
com.thoughtworks.xstream.io.path.Path.toString : if i0 >= $i1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : if i0 <= 0
com.thoughtworks.xstream.io.path.Path.toString : if i0 <= 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r6 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.toString : $r6 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r7 = $r6[i0]
com.thoughtworks.xstream.io.path.Path.toString : $r7 = $r6[i0] >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
com.thoughtworks.xstream.io.path.Path.toString : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : i0 = i0 + 1
com.thoughtworks.xstream.io.path.Path.toString : i0 = i0 + 1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : goto [?= $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>]
com.thoughtworks.xstream.io.path.Path.toString : goto [?= $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>] >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47)
com.thoughtworks.xstream.io.path.Path.toString : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47) >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r9 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.io.path.Path.toString : $r9 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString> = $r9
