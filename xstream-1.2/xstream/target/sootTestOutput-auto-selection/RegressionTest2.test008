com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $i0 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: int depth> >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : if $i0 == 0
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : if $i0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $z0 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: boolean includeEnclosingDocument>
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $z0 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: boolean includeEnclosingDocument> >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : if $z0 == 0
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $r3 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: java.util.List elementStack>
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $r3 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: java.util.List elementStack> >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.SaxWriter: java.lang.String escapeXmlName(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.SaxWriter: java.lang.String escapeXmlName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlWriter: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlWriter: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String escapeName(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String escapeName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r2 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : r3 = $r2
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i1 = 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i1 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if i1 >= i0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 36
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 36 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 95
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 95 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i1 = i1 + 1
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i1 = i1 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : goto [?= (branch)]
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : return $r9
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : return $r9 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : return $r3
com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(0, $r4)
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(0, $r4) >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.SaxWriter: boolean startTagInProgress> = 1
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.SaxWriter: boolean startTagInProgress> = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $i1 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: int depth>
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $i1 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: int depth> >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $i2 = $i1 + 1
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.SaxWriter: int depth> = $i2
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.SaxWriter: int depth> = $i2 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : goto [?= return]
