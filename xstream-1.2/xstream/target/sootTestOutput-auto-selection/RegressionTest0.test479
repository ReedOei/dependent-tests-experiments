com.thoughtworks.xstream.converters.ConversionException.getMessage : $r1 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.converters.ConversionException.getMessage : specialinvoke $r1.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : r2 = $r1
com.thoughtworks.xstream.converters.ConversionException.getMessage : r2 = $r1 >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : $r6 = specialinvoke r0.<com.thoughtworks.xstream.core.BaseException: java.lang.String getMessage()>()
com.thoughtworks.xstream.converters.ConversionException.getMessage : $r6 = specialinvoke r0.<com.thoughtworks.xstream.core.BaseException: java.lang.String getMessage()>() >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : if $r6 == null
com.thoughtworks.xstream.converters.ConversionException.getMessage : if $r6 == null >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : $r7 = specialinvoke r0.<com.thoughtworks.xstream.core.BaseException: java.lang.String getMessage()>()
com.thoughtworks.xstream.converters.ConversionException.getMessage : $r7 = specialinvoke r0.<com.thoughtworks.xstream.core.BaseException: java.lang.String getMessage()>() >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
com.thoughtworks.xstream.converters.ConversionException.getMessage : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n---- Debugging information ----")
com.thoughtworks.xstream.converters.ConversionException.getMessage : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n---- Debugging information ----") >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : r3 = virtualinvoke r0.<com.thoughtworks.xstream.converters.ConversionException: java.util.Iterator keys()>()
com.thoughtworks.xstream.converters.ConversionException.getMessage : r3 = virtualinvoke r0.<com.thoughtworks.xstream.converters.ConversionException: java.util.Iterator keys()>() >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.keys : $r1 = r0.<com.thoughtworks.xstream.converters.ConversionException: java.util.Map stuff>
com.thoughtworks.xstream.converters.ConversionException.keys : $r1 = r0.<com.thoughtworks.xstream.converters.ConversionException: java.util.Map stuff> >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.keys : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
com.thoughtworks.xstream.converters.ConversionException.keys : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.keys : $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>()
com.thoughtworks.xstream.converters.ConversionException.keys : $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.keys : return $r3
com.thoughtworks.xstream.converters.ConversionException.keys : return $r3 >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.ConversionException.getMessage : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : if $z0 == 0
com.thoughtworks.xstream.converters.ConversionException.getMessage : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n-------------------------------")
com.thoughtworks.xstream.converters.ConversionException.getMessage : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n-------------------------------") >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : $r18 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.converters.ConversionException.getMessage : $r18 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.getMessage : return $r18
com.thoughtworks.xstream.converters.ConversionException.getMessage : return $r18 >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.add : $r3 = r0.<com.thoughtworks.xstream.converters.ConversionException: java.util.Map stuff>
com.thoughtworks.xstream.converters.ConversionException.add : $r3 = r0.<com.thoughtworks.xstream.converters.ConversionException: java.util.Map stuff> >>>>>>>> com.thoughtworks.xstream.converters.ConversionException.add : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.converters.ConversionException.add : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.core.util.Fields.write : virtualinvoke r0.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2)
