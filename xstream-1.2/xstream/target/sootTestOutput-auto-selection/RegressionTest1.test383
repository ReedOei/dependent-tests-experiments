com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper.mapNameFromXML : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.String unescapeFieldName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $r2 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : r3 = $r2
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : i1 = 0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : i1 = 0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : if i1 >= i0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $r4 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String underscoreReplacementInField>
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $r4 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String underscoreReplacementInField> >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $z0 = specialinvoke r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r4)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $z0 = specialinvoke r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r4) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i1 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i2 = virtualinvoke r2.<java.lang.String: int length()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i2 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i3 = i0 + $i2
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i3 = i0 + $i2 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : if $i1 < $i3
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : if $i1 < $i3 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i4 = virtualinvoke r2.<java.lang.String: int length()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i4 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i5 = i0 + $i4
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $i5 = i0 + $i4 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : if $z0 == 0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : return 0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.stringFoundAt : return 0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : if $z0 == 0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $r7 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String dollarReplacementInField>
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $r7 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: java.lang.String dollarReplacementInField> >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $z1 = specialinvoke r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r7)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $z1 = specialinvoke r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r7) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : if $z1 == 0
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2)
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2) >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : i1 = i1 + 1
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : i1 = i1 + 1 >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : goto [?= (branch)]
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $r11 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : $r11 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : return $r11
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeFieldName : return $r11 >>>>>>>> com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper.mapNameFromXML : return $r2
