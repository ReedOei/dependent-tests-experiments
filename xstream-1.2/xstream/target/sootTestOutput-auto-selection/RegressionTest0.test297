com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $i0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $i1 = $i0 - 1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $i1 = $i0 - 1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> = $i1
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: int depth> = $i1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $z0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z0 == 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : $z0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : $z0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : if $z0 == 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r4 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r4 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r5 = virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object pop()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.endNode : $r5 = virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object pop()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.pop : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.pop : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $i1 = $i0 - 1
com.thoughtworks.xstream.core.util.FastStack.pop : $i1 = $i0 - 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i1
com.thoughtworks.xstream.core.util.FastStack.pop : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : r2 = $r3[$i1]
