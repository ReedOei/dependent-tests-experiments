com.thoughtworks.xstream.mapper.DefaultMapper.shouldSerializeMember : return 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper.fieldDefinedInClass : $r3 = r0.<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: com.thoughtworks.xstream.converters.reflection.ReflectionProvider wrapped>
com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper.fieldDefinedInClass : $r3 = r0.<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: com.thoughtworks.xstream.converters.reflection.ReflectionProvider wrapped> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper.fieldDefinedInClass : $z0 = interfaceinvoke $r3.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r1, r2)
com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper.fieldDefinedInClass : $z0 = interfaceinvoke $r3.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.fieldDefinedInClass : $r4 = r0.<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: com.thoughtworks.xstream.converters.reflection.FieldDictionary fieldDictionary>
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.fieldDefinedInClass : $r4 = r0.<com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider: com.thoughtworks.xstream.converters.reflection.FieldDictionary fieldDictionary> >>>>>>>> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.fieldDefinedInClass : r3 = virtualinvoke $r4.<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)>(r2, r1, null)
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.fieldDefinedInClass : r3 = virtualinvoke $r4.<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class)>(r2, r1, null) >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r3 == null
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r3 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $z0 = 0
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $z0 = 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r6 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>(r1, $z0)
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r6 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>(r1, $z0) >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.buildMap : r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
