com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory getOutputFactory()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r2 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory>
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r2 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : if $r2 != null
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : if $r2 != null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r1 = staticinvoke <javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLOutputFactory newInstance()>()
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r1 = staticinvoke <javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLOutputFactory newInstance()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory> = $r1
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory> = $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r3 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory>
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : $r3 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: javax.xml.stream.XMLOutputFactory outputFactory> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : return $r3
com.thoughtworks.xstream.io.xml.StaxDriver.getOutputFactory : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r1 = "javax.xml.stream.isRepairingNamespaces"
com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r1 = "javax.xml.stream.isRepairingNamespaces" >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : if z0 == 0
com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>
com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : $r3 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : goto [?= virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>($r1, $r3)]
com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : goto [?= virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>($r1, $r3)] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>($r1, $r3)
com.thoughtworks.xstream.io.xml.StaxDriver.setRepairingNamespace : virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>($r1, $r3) >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getDefaultPrefix : $r1 = r0.<com.thoughtworks.xstream.io.xml.QNameMap: java.lang.String defaultPrefix>
com.thoughtworks.xstream.io.xml.QNameMap.getDefaultPrefix : $r1 = r0.<com.thoughtworks.xstream.io.xml.QNameMap: java.lang.String defaultPrefix> >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getDefaultPrefix : return $r1
