com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(null, class "com/thoughtworks/xstream/mapper/Mapper$Null") >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : $r3 = r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.util.Map typeToImpl>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : $r3 = r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.util.Map typeToImpl> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : $r5 = r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.util.Map implToType>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : $r5 = r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.util.Map implToType> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r1 = <java.lang.Boolean: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r1 = <java.lang.Boolean: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Boolean", $r1)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Boolean", $r1) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r2 = <java.lang.Character: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r2 = <java.lang.Character: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Character", $r2)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Character", $r2) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r3 = <java.lang.Integer: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r3 = <java.lang.Integer: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Integer", $r3)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Integer", $r3) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r4 = <java.lang.Float: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r4 = <java.lang.Float: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Float", $r4)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Float", $r4) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r5 = <java.lang.Double: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r5 = <java.lang.Double: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Double", $r5)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Double", $r5) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r6 = <java.lang.Short: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r6 = <java.lang.Short: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Short", $r6)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Short", $r6) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r7 = <java.lang.Byte: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r7 = <java.lang.Byte: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Byte", $r7)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Byte", $r7) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r8 = <java.lang.Long: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r8 = <java.lang.Long: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Long", $r8)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/lang/Long", $r8) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.io.xml.XomReader.reassignCurrentElement : $r2 = (nu.xom.Element) r1
com.thoughtworks.xstream.io.xml.XomReader.reassignCurrentElement : $r2 = (nu.xom.Element) r1 >>>>>>>> com.thoughtworks.xstream.io.xml.XomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.XomReader: nu.xom.Element currentElement> = $r2
com.thoughtworks.xstream.io.xml.XomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.XomReader: nu.xom.Element currentElement> = $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.JDomReader.reassignCurrentElement : $r2 = (org.jdom.Element) r1
com.thoughtworks.xstream.io.xml.JDomReader.reassignCurrentElement : $r2 = (org.jdom.Element) r1 >>>>>>>> com.thoughtworks.xstream.io.xml.JDomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.JDomReader: org.jdom.Element currentElement> = $r2
com.thoughtworks.xstream.io.xml.JDomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.JDomReader: org.jdom.Element currentElement> = $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.PrettyPrintWriter.underlyingWriter : return r0
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.underlyingWriter : return r0 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r2 = <com.thoughtworks.xstream.core.util.CustomObjectOutputStream: java.lang.String DATA_HOLDER_KEY>
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r2 = <com.thoughtworks.xstream.core.util.CustomObjectOutputStream: java.lang.String DATA_HOLDER_KEY> >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r4 = interfaceinvoke r0.<com.thoughtworks.xstream.converters.DataHolder: java.lang.Object get(java.lang.Object)>($r2)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r4 = interfaceinvoke r0.<com.thoughtworks.xstream.converters.DataHolder: java.lang.Object get(java.lang.Object)>($r2) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.get : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>()
com.thoughtworks.xstream.core.TreeMarshaller.get : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : if $r2 != null
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : if $r2 != null >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r1 = new com.thoughtworks.xstream.core.MapBackedDataHolder
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r1 = new com.thoughtworks.xstream.core.MapBackedDataHolder >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : specialinvoke $r1.<com.thoughtworks.xstream.core.MapBackedDataHolder: void <init>()>()
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : specialinvoke $r1.<com.thoughtworks.xstream.core.MapBackedDataHolder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = $r1
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = $r1 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.get : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.get : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.get : $r3 = interfaceinvoke $r2.<com.thoughtworks.xstream.converters.DataHolder: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.TreeMarshaller.get : $r3 = interfaceinvoke $r2.<com.thoughtworks.xstream.converters.DataHolder: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.get : $r2 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map>
com.thoughtworks.xstream.core.MapBackedDataHolder.get : $r2 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.get : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.MapBackedDataHolder.get : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.get : return $r3
com.thoughtworks.xstream.core.MapBackedDataHolder.get : return $r3 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.get : return $r3
com.thoughtworks.xstream.core.TreeMarshaller.get : return $r3 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : r3 = (com.thoughtworks.xstream.core.util.CustomObjectOutputStream) $r4
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : r3 = (com.thoughtworks.xstream.core.util.CustomObjectOutputStream) $r4 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : if r3 != null
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : if r3 != null >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r5 = new com.thoughtworks.xstream.core.util.CustomObjectOutputStream
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r5 = new com.thoughtworks.xstream.core.util.CustomObjectOutputStream >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : specialinvoke $r5.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)>(r1)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : specialinvoke $r5.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: void <init>(com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback)>(r1) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i4 = lengthof $r3
com.thoughtworks.xstream.core.util.FastStack.push : $i4 = lengthof $r3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i5 = $i4 * 2
com.thoughtworks.xstream.core.util.FastStack.push : $i5 = $i4 * 2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : specialinvoke r0.<com.thoughtworks.xstream.core.util.FastStack: void resizeStack(int)>($i5)
com.thoughtworks.xstream.core.util.FastStack.push : specialinvoke r0.<com.thoughtworks.xstream.core.util.FastStack: void resizeStack(int)>($i5) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : r1 = newarray (java.lang.Object)[i0]
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r1 = newarray (java.lang.Object)[i0] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0)
com.thoughtworks.xstream.core.util.FastStack.resizeStack : $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2)
com.thoughtworks.xstream.core.util.FastStack.resizeStack : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i2) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.resizeStack : r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> = r1
com.thoughtworks.xstream.core.util.FastStack.resizeStack : r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> = r1 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : r3 = $r5
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : r3 = $r5 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r6 = <com.thoughtworks.xstream.core.util.CustomObjectOutputStream: java.lang.String DATA_HOLDER_KEY>
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : $r6 = <com.thoughtworks.xstream.core.util.CustomObjectOutputStream: java.lang.String DATA_HOLDER_KEY> >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : interfaceinvoke r0.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>($r6, r3)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : interfaceinvoke r0.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>($r6, r3) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>()
com.thoughtworks.xstream.core.TreeMarshaller.put : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.put : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : interfaceinvoke $r3.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.core.TreeMarshaller.put : interfaceinvoke $r3.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.put : $r3 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map>
com.thoughtworks.xstream.core.MapBackedDataHolder.put : $r3 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.core.MapBackedDataHolder.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : goto [?= return r3]
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : goto [?= return r3] >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : return r3
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.getInstance : return r3 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : $r2 = new java.io.OutputStreamWriter
com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : $r2 = new java.io.OutputStreamWriter >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1)
com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomDriver: com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)>($r2)
com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomDriver: com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer)>($r2) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : $r2 = new com.thoughtworks.xstream.io.xml.PrettyPrintWriter
com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : $r2 = new com.thoughtworks.xstream.io.xml.PrettyPrintWriter >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>()
com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>(r1, $r3)
com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void <init>(java.io.Writer,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>(r1, $r3) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : return $r2
com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : return $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : return $r3
com.thoughtworks.xstream.io.xml.XppDomDriver.createWriter : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.underlyingWriter : return r0
com.thoughtworks.xstream.io.xml.SaxWriter.underlyingWriter : return r0 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomWriter.underlyingWriter : return r0
com.thoughtworks.xstream.io.xml.XppDomWriter.underlyingWriter : return r0 >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : r2 = null
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : r2 = null >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : $r4 = r0.<com.thoughtworks.xstream.mapper.AttributeMapper: java.util.Map fieldNameToTypeMap>
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : $r4 = r0.<com.thoughtworks.xstream.mapper.AttributeMapper: java.util.Map fieldNameToTypeMap> >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : r3 = (java.lang.Class) $r5
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : r3 = (java.lang.Class) $r5 >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : if r3 == null
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : if r3 == null >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : return r2
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : return r2 >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.addAttributeFor : $r2 = r0.<com.thoughtworks.xstream.mapper.AttributeMapper: java.util.Set typeSet>
com.thoughtworks.xstream.mapper.AttributeMapper.addAttributeFor : $r2 = r0.<com.thoughtworks.xstream.mapper.AttributeMapper: java.util.Set typeSet> >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.addAttributeFor : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
com.thoughtworks.xstream.mapper.AttributeMapper.addAttributeFor : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r4 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.core.util.PrioritizedList converters>
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r4 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.core.util.PrioritizedList converters> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList: void add(java.lang.Object,int)>(r1, i0)
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList: void add(java.lang.Object,int)>(r1, i0) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $i1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : if $i1 <= i0
com.thoughtworks.xstream.core.util.PrioritizedList.add : if $i1 <= i0 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> = i0
com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> = i0 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $r3 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Set set>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $r3 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Set set> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $r4 = new com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem
com.thoughtworks.xstream.core.util.PrioritizedList.add : $r4 = new com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $i2 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i2 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $i3 = $i2 + 1
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i3 = $i2 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId> = $i3
com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId> = $i3 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : specialinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: void <init>(java.lang.Object,int,int)>(r1, i0, $i3)
com.thoughtworks.xstream.core.util.PrioritizedList.add : specialinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: void <init>(java.lang.Object,int,int)>(r1, i0, $i3) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4)
com.thoughtworks.xstream.core.util.PrioritizedList.add : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : r2 = (com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem) r1
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : r2 = (com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem) r1 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i0 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i0 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i1 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i1 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : if $i0 == $i1
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : if $i0 == $i1 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i5 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i5 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i6 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i6 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i7 = $i5 - $i6
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i7 = $i5 - $i6 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : return $i7
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : return $i7 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r5 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap>
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r5 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : if $z0 == 0
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.marshal : r4 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>(r1)
