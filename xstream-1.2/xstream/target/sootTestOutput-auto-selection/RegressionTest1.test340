com.thoughtworks.xstream.mapper.DefaultMapper.shouldSerializeMember : return 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper.newInstance : $r2 = r0.<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: com.thoughtworks.xstream.converters.reflection.ReflectionProvider wrapped>
com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper.newInstance : $r2 = r0.<com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper: com.thoughtworks.xstream.converters.reflection.ReflectionProvider wrapped> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper.newInstance : $r3 = interfaceinvoke $r2.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Object newInstance(java.lang.Class)>(r1)
com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper.newInstance : $r3 = interfaceinvoke $r2.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Object newInstance(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.newInstance : r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>()
