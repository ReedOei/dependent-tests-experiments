com.thoughtworks.xstream.io.xml.JDomWriter.getResult : $r1 = r0.<com.thoughtworks.xstream.io.xml.JDomWriter: java.util.List result> >>>>>>>> com.thoughtworks.xstream.io.xml.JDomWriter.getResult : return $r1
com.thoughtworks.xstream.io.xml.JDomWriter.getResult : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : if r1 == null
com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : if r1 == null >>>>>>>> com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : if $z0 == 0
com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : $r2 = new java.lang.IllegalArgumentException
com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : $r2 = new java.lang.IllegalArgumentException >>>>>>>> com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("list")
com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("list") >>>>>>>> com.thoughtworks.xstream.io.xml.TraxSource.setSourceAsList : throw $r2
