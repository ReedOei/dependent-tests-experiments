com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void startNode(java.lang.String,java.lang.Class)>(r1, null) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r4 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r4 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r5 = virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r5 = virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0
com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = null
com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = null >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : goto [?= return $r1]
com.thoughtworks.xstream.core.util.FastStack.peek : goto [?= return $r1] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : return $r1
com.thoughtworks.xstream.core.util.FastStack.peek : return $r1 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r3 = (com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node) $r5
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r3 = (com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter$Node) $r5 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 != null
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 != null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r6 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r6 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r6.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("{")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r6.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("{") >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.core.util.QuickWriter.write : i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : $i1 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer>
com.thoughtworks.xstream.core.util.QuickWriter.write : $i1 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : $i2 = $i1 + i0
com.thoughtworks.xstream.core.util.QuickWriter.write : $i2 = $i1 + i0 >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : $r2 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: char[] buffer>
com.thoughtworks.xstream.core.util.QuickWriter.write : $r2 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: char[] buffer> >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.QuickWriter.write : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : if $i2 < $i3
com.thoughtworks.xstream.core.util.QuickWriter.write : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : $r5 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: char[] buffer>
com.thoughtworks.xstream.core.util.QuickWriter.write : $r5 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: char[] buffer> >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : $i5 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer>
com.thoughtworks.xstream.core.util.QuickWriter.write : $i5 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r5, $i5)
com.thoughtworks.xstream.core.util.QuickWriter.write : virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r5, $i5) >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : $i6 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer>
com.thoughtworks.xstream.core.util.QuickWriter.write : $i6 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : $i7 = $i6 + i0
com.thoughtworks.xstream.core.util.QuickWriter.write : $i7 = $i6 + i0 >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.write : r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer> = $i7
com.thoughtworks.xstream.core.util.QuickWriter.write : r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer> = $i7 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>()
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: void finishTag()>() >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : $z0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : $z0 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : if $z0 == 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean readyForNewLine> = 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.finishTag : r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: boolean tagIsEmpty> = 0 >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r11 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r11 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r11.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("\"")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r11.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("\"") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r12 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r12 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r12.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>(r1)
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r12.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r13 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r13 = r0.<com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r13.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("\": ")
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : virtualinvoke $r13.<com.thoughtworks.xstream.core.util.QuickWriter: void write(java.lang.String)>("\": ") >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r14 = class "java/util/Collection"
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $r14 = class "java/util/Collection" >>>>>>>> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter.startNode : $z3 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2)
