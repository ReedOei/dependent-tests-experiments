com.thoughtworks.xstream.converters.extended.FileConverter.fromString : $r2 = new java.io.File >>>>>>>> com.thoughtworks.xstream.converters.extended.FileConverter.fromString : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1)
com.thoughtworks.xstream.converters.extended.FileConverter.fromString : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.extended.FileConverter.fromString : return $r2
com.thoughtworks.xstream.converters.extended.FileConverter.fromString : return $r2 >>>>>>>> com.thoughtworks.xstream.converters.SingleValueConverterWrapper.toString : $r2 = r0.<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: com.thoughtworks.xstream.converters.SingleValueConverter wrapped>
com.thoughtworks.xstream.converters.SingleValueConverterWrapper.toString : $r2 = r0.<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: com.thoughtworks.xstream.converters.SingleValueConverter wrapped> >>>>>>>> com.thoughtworks.xstream.converters.SingleValueConverterWrapper.toString : $r3 = interfaceinvoke $r2.<com.thoughtworks.xstream.converters.SingleValueConverter: java.lang.String toString(java.lang.Object)>(r1)
