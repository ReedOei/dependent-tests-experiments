com.thoughtworks.xstream.core.util.FastStack.toString : $r1 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("[")
com.thoughtworks.xstream.core.util.FastStack.toString : specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("[") >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : r2 = $r1
com.thoughtworks.xstream.core.util.FastStack.toString : r2 = $r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : i0 = 0
com.thoughtworks.xstream.core.util.FastStack.toString : i0 = 0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.toString : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : if i0 >= $i1
com.thoughtworks.xstream.core.util.FastStack.toString : if i0 >= $i1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93)
com.thoughtworks.xstream.core.util.FastStack.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.core.util.FastStack.toString : $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.toString : return $r8
com.thoughtworks.xstream.core.util.FastStack.toString : return $r8 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.pop : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.pop : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $i1 = $i0 - 1
com.thoughtworks.xstream.core.util.FastStack.pop : $i1 = $i0 - 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i1
com.thoughtworks.xstream.core.util.FastStack.pop : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : r2 = $r3[$i1]
