com.thoughtworks.xstream.io.path.PathTracker.getPath : $r4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : if $r4 != null
com.thoughtworks.xstream.io.path.PathTracker.getPath : if $r4 != null >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $i2 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i2 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $i3 = $i2 + 1
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i3 = $i2 + 1 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : r1 = newarray (java.lang.String)[$i3]
com.thoughtworks.xstream.io.path.PathTracker.getPath : r1 = newarray (java.lang.String)[$i3] >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : r1[0] = ""
com.thoughtworks.xstream.io.path.PathTracker.getPath : r1[0] = "" >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : i0 = 0
com.thoughtworks.xstream.io.path.PathTracker.getPath : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $i4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : if i0 >= $i4
com.thoughtworks.xstream.io.path.PathTracker.getPath : if i0 >= $i4 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $r22 = new com.thoughtworks.xstream.io.path.Path
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r22 = new com.thoughtworks.xstream.io.path.Path >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : specialinvoke $r22.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r1)
com.thoughtworks.xstream.io.path.PathTracker.getPath : specialinvoke $r22.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r1) >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> = $r22
com.thoughtworks.xstream.io.path.PathTracker.getPath : r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> = $r22 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : $r23 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r23 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getPath : return $r23
com.thoughtworks.xstream.io.path.PathTracker.getPath : return $r23 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getCurrentPath : $r1 = virtualinvoke r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path getPath()>()
com.thoughtworks.xstream.io.path.PathTracker.getCurrentPath : $r1 = virtualinvoke r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path getPath()>() >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getCurrentPath : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String toString()>()
com.thoughtworks.xstream.io.path.PathTracker.getCurrentPath : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r2 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString>
com.thoughtworks.xstream.io.path.Path.toString : $r2 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString> >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : if $r2 != null
com.thoughtworks.xstream.io.path.Path.toString : if $r2 != null >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r3 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.path.Path.toString : $r3 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.io.path.Path.toString : specialinvoke $r3.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : r1 = $r3
com.thoughtworks.xstream.io.path.Path.toString : r1 = $r3 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : i0 = 0
com.thoughtworks.xstream.io.path.Path.toString : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.toString : $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $i1 = lengthof $r4
com.thoughtworks.xstream.io.path.Path.toString : $i1 = lengthof $r4 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : if i0 >= $i1
com.thoughtworks.xstream.io.path.Path.toString : if i0 >= $i1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : if i0 <= 0
com.thoughtworks.xstream.io.path.Path.toString : if i0 <= 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r6 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.toString : $r6 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r7 = $r6[i0]
com.thoughtworks.xstream.io.path.Path.toString : $r7 = $r6[i0] >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
com.thoughtworks.xstream.io.path.Path.toString : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : i0 = i0 + 1
com.thoughtworks.xstream.io.path.Path.toString : i0 = i0 + 1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : goto [?= $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>]
com.thoughtworks.xstream.io.path.Path.toString : goto [?= $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>] >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r9 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.io.path.Path.toString : $r9 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString> = $r9
com.thoughtworks.xstream.io.path.Path.toString : r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString> = $r9 >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : $r10 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString>
com.thoughtworks.xstream.io.path.Path.toString : $r10 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String pathAsString> >>>>>>>> com.thoughtworks.xstream.io.path.Path.toString : return $r10
com.thoughtworks.xstream.io.path.Path.toString : return $r10 >>>>>>>> com.thoughtworks.xstream.io.path.PathTracker.getCurrentPath : return $r2
com.thoughtworks.xstream.io.path.PathTracker.getCurrentPath : return $r2 >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary.associateId : $r4 = r0.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.util.Map map>
com.thoughtworks.xstream.core.util.ObjectIdDictionary.associateId : $r4 = r0.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary.associateId : $r3 = new com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper
com.thoughtworks.xstream.core.util.ObjectIdDictionary.associateId : $r3 = new com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary.associateId : specialinvoke $r3.<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: void <init>(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.util.ObjectIdDictionary.associateId : specialinvoke $r3.<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: void <init>(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary.associateId : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2)
com.thoughtworks.xstream.core.util.ObjectIdDictionary.associateId : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2) >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper.hashCode : $r1 = r0.<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: java.lang.Object obj>
com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper.hashCode : $r1 = r0.<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: java.lang.Object obj> >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper.hashCode : $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1)
com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper.hashCode : $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1) >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper.hashCode : return $i0
com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper.hashCode : return $i0 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.underlyingWriter : return r0
com.thoughtworks.xstream.io.xml.SaxWriter.underlyingWriter : return r0 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>()
com.thoughtworks.xstream.core.TreeMarshaller.put : specialinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void lazilyCreateDataHolder()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r2 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : if $r2 != null
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : if $r2 != null >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r1 = new com.thoughtworks.xstream.core.MapBackedDataHolder
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : $r1 = new com.thoughtworks.xstream.core.MapBackedDataHolder >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : specialinvoke $r1.<com.thoughtworks.xstream.core.MapBackedDataHolder: void <init>()>()
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : specialinvoke $r1.<com.thoughtworks.xstream.core.MapBackedDataHolder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = $r1
com.thoughtworks.xstream.core.TreeMarshaller.lazilyCreateDataHolder : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = $r1 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder>
com.thoughtworks.xstream.core.TreeMarshaller.put : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.put : interfaceinvoke $r3.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.core.TreeMarshaller.put : interfaceinvoke $r3.<com.thoughtworks.xstream.converters.DataHolder: void put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.put : $r3 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map>
com.thoughtworks.xstream.core.MapBackedDataHolder.put : $r3 = r0.<com.thoughtworks.xstream.core.MapBackedDataHolder: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.core.MapBackedDataHolder.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.core.MapBackedDataHolder.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomWriter.underlyingWriter : return r0
com.thoughtworks.xstream.io.xml.XppDomWriter.underlyingWriter : return r0 >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : r2 = null
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : r2 = null >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : $r4 = r0.<com.thoughtworks.xstream.mapper.AttributeMapper: java.util.Map fieldNameToTypeMap>
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : $r4 = r0.<com.thoughtworks.xstream.mapper.AttributeMapper: java.util.Map fieldNameToTypeMap> >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : r3 = (java.lang.Class) $r5
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : r3 = (java.lang.Class) $r5 >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : if r3 == null
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : if r3 == null >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : return r2
com.thoughtworks.xstream.mapper.AttributeMapper.getConverterFromAttribute : return r2 >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.addAttributeFor : $r2 = r0.<com.thoughtworks.xstream.mapper.AttributeMapper: java.util.Set typeSet>
com.thoughtworks.xstream.mapper.AttributeMapper.addAttributeFor : $r2 = r0.<com.thoughtworks.xstream.mapper.AttributeMapper: java.util.Set typeSet> >>>>>>>> com.thoughtworks.xstream.mapper.AttributeMapper.addAttributeFor : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
com.thoughtworks.xstream.mapper.AttributeMapper.addAttributeFor : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r4 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.core.util.PrioritizedList converters>
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r4 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.core.util.PrioritizedList converters> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList: void add(java.lang.Object,int)>(r1, i0)
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList: void add(java.lang.Object,int)>(r1, i0) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $i1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : if $i1 <= i0
com.thoughtworks.xstream.core.util.PrioritizedList.add : if $i1 <= i0 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> = i0
com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> = i0 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $r3 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Set set>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $r3 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Set set> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $r4 = new com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem
com.thoughtworks.xstream.core.util.PrioritizedList.add : $r4 = new com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $i2 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i2 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $i3 = $i2 + 1
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i3 = $i2 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId> = $i3
com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId> = $i3 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : specialinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: void <init>(java.lang.Object,int,int)>(r1, i0, $i3)
com.thoughtworks.xstream.core.util.PrioritizedList.add : specialinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: void <init>(java.lang.Object,int,int)>(r1, i0, $i3) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4)
com.thoughtworks.xstream.core.util.PrioritizedList.add : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : r2 = (com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem) r1
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : r2 = (com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem) r1 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i0 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i0 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i1 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i1 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : if $i0 == $i1
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : if $i0 == $i1 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i5 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i5 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i6 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i6 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i7 = $i5 - $i6
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i7 = $i5 - $i6 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : return $i7
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : return $i7 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r5 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap>
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r5 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : if $z0 == 0
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary.removeId : $r3 = r0.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.util.Map map>
com.thoughtworks.xstream.core.util.ObjectIdDictionary.removeId : $r3 = r0.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary.removeId : $r2 = new com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper
com.thoughtworks.xstream.core.util.ObjectIdDictionary.removeId : $r2 = new com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary.removeId : specialinvoke $r2.<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: void <init>(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.util.ObjectIdDictionary.removeId : specialinvoke $r2.<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: void <init>(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.util.ObjectIdDictionary.removeId : interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2)
com.thoughtworks.xstream.core.util.ObjectIdDictionary.removeId : interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2) >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.setDocumentFactory : r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: org.dom4j.DocumentFactory documentFactory> = r1
