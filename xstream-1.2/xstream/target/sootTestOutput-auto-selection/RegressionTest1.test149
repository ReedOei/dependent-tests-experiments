com.thoughtworks.xstream.io.xml.SaxWriter.underlyingWriter : return r0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.StatefulWriter: void startNodeCommon()>()
com.thoughtworks.xstream.io.StatefulWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.StatefulWriter: void startNodeCommon()>() >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke r0.<com.thoughtworks.xstream.io.StatefulWriter: void checkClosed()>()
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke r0.<com.thoughtworks.xstream.io.StatefulWriter: void checkClosed()>() >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state>
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_CLOSED>
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_CLOSED> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : if $i1 != $i0
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : if $i1 != $i0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_VALUE>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_VALUE> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : if $i1 != $i0
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : if $i1 != $i0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i2 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_NODE_START>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i2 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_NODE_START> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> = $i2
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> = $i2 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i3 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i3 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i4 = $i3 + 1
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $i4 = $i3 + 1 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance> = $i4
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance> = $i4 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r4 = r0.<com.thoughtworks.xstream.io.StatefulWriter: com.thoughtworks.xstream.core.util.FastStack attributes>
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r4 = r0.<com.thoughtworks.xstream.io.StatefulWriter: com.thoughtworks.xstream.core.util.FastStack attributes> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r5 = new java.util.HashSet
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : $r5 = new java.util.HashSet >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke $r5.<java.util.HashSet: void <init>()>()
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r5)
com.thoughtworks.xstream.io.StatefulWriter.startNodeCommon : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r5) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.WriterWrapper: void startNode(java.lang.String)>(r1)
com.thoughtworks.xstream.io.StatefulWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.WriterWrapper: void startNode(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.WriterWrapper.startNode : $r2 = r0.<com.thoughtworks.xstream.io.WriterWrapper: com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped>
com.thoughtworks.xstream.io.WriterWrapper.startNode : $r2 = r0.<com.thoughtworks.xstream.io.WriterWrapper: com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped> >>>>>>>> com.thoughtworks.xstream.io.WriterWrapper.startNode : interfaceinvoke $r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>(r1)
com.thoughtworks.xstream.io.WriterWrapper.startNode : interfaceinvoke $r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $i0 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: int depth>
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $i0 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: int depth> >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : if $i0 == 0
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : if $i0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $z0 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: boolean includeEnclosingDocument>
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : $z0 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: boolean includeEnclosingDocument> >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : if $z0 == 0
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.xml.SaxWriter: void startDocument(boolean)>(0)
com.thoughtworks.xstream.io.xml.SaxWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.xml.SaxWriter: void startDocument(boolean)>(0) >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startDocument : $i0 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: int depth>
com.thoughtworks.xstream.io.xml.SaxWriter.startDocument : $i0 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: int depth> >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startDocument : if $i0 != 0
com.thoughtworks.xstream.io.xml.SaxWriter.startDocument : if $i0 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startDocument : $r1 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: org.xml.sax.ContentHandler contentHandler>
com.thoughtworks.xstream.io.xml.SaxWriter.startDocument : $r1 = r0.<com.thoughtworks.xstream.io.xml.SaxWriter: org.xml.sax.ContentHandler contentHandler> >>>>>>>> com.thoughtworks.xstream.io.xml.SaxWriter.startDocument : interfaceinvoke $r1.<org.xml.sax.ContentHandler: void startDocument()>()
