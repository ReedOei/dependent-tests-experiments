com.thoughtworks.xstream.io.xml.StaxDriver.createStaxReader : $r2 = new com.thoughtworks.xstream.io.xml.StaxReader >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createStaxReader : $r3 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.QNameMap qnameMap>
com.thoughtworks.xstream.io.xml.StaxDriver.createStaxReader : $r3 = r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.QNameMap qnameMap> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createStaxReader : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>()
com.thoughtworks.xstream.io.xml.StaxDriver.createStaxReader : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxDriver.createStaxReader : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.StaxReader: void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>($r3, r1, $r4)
com.thoughtworks.xstream.io.xml.StaxDriver.createStaxReader : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.StaxReader: void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>($r3, r1, $r4) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : i0 = virtualinvoke $r1.<com.thoughtworks.xstream.core.util.FastStack: int size()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : i0 = virtualinvoke $r1.<com.thoughtworks.xstream.core.util.FastStack: int size()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.size : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.size : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.size : return $i0
com.thoughtworks.xstream.core.util.FastStack.size : return $i0 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : $i1 = virtualinvoke $r2.<com.thoughtworks.xstream.core.util.FastStack: int size()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : $i1 = virtualinvoke $r2.<com.thoughtworks.xstream.core.util.FastStack: int size()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : if $i1 > i0
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : if $i1 > i0 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: void move()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: void move()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.move : $r1 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.move : $r1 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $z0 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: boolean marked>
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $z0 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: boolean marked> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : if $z0 == 0
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $r11 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack lookback>
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $r11 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack lookback> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $z2 = virtualinvoke $r11.<com.thoughtworks.xstream.core.util.FastStack: boolean hasStuff()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $z2 = virtualinvoke $r11.<com.thoughtworks.xstream.core.util.FastStack: boolean hasStuff()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.hasStuff : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.hasStuff : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.hasStuff : if $i0 <= 0
com.thoughtworks.xstream.core.util.FastStack.hasStuff : if $i0 <= 0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.hasStuff : $z0 = 0
com.thoughtworks.xstream.core.util.FastStack.hasStuff : $z0 = 0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.hasStuff : return $z0
com.thoughtworks.xstream.core.util.FastStack.hasStuff : return $z0 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : if $z2 == 0
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $r15 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $r15 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $r1 = new com.thoughtworks.xstream.io.xml.AbstractPullReader$Event
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $r1 = new com.thoughtworks.xstream.io.xml.AbstractPullReader$Event >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : specialinvoke $r1.<com.thoughtworks.xstream.io.xml.AbstractPullReader$Event: void <init>(com.thoughtworks.xstream.io.xml.AbstractPullReader$1)>(null)
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : specialinvoke $r1.<com.thoughtworks.xstream.io.xml.AbstractPullReader$Event: void <init>(com.thoughtworks.xstream.io.xml.AbstractPullReader$1)>(null) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : r2 = $r1
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : r2 = $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $i0 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: int pullNextEvent()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $i0 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: int pullNextEvent()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxReader.pullNextEvent : $r2 = r0.<com.thoughtworks.xstream.io.xml.StaxReader: javax.xml.stream.XMLStreamReader in>
com.thoughtworks.xstream.io.xml.StaxReader.pullNextEvent : $r2 = r0.<com.thoughtworks.xstream.io.xml.StaxReader: javax.xml.stream.XMLStreamReader in> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxReader.pullNextEvent : $i0 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: int next()>()
