com.thoughtworks.xstream.io.path.Path.relativeTo : $r3 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r4 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r4 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : i0 = specialinvoke r0.<com.thoughtworks.xstream.io.path.Path: int depthOfPathDivergence(java.lang.String[],java.lang.String[])>($r3, $r4)
com.thoughtworks.xstream.io.path.Path.relativeTo : i0 = specialinvoke r0.<com.thoughtworks.xstream.io.path.Path: int depthOfPathDivergence(java.lang.String[],java.lang.String[])>($r3, $r4) >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : $i2 = lengthof r1
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : $i2 = lengthof r1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : $i3 = lengthof r2
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : $i3 = lengthof r2 >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3)
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3) >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : i1 = 0
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : i1 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : if i1 >= i0
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : return i0
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : return i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i3 = lengthof $r5
com.thoughtworks.xstream.io.path.Path.relativeTo : $i3 = lengthof $r5 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r6 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r6 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i4 = lengthof $r6
com.thoughtworks.xstream.io.path.Path.relativeTo : $i4 = lengthof $r6 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i5 = $i3 + $i4
com.thoughtworks.xstream.io.path.Path.relativeTo : $i5 = $i3 + $i4 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i6 = 2 * i0
com.thoughtworks.xstream.io.path.Path.relativeTo : $i6 = 2 * i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i7 = $i5 - $i6
com.thoughtworks.xstream.io.path.Path.relativeTo : $i7 = $i5 - $i6 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : r2 = newarray (java.lang.String)[$i7]
com.thoughtworks.xstream.io.path.Path.relativeTo : r2 = newarray (java.lang.String)[$i7] >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : i1 = 0
com.thoughtworks.xstream.io.path.Path.relativeTo : i1 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : i2 = i0
com.thoughtworks.xstream.io.path.Path.relativeTo : i2 = i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r7 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r7 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i8 = lengthof $r7
com.thoughtworks.xstream.io.path.Path.relativeTo : $i8 = lengthof $r7 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : if i2 >= $i8
com.thoughtworks.xstream.io.path.Path.relativeTo : if i2 >= $i8 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : i10 = i0
com.thoughtworks.xstream.io.path.Path.relativeTo : i10 = i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r8 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r8 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i11 = lengthof $r8
com.thoughtworks.xstream.io.path.Path.relativeTo : $i11 = lengthof $r8 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : if i10 >= $i11
com.thoughtworks.xstream.io.path.Path.relativeTo : if i10 >= $i11 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : if i1 != 0
com.thoughtworks.xstream.io.path.Path.relativeTo : if i1 != 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r11 = <com.thoughtworks.xstream.io.path.Path: com.thoughtworks.xstream.io.path.Path DOT>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r11 = <com.thoughtworks.xstream.io.path.Path: com.thoughtworks.xstream.io.path.Path DOT> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : return $r11
com.thoughtworks.xstream.io.path.Path.relativeTo : return $r11 >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : if r1 == null
com.thoughtworks.xstream.io.path.Path.isAncestor : if r1 == null >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : $r2 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.isAncestor : $r2 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : $i1 = lengthof $r2
com.thoughtworks.xstream.io.path.Path.isAncestor : $i1 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : $r3 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.isAncestor : $r3 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : $i2 = lengthof $r3
com.thoughtworks.xstream.io.path.Path.isAncestor : $i2 = lengthof $r3 >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : if $i1 >= $i2
com.thoughtworks.xstream.io.path.Path.isAncestor : if $i1 >= $i2 >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : i0 = 0
com.thoughtworks.xstream.io.path.Path.isAncestor : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.isAncestor : $r4 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : $i3 = lengthof $r4
com.thoughtworks.xstream.io.path.Path.isAncestor : $i3 = lengthof $r4 >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : if i0 >= $i3
com.thoughtworks.xstream.io.path.Path.isAncestor : if i0 >= $i3 >>>>>>>> com.thoughtworks.xstream.io.path.Path.isAncestor : return 1
com.thoughtworks.xstream.io.path.Path.isAncestor : return 1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r2 = new com.thoughtworks.xstream.core.util.FastStack
com.thoughtworks.xstream.io.path.Path.apply : $r2 = new com.thoughtworks.xstream.core.util.FastStack >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : specialinvoke $r2.<com.thoughtworks.xstream.core.util.FastStack: void <init>(int)>(16)
com.thoughtworks.xstream.io.path.Path.apply : specialinvoke $r2.<com.thoughtworks.xstream.core.util.FastStack: void <init>(int)>(16) >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : r3 = $r2
com.thoughtworks.xstream.io.path.Path.apply : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : i0 = 0
com.thoughtworks.xstream.io.path.Path.apply : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.apply : $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $i1 = lengthof $r5
com.thoughtworks.xstream.io.path.Path.apply : $i1 = lengthof $r5 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : if i0 >= $i1
com.thoughtworks.xstream.io.path.Path.apply : if i0 >= $i1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : i2 = 0
com.thoughtworks.xstream.io.path.Path.apply : i2 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r9 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.apply : $r9 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $i3 = lengthof $r9
com.thoughtworks.xstream.io.path.Path.apply : $i3 = lengthof $r9 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : if i2 >= $i3
com.thoughtworks.xstream.io.path.Path.apply : if i2 >= $i3 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $i4 = virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: int size()>()
com.thoughtworks.xstream.io.path.Path.apply : $i4 = virtualinvoke r3.<com.thoughtworks.xstream.core.util.FastStack: int size()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.size : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.size : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.size : return $i0
com.thoughtworks.xstream.core.util.FastStack.size : return $i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : r13 = newarray (java.lang.String)[$i4]
com.thoughtworks.xstream.io.path.Path.apply : r13 = newarray (java.lang.String)[$i4] >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : i5 = 0
com.thoughtworks.xstream.io.path.Path.apply : i5 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $i6 = lengthof r13
com.thoughtworks.xstream.io.path.Path.apply : $i6 = lengthof r13 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : if i5 >= $i6
com.thoughtworks.xstream.io.path.Path.apply : if i5 >= $i6 >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : $r16 = new com.thoughtworks.xstream.io.path.Path
com.thoughtworks.xstream.io.path.Path.apply : $r16 = new com.thoughtworks.xstream.io.path.Path >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : specialinvoke $r16.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r13)
com.thoughtworks.xstream.io.path.Path.apply : specialinvoke $r16.<com.thoughtworks.xstream.io.path.Path: void <init>(java.lang.String[])>(r13) >>>>>>>> com.thoughtworks.xstream.io.path.Path.apply : return $r16
