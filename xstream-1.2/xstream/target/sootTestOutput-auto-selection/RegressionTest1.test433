com.thoughtworks.xstream.converters.javabean.BeanProperty.setSetterMethod : r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.reflect.Method setter> = r1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r3 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r3 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r4 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r4 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : i0 = specialinvoke r0.<com.thoughtworks.xstream.io.path.Path: int depthOfPathDivergence(java.lang.String[],java.lang.String[])>($r3, $r4)
com.thoughtworks.xstream.io.path.Path.relativeTo : i0 = specialinvoke r0.<com.thoughtworks.xstream.io.path.Path: int depthOfPathDivergence(java.lang.String[],java.lang.String[])>($r3, $r4) >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : $i2 = lengthof r1
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : $i2 = lengthof r1 >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : $i3 = lengthof r2
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : $i3 = lengthof r2 >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3)
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3) >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : i1 = 0
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : i1 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : if i1 >= i0
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : return i0
com.thoughtworks.xstream.io.path.Path.depthOfPathDivergence : return i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i3 = lengthof $r5
com.thoughtworks.xstream.io.path.Path.relativeTo : $i3 = lengthof $r5 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r6 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r6 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i4 = lengthof $r6
com.thoughtworks.xstream.io.path.Path.relativeTo : $i4 = lengthof $r6 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i5 = $i3 + $i4
com.thoughtworks.xstream.io.path.Path.relativeTo : $i5 = $i3 + $i4 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i6 = 2 * i0
com.thoughtworks.xstream.io.path.Path.relativeTo : $i6 = 2 * i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i7 = $i5 - $i6
com.thoughtworks.xstream.io.path.Path.relativeTo : $i7 = $i5 - $i6 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : r2 = newarray (java.lang.String)[$i7]
com.thoughtworks.xstream.io.path.Path.relativeTo : r2 = newarray (java.lang.String)[$i7] >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : i1 = 0
com.thoughtworks.xstream.io.path.Path.relativeTo : i1 = 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : i2 = i0
com.thoughtworks.xstream.io.path.Path.relativeTo : i2 = i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r7 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r7 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i8 = lengthof $r7
com.thoughtworks.xstream.io.path.Path.relativeTo : $i8 = lengthof $r7 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : if i2 >= $i8
com.thoughtworks.xstream.io.path.Path.relativeTo : if i2 >= $i8 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : i10 = i0
com.thoughtworks.xstream.io.path.Path.relativeTo : i10 = i0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r8 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r8 = r1.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $i11 = lengthof $r8
com.thoughtworks.xstream.io.path.Path.relativeTo : $i11 = lengthof $r8 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : if i10 >= $i11
com.thoughtworks.xstream.io.path.Path.relativeTo : if i10 >= $i11 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : if i1 != 0
com.thoughtworks.xstream.io.path.Path.relativeTo : if i1 != 0 >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : $r11 = <com.thoughtworks.xstream.io.path.Path: com.thoughtworks.xstream.io.path.Path DOT>
com.thoughtworks.xstream.io.path.Path.relativeTo : $r11 = <com.thoughtworks.xstream.io.path.Path: com.thoughtworks.xstream.io.path.Path DOT> >>>>>>>> com.thoughtworks.xstream.io.path.Path.relativeTo : return $r11
com.thoughtworks.xstream.io.path.Path.relativeTo : return $r11 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $z0 = virtualinvoke r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: boolean isWritable()>()
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $z0 = virtualinvoke r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: boolean isWritable()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $r1 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.reflect.Method setter>
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $r1 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.reflect.Method setter> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : if $r1 == null
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : if $r1 == null >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $z0 = 0
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : $z0 = 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : return $z0
com.thoughtworks.xstream.converters.javabean.BeanProperty.isWritable : return $z0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : if $z0 != 0
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r5 = new java.lang.IllegalStateException
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r5 = new java.lang.IllegalStateException >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r3 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r3 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property ")
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property ") >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r7 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.String propertyName>
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r7 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.String propertyName> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ")
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ") >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r10 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.Class memberClass>
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r10 = r0.<com.thoughtworks.xstream.converters.javabean.BeanProperty: java.lang.Class memberClass> >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not writable")
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not writable") >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13)
com.thoughtworks.xstream.converters.javabean.BeanProperty.set : specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProperty.set : throw $r5
