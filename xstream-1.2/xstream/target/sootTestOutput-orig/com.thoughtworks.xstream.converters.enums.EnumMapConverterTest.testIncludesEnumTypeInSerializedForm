com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : $r1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator: java.util.Iterator iterator>
com.thoughtworks.xstream.core.JVM.isIBM : $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor")
com.thoughtworks.xstream.mapper.DefaultMapper.aliasForAttribute : return r1
com.thoughtworks.xstream.io.ReaderWrapper.hasMoreChildren : $r1 = r0.<com.thoughtworks.xstream.io.ReaderWrapper: com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped>
com.thoughtworks.xstream.XStream.fromXML : $r2 = new java.io.StringReader
com.thoughtworks.xstream.XStream.fromXML : $r2 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.io.HierarchicalStreamDriver hierarchicalStreamDriver>
com.thoughtworks.xstream.core.util.ObjectIdDictionary.associateId : $r4 = r0.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.util.Map map>
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.converters.enums.EnumMapConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : specialinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, r2, r3)
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r5 = r0.<com.thoughtworks.xstream.converters.enums.EnumMapConverter: java.lang.reflect.Field typeField>
com.thoughtworks.xstream.mapper.MapperWrapper.serializedClass : $r2 = r0.<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper wrapped>
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/reflect/Method")
com.thoughtworks.xstream.converters.extended.ColorConverter.canConvert : $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.io.xml.XppDriver.loadLibrary : $z0 = <com.thoughtworks.xstream.io.xml.XppDriver: boolean xppLibraryPresent>
com.thoughtworks.xstream.converters.extended.SubjectConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "javax/security/auth/Subject")
com.thoughtworks.xstream.io.ReaderWrapper.moveUp : $r1 = r0.<com.thoughtworks.xstream.io.ReaderWrapper: com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped>
com.thoughtworks.xstream.converters.enums.EnumMapConverter.canConvert : if r1 != class "java/util/EnumMap" goto $z0 = 0
com.thoughtworks.xstream.converters.SingleValueConverterWrapper.toString : $r2 = r0.<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: com.thoughtworks.xstream.converters.SingleValueConverter wrapped>
com.thoughtworks.xstream.core.JVM.isBEAWithUnsafeSupport : $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor")
com.thoughtworks.xstream.core.JVM.isBEAWithUnsafeSupport : return 0
com.thoughtworks.xstream.mapper.ClassAliasingMapper.addTypeAlias : $r3 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map nameToType>
com.thoughtworks.xstream.mapper.ClassAliasingMapper.addTypeAlias : $r6 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map typeToName>
com.thoughtworks.xstream.core.util.Fields.read : $r4 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.util.ObjectIdDictionary.lookupId : $r3 = r0.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.util.Map map>
com.thoughtworks.xstream.converters.basic.CharConverter.canConvert : $r2 = <java.lang.Character: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DynamicProxyMapper.realClass : $r3 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.DynamicProxyMapper.realClass : $r2 = r0.<com.thoughtworks.xstream.mapper.DynamicProxyMapper: java.lang.String alias>
com.thoughtworks.xstream.mapper.CGLIBMapper.realClass : $r2 = r0.<com.thoughtworks.xstream.mapper.CGLIBMapper: java.lang.String alias>
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.writeAttributeValue : specialinvoke r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeText(java.lang.String)>(r2)
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.size : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.JVM.bestReflectionProvider : goto [?= $r16 = r0.<com.thoughtworks.xstream.core.JVM: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>]
com.thoughtworks.xstream.core.JVM.bestReflectionProvider : $z0 = specialinvoke r0.<com.thoughtworks.xstream.core.JVM: boolean canUseSun14ReflectionProvider()>()
com.thoughtworks.xstream.core.JVM.bestReflectionProvider : $r16 = r0.<com.thoughtworks.xstream.core.JVM: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.core.JVM.bestReflectionProvider : $r6 = new com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider
com.thoughtworks.xstream.core.JVM.bestReflectionProvider : $r2 = r0.<com.thoughtworks.xstream.core.JVM: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.core.TreeMarshaller.getMapper : $r1 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.JVM.isBlackdown : $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor")
com.thoughtworks.xstream.io.WriterWrapper.setValue : $r2 = r0.<com.thoughtworks.xstream.io.WriterWrapper: com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped>
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r11 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $z0 = <com.thoughtworks.xstream.mapper.EnumMapper: boolean active>
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r3 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumClass>
com.thoughtworks.xstream.mapper.EnumMapper.serializedClass : $r8 = <com.thoughtworks.xstream.mapper.EnumMapper: java.lang.Class enumSetClass>
com.thoughtworks.xstream.io.xml.AbstractPullReader.getNodeName : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.converters.enums.EnumConverter.marshal : $r4 = (java.lang.Enum) r1
com.thoughtworks.xstream.core.util.ClassLoaderReference.loadClass : $r2 = r0.<com.thoughtworks.xstream.core.util.ClassLoaderReference: java.lang.ClassLoader reference>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter.canConvert : $r2 = class "java/io/Externalizable"
com.thoughtworks.xstream.core.TreeUnmarshaller.convert : return r4
com.thoughtworks.xstream.core.TreeUnmarshaller.convert : $r10 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.io.HierarchicalStreamReader reader>
com.thoughtworks.xstream.core.TreeUnmarshaller.convert : $r6 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.core.util.FastStack types>
com.thoughtworks.xstream.core.TreeUnmarshaller.convert : $r11 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.core.util.FastStack types>
com.thoughtworks.xstream.mapper.CachingMapper.realClass : return r2
com.thoughtworks.xstream.mapper.CachingMapper.realClass : $r6 = r0.<com.thoughtworks.xstream.mapper.CachingMapper: java.util.Map cache>
com.thoughtworks.xstream.mapper.CachingMapper.realClass : return r3
com.thoughtworks.xstream.mapper.CachingMapper.realClass : r3 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.CachingMapper.realClass : if r2 == null goto r3 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.CachingMapper.realClass : $r4 = r0.<com.thoughtworks.xstream.mapper.CachingMapper: java.util.Map cache>
com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker.canConvert : $r2 = r0.<com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker: java.lang.Object self>
com.thoughtworks.xstream.core.TreeUnmarshaller.getMapper : $r1 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.SingleValueConverterWrapper.canConvert : $r2 = r0.<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: com.thoughtworks.xstream.converters.SingleValueConverter wrapped>
com.thoughtworks.xstream.XStream.wrapMapper : return r1
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.readItem : $r11 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(r3, r5)
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.readItem : $r8 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.readItem : if r4 != null goto $r10 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.readItem : $r6 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.io.path.PathTrackingReader.moveUp : specialinvoke r0.<com.thoughtworks.xstream.io.ReaderWrapper: void moveUp()>()
com.thoughtworks.xstream.io.path.PathTrackingReader.moveUp : $r1 = r0.<com.thoughtworks.xstream.io.path.PathTrackingReader: com.thoughtworks.xstream.io.path.PathTracker pathTracker>
com.thoughtworks.xstream.io.ReaderWrapper.getAttribute : $r2 = r0.<com.thoughtworks.xstream.io.ReaderWrapper: com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped>
com.thoughtworks.xstream.io.path.PathTracker.getPath : r1[0] = ""
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i7 = i0 + 1
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i2 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r13 = r0.<com.thoughtworks.xstream.io.path.PathTracker: java.lang.String[] pathStack>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $i8 = i0 + 1
com.thoughtworks.xstream.io.path.PathTracker.getPath : goto [?= i0 = i0 + 1]
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r10 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.path.PathTracker.getPath : i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r22 = new com.thoughtworks.xstream.io.path.Path
com.thoughtworks.xstream.io.path.PathTracker.getPath : i0 = 0
com.thoughtworks.xstream.io.path.PathTracker.getPath : if i1 <= 1 goto $i8 = i0 + 1
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r23 = r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath>
com.thoughtworks.xstream.io.path.PathTracker.getPath : $r5 = r0.<com.thoughtworks.xstream.io.path.PathTracker: java.util.Map[] indexMapStack>
com.thoughtworks.xstream.converters.extended.TextAttributeConverter.canConvert : if r1 != class "java/awt/font/TextAttribute" goto $z0 = 0
com.thoughtworks.xstream.converters.collections.MapConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/HashMap")
com.thoughtworks.xstream.io.xml.AbstractPullReader.move : $r5 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.AbstractPullReader.move : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.AbstractPullReader.move : $r1 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.move : goto [?= return]
com.thoughtworks.xstream.converters.basic.IntConverter.canConvert : $r2 = <java.lang.Integer: java.lang.Class TYPE>
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper.startNode : $z0 = r0 instanceof com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper.startNode : $r3 = (com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter) r0
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: void move()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveDown : $r3 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r2.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>(r1)
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : $r6 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem : if r1 != null goto $r6 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $r15 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $z0 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: boolean marked>
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $r12 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack lookback>
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $r11 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack lookback>
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $r7 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack lookahead>
com.thoughtworks.xstream.io.xml.AbstractPullReader.readEvent : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack lookback>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endOfLine : $r1 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endOfLine : i0 = 0
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endOfLine : $r3 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.mapper.DefaultMapper.defaultImplementationOf : return r1
com.thoughtworks.xstream.converters.collections.ArrayConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Class: boolean isArray()>()
com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/GregorianCalendar")
com.thoughtworks.xstream.XStream.registerConverter : $r3 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.DefaultConverterLookup converterLookup>
com.thoughtworks.xstream.XStream.registerConverter : $r2 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.DefaultConverterLookup converterLookup>
com.thoughtworks.xstream.core.TreeMarshaller.convertAnother : virtualinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter)>(r1, r2)
com.thoughtworks.xstream.core.TreeMarshaller.convertAnother : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.ConverterLookup converterLookup>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.addAttribute : $r8 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.addAttribute : $r6 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.addAttribute : $r9 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.addAttribute : $r3 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.addAttribute : $r7 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.addAttribute : $r4 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.converters.extended.RegexPatternConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/regex/Pattern")
com.thoughtworks.xstream.core.util.FastStack.pop : return r2
com.thoughtworks.xstream.core.util.FastStack.pop : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.pop : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.mapper.MapperWrapper.defaultImplementationOf : $r2 = r0.<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper wrapped>
com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy.marshal : $r6 = new com.thoughtworks.xstream.core.ReferenceByXPathMarshaller
com.thoughtworks.xstream.converters.enums.EnumConverter.unmarshal : r3 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Class getRequiredType()>()
com.thoughtworks.xstream.converters.enums.EnumConverter.unmarshal : $r5 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>()
com.thoughtworks.xstream.converters.enums.EnumConverter.unmarshal : $r4 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>()
com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlWriter: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.converters.basic.StringConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/String")
com.thoughtworks.xstream.core.util.QuickWriter.write : $i1 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer>
com.thoughtworks.xstream.core.util.QuickWriter.write : $r5 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: char[] buffer>
com.thoughtworks.xstream.core.util.QuickWriter.write : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.core.util.QuickWriter.write : i0 = lengthof r1
com.thoughtworks.xstream.core.util.QuickWriter.write : $r4 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: char[] buffer>
com.thoughtworks.xstream.core.util.QuickWriter.write : $r2 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: char[] buffer>
com.thoughtworks.xstream.core.util.QuickWriter.write : $i2 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer>
com.thoughtworks.xstream.core.util.QuickWriter.write : $i6 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer>
com.thoughtworks.xstream.XStream.setMode : goto [?= return]
com.thoughtworks.xstream.XStream.setMode : $r3 = new com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy
com.thoughtworks.xstream.XStream.setMode : tableswitch(i0) {     case 1001: goto $r1 = new com.thoughtworks.xstream.core.TreeMarshallingStrategy;     case 1002: goto $r2 = new com.thoughtworks.xstream.core.ReferenceByIdMarshallingStrategy;     case 1003: goto $r3 = new com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy;     case 1004: goto $r4 = new com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy;     default: goto $r5 = new java.lang.IllegalArgumentException; }
com.thoughtworks.xstream.converters.basic.StringConverter.fromString : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>()
com.thoughtworks.xstream.converters.collections.TreeMapConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/TreeMap")
com.thoughtworks.xstream.io.path.Path.isAncestor : $r5 = r0.<com.thoughtworks.xstream.io.path.Path: java.lang.String[] chunks>
com.thoughtworks.xstream.io.path.Path.isAncestor : i0 = 0
com.thoughtworks.xstream.io.path.Path.isAncestor : return 0
com.thoughtworks.xstream.io.path.Path.isAncestor : if r1 == null goto return 0
com.thoughtworks.xstream.core.util.Fields.find : return r2
com.thoughtworks.xstream.core.util.Fields.find : virtualinvoke r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
com.thoughtworks.xstream.core.util.Fields.find : r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r7 = <java.lang.Byte: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r3 = <java.lang.Integer: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r6 = <java.lang.Short: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r5 = <java.lang.Double: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r1 = <java.lang.Boolean: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r8 = <java.lang.Long: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r4 = <java.lang.Float: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : $r2 = <java.lang.Character: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaults : virtualinvoke r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(null, class "com/thoughtworks/xstream/mapper/Mapper$Null")
com.thoughtworks.xstream.converters.basic.BigIntegerConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/math/BigInteger")
com.thoughtworks.xstream.converters.basic.BigDecimalConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/math/BigDecimal")
com.thoughtworks.xstream.converters.collections.MapConverter.populateMap : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.collections.MapConverter.populateMap : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.collections.MapConverter.populateMap : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.collections.MapConverter.populateMap : r4 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)>(r1, r2, r3)
com.thoughtworks.xstream.converters.collections.MapConverter.populateMap : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()", "com.thoughtworks.xstream.converters.collections.MapConverter.populateMap")]
com.thoughtworks.xstream.converters.collections.MapConverter.populateMap : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5)
com.thoughtworks.xstream.converters.collections.MapConverter.populateMap : r5 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object)>(r1, r2, r3)
com.thoughtworks.xstream.XStream.unmarshal : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.XStream: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)>(r1, r2, null)
com.thoughtworks.xstream.XStream.unmarshal : $r4 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.MarshallingStrategy marshallingStrategy>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.flush : $r1 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.core.JVM.isApple : $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor")
com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter.toString : if r1 != null goto $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>()
com.thoughtworks.xstream.XStream.setupMappers : $r13 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.XStream.setupMappers : $r1 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.XStream.setupMappers : $r22 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper>
com.thoughtworks.xstream.XStream.setupMappers : $r4 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.XStream.setupMappers : $r7 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.XStream.setupMappers : $r19 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.XStream.setupMappers : $r16 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.XStream.setupMappers : $r10 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.XStream.setupMappers : $r23 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper>
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String pullText()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : return r2
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $r1 = new com.thoughtworks.xstream.io.xml.AbstractPullReader$Event
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $i2 = r2.<com.thoughtworks.xstream.io.xml.AbstractPullReader$Event: int type>
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $i1 = r2.<com.thoughtworks.xstream.io.xml.AbstractPullReader$Event: int type>
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $i0 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: int pullNextEvent()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.readRealEvent : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: java.lang.String pullElementName()>()
com.thoughtworks.xstream.io.WriterWrapper.addAttribute : $r3 = r0.<com.thoughtworks.xstream.io.WriterWrapper: com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped>
com.thoughtworks.xstream.converters.extended.JavaClassConverter.canConvert : $r2 = class "java/lang/Class"
com.thoughtworks.xstream.converters.extended.SqlTimeConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/sql/Time")
com.thoughtworks.xstream.core.util.CompositeClassLoader.add : $r2 = r0.<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.util.List classLoaders>
com.thoughtworks.xstream.core.util.CompositeClassLoader.add : if r1 == null goto return
com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlReader: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.converters.reflection.SerializableConverter.isSerializable : $r2 = class "java/io/Serializable"
com.thoughtworks.xstream.XStream.setupConverters : $r62 = new com.thoughtworks.xstream.converters.extended.TextAttributeConverter
com.thoughtworks.xstream.XStream.setupConverters : $r24 = new com.thoughtworks.xstream.converters.basic.LongConverter
com.thoughtworks.xstream.XStream.setupConverters : $r49 = new com.thoughtworks.xstream.converters.extended.FileConverter
com.thoughtworks.xstream.XStream.setupConverters : $r74 = newarray (java.lang.Class)[1]
com.thoughtworks.xstream.XStream.setupConverters : $r45 = new com.thoughtworks.xstream.converters.collections.TreeSetConverter
com.thoughtworks.xstream.XStream.setupConverters : $r4 = newarray (java.lang.Class)[3]
com.thoughtworks.xstream.XStream.setupConverters : $r41 = new com.thoughtworks.xstream.converters.collections.MapConverter
com.thoughtworks.xstream.XStream.setupConverters : $r70 = newarray (java.lang.Class)[1]
com.thoughtworks.xstream.XStream.setupConverters : $r34 = new com.thoughtworks.xstream.converters.basic.BigIntegerConverter
com.thoughtworks.xstream.XStream.setupConverters : $r53 = new com.thoughtworks.xstream.converters.extended.DynamicProxyConverter
com.thoughtworks.xstream.XStream.setupConverters : $r51 = new com.thoughtworks.xstream.converters.extended.SqlTimeConverter
com.thoughtworks.xstream.XStream.setupConverters : $r32 = new com.thoughtworks.xstream.converters.collections.BitSetConverter
com.thoughtworks.xstream.XStream.setupConverters : $r48 = new com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter
com.thoughtworks.xstream.XStream.setupConverters : $r26 = new com.thoughtworks.xstream.converters.basic.CharConverter
com.thoughtworks.xstream.XStream.setupConverters : $r39 = new com.thoughtworks.xstream.converters.collections.CollectionConverter
com.thoughtworks.xstream.XStream.setupConverters : $r33 = new com.thoughtworks.xstream.converters.basic.URLConverter
com.thoughtworks.xstream.XStream.setupConverters : goto [?= $r15 = new com.thoughtworks.xstream.converters.reflection.SerializableConverter]
com.thoughtworks.xstream.XStream.setupConverters : specialinvoke r0.<com.thoughtworks.xstream.XStream: void dynamicallyRegisterConverter(java.lang.String,int,java.lang.Class[],java.lang.Object[])>("com.thoughtworks.xstream.converters.enums.EnumConverter", 0, null, null)
com.thoughtworks.xstream.XStream.setupConverters : $r36 = new com.thoughtworks.xstream.converters.collections.ArrayConverter
com.thoughtworks.xstream.XStream.setupConverters : specialinvoke r0.<com.thoughtworks.xstream.XStream: void dynamicallyRegisterConverter(java.lang.String,int,java.lang.Class[],java.lang.Object[])>("com.thoughtworks.xstream.converters.extended.StackTraceElementConverter", 0, null, null)
com.thoughtworks.xstream.XStream.setupConverters : $r31 = new com.thoughtworks.xstream.converters.basic.DateConverter
com.thoughtworks.xstream.XStream.setupConverters : $r30 = new com.thoughtworks.xstream.converters.basic.StringBufferConverter
com.thoughtworks.xstream.XStream.setupConverters : $r23 = new com.thoughtworks.xstream.converters.basic.DoubleConverter
com.thoughtworks.xstream.XStream.setupConverters : $r56 = new com.thoughtworks.xstream.converters.extended.JavaClassConverter
com.thoughtworks.xstream.XStream.setupConverters : $r82 = newarray (java.lang.Class)[2]
com.thoughtworks.xstream.XStream.setupConverters : $r58 = new com.thoughtworks.xstream.converters.extended.JavaMethodConverter
com.thoughtworks.xstream.XStream.setupConverters : specialinvoke r0.<com.thoughtworks.xstream.XStream: void dynamicallyRegisterConverter(java.lang.String,int,java.lang.Class[],java.lang.Object[])>("com.thoughtworks.xstream.converters.extended.CurrencyConverter", 0, null, null)
com.thoughtworks.xstream.XStream.setupConverters : $r52 = new com.thoughtworks.xstream.converters.extended.SqlDateConverter
com.thoughtworks.xstream.XStream.setupConverters : $r67 = newarray (java.lang.Class)[1]
com.thoughtworks.xstream.XStream.setupConverters : $r29 = new com.thoughtworks.xstream.converters.basic.StringConverter
com.thoughtworks.xstream.XStream.setupConverters : $r64 = new com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter
com.thoughtworks.xstream.XStream.setupConverters : $r15 = new com.thoughtworks.xstream.converters.reflection.SerializableConverter
com.thoughtworks.xstream.XStream.setupConverters : $r80 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupConverters : $r38 = new com.thoughtworks.xstream.converters.collections.CharArrayConverter
com.thoughtworks.xstream.XStream.setupConverters : $r28 = new com.thoughtworks.xstream.converters.basic.ByteConverter
com.thoughtworks.xstream.XStream.setupConverters : $r25 = new com.thoughtworks.xstream.converters.basic.ShortConverter
com.thoughtworks.xstream.XStream.setupConverters : $r72 = newarray (java.lang.Class)[1]
com.thoughtworks.xstream.XStream.setupConverters : $r21 = new com.thoughtworks.xstream.converters.basic.IntConverter
com.thoughtworks.xstream.XStream.setupConverters : $r43 = new com.thoughtworks.xstream.converters.collections.TreeMapConverter
com.thoughtworks.xstream.XStream.setupConverters : $r20 = new com.thoughtworks.xstream.converters.basic.NullConverter
com.thoughtworks.xstream.XStream.setupConverters : $r65 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupConverters : specialinvoke r0.<com.thoughtworks.xstream.XStream: void dynamicallyRegisterConverter(java.lang.String,int,java.lang.Class[],java.lang.Object[])>("com.thoughtworks.xstream.converters.extended.CharsetConverter", 0, null, null)
com.thoughtworks.xstream.XStream.setupConverters : $z2 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is15()>()
com.thoughtworks.xstream.XStream.setupConverters : $r27 = new com.thoughtworks.xstream.converters.basic.BooleanConverter
com.thoughtworks.xstream.XStream.setupConverters : $z0 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is15()>()
com.thoughtworks.xstream.XStream.setupConverters : $r18 = new com.thoughtworks.xstream.converters.reflection.ExternalizableConverter
com.thoughtworks.xstream.XStream.setupConverters : $r77 = newarray (java.lang.Class)[1]
com.thoughtworks.xstream.XStream.setupConverters : $r61 = new com.thoughtworks.xstream.converters.extended.ColorConverter
com.thoughtworks.xstream.XStream.setupConverters : $r60 = new com.thoughtworks.xstream.converters.extended.FontConverter
com.thoughtworks.xstream.XStream.setupConverters : $z1 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is14()>()
com.thoughtworks.xstream.XStream.setupConverters : $r10 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.DefaultConverterLookup converterLookup>
com.thoughtworks.xstream.XStream.setupConverters : $r86 = new com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker
com.thoughtworks.xstream.XStream.setupConverters : $r3 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupConverters : $r22 = new com.thoughtworks.xstream.converters.basic.FloatConverter
com.thoughtworks.xstream.XStream.setupConverters : $r63 = new com.thoughtworks.xstream.converters.extended.LocaleConverter
com.thoughtworks.xstream.XStream.setupConverters : $r47 = new com.thoughtworks.xstream.converters.collections.PropertiesConverter
com.thoughtworks.xstream.XStream.setupConverters : $r50 = new com.thoughtworks.xstream.converters.extended.SqlTimestampConverter
com.thoughtworks.xstream.XStream.setupConverters : $r35 = new com.thoughtworks.xstream.converters.basic.BigDecimalConverter
com.thoughtworks.xstream.converters.extended.CharsetConverter.canConvert : $r2 = class "java/nio/charset/Charset"
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $z0 = staticinvoke <net.sf.cglib.proxy.Enhancer: boolean isEnhanced(java.lang.Class)>(r1)
com.thoughtworks.xstream.XStream.aliasType : $r4 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper>
com.thoughtworks.xstream.XStream.aliasType : $r12 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper>
com.thoughtworks.xstream.core.JVM.isSun : $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor")
com.thoughtworks.xstream.converters.extended.SqlTimestampConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/sql/Timestamp")
com.thoughtworks.xstream.converters.SingleValueConverterWrapper.unmarshal : $r3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>()
com.thoughtworks.xstream.XStream.marshal : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)>(r1, r2, null)
com.thoughtworks.xstream.XStream.marshal : $r4 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.MarshallingStrategy marshallingStrategy>
com.thoughtworks.xstream.core.TreeUnmarshaller.getRequiredType : $r1 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.core.util.FastStack types>
com.thoughtworks.xstream.io.ReaderWrapper.moveDown : $r1 = r0.<com.thoughtworks.xstream.io.ReaderWrapper: com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped>
com.thoughtworks.xstream.mapper.DynamicProxyMapper.serializedClass : $r3 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.DynamicProxyMapper.serializedClass : $z0 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(r1)
com.thoughtworks.xstream.converters.extended.StackTraceElementConverter.canConvert : $r2 = class "java/lang/StackTraceElement"
com.thoughtworks.xstream.XStream.addDefaultImplementation : $r12 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper>
com.thoughtworks.xstream.XStream.addDefaultImplementation : $r4 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper>
com.thoughtworks.xstream.io.path.PathTracker.pushElement : $r6 = r0.<com.thoughtworks.xstream.io.path.PathTracker: java.util.Map[] indexMapStack>
com.thoughtworks.xstream.io.path.PathTracker.pushElement : $r3 = r0.<com.thoughtworks.xstream.io.path.PathTracker: java.lang.String[] pathStack>
com.thoughtworks.xstream.io.path.PathTracker.pushElement : $r7 = new java.lang.Integer
com.thoughtworks.xstream.io.path.PathTracker.pushElement : r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> = null
com.thoughtworks.xstream.io.path.PathTracker.pushElement : $r4 = r0.<com.thoughtworks.xstream.io.path.PathTracker: java.util.Map[] indexMapStack>
com.thoughtworks.xstream.io.path.PathTracker.pushElement : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
com.thoughtworks.xstream.io.path.PathTracker.pushElement : $r5 = new java.util.HashMap
com.thoughtworks.xstream.io.path.PathTracker.pushElement : $i10 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.io.path.PathTracker.pushElement : if r2 != null goto $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
com.thoughtworks.xstream.io.path.PathTracker.pushElement : $r11 = new java.lang.Integer
com.thoughtworks.xstream.io.path.PathTracker.pushElement : $i0 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.converters.collections.PropertiesConverter.canConvert : if class "java/util/Properties" != r1 goto $z0 = 0
com.thoughtworks.xstream.converters.enums.EnumMapConverter.unmarshal : return r4
com.thoughtworks.xstream.converters.enums.EnumMapConverter.unmarshal : virtualinvoke r0.<com.thoughtworks.xstream.converters.enums.EnumMapConverter: void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map)>(r1, r2, r4)
com.thoughtworks.xstream.converters.enums.EnumMapConverter.unmarshal : $r9 = new java.util.EnumMap
com.thoughtworks.xstream.converters.enums.EnumMapConverter.unmarshal : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.converters.enums.EnumMapConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : $r2 = <com.thoughtworks.xstream.mapper.ArrayMapper: java.util.Collection BOXED_TYPES>
com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> = i0
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $r3 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Set set>
com.thoughtworks.xstream.core.util.FastStack.popSilently : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.finishTag : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean tagIsEmpty> = 0
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.finishTag : $z0 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean tagInProgress>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.finishTag : $r1 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.finishTag : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean tagInProgress> = 0
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.finishTag : virtualinvoke r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void endOfLine()>()
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.finishTag : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean readyForNewLine> = 0
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.finishTag : $z1 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean readyForNewLine>
com.thoughtworks.xstream.io.WriterWrapper.startNode : $r2 = r0.<com.thoughtworks.xstream.io.WriterWrapper: com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped>
com.thoughtworks.xstream.io.WriterWrapper.startNode : $r3 = r0.<com.thoughtworks.xstream.io.WriterWrapper: com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped>
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if i0 <= 0 goto $r13 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : i0 = 0
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r13 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("-array")
com.thoughtworks.xstream.converters.extended.FileConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/io/File")
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.newInstance : $r8 = r2[i0]
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.newInstance : $r6 = r2[i0]
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.newInstance : $r4 = r2[i0]
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.newInstance : i0 = 0
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider.newInstance : r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>()
com.thoughtworks.xstream.converters.enums.EnumConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Class: boolean isEnum()>()
com.thoughtworks.xstream.core.TreeUnmarshaller.start : return r4
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r7 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.io.HierarchicalStreamReader reader>
com.thoughtworks.xstream.core.TreeUnmarshaller.start : r4 = virtualinvoke r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, r3)
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r10 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.TreeUnmarshaller.start : if r2 != null goto $r13 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.TreeUnmarshaller.start : r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = r1
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r14 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.core.util.PrioritizedList validationList>
com.thoughtworks.xstream.core.JVM.isHPUX : $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor")
com.thoughtworks.xstream.XStream.toXML : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void toXML(java.lang.Object,java.io.Writer)>(r1, r3)
com.thoughtworks.xstream.XStream.toXML : $r4 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.io.HierarchicalStreamDriver hierarchicalStreamDriver>
com.thoughtworks.xstream.XStream.toXML : $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>()
com.thoughtworks.xstream.XStream.toXML : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void flush()>()
com.thoughtworks.xstream.XStream.toXML : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>(r1, r3)
com.thoughtworks.xstream.XStream.toXML : $r2 = new java.io.StringWriter
com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Class: boolean isArray()>()
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : $r5 = r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.util.Map implToType>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.addDefaultImplementation : $r3 = r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.util.Map typeToImpl>
com.thoughtworks.xstream.io.xml.XppReader.pullNextEvent : $b2 = 2
com.thoughtworks.xstream.io.xml.XppReader.pullNextEvent : $b3 = 3
com.thoughtworks.xstream.io.xml.XppReader.pullNextEvent : $r2 = r0.<com.thoughtworks.xstream.io.xml.XppReader: org.xmlpull.v1.XmlPullParser parser>
com.thoughtworks.xstream.io.xml.XppReader.pullNextEvent : $b1 = 1
com.thoughtworks.xstream.converters.extended.LocaleConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/Locale")
com.thoughtworks.xstream.io.path.PathTrackingReader.moveDown : specialinvoke r0.<com.thoughtworks.xstream.io.ReaderWrapper: void moveDown()>()
com.thoughtworks.xstream.io.path.PathTrackingReader.moveDown : $r1 = r0.<com.thoughtworks.xstream.io.path.PathTrackingReader: com.thoughtworks.xstream.io.path.PathTracker pathTracker>
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $r2 = <java.lang.Double: java.lang.Class TYPE>
com.thoughtworks.xstream.converters.extended.ThrowableConverter.canConvert : $r2 = class "java/lang/Throwable"
com.thoughtworks.xstream.io.xml.AbstractPullReader.hasMoreChildren : virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: void mark()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.hasMoreChildren : virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: void reset()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.hasMoreChildren : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r1 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>()", "com.thoughtworks.xstream.io.xml.AbstractPullReader.hasMoreChildren")]
com.thoughtworks.xstream.io.xml.AbstractPullReader.hasMoreChildren : $r1 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.hasMoreChildren : return 1
com.thoughtworks.xstream.io.xml.AbstractPullReader.hasMoreChildren : return 0
com.thoughtworks.xstream.mapper.DefaultMapper.realClass : $r4 = r0.<com.thoughtworks.xstream.mapper.DefaultMapper: java.lang.ClassLoader classLoader>
com.thoughtworks.xstream.converters.basic.ByteConverter.canConvert : $r2 = <java.lang.Byte: java.lang.Class TYPE>
com.thoughtworks.xstream.XStream.buildMapperDynamically : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r2)
com.thoughtworks.xstream.XStream.buildMapperDynamically : $r8 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r3)
com.thoughtworks.xstream.XStream.buildMapperDynamically : $r6 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.util.ClassLoaderReference classLoaderReference>
com.thoughtworks.xstream.core.util.FastStack.hasStuff : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.XStream.setMarshallingStrategy : r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.MarshallingStrategy marshallingStrategy> = r1
com.thoughtworks.xstream.mapper.ClassAliasingMapper.addClassAlias : $r6 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map classToName>
com.thoughtworks.xstream.mapper.ClassAliasingMapper.addClassAlias : $r3 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map nameToType>
com.thoughtworks.xstream.io.xml.AbstractPullReader.reset : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack lookback>
com.thoughtworks.xstream.io.xml.AbstractPullReader.reset : r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: boolean marked> = 0
com.thoughtworks.xstream.io.xml.AbstractPullReader.reset : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack lookahead>
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : return 0
com.thoughtworks.xstream.mapper.MapperWrapper.realClass : $r2 = r0.<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper wrapped>
com.thoughtworks.xstream.XStream.addImmutableType : $r11 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.ImmutableTypesMapper immutableTypesMapper>
com.thoughtworks.xstream.XStream.addImmutableType : $r3 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.ImmutableTypesMapper immutableTypesMapper>
com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper.hashCode : $r1 = r0.<com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper: java.lang.Object obj>
com.thoughtworks.xstream.io.xml.XppReader.createParser : $r1 = new org.xmlpull.mxp1.MXParser
com.thoughtworks.xstream.converters.collections.CharArrayConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Class: boolean isArray()>()
com.thoughtworks.xstream.mapper.AttributeAliasingMapper.aliasForAttribute : $r3 = r0.<com.thoughtworks.xstream.mapper.AttributeAliasingMapper: java.util.Map nameToAlias>
com.thoughtworks.xstream.mapper.AttributeAliasingMapper.aliasForAttribute : if r2 != null goto $r5 = r2
com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller.getCurrentReferenceKey : $r1 = r0.<com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller: com.thoughtworks.xstream.io.path.PathTracker pathTracker>
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $c2 = r0.<com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper: char dollarReplacementInClass>
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : return r8
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper.unescapeClassName : $r2 = new java.lang.StringBuilder
com.thoughtworks.xstream.io.xml.XppReader.pullElementName : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppReader: org.xmlpull.v1.XmlPullParser parser>
com.thoughtworks.xstream.converters.enums.EnumSetConverter.canConvert : $r2 = class "java/util/EnumSet"
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.setValue : $r2 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.setValue : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean tagIsEmpty> = 0
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.setValue : specialinvoke r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void finishTag()>()
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.setValue : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean readyForNewLine> = 0
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r11 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r10 = <java.lang.Short: java.lang.Class TYPE>
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/io/File")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/Short")
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r5 = <java.lang.Character: java.lang.Class TYPE>
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r1 = <java.lang.Boolean: java.lang.Class TYPE>
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/net/URL")
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r8 = <java.lang.Integer: java.lang.Class TYPE>
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r9 = <java.lang.Long: java.lang.Class TYPE>
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/Byte")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/math/BigDecimal")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(r2)
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r3 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.ImmutableTypesMapper immutableTypesMapper>
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r4 = <java.lang.Byte: java.lang.Class TYPE>
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/Integer")
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r6 = <java.lang.Double: java.lang.Class TYPE>
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/Character")
com.thoughtworks.xstream.XStream.setupImmutableTypes : $r7 = <java.lang.Float: java.lang.Class TYPE>
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/math/BigInteger")
com.thoughtworks.xstream.XStream.setupImmutableTypes : $z0 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is14()>()
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/Class")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/awt/font/TextAttribute")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/Double")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/Float")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/String")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/Boolean")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "java/lang/Long")
com.thoughtworks.xstream.XStream.setupImmutableTypes : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addImmutableType(java.lang.Class)>(class "com/thoughtworks/xstream/mapper/Mapper$Null")
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.hasNext : $r1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator: java.util.Iterator iterator>
com.thoughtworks.xstream.core.util.ClassLoaderReference.getReference : $r1 = r0.<com.thoughtworks.xstream.core.util.ClassLoaderReference: java.lang.ClassLoader reference>
com.thoughtworks.xstream.converters.extended.FontConverter.canConvert : $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.core.TreeMarshaller.start : $r7 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.TreeMarshaller.start : if r1 != null goto $r7 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.TreeMarshaller.start : $r12 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.TreeMarshaller.start : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = r2
com.thoughtworks.xstream.core.TreeMarshaller.start : virtualinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object)>(r1)
com.thoughtworks.xstream.io.ReaderWrapper.getValue : $r1 = r0.<com.thoughtworks.xstream.io.ReaderWrapper: com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped>
com.thoughtworks.xstream.converters.reflection.SerializableConverter.canConvert : $z0 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: boolean isSerializable(java.lang.Class)>(r1)
com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.converters.extended.CurrencyConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/Currency")
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.writeText : specialinvoke r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void writeText(java.lang.String)>(r2)
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.writeText : i1 = 0
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.writeText : $r16 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.writeText : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1)
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.writeText : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.writeText : lookupswitch(c2) {     case 0: goto $r2 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>;     case 13: goto $r14 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>;     case 34: goto $r10 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>;     case 38: goto $r4 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>;     case 39: goto $r12 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>;     case 60: goto $r6 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>;     case 62: goto $r8 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>;     default: goto $r16 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>; }
com.thoughtworks.xstream.mapper.AttributeMapper.setConverterLookup : r0.<com.thoughtworks.xstream.mapper.AttributeMapper: com.thoughtworks.xstream.converters.ConverterLookup converterLookup> = r1
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r7 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r9 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : r4 = (java.util.Map) r1
com.thoughtworks.xstream.XStream.alias : $r4 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper>
com.thoughtworks.xstream.XStream.alias : $r12 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper>
com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>(r1, r2, r3)
com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother : $r4 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.converters.ConverterLookup converterLookup>
com.thoughtworks.xstream.io.path.PathTrackingWriter.startNode : $r3 = r0.<com.thoughtworks.xstream.io.path.PathTrackingWriter: com.thoughtworks.xstream.io.path.PathTracker pathTracker>
com.thoughtworks.xstream.io.path.PathTrackingWriter.startNode : $r2 = r0.<com.thoughtworks.xstream.io.path.PathTrackingWriter: com.thoughtworks.xstream.io.path.PathTracker pathTracker>
com.thoughtworks.xstream.io.path.PathTrackingWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.WriterWrapper: void startNode(java.lang.String)>(r1)
com.thoughtworks.xstream.io.path.PathTrackingWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.WriterWrapper: void startNode(java.lang.String,java.lang.Class)>(r1, r2)
com.thoughtworks.xstream.io.path.PathTracker.popElement : r0.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path currentPath> = null
com.thoughtworks.xstream.io.path.PathTracker.popElement : $i1 = r0.<com.thoughtworks.xstream.io.path.PathTracker: int pointer>
com.thoughtworks.xstream.io.path.PathTracker.popElement : $r1 = r0.<com.thoughtworks.xstream.io.path.PathTracker: java.util.Map[] indexMapStack>
com.thoughtworks.xstream.io.xml.XppReader.getAttribute : $r2 = r0.<com.thoughtworks.xstream.io.xml.XppReader: org.xmlpull.v1.XmlPullParser parser>
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.mapper : $r1 = r0.<com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.XStream.setupDefaultImplementations : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/util/GregorianCalendar", class "java/util/Calendar")
com.thoughtworks.xstream.XStream.setupDefaultImplementations : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/util/HashSet", class "java/util/Set")
com.thoughtworks.xstream.XStream.setupDefaultImplementations : $r1 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper>
com.thoughtworks.xstream.XStream.setupDefaultImplementations : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/util/ArrayList", class "java/util/List")
com.thoughtworks.xstream.XStream.setupDefaultImplementations : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void addDefaultImplementation(java.lang.Class,java.lang.Class)>(class "java/util/HashMap", class "java/util/Map")
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : $r8 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: com.thoughtworks.xstream.core.util.FastStack parentStack>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : $r7 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: com.thoughtworks.xstream.core.util.FastStack parentStack>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : if r5 == null goto $r23 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: com.thoughtworks.xstream.core.util.FastStack parentStack>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : r5 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object getCurrentReferenceKey()>()
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : $r19 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: com.thoughtworks.xstream.core.util.FastStack parentStack>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : r6 = specialinvoke r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter)>(r1, r2, r3)
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : return r6
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : $r10 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.util.Map values>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : $r9 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.util.Map values>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : $r12 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: com.thoughtworks.xstream.io.HierarchicalStreamReader reader>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : if r4 == null goto $r12 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: com.thoughtworks.xstream.io.HierarchicalStreamReader reader>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : $r23 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: com.thoughtworks.xstream.core.util.FastStack parentStack>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : $r21 = r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.util.Map values>
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert : if r15 == null goto r5 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller: java.lang.Object getCurrentReferenceKey()>()
com.thoughtworks.xstream.mapper.ArrayMapper.serializedClass : return r4
com.thoughtworks.xstream.mapper.ArrayMapper.serializedClass : if r4 != null goto $i0 = virtualinvoke r3.<java.lang.StringBuffer: int length()>()
com.thoughtworks.xstream.mapper.ArrayMapper.serializedClass : r4 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.serializedClass : r4 = specialinvoke r0.<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.String boxedTypeName(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.serializedClass : $z0 = virtualinvoke r1.<java.lang.Class: boolean isArray()>()
com.thoughtworks.xstream.mapper.ArrayMapper.serializedClass : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.mapper.ArrayMapper.serializedClass : $i0 = virtualinvoke r3.<java.lang.StringBuffer: int length()>()
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.serializedClass : $r3 = r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.util.Map implToType>
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.serializedClass : if r2 != null goto $r5 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.String serializedClass(java.lang.Class)>(r2)
com.thoughtworks.xstream.converters.basic.NullConverter.canConvert : if r1 == null goto $z1 = 1
com.thoughtworks.xstream.core.ReferenceByXPathMarshaller.createReferenceKey : return r1
com.thoughtworks.xstream.converters.basic.StringBufferConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/StringBuffer")
com.thoughtworks.xstream.io.WriterWrapper.endNode : $r1 = r0.<com.thoughtworks.xstream.io.WriterWrapper: com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped>
com.thoughtworks.xstream.converters.collections.TreeSetConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/TreeSet")
com.thoughtworks.xstream.mapper.DefaultMapper.isImmutableValueType : return 0
com.thoughtworks.xstream.converters.collections.CollectionConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/ArrayList")
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.defaultImplementationOf : $r6 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class defaultImplementationOf(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper.defaultImplementationOf : $r2 = r0.<com.thoughtworks.xstream.mapper.DefaultImplementationsMapper: java.util.Map typeToImpl>
com.thoughtworks.xstream.core.JVM.loadClass : return r2
com.thoughtworks.xstream.core.JVM.loadClass : $r7 = r0.<com.thoughtworks.xstream.core.JVM: java.util.Map loaderCache>
com.thoughtworks.xstream.core.JVM.loadClass : $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.core.JVM.loadClass : if r2 != null goto return r2
com.thoughtworks.xstream.core.JVM.loadClass : $r3 = r0.<com.thoughtworks.xstream.core.JVM: java.util.Map loaderCache>
com.thoughtworks.xstream.core.util.PrioritizedList.iterator : $r1 = new com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator
com.thoughtworks.xstream.core.JVM.is14 : $f0 = <com.thoughtworks.xstream.core.JVM: float majorJavaVersion>
com.thoughtworks.xstream.io.path.Path.hashCode : return i0
com.thoughtworks.xstream.io.path.Path.hashCode : i1 = 0
com.thoughtworks.xstream.io.path.Path.hashCode : i0 = 543645643
com.thoughtworks.xstream.io.path.Path.hashCode : $i3 = 29 * i0
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "com/thoughtworks/xstream/mapper/DynamicProxyMapper$DynamicProxy")
com.thoughtworks.xstream.core.JVM.is15 : $f0 = <com.thoughtworks.xstream.core.JVM: float majorJavaVersion>
com.thoughtworks.xstream.converters.extended.SqlDateConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/sql/Date")
com.thoughtworks.xstream.io.ReaderWrapper.getNodeName : $r1 = r0.<com.thoughtworks.xstream.io.ReaderWrapper: com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped>
com.thoughtworks.xstream.converters.basic.LongConverter.canConvert : $r2 = <java.lang.Long: java.lang.Class TYPE>
com.thoughtworks.xstream.io.xml.XppDriver.createReader : specialinvoke r0.<com.thoughtworks.xstream.io.xml.XppDriver: void loadLibrary()>()
com.thoughtworks.xstream.io.xml.XppDriver.createReader : $r2 = new com.thoughtworks.xstream.io.xml.XppReader
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $z0 = r6 instanceof com.thoughtworks.xstream.converters.Converter
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r10 = (com.thoughtworks.xstream.converters.SingleValueConverter) r6
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r7 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.util.ClassLoaderReference classLoaderReference>
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r6 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r3)
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r2)
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : goto [?= return]
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $z1 = r6 instanceof com.thoughtworks.xstream.converters.SingleValueConverter
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r9 = (com.thoughtworks.xstream.converters.Converter) r6
com.thoughtworks.xstream.converters.basic.BooleanConverter.canConvert : $r2 = <java.lang.Boolean: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.ImmutableTypesMapper.isImmutableValueType : $z1 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: boolean isImmutableValueType(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.ImmutableTypesMapper.isImmutableValueType : return 1
com.thoughtworks.xstream.mapper.ImmutableTypesMapper.isImmutableValueType : $r2 = r0.<com.thoughtworks.xstream.mapper.ImmutableTypesMapper: java.util.Set immutableTypes>
com.thoughtworks.xstream.converters.basic.URLConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/net/URL")
com.thoughtworks.xstream.converters.basic.ShortConverter.canConvert : $r2 = <java.lang.Short: java.lang.Class TYPE>
com.thoughtworks.xstream.mapper.MapperWrapper.aliasForAttribute : $r2 = r0.<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper wrapped>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean tagIsEmpty> = 0
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : virtualinvoke r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void startNode(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean tagInProgress> = 1
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : specialinvoke r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void finishTag()>()
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : $r5 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : $r3 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : $i0 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: int depth>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean readyForNewLine> = 1
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : $r4 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean tagIsEmpty> = 1
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.startNode : r2 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: java.lang.String escapeXmlName(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.ImmutableTypesMapper.addImmutableType : $r2 = r0.<com.thoughtworks.xstream.mapper.ImmutableTypesMapper: java.util.Set immutableTypes>
com.thoughtworks.xstream.converters.basic.DateConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/Date")
com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper.realClass : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper: java.lang.String unescapeClassName(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.XppDriver.createWriter : $r2 = new com.thoughtworks.xstream.io.xml.PrettyPrintWriter
com.thoughtworks.xstream.converters.enums.SimpleEnum.values : $r0 = <com.thoughtworks.xstream.converters.enums.SimpleEnum: com.thoughtworks.xstream.converters.enums.SimpleEnum[] $VALUES>
com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy.unmarshal : $r6 = new com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller
com.thoughtworks.xstream.core.JVM.canUseSun14ReflectionProvider : $z0 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean isSun()>()
com.thoughtworks.xstream.converters.collections.BitSetConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/BitSet")
com.thoughtworks.xstream.mapper.MapperWrapper.isImmutableValueType : $r2 = r0.<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper wrapped>
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("short", class "java/lang/Short")
com.thoughtworks.xstream.XStream.setupAliases : $r5 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("sql-date", class "java/sql/Date")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("null", class "com/thoughtworks/xstream/mapper/Mapper$Null")
com.thoughtworks.xstream.XStream.setupAliases : $r16 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("object", class "java/lang/Object")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("int", class "java/lang/Integer")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("awt-text-attribute", class "java/awt/font/TextAttribute")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("url", class "java/net/URL")
com.thoughtworks.xstream.XStream.setupAliases : $r10 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("list", class "java/util/List")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("auth-subject", r1)
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("java-class", class "java/lang/Class")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("sql-timestamp", class "java/sql/Timestamp")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("string-buffer", class "java/lang/StringBuffer")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("map", class "java/util/Map")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("constructor", class "java/lang/reflect/Constructor")
com.thoughtworks.xstream.XStream.setupAliases : $r7 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("boolean", class "java/lang/Boolean")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("hashtable", class "java/util/Hashtable")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("number", class "java/lang/Number")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("bit-set", class "java/util/BitSet")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("set", class "java/util/Set")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("method", class "java/lang/reflect/Method")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("sql-time", class "java/sql/Time")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("date", class "java/util/Date")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("file", class "java/io/File")
com.thoughtworks.xstream.XStream.setupAliases : if r1 == null goto $z0 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is14()>()
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("tree-set", class "java/util/TreeSet")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("long", class "java/lang/Long")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("big-int", class "java/math/BigInteger")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("float", class "java/lang/Float")
com.thoughtworks.xstream.XStream.setupAliases : $r8 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("entry", class "java/util/Map$Entry")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("char", class "java/lang/Character")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("properties", class "java/util/Properties")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("double", class "java/lang/Double")
com.thoughtworks.xstream.XStream.setupAliases : $r20 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : $z1 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is15()>()
com.thoughtworks.xstream.XStream.setupAliases : $z0 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is14()>()
com.thoughtworks.xstream.XStream.setupAliases : $r18 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : $r2 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper>
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("gregorian-calendar", class "java/util/Calendar")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("big-decimal", class "java/math/BigDecimal")
com.thoughtworks.xstream.XStream.setupAliases : $r12 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : $r3 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("vector", class "java/util/Vector")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("locale", class "java/util/Locale")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("string", class "java/lang/String")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("linked-list", class "java/util/LinkedList")
com.thoughtworks.xstream.XStream.setupAliases : $r14 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("tree-map", class "java/util/TreeMap")
com.thoughtworks.xstream.XStream.setupAliases : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void alias(java.lang.String,java.lang.Class)>("byte", class "java/lang/Byte")
com.thoughtworks.xstream.converters.SingleValueConverterWrapper.marshal : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: java.lang.String toString(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.util.CompositeClassLoader.loadClass : $r5 = r0.<com.thoughtworks.xstream.core.util.CompositeClassLoader: java.util.List classLoaders>
com.thoughtworks.xstream.core.util.CompositeClassLoader.loadClass : $r7 = virtualinvoke r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1)
com.thoughtworks.xstream.core.util.CompositeClassLoader.loadClass : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : if r2 == null goto (branch)
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : r3 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : r1 = null
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : if r4 == null goto (branch)
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : if r1 != null goto (branch)
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : $i0 = r3.<com.thoughtworks.xstream.io.xml.AbstractPullReader$Event: int type>
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: void mark()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: void reset()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : goto [?= virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: void reset()>()]
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : if r1 != null goto $r8 = r1
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : r4 = r3.<com.thoughtworks.xstream.io.xml.AbstractPullReader$Event: java.lang.String value>
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : r2 = null
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : r1 = r4
com.thoughtworks.xstream.io.xml.AbstractPullReader.getValue : goto [?= r3 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent()>()]
com.thoughtworks.xstream.converters.SingleValueConverterWrapper.fromString : $r2 = r0.<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: com.thoughtworks.xstream.converters.SingleValueConverter wrapped>
com.thoughtworks.xstream.converters.basic.FloatConverter.canConvert : $r2 = <java.lang.Float: java.lang.Class TYPE>
com.thoughtworks.xstream.io.path.PathTrackingWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.WriterWrapper: void endNode()>()
com.thoughtworks.xstream.io.path.PathTrackingWriter.endNode : $r1 = r0.<com.thoughtworks.xstream.io.path.PathTrackingWriter: com.thoughtworks.xstream.io.path.PathTracker pathTracker>
com.thoughtworks.xstream.io.xml.AbstractPullReader.mark : r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: boolean marked> = 1
com.thoughtworks.xstream.mapper.ClassAliasingMapper.realClass : if r2 == null goto $r5 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.ClassAliasingMapper.realClass : $r3 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map nameToType>
com.thoughtworks.xstream.mapper.ClassAliasingMapper.realClass : $r5 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.ClassAliasingMapper.realClass : r1 = r2
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 36 goto (branch)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i1 = 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 95 goto virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2)
com.thoughtworks.xstream.XStream.buildMapper : $r28 = new com.thoughtworks.xstream.mapper.ImmutableTypesMapper
com.thoughtworks.xstream.XStream.buildMapper : $z1 = staticinvoke <com.thoughtworks.xstream.core.JVM: boolean is15()>()
com.thoughtworks.xstream.XStream.buildMapper : return r33
com.thoughtworks.xstream.XStream.buildMapper : if z0 == 0 goto $r5 = new com.thoughtworks.xstream.mapper.ClassAliasingMapper
com.thoughtworks.xstream.XStream.buildMapper : $r7 = new com.thoughtworks.xstream.mapper.FieldAliasingMapper
com.thoughtworks.xstream.XStream.buildMapper : $r17 = newarray (java.lang.Class)[1]
com.thoughtworks.xstream.XStream.buildMapper : $r21 = new com.thoughtworks.xstream.mapper.EnumMapper
com.thoughtworks.xstream.XStream.buildMapper : $r13 = new com.thoughtworks.xstream.mapper.ImplicitCollectionMapper
com.thoughtworks.xstream.XStream.buildMapper : $r26 = new com.thoughtworks.xstream.mapper.DefaultImplementationsMapper
com.thoughtworks.xstream.XStream.buildMapper : $r11 = new com.thoughtworks.xstream.mapper.AttributeMapper
com.thoughtworks.xstream.XStream.buildMapper : $r19 = new com.thoughtworks.xstream.mapper.DynamicProxyMapper
com.thoughtworks.xstream.XStream.buildMapper : $r30 = (com.thoughtworks.xstream.mapper.MapperWrapper) r29
com.thoughtworks.xstream.XStream.buildMapper : $r24 = new com.thoughtworks.xstream.mapper.ArrayMapper
com.thoughtworks.xstream.XStream.buildMapper : $r15 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.JVM jvm>
com.thoughtworks.xstream.XStream.buildMapper : $r32 = new com.thoughtworks.xstream.mapper.CachingMapper
com.thoughtworks.xstream.XStream.buildMapper : $r1 = new com.thoughtworks.xstream.mapper.DefaultMapper
com.thoughtworks.xstream.XStream.buildMapper : $r9 = new com.thoughtworks.xstream.mapper.AttributeAliasingMapper
com.thoughtworks.xstream.XStream.buildMapper : $r22 = new com.thoughtworks.xstream.mapper.OuterClassMapper
com.thoughtworks.xstream.XStream.buildMapper : $r5 = new com.thoughtworks.xstream.mapper.ClassAliasingMapper
com.thoughtworks.xstream.XStream.buildMapper : $r4 = new com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i5 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i0 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : r2 = (com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem) r1
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i2 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: void finishTag()>()
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endNode : $r6 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endNode : $r10 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endNode : $r11 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endNode : $i2 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: int depth>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endNode : $z0 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean tagIsEmpty>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endNode : $i0 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: int depth>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endNode : r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: boolean readyForNewLine> = 1
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.endNode : $r4 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveUp : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveUp : specialinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: void move()>()
com.thoughtworks.xstream.io.xml.AbstractPullReader.moveUp : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractPullReader: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : return r2
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : $r5 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map classToName>
com.thoughtworks.xstream.mapper.ClassAliasingMapper.serializedClass : if r2 == null goto $r8 = r0.<com.thoughtworks.xstream.mapper.ClassAliasingMapper: java.util.Map typeToName>
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : return r5
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r6 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap>
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r8 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()", "com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType")]
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $z1 = interfaceinvoke r5.<com.thoughtworks.xstream.converters.Converter: boolean canConvert(java.lang.Class)>(r3)
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r11 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap>
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r9 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.core.util.PrioritizedList converters>
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : if r2 == null goto $r8 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $z1 = interfaceinvoke r1.<com.thoughtworks.xstream.converters.Converter: boolean canConvert(java.lang.Class)>(r3)
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r5 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap>
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r4 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.core.util.PrioritizedList converters>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if r4 == null goto r5 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path)>(r3)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r10 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r26 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r9 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.PathTracker pathTracker>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r6 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.mapper.Mapper getMapper()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r25 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r5 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path)>(r3)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void fireValidReference(java.lang.Object)>(r5)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r22 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r8 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath> = r3
com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.io.xml.XppReader.pullText : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppReader: org.xmlpull.v1.XmlPullParser parser>
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r4 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String underscoreReplacement>
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i1 = 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r7 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String dollarReplacement>
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r11 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.core.util.QuickWriter.flush : $r4 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: java.io.Writer writer>
com.thoughtworks.xstream.core.util.QuickWriter.flush : r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer> = 0
com.thoughtworks.xstream.core.util.QuickWriter.flush : $r2 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: java.io.Writer writer>
com.thoughtworks.xstream.core.util.QuickWriter.flush : goto [?= return]
com.thoughtworks.xstream.converters.reflection.ReflectionConverter.canConvert : return 1
com.thoughtworks.xstream.mapper.CGLIBMapper.serializedClass : $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
