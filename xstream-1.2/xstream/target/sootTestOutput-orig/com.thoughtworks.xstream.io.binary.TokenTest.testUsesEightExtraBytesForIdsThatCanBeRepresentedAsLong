com.thoughtworks.xstream.io.binary.Token$Formatter.contructToken : tableswitch(b0) {     case 2: goto $r2 = new com.thoughtworks.xstream.io.binary.Token$MapIdToValue;     case 3: goto $r1 = new com.thoughtworks.xstream.io.binary.Token$StartNode;     case 4: goto $r4 = new com.thoughtworks.xstream.io.binary.Token$EndNode;     case 5: goto $r3 = new com.thoughtworks.xstream.io.binary.Token$Attribute;     case 6: goto $r5 = new com.thoughtworks.xstream.io.binary.Token$Value;     default: goto $r6 = new com.thoughtworks.xstream.io.StreamException; }
com.thoughtworks.xstream.io.binary.Token$Formatter.contructToken : $r1 = new com.thoughtworks.xstream.io.binary.Token$StartNode
com.thoughtworks.xstream.io.binary.Token$Formatter.read : return r2
com.thoughtworks.xstream.io.binary.Token$Formatter.read : virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: void readFrom(java.io.DataInput,byte)>(r1, b2)
com.thoughtworks.xstream.io.binary.Token$Formatter.read : $b4 = b0 & 56
com.thoughtworks.xstream.io.binary.Token$Formatter.read : r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.Token$Formatter: com.thoughtworks.xstream.io.binary.Token contructToken(byte)>(b1)
com.thoughtworks.xstream.io.binary.Token$Formatter.read : b0 = interfaceinvoke r1.<java.io.DataInput: byte readByte()>()
com.thoughtworks.xstream.io.binary.Token$Formatter.read : $b3 = b0 & 7
com.thoughtworks.xstream.io.binary.Token$Formatter.write : $b5 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: byte getType()>()
com.thoughtworks.xstream.io.binary.Token$Formatter.write : b1 = 32
com.thoughtworks.xstream.io.binary.Token$Formatter.write : $b4 = l0 cmp 4294967295L
com.thoughtworks.xstream.io.binary.Token$Formatter.write : $b2 = l0 cmp 255L
com.thoughtworks.xstream.io.binary.Token$Formatter.write : l0 = virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: long getId()>()
com.thoughtworks.xstream.io.binary.Token$Formatter.write : $b3 = l0 cmp 65535L
com.thoughtworks.xstream.io.binary.Token$Formatter.write : virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: void writeTo(java.io.DataOutput,byte)>(r1, b1)
com.thoughtworks.xstream.io.binary.Token.writeId : goto [?= return]
com.thoughtworks.xstream.io.binary.Token.writeId : $l11 = l0 + -9223372036854775808L
com.thoughtworks.xstream.io.binary.Token.writeId : lookupswitch(b1) {     case 8: goto $i3 = (int) l0;     case 16: goto $i6 = (int) l0;     case 24: goto $i9 = (int) l0;     case 32: goto $l11 = l0 + -9223372036854775808L;     default: goto $r7 = new java.lang.Error; }
com.thoughtworks.xstream.io.binary.Token.writeId : $b2 = l0 cmp 0L
com.thoughtworks.xstream.io.binary.Token.getId : $l0 = r0.<com.thoughtworks.xstream.io.binary.Token: long id>
com.thoughtworks.xstream.io.binary.Token.equals : if r0 != r1 goto (branch)
com.thoughtworks.xstream.io.binary.Token.equals : $b3 = r0.<com.thoughtworks.xstream.io.binary.Token: byte type>
com.thoughtworks.xstream.io.binary.Token.equals : $l0 = r0.<com.thoughtworks.xstream.io.binary.Token: long id>
com.thoughtworks.xstream.io.binary.Token.equals : r2 = (com.thoughtworks.xstream.io.binary.Token) r1
com.thoughtworks.xstream.io.binary.Token.equals : $r5 = r0.<com.thoughtworks.xstream.io.binary.Token: java.lang.String value>
com.thoughtworks.xstream.io.binary.Token.equals : if r1 == null goto return 0
com.thoughtworks.xstream.io.binary.Token.getType : $b0 = r0.<com.thoughtworks.xstream.io.binary.Token: byte type>
com.thoughtworks.xstream.io.binary.Token.readId : lookupswitch(b0) {     case 8: goto $b1 = interfaceinvoke r1.<java.io.DataInput: byte readByte()>();     case 16: goto $s4 = interfaceinvoke r1.<java.io.DataInput: short readShort()>();     case 24: goto $i7 = interfaceinvoke r1.<java.io.DataInput: int readInt()>();     case 32: goto $l10 = interfaceinvoke r1.<java.io.DataInput: long readLong()>();     default: goto $r2 = new java.lang.Error; }
com.thoughtworks.xstream.io.binary.Token.readId : $l10 = interfaceinvoke r1.<java.io.DataInput: long readLong()>()
com.thoughtworks.xstream.io.binary.Token$StartNode.writeTo : $l1 = r0.<com.thoughtworks.xstream.io.binary.Token$StartNode: long id>
com.thoughtworks.xstream.io.binary.Token$StartNode.readFrom : $l1 = virtualinvoke r0.<com.thoughtworks.xstream.io.binary.Token$StartNode: long readId(java.io.DataInput,byte)>(r1, b0)
