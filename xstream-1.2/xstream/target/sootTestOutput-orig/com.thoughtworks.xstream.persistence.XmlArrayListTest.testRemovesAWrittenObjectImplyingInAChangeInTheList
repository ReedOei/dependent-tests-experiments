com.thoughtworks.xstream.persistence.XmlArrayListTest$MockedStrategy.remove : $r2 = r0.<com.thoughtworks.xstream.persistence.XmlArrayListTest$MockedStrategy: java.util.Map map>
com.thoughtworks.xstream.persistence.XmlMap.put : $r3 = r0.<com.thoughtworks.xstream.persistence.XmlMap: com.thoughtworks.xstream.persistence.StreamStrategy streamStrategy>
com.thoughtworks.xstream.persistence.XmlMap.remove : $r2 = r0.<com.thoughtworks.xstream.persistence.XmlMap: com.thoughtworks.xstream.persistence.StreamStrategy streamStrategy>
com.thoughtworks.xstream.persistence.XmlArrayList.add : i3 = i1
com.thoughtworks.xstream.persistence.XmlArrayList.add : i1 = virtualinvoke r0.<com.thoughtworks.xstream.persistence.XmlArrayList: int size()>()
com.thoughtworks.xstream.persistence.XmlArrayList.add : $i4 = i1 + 1
com.thoughtworks.xstream.persistence.XmlArrayList.add : if i0 == i1 goto $i5 = i0
com.thoughtworks.xstream.persistence.XmlArrayList.add : $r15 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map>
com.thoughtworks.xstream.persistence.XmlArrayListTest$MockedStrategy.get : $r2 = r0.<com.thoughtworks.xstream.persistence.XmlArrayListTest$MockedStrategy: java.util.Map map>
com.thoughtworks.xstream.persistence.XmlArrayList.remove : i2 = i0
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r10 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map>
com.thoughtworks.xstream.persistence.XmlArrayList.remove : i1 = virtualinvoke r0.<com.thoughtworks.xstream.persistence.XmlArrayList: int size()>()
com.thoughtworks.xstream.persistence.XmlArrayList.remove : return r1
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r2 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map>
com.thoughtworks.xstream.persistence.XmlArrayList.remove : specialinvoke r0.<com.thoughtworks.xstream.persistence.XmlArrayList: void rangeCheck(int)>(i0)
com.thoughtworks.xstream.persistence.XmlArrayListTest$MockedStrategy.size : $r1 = r0.<com.thoughtworks.xstream.persistence.XmlArrayListTest$MockedStrategy: java.util.Map map>
com.thoughtworks.xstream.persistence.XmlArrayListTest$MockedStrategy.put : $r3 = r0.<com.thoughtworks.xstream.persistence.XmlArrayListTest$MockedStrategy: java.util.Map map>
com.thoughtworks.xstream.persistence.XmlArrayList.get : $r1 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map>
com.thoughtworks.xstream.persistence.XmlArrayList.get : specialinvoke r0.<com.thoughtworks.xstream.persistence.XmlArrayList: void rangeCheck(int)>(i0)
com.thoughtworks.xstream.persistence.XmlArrayList.rangeCheck : if i0 >= i1 goto $r2 = new java.lang.IndexOutOfBoundsException
com.thoughtworks.xstream.persistence.XmlArrayList.rangeCheck : i1 = virtualinvoke r0.<com.thoughtworks.xstream.persistence.XmlArrayList: int size()>()
com.thoughtworks.xstream.persistence.XmlMap.get : $r2 = r0.<com.thoughtworks.xstream.persistence.XmlMap: com.thoughtworks.xstream.persistence.StreamStrategy streamStrategy>
com.thoughtworks.xstream.persistence.XmlMap.size : $r1 = r0.<com.thoughtworks.xstream.persistence.XmlMap: com.thoughtworks.xstream.persistence.StreamStrategy streamStrategy>
com.thoughtworks.xstream.persistence.XmlArrayList.size : $r1 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map>
