com.thoughtworks.xstream.io.xml.Dom4JDriver.setOutputFormat : r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: org.dom4j.io.OutputFormat outputFormat> = r1 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : r2 = newarray (com.thoughtworks.xstream.io.HierarchicalStreamWriter)[1]
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : r2 = newarray (com.thoughtworks.xstream.io.HierarchicalStreamWriter)[1] >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r4 = new com.thoughtworks.xstream.io.xml.Dom4JDriver$1
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r4 = new com.thoughtworks.xstream.io.xml.Dom4JDriver$1 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : specialinvoke $r4.<com.thoughtworks.xstream.io.xml.Dom4JDriver$1: void <init>(com.thoughtworks.xstream.io.xml.Dom4JDriver,java.io.Writer,com.thoughtworks.xstream.io.HierarchicalStreamWriter[])>(r0, r1, r2)
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : specialinvoke $r4.<com.thoughtworks.xstream.io.xml.Dom4JDriver$1: void <init>(com.thoughtworks.xstream.io.xml.Dom4JDriver,java.io.Writer,com.thoughtworks.xstream.io.HierarchicalStreamWriter[])>(r0, r1, r2) >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : r3 = $r4
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : r3 = $r4 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r5 = new com.thoughtworks.xstream.io.xml.Dom4JWriter
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r5 = new com.thoughtworks.xstream.io.xml.Dom4JWriter >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r6 = new org.dom4j.io.XMLWriter
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r6 = new org.dom4j.io.XMLWriter >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r7 = r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: org.dom4j.io.OutputFormat outputFormat>
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r7 = r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: org.dom4j.io.OutputFormat outputFormat> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : specialinvoke $r6.<org.dom4j.io.XMLWriter: void <init>(java.io.Writer,org.dom4j.io.OutputFormat)>(r3, $r7)
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : specialinvoke $r6.<org.dom4j.io.XMLWriter: void <init>(java.io.Writer,org.dom4j.io.OutputFormat)>(r3, $r7) >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r8 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>()
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r8 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.Dom4JDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : specialinvoke $r5.<com.thoughtworks.xstream.io.xml.Dom4JWriter: void <init>(org.dom4j.io.XMLWriter,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>($r6, $r8)
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : specialinvoke $r5.<com.thoughtworks.xstream.io.xml.Dom4JWriter: void <init>(org.dom4j.io.XMLWriter,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>($r6, $r8) >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : r2[0] = $r5
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : r2[0] = $r5 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r9 = r2[0]
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : $r9 = r2[0] >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : return $r9
com.thoughtworks.xstream.io.xml.Dom4JDriver.createWriter : return $r9 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : $r3 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : $r3 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : $i0 = virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: int size()>()
com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : $i0 = virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: int size()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.size : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.size : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.size : return $i0
com.thoughtworks.xstream.core.util.FastStack.size : return $i0 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : if $i0 <= 0
com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : if $i0 <= 0 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : $r6 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : $r6 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: java.lang.String escapeXmlName(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: java.lang.String escapeXmlName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlWriter: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlWriter: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String escapeName(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String escapeName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r2 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : r3 = $r2
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i1 = 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i1 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if i1 >= i0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 36
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 36 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 95
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : if c2 != 95 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i1 = i1 + 1
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : i1 = i1 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : goto [?= (branch)]
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : return $r9
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.escapeName : return $r9 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : return $r3
com.thoughtworks.xstream.io.xml.AbstractXmlWriter.escapeXmlName : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : virtualinvoke $r6.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r7)
com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : virtualinvoke $r6.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r7) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean children> = 0
com.thoughtworks.xstream.io.xml.Dom4JWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean children> = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()
com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>() >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : $i0 = lengthof r2
com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : $i0 = lengthof r2 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : if $i0 <= 0
com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : if $i0 <= 0 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : specialinvoke r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: void startElement()>()
com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : specialinvoke r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: void startElement()>() >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $z0 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean started>
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $z0 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean started> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : if $z0 != 0
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r1 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.dom4j.io.XMLWriter writer>
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r1 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.dom4j.io.XMLWriter writer> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r2 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r2 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>()
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0
com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.peek : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.peek : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i2 = $i1 - 1
com.thoughtworks.xstream.core.util.FastStack.peek : $i2 = $i1 - 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = $r2[$i2]
com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = $r2[$i2] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : return $r1
com.thoughtworks.xstream.core.util.FastStack.peek : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r4 = (java.lang.String) $r3
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r4 = (java.lang.String) $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r5 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.xml.sax.helpers.AttributesImpl attributes>
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r5 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.xml.sax.helpers.AttributesImpl attributes> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : virtualinvoke $r1.<org.dom4j.io.XMLWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>("", "", $r4, $r5)
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : virtualinvoke $r1.<org.dom4j.io.XMLWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>("", "", $r4, $r5) >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r6 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.xml.sax.helpers.AttributesImpl attributes>
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : $r6 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.xml.sax.helpers.AttributesImpl attributes> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : virtualinvoke $r6.<org.xml.sax.helpers.AttributesImpl: void clear()>()
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : virtualinvoke $r6.<org.xml.sax.helpers.AttributesImpl: void clear()>() >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean started> = 1
com.thoughtworks.xstream.io.xml.Dom4JWriter.startElement : r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean started> = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : $r4 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.dom4j.io.XMLWriter writer>
com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : $r4 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.dom4j.io.XMLWriter writer> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : $i1 = lengthof r2
com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : $i1 = lengthof r2 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : virtualinvoke $r4.<org.dom4j.io.XMLWriter: void characters(char[],int,int)>(r2, 0, $i1)
com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : virtualinvoke $r4.<org.dom4j.io.XMLWriter: void characters(char[],int,int)>(r2, 0, $i1) >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : goto [?= r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean children> = 1]
com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : goto [?= r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean children> = 1] >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean children> = 1
com.thoughtworks.xstream.io.xml.Dom4JWriter.setValue : r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean children> = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $z0 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean children>
com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $z0 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: boolean children> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : if $z0 != 0
com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: void startElement()>()
com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: void startElement()>() >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $r13 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.dom4j.io.XMLWriter writer>
com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $r13 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.dom4j.io.XMLWriter writer> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $r14 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: com.thoughtworks.xstream.core.util.FastStack elementStack>
com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $r14 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: com.thoughtworks.xstream.core.util.FastStack elementStack> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $r15 = virtualinvoke $r14.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object pop()>()
com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $r15 = virtualinvoke $r14.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object pop()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.pop : $r3 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.pop : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $i1 = $i0 - 1
com.thoughtworks.xstream.core.util.FastStack.pop : $i1 = $i0 - 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i1
com.thoughtworks.xstream.core.util.FastStack.pop : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : r2 = $r3[$i1]
com.thoughtworks.xstream.core.util.FastStack.pop : r2 = $r3[$i1] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.pop : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $i2 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.pop : $i2 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : $r4[$i2] = null
com.thoughtworks.xstream.core.util.FastStack.pop : $r4[$i2] = null >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.pop : return r2
com.thoughtworks.xstream.core.util.FastStack.pop : return r2 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $r16 = (java.lang.String) $r15
com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : $r16 = (java.lang.String) $r15 >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : virtualinvoke $r13.<org.dom4j.io.XMLWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)>("", "", $r16)
com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : virtualinvoke $r13.<org.dom4j.io.XMLWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)>("", "", $r16) >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : goto [?= return]
com.thoughtworks.xstream.io.xml.Dom4JWriter.endNode : goto [?= return] >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.close : $r2 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.dom4j.io.XMLWriter writer>
com.thoughtworks.xstream.io.xml.Dom4JWriter.close : $r2 = r0.<com.thoughtworks.xstream.io.xml.Dom4JWriter: org.dom4j.io.XMLWriter writer> >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.close : virtualinvoke $r2.<org.dom4j.io.XMLWriter: void endDocument()>()
com.thoughtworks.xstream.io.xml.Dom4JWriter.close : virtualinvoke $r2.<org.dom4j.io.XMLWriter: void endDocument()>() >>>>>>>> com.thoughtworks.xstream.io.xml.Dom4JWriter.close : goto [?= return]
