com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r4 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.core.util.PrioritizedList converters> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList: void add(java.lang.Object,int)>(r1, i0)
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : virtualinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList: void add(java.lang.Object,int)>(r1, i0) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $i1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : if $i1 <= i0
com.thoughtworks.xstream.core.util.PrioritizedList.add : if $i1 <= i0 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> = i0
com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lowestPriority> = i0 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $r3 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Set set>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $r3 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Set set> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $r4 = new com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem
com.thoughtworks.xstream.core.util.PrioritizedList.add : $r4 = new com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $i2 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId>
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i2 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : $i3 = $i2 + 1
com.thoughtworks.xstream.core.util.PrioritizedList.add : $i3 = $i2 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId> = $i3
com.thoughtworks.xstream.core.util.PrioritizedList.add : r0.<com.thoughtworks.xstream.core.util.PrioritizedList: int lastId> = $i3 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : specialinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: void <init>(java.lang.Object,int,int)>(r1, i0, $i3)
com.thoughtworks.xstream.core.util.PrioritizedList.add : specialinvoke $r4.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: void <init>(java.lang.Object,int,int)>(r1, i0, $i3) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.add : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4)
com.thoughtworks.xstream.core.util.PrioritizedList.add : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : r2 = (com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem) r1
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : r2 = (com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem) r1 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i0 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i0 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i1 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i1 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : if $i0 == $i1
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : if $i0 == $i1 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i5 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i5 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i6 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i6 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int id> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i7 = $i5 - $i6
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i7 = $i5 - $i6 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : return $i7
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : return $i7 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r5 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap>
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r5 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : if $z0 == 0
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i2 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i2 = r2.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i3 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i3 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: int priority> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i4 = $i2 - $i3
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : $i4 = $i2 - $i3 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : return $i4
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem.compareTo : return $i4 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r6 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap>
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r6 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : r2 = (com.thoughtworks.xstream.converters.Converter) $r7
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : r2 = (com.thoughtworks.xstream.converters.Converter) $r7 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : if r2 == null
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : if r2 == null >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r8 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r8 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : r3 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class defaultImplementationOf(java.lang.Class)>(r1)
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : r3 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class defaultImplementationOf(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.DefaultMapper.defaultImplementationOf : return r1
com.thoughtworks.xstream.mapper.DefaultMapper.defaultImplementationOf : return r1 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r9 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.core.util.PrioritizedList converters>
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r9 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: com.thoughtworks.xstream.core.util.PrioritizedList converters> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : r4 = virtualinvoke $r9.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Iterator iterator()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : r4 = virtualinvoke $r9.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.iterator : $r1 = new com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator
com.thoughtworks.xstream.core.util.PrioritizedList.iterator : $r1 = new com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.iterator : $r2 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Set set>
com.thoughtworks.xstream.core.util.PrioritizedList.iterator : $r2 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Set set> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.iterator : $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>()
com.thoughtworks.xstream.core.util.PrioritizedList.iterator : $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.iterator : specialinvoke $r1.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator: void <init>(java.util.Iterator)>($r3)
com.thoughtworks.xstream.core.util.PrioritizedList.iterator : specialinvoke $r1.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator: void <init>(java.util.Iterator)>($r3) >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList.iterator : return $r1
com.thoughtworks.xstream.core.util.PrioritizedList.iterator : return $r1 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.hasNext : $r1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator: java.util.Iterator iterator>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.hasNext : $r1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator: java.util.Iterator iterator> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.hasNext : $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.hasNext : $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.hasNext : return $z0
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.hasNext : return $z0 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : if $z0 == 0
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : $r1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator: java.util.Iterator iterator>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : $r1 = r0.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator: java.util.Iterator iterator> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : $r3 = (com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem) $r2
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : $r3 = (com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem) $r2 >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : $r4 = $r3.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: java.lang.Object value>
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : $r4 = $r3.<com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: java.lang.Object value> >>>>>>>> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : return $r4
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator.next : return $r4 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : r5 = (com.thoughtworks.xstream.converters.Converter) $r10
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : r5 = (com.thoughtworks.xstream.converters.Converter) $r10 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $z1 = interfaceinvoke r5.<com.thoughtworks.xstream.converters.Converter: boolean canConvert(java.lang.Class)>(r3)
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $z1 = interfaceinvoke r5.<com.thoughtworks.xstream.converters.Converter: boolean canConvert(java.lang.Class)>(r3) >>>>>>>> com.thoughtworks.xstream.converters.collections.BitSetConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/BitSet")
com.thoughtworks.xstream.converters.collections.BitSetConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/util/BitSet") >>>>>>>> com.thoughtworks.xstream.converters.collections.BitSetConverter.canConvert : return $z0
com.thoughtworks.xstream.converters.collections.BitSetConverter.canConvert : return $z0 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : if $z1 == 0
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.thoughtworks.xstream.converters.SingleValueConverterWrapper.canConvert : $r2 = r0.<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: com.thoughtworks.xstream.converters.SingleValueConverter wrapped>
com.thoughtworks.xstream.converters.SingleValueConverterWrapper.canConvert : $r2 = r0.<com.thoughtworks.xstream.converters.SingleValueConverterWrapper: com.thoughtworks.xstream.converters.SingleValueConverter wrapped> >>>>>>>> com.thoughtworks.xstream.converters.SingleValueConverterWrapper.canConvert : $z0 = interfaceinvoke $r2.<com.thoughtworks.xstream.converters.SingleValueConverter: boolean canConvert(java.lang.Class)>(r1)
com.thoughtworks.xstream.converters.SingleValueConverterWrapper.canConvert : $z0 = interfaceinvoke $r2.<com.thoughtworks.xstream.converters.SingleValueConverter: boolean canConvert(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.basic.StringConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/String")
com.thoughtworks.xstream.converters.basic.StringConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/String") >>>>>>>> com.thoughtworks.xstream.converters.basic.StringConverter.canConvert : return $z0
com.thoughtworks.xstream.converters.basic.StringConverter.canConvert : return $z0 >>>>>>>> com.thoughtworks.xstream.converters.SingleValueConverterWrapper.canConvert : return $z0
com.thoughtworks.xstream.converters.SingleValueConverterWrapper.canConvert : return $z0 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r11 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap>
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : $r11 = r0.<com.thoughtworks.xstream.core.DefaultConverterLookup: java.util.Map typeToConverterMap> >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5)
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5) >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : return r5
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : return r5 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : return r2
com.thoughtworks.xstream.core.DefaultConverterLookup.lookupConverterForType : return r2 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : r3 = (java.lang.Class) $r7
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : r3 = (java.lang.Class) $r7 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $z1 = interfaceinvoke r1.<com.thoughtworks.xstream.converters.Converter: boolean canConvert(java.lang.Class)>(r3)
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : $z1 = interfaceinvoke r1.<com.thoughtworks.xstream.converters.Converter: boolean canConvert(java.lang.Class)>(r3) >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : if $z1 == 0
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : interfaceinvoke r2.<java.util.Iterator: void remove()>()
com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : interfaceinvoke r2.<java.util.Iterator: void remove()>() >>>>>>>> com.thoughtworks.xstream.core.DefaultConverterLookup.registerConverter : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
