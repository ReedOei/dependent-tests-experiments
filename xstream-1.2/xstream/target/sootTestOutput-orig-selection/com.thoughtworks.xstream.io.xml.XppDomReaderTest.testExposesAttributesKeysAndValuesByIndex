com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r2 = new com.thoughtworks.xstream.io.xml.XppDomReader >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r4 = staticinvoke <com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader)>(r1)
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r4 = staticinvoke <com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r1 = new java.util.ArrayList
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r1 = new java.util.ArrayList >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r2 = $r1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r2 = $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r11 = new java.util.ArrayList
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r11 = new java.util.ArrayList >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r3 = $r11
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r3 = $r11 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r4 = null
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r4 = null >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r12 = new org.xmlpull.mxp1.MXParser
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r12 = new org.xmlpull.mxp1.MXParser >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r12.<org.xmlpull.mxp1.MXParser: void <init>()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r12.<org.xmlpull.mxp1.MXParser: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r5 = $r12
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r5 = $r12 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r0)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r0) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int getEventType()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int getEventType()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 == 1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 == 1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 2
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 2 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 4
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 4 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 3
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i0 != 3 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int next()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int next()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : goto [?= (branch)]
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r6 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r6 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r13 = new com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r13 = new com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r13.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void <init>(java.lang.String)>(r6)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r13.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void <init>(java.lang.String)>(r6) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r7 = $r13
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r7 = $r13 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i1 = interfaceinvoke r2.<java.util.List: int size()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i1 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i1 <= 0
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i1 <= 0 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r7)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r15 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r15 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r15.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : specialinvoke $r15.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r15)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r15) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i4 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i4 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i2 = 0
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i2 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i2 >= i4
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if i2 >= i4 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r9 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i2)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r9 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i2) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r10 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i2)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r10 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i2) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : virtualinvoke r7.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void setAttribute(java.lang.String,java.lang.String)>(r9, r10)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : virtualinvoke r7.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void setAttribute(java.lang.String,java.lang.String)>(r9, r10) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : $r3 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : $r3 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : if null != $r3
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : if null != $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : $r4 = new java.util.HashMap
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : $r4 = new java.util.HashMap >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : specialinvoke $r4.<java.util.HashMap: void <init>()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes> = $r4
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes> = $r4 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : $r5 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : $r5 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setAttribute : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i2 = i2 + 1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i2 = i2 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : goto [?= i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int next()>()]
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : goto [?= i0 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: int next()>()] >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $i3 = i1 - 1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $i3 = i1 - 1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r8 = (com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) $r14
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r8 = (com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) $r14 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : virtualinvoke r8.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void addChild(com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom)>(r7)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : virtualinvoke r8.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void addChild(com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom)>(r7) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : virtualinvoke r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void setParent(com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom)>(r0)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : virtualinvoke r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void setParent(com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom)>(r0) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setParent : r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom parent> = r1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setParent : r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom parent> = r1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : $r2 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.List childList>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : $r2 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.List childList> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : $r3 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map childMap>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : $r3 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map childMap> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : $r4 = virtualinvoke r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String getName()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : $r4 = virtualinvoke r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getName : $r1 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String name>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getName : $r1 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String name> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getName : return $r1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getName : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.addChild : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $i7 = interfaceinvoke r2.<java.util.List: int size()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $i7 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i8 = $i7 - 1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : i8 = $i7 - 1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r20 = interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(i8)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r20 = interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(i8) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r21 = (com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) $r20
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r21 = (com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) $r20 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(i8)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(i8) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r23 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r23 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $i9 = virtualinvoke r23.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : $i9 = virtualinvoke r23.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if 0 != $i9
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if 0 != $i9 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r24 = null
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r24 = null >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : goto [?= virtualinvoke r21.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void setValue(java.lang.String)>(r24)]
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : goto [?= virtualinvoke r21.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void setValue(java.lang.String)>(r24)] >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : virtualinvoke r21.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void setValue(java.lang.String)>(r24)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : virtualinvoke r21.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: void setValue(java.lang.String)>(r24) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setValue : r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String value> = r1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.setValue : r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String value> = r1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if 0 != i8
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : if 0 != i8 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r4 = r21
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : r4 = r21 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : virtualinvoke r0.<java.io.Reader: void close()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : virtualinvoke r0.<java.io.Reader: void close()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : return r4
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder.build : return r4 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>()
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer()>() >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : $r1 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlDriver: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1
com.thoughtworks.xstream.io.xml.AbstractXmlDriver.xmlFriendlyReplacer : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.XppDomReader: void <init>(com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>($r4, $r5)
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.XppDomReader: void <init>(com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)>($r4, $r5) >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.reassignCurrentElement : $r2 = (com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) r1
com.thoughtworks.xstream.io.xml.XppDomReader.reassignCurrentElement : $r2 = (com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) r1 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement> = $r2
com.thoughtworks.xstream.io.xml.XppDomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement> = $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : return $r2
com.thoughtworks.xstream.io.xml.XppDomDriver.createReader : return $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeCount : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement>
com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeCount : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement> >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeCount : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String[] getAttributeNames()>()
com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeCount : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String[] getAttributeNames()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r1 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r1 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : if null != $r1
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : if null != $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r3 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r3 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>()
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r5 = newarray (java.lang.String)[0]
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r5 = newarray (java.lang.String)[0] >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r6 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r6 = interfaceinvoke $r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r7 = (java.lang.String[]) $r6
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r7 = (java.lang.String[]) $r6 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r8 = (java.lang.String[]) $r7
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r8 = (java.lang.String[]) $r7 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : return $r8
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : return $r8 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeCount : $i0 = lengthof $r2
com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeCount : $i0 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeCount : return $i0
com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeCount : return $i0 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement>
com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement> >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String[] getAttributeNames()>()
com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String[] getAttributeNames()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : $r3 = $r2[i0]
com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : $r3 = $r2[i0] >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomReader: java.lang.String unescapeXmlName(java.lang.String)>($r3)
com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : $r4 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomReader: java.lang.String unescapeXmlName(java.lang.String)>($r3) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlReader: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlReader: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String unescapeName(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String unescapeName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r2 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : r3 = $r2
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i1 = 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i1 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if i1 >= i0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r4 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String underscoreReplacement>
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r4 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String underscoreReplacement> >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $z0 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r4)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $z0 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r4) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i1 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i2 = virtualinvoke r2.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i2 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i3 = i0 + $i2
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i3 = i0 + $i2 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : if $i1 < $i3
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : if $i1 < $i3 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i4 = virtualinvoke r2.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i4 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i5 = i0 + $i4
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i5 = i0 + $i4 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : if $z0 == 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : return 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : return 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if $z0 == 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r7 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String dollarReplacement>
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r7 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String dollarReplacement> >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $z1 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r7)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $z1 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r7) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if $z1 == 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i1 = i1 + 1
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i1 = i1 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : goto [?= (branch)]
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r11 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r11 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : return $r11
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : return $r11 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : return $r3
com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : return $r4
com.thoughtworks.xstream.io.xml.XppDomReader.getAttributeName : return $r4 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement>
com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement> >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r2 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement>
com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r2 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement> >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String[] getAttributeNames()>()
com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String[] getAttributeNames()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r4 = $r3[i0]
com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r4 = $r3[i0] >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r5 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String getAttribute(java.lang.String)>($r4)
com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : $r5 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String getAttribute(java.lang.String)>($r4) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : $r2 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : $r2 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : if null == $r2
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : if null == $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : $r3 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : $r3 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.Map attributes> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : $r5 = (java.lang.String) $r4
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : $r5 = (java.lang.String) $r4 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : goto [?= return $r5]
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : goto [?= return $r5] >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : return $r5
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttribute : return $r5 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : return $r5
com.thoughtworks.xstream.io.xml.XppDomReader.getAttribute : return $r5 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r3 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: com.thoughtworks.xstream.core.util.FastStack pointers>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r3 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: com.thoughtworks.xstream.core.util.FastStack pointers> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r4 = virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>()
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r4 = virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0
com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.peek : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.peek : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i2 = $i1 - 1
com.thoughtworks.xstream.core.util.FastStack.peek : $i2 = $i1 - 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = $r2[$i2]
com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = $r2[$i2] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : return $r1
com.thoughtworks.xstream.core.util.FastStack.peek : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r1 = (com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer) $r4
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r1 = (com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer) $r4 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r5 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: com.thoughtworks.xstream.core.util.FastStack pointers>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r5 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: com.thoughtworks.xstream.core.util.FastStack pointers> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r2 = new com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r2 = new com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: void <init>(com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1)>(null)
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: void <init>(com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1)>(null) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : virtualinvoke $r5.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r2)
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : virtualinvoke $r5.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r2) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i0 = r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i0 = r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object getChild(int)>($i0)
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object getChild(int)>($i0) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getChild : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement>
com.thoughtworks.xstream.io.xml.XppDomReader.getChild : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement> >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getChild : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom getChild(int)>(i0)
com.thoughtworks.xstream.io.xml.XppDomReader.getChild : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom getChild(int)>(i0) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getChild : $r1 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.List childList>
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getChild : $r1 = r0.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.util.List childList> >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getChild : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getChild : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getChild : $r3 = (com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) $r2
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getChild : $r3 = (com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getChild : return $r3
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getChild : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getChild : return $r2
com.thoughtworks.xstream.io.xml.XppDomReader.getChild : return $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object current> = $r7
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object current> = $r7 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i1 = r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i1 = r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i2 = $i1 + 1
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v> = $i2
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v> = $i2 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r9 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object current>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r9 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object current> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: void reassignCurrentElement(java.lang.Object)>($r9)
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: void reassignCurrentElement(java.lang.Object)>($r9) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getNodeName : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement>
com.thoughtworks.xstream.io.xml.XppDomReader.getNodeName : $r1 = r0.<com.thoughtworks.xstream.io.xml.XppDomReader: com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement> >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getNodeName : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String getName()>()
com.thoughtworks.xstream.io.xml.XppDomReader.getNodeName : $r2 = virtualinvoke $r1.<com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getNodeName : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomReader: java.lang.String unescapeXmlName(java.lang.String)>($r2)
com.thoughtworks.xstream.io.xml.XppDomReader.getNodeName : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.XppDomReader: java.lang.String unescapeXmlName(java.lang.String)>($r2) >>>>>>>> com.thoughtworks.xstream.io.xml.XppDomReader.getNodeName : return $r3
com.thoughtworks.xstream.io.xml.XppDomReader.getNodeName : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r2 = newarray (java.lang.String)[0]
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : $r2 = newarray (java.lang.String)[0] >>>>>>>> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom.getAttributeNames : return $r2
