com.thoughtworks.xstream.core.util.FastStack.push : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2
com.thoughtworks.xstream.core.util.FastStack.push : $i3 = lengthof $r2 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3
com.thoughtworks.xstream.core.util.FastStack.push : if $i2 < $i3 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.push : $r4 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.push : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1
com.thoughtworks.xstream.core.util.FastStack.push : $i6 = $i0 + 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6
com.thoughtworks.xstream.core.util.FastStack.push : r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> = $i6 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1
com.thoughtworks.xstream.core.util.FastStack.push : $r4[$i0] = r1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.push : return r1
com.thoughtworks.xstream.core.util.FastStack.push : return r1 >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $r4 = (org.w3c.dom.Element) r1
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $r4 = (org.w3c.dom.Element) r1 >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.DomReader: org.w3c.dom.Element currentElement> = $r4
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.DomReader: org.w3c.dom.Element currentElement> = $r4 >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $r5 = r0.<com.thoughtworks.xstream.io.xml.DomReader: org.w3c.dom.Element currentElement>
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $r5 = r0.<com.thoughtworks.xstream.io.xml.DomReader: org.w3c.dom.Element currentElement> >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : r2 = interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>()
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : r2 = interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>() >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $r6 = new java.util.ArrayList
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $r6 = new java.util.ArrayList >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.DomReader: java.util.List childElements> = $r6
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : r0.<com.thoughtworks.xstream.io.xml.DomReader: java.util.List childElements> = $r6 >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : i0 = 0
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : i0 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $i1 = interfaceinvoke r2.<org.w3c.dom.NodeList: int getLength()>()
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $i1 = interfaceinvoke r2.<org.w3c.dom.NodeList: int getLength()>() >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : if i0 >= $i1
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : if i0 >= $i1 >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : r3 = interfaceinvoke r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0)
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : r3 = interfaceinvoke r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0) >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $z0 = r3 instanceof org.w3c.dom.Element
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $z0 = r3 instanceof org.w3c.dom.Element >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : if $z0 == 0
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : i0 = i0 + 1
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : i0 = i0 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : goto [?= $i1 = interfaceinvoke r2.<org.w3c.dom.NodeList: int getLength()>()]
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : goto [?= $i1 = interfaceinvoke r2.<org.w3c.dom.NodeList: int getLength()>()] >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $r7 = r0.<com.thoughtworks.xstream.io.xml.DomReader: java.util.List childElements>
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : $r7 = r0.<com.thoughtworks.xstream.io.xml.DomReader: java.util.List childElements> >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r3)
com.thoughtworks.xstream.io.xml.DomReader.reassignCurrentElement : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.getNodeName : $r1 = r0.<com.thoughtworks.xstream.io.xml.DomReader: org.w3c.dom.Element currentElement>
com.thoughtworks.xstream.io.xml.DomReader.getNodeName : $r1 = r0.<com.thoughtworks.xstream.io.xml.DomReader: org.w3c.dom.Element currentElement> >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.getNodeName : $r2 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getTagName()>()
com.thoughtworks.xstream.io.xml.DomReader.getNodeName : $r2 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getTagName()>() >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.getNodeName : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.DomReader: java.lang.String unescapeXmlName(java.lang.String)>($r2)
com.thoughtworks.xstream.io.xml.DomReader.getNodeName : $r3 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.DomReader: java.lang.String unescapeXmlName(java.lang.String)>($r2) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlReader: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer>
com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : $r2 = r0.<com.thoughtworks.xstream.io.xml.AbstractXmlReader: com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String unescapeName(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : $r3 = virtualinvoke $r2.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String unescapeName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r2 = new java.lang.StringBuffer
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r2 = new java.lang.StringBuffer >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : r3 = $r2
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i1 = 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i1 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if i1 >= i0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if i1 >= i0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r4 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String underscoreReplacement>
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r4 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String underscoreReplacement> >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $z0 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r4)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $z0 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r4) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i1 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i2 = virtualinvoke r2.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i2 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i3 = i0 + $i2
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i3 = i0 + $i2 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : if $i1 < $i3
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : if $i1 < $i3 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i4 = virtualinvoke r2.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i4 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i5 = i0 + $i4
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $i5 = i0 + $i4 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i5) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : if $z0 == 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : return 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.stringFoundAt : return 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if $z0 == 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r7 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String dollarReplacement>
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r7 = r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: java.lang.String dollarReplacement> >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $z1 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r7)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $z1 = specialinvoke r0.<com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer: boolean stringFoundAt(java.lang.String,int,java.lang.String)>(r1, i1, $r7) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if $z1 == 0
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2)
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2) >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i1 = i1 + 1
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : i1 = i1 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : goto [?= (branch)]
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r11 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>()
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : $r11 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : return $r11
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer.unescapeName : return $r11 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : return $r3
com.thoughtworks.xstream.io.xml.AbstractXmlReader.unescapeXmlName : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.getNodeName : return $r3
com.thoughtworks.xstream.io.xml.DomReader.getNodeName : return $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r3 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: com.thoughtworks.xstream.core.util.FastStack pointers>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r3 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: com.thoughtworks.xstream.core.util.FastStack pointers> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r4 = virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>()
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r4 = virtualinvoke $r3.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object peek()>() >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.peek : $i0 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0
com.thoughtworks.xstream.core.util.FastStack.peek : if $i0 != 0 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack>
com.thoughtworks.xstream.core.util.FastStack.peek : $r2 = r0.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object[] stack> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer>
com.thoughtworks.xstream.core.util.FastStack.peek : $i1 = r0.<com.thoughtworks.xstream.core.util.FastStack: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $i2 = $i1 - 1
com.thoughtworks.xstream.core.util.FastStack.peek : $i2 = $i1 - 1 >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = $r2[$i2]
com.thoughtworks.xstream.core.util.FastStack.peek : $r1 = $r2[$i2] >>>>>>>> com.thoughtworks.xstream.core.util.FastStack.peek : return $r1
com.thoughtworks.xstream.core.util.FastStack.peek : return $r1 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r1 = (com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer) $r4
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r1 = (com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer) $r4 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r5 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: com.thoughtworks.xstream.core.util.FastStack pointers>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r5 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: com.thoughtworks.xstream.core.util.FastStack pointers> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r2 = new com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r2 = new com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: void <init>(com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1)>(null)
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : specialinvoke $r2.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: void <init>(com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1)>(null) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : virtualinvoke $r5.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r2)
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : virtualinvoke $r5.<com.thoughtworks.xstream.core.util.FastStack: java.lang.Object push(java.lang.Object)>($r2) >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i0 = r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i0 = r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object getChild(int)>($i0)
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object getChild(int)>($i0) >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.getChild : $r1 = r0.<com.thoughtworks.xstream.io.xml.DomReader: java.util.List childElements>
com.thoughtworks.xstream.io.xml.DomReader.getChild : $r1 = r0.<com.thoughtworks.xstream.io.xml.DomReader: java.util.List childElements> >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.getChild : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
com.thoughtworks.xstream.io.xml.DomReader.getChild : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> com.thoughtworks.xstream.io.xml.DomReader.getChild : return $r2
com.thoughtworks.xstream.io.xml.DomReader.getChild : return $r2 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object current> = $r7
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object current> = $r7 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i1 = r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i1 = r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i2 = $i1 + 1
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $i2 = $i1 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v> = $i2
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : r1.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer: int v> = $i2 >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r9 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object current>
com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : $r9 = r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: java.lang.Object current> >>>>>>>> com.thoughtworks.xstream.io.xml.AbstractDocumentReader.moveDown : virtualinvoke r0.<com.thoughtworks.xstream.io.xml.AbstractDocumentReader: void reassignCurrentElement(java.lang.Object)>($r9)
