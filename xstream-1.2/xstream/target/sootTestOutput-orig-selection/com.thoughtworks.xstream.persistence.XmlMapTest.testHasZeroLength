com.thoughtworks.xstream.persistence.XmlMap.size : $r1 = r0.<com.thoughtworks.xstream.persistence.XmlMap: com.thoughtworks.xstream.persistence.StreamStrategy streamStrategy> >>>>>>>> com.thoughtworks.xstream.persistence.XmlMap.size : $i0 = interfaceinvoke $r1.<com.thoughtworks.xstream.persistence.StreamStrategy: int size()>()
com.thoughtworks.xstream.persistence.XmlMap.size : $i0 = interfaceinvoke $r1.<com.thoughtworks.xstream.persistence.StreamStrategy: int size()>() >>>>>>>> com.thoughtworks.xstream.persistence.XmlMapTest$MockedStrategy.size : $r1 = r0.<com.thoughtworks.xstream.persistence.XmlMapTest$MockedStrategy: java.util.Map map>
com.thoughtworks.xstream.persistence.XmlMapTest$MockedStrategy.size : $r1 = r0.<com.thoughtworks.xstream.persistence.XmlMapTest$MockedStrategy: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.persistence.XmlMapTest$MockedStrategy.size : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>()
com.thoughtworks.xstream.persistence.XmlMapTest$MockedStrategy.size : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>() >>>>>>>> com.thoughtworks.xstream.persistence.XmlMapTest$MockedStrategy.size : return $i0
com.thoughtworks.xstream.persistence.XmlMapTest$MockedStrategy.size : return $i0 >>>>>>>> com.thoughtworks.xstream.persistence.XmlMap.size : return $i0
