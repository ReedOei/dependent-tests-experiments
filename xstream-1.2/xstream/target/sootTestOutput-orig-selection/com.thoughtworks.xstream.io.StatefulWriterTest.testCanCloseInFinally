com.thoughtworks.xstream.io.StatefulWriter.endNode : specialinvoke r0.<com.thoughtworks.xstream.io.StatefulWriter: void checkClosed()>() >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state>
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_CLOSED>
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_CLOSED> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : if $i1 != $i0
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : if $i1 != $i0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.endNode : $i0 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance>
com.thoughtworks.xstream.io.StatefulWriter.endNode : $i0 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.endNode : $i1 = $i0 - 1
com.thoughtworks.xstream.io.StatefulWriter.endNode : $i1 = $i0 - 1 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.endNode : r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance> = $i1
com.thoughtworks.xstream.io.StatefulWriter.endNode : r0.<com.thoughtworks.xstream.io.StatefulWriter: int balance> = $i1 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.endNode : if $i0 != 0
com.thoughtworks.xstream.io.StatefulWriter.endNode : if $i0 != 0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.endNode : $r2 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.StatefulWriter.endNode : $r2 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.endNode : $r3 = new java.lang.IllegalStateException
com.thoughtworks.xstream.io.StatefulWriter.endNode : $r3 = new java.lang.IllegalStateException >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.endNode : specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unbalanced node")
com.thoughtworks.xstream.io.StatefulWriter.endNode : specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unbalanced node") >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.endNode : specialinvoke $r2.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>($r3)
com.thoughtworks.xstream.io.StatefulWriter.endNode : specialinvoke $r2.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>($r3) >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.endNode : throw $r2
com.thoughtworks.xstream.io.StatefulWriter.endNode : throw $r2 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.close : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state>
com.thoughtworks.xstream.io.StatefulWriter.close : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.close : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_NODE_END>
com.thoughtworks.xstream.io.StatefulWriter.close : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_NODE_END> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.close : if $i1 == $i0
com.thoughtworks.xstream.io.StatefulWriter.close : if $i1 == $i0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.close : $i2 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state>
com.thoughtworks.xstream.io.StatefulWriter.close : $i2 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.close : $i3 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_OPEN>
com.thoughtworks.xstream.io.StatefulWriter.close : $i3 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_OPEN> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.close : if $i2 == $i3
com.thoughtworks.xstream.io.StatefulWriter.close : if $i2 == $i3 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.close : $i4 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_CLOSED>
com.thoughtworks.xstream.io.StatefulWriter.close : $i4 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_CLOSED> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.close : r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> = $i4
com.thoughtworks.xstream.io.StatefulWriter.close : r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> = $i4 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.close : specialinvoke r0.<com.thoughtworks.xstream.io.WriterWrapper: void close()>()
com.thoughtworks.xstream.io.StatefulWriter.close : specialinvoke r0.<com.thoughtworks.xstream.io.WriterWrapper: void close()>() >>>>>>>> com.thoughtworks.xstream.io.WriterWrapper.close : $r1 = r0.<com.thoughtworks.xstream.io.WriterWrapper: com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped>
com.thoughtworks.xstream.io.WriterWrapper.close : $r1 = r0.<com.thoughtworks.xstream.io.WriterWrapper: com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped> >>>>>>>> com.thoughtworks.xstream.io.WriterWrapper.close : interfaceinvoke $r1.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void close()>()
com.thoughtworks.xstream.io.WriterWrapper.close : interfaceinvoke $r1.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void close()>() >>>>>>>> com.thoughtworks.xstream.io.xml.PrettyPrintWriter.close : $r1 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer>
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.close : $r1 = r0.<com.thoughtworks.xstream.io.xml.PrettyPrintWriter: com.thoughtworks.xstream.core.util.QuickWriter writer> >>>>>>>> com.thoughtworks.xstream.io.xml.PrettyPrintWriter.close : virtualinvoke $r1.<com.thoughtworks.xstream.core.util.QuickWriter: void close()>()
com.thoughtworks.xstream.io.xml.PrettyPrintWriter.close : virtualinvoke $r1.<com.thoughtworks.xstream.core.util.QuickWriter: void close()>() >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.close : $r2 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: java.io.Writer writer>
com.thoughtworks.xstream.core.util.QuickWriter.close : $r2 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: java.io.Writer writer> >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.close : $r3 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: char[] buffer>
com.thoughtworks.xstream.core.util.QuickWriter.close : $r3 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: char[] buffer> >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.close : $i0 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer>
com.thoughtworks.xstream.core.util.QuickWriter.close : $i0 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer> >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.close : virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>($r3, 0, $i0)
com.thoughtworks.xstream.core.util.QuickWriter.close : virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>($r3, 0, $i0) >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.close : r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer> = 0
com.thoughtworks.xstream.core.util.QuickWriter.close : r0.<com.thoughtworks.xstream.core.util.QuickWriter: int pointer> = 0 >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.close : $r4 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: java.io.Writer writer>
com.thoughtworks.xstream.core.util.QuickWriter.close : $r4 = r0.<com.thoughtworks.xstream.core.util.QuickWriter: java.io.Writer writer> >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.close : virtualinvoke $r4.<java.io.Writer: void close()>()
com.thoughtworks.xstream.core.util.QuickWriter.close : virtualinvoke $r4.<java.io.Writer: void close()>() >>>>>>>> com.thoughtworks.xstream.core.util.QuickWriter.close : goto [?= return]
