com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.getOrder : return 2147483647 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : r5 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: org.springframework.beans.factory.'annotation'.InjectionMetadata findReferenceMetadata(java.lang.String,java.lang.Class,org.springframework.beans.PropertyValues)>(r4, $r6, r1)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : r5 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: org.springframework.beans.factory.'annotation'.InjectionMetadata findReferenceMetadata(java.lang.String,java.lang.Class,org.springframework.beans.PropertyValues)>(r4, $r6, r1) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>(r1)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : if $z0 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r24 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r24 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : r4 = $r24
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : r4 = $r24 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r8 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r8 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r9 = interfaceinvoke $r8.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r24)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r9 = interfaceinvoke $r8.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r24) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : r25 = (org.springframework.beans.factory.annotation.InjectionMetadata) $r9
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : r25 = (org.springframework.beans.factory.annotation.InjectionMetadata) $r9 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $z1 = staticinvoke <org.springframework.beans.factory.'annotation'.InjectionMetadata: boolean needsRefresh(org.springframework.beans.factory.'annotation'.InjectionMetadata,java.lang.Class)>(r25, r2)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $z1 = staticinvoke <org.springframework.beans.factory.'annotation'.InjectionMetadata: boolean needsRefresh(org.springframework.beans.factory.'annotation'.InjectionMetadata,java.lang.Class)>(r25, r2) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : if $z1 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r10 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r10 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : entermonitor $r10
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : entermonitor $r10 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r11 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r11 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r12 = interfaceinvoke $r11.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r24)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r12 = interfaceinvoke $r11.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r24) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : r25 = (org.springframework.beans.factory.annotation.InjectionMetadata) $r12
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : r25 = (org.springframework.beans.factory.annotation.InjectionMetadata) $r12 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $z2 = staticinvoke <org.springframework.beans.factory.'annotation'.InjectionMetadata: boolean needsRefresh(org.springframework.beans.factory.'annotation'.InjectionMetadata,java.lang.Class)>(r25, r2)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $z2 = staticinvoke <org.springframework.beans.factory.'annotation'.InjectionMetadata: boolean needsRefresh(org.springframework.beans.factory.'annotation'.InjectionMetadata,java.lang.Class)>(r25, r2) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : if $z2 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : if $z2 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : if r25 == null
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : if r25 == null >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : r25 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: org.springframework.beans.factory.'annotation'.InjectionMetadata buildReferenceMetadata(java.lang.Class)>(r2)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : r25 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: org.springframework.beans.factory.'annotation'.InjectionMetadata buildReferenceMetadata(java.lang.Class)>(r2) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : $r3 = new java.util.LinkedList
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : $r3 = new java.util.LinkedList >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : specialinvoke $r3.<java.util.LinkedList: void <init>()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : specialinvoke $r3.<java.util.LinkedList: void <init>()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : $r4 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.List findFieldReferenceMetadata(java.lang.Class)>(r1)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : $r4 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.List findFieldReferenceMetadata(java.lang.Class)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : $r3 = new java.util.LinkedList
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : $r3 = new java.util.LinkedList >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : specialinvoke $r3.<java.util.LinkedList: void <init>()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : specialinvoke $r3.<java.util.LinkedList: void <init>()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : $r4 = new com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$1
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : $r4 = new com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$1 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : specialinvoke $r4.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor$1: void <init>(com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor,java.util.List)>(r0, $r3)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : specialinvoke $r4.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor$1: void <init>(com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor,java.util.List)>(r0, $r3) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : staticinvoke <org.springframework.util.ReflectionUtils: void doWithFields(java.lang.Class,org.springframework.util.ReflectionUtils$FieldCallback)>(r1, $r4)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : staticinvoke <org.springframework.util.ReflectionUtils: void doWithFields(java.lang.Class,org.springframework.util.ReflectionUtils$FieldCallback)>(r1, $r4) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$1.doWith : $r3 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation getAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)>(r1, class "Lcom/alibaba/dubbo/config/annotation/Reference;")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$1.doWith : $r3 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation getAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)>(r1, class "Lcom/alibaba/dubbo/config/annotation/Reference;") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$1.doWith : r2 = (com.alibaba.dubbo.config.annotation.Reference) $r3
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$1.doWith : r2 = (com.alibaba.dubbo.config.annotation.Reference) $r3 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$1.doWith : if r2 == null
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$1.doWith : if r2 == null >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : return $r3
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findFieldReferenceMetadata : return $r3 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r4)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r4) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : $r5 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.List findMethodReferenceMetadata(java.lang.Class)>(r1)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : $r5 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.List findMethodReferenceMetadata(java.lang.Class)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : $r3 = new java.util.LinkedList
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : $r3 = new java.util.LinkedList >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : specialinvoke $r3.<java.util.LinkedList: void <init>()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : specialinvoke $r3.<java.util.LinkedList: void <init>()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : $r4 = new com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : $r4 = new com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : specialinvoke $r4.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor$2: void <init>(com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor,java.lang.Class,java.util.List)>(r0, r1, $r3)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : specialinvoke $r4.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor$2: void <init>(com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor,java.lang.Class,java.util.List)>(r0, r1, $r3) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : staticinvoke <org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback)>(r1, $r4)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : staticinvoke <org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback)>(r1, $r4) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : r2 = staticinvoke <org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>(r1)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : r2 = staticinvoke <org.springframework.core.BridgeMethodResolver: java.lang.reflect.Method findBridgedMethod(java.lang.reflect.Method)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : $z0 = staticinvoke <org.springframework.core.BridgeMethodResolver: boolean isVisibilityBridgeMethodPair(java.lang.reflect.Method,java.lang.reflect.Method)>(r1, r2)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : $z0 = staticinvoke <org.springframework.core.BridgeMethodResolver: boolean isVisibilityBridgeMethodPair(java.lang.reflect.Method,java.lang.reflect.Method)>(r1, r2) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : if $z0 != 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : if $z0 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : $r5 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.reflect.Method,java.lang.Class)>(r2, class "Lcom/alibaba/dubbo/config/annotation/Reference;")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : $r5 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.reflect.Method,java.lang.Class)>(r2, class "Lcom/alibaba/dubbo/config/annotation/Reference;") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : r3 = (com.alibaba.dubbo.config.annotation.Reference) $r5
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : r3 = (com.alibaba.dubbo.config.annotation.Reference) $r5 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : if r3 == null
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$2.doWith : if r3 == null >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : return $r3
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findMethodReferenceMetadata : return $r3 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r5)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r5) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : $r6 = new org.springframework.beans.factory.annotation.InjectionMetadata
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : $r6 = new org.springframework.beans.factory.annotation.InjectionMetadata >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : specialinvoke $r6.<org.springframework.beans.factory.'annotation'.InjectionMetadata: void <init>(java.lang.Class,java.util.Collection)>(r1, $r3)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : specialinvoke $r6.<org.springframework.beans.factory.'annotation'.InjectionMetadata: void <init>(java.lang.Class,java.util.Collection)>(r1, $r3) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : return $r6
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildReferenceMetadata : return $r6 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r13 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : $r13 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : interfaceinvoke $r13.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r25)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : interfaceinvoke $r13.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r25) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : goto [?= exitmonitor $r10]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : goto [?= exitmonitor $r10] >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : exitmonitor $r10
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : exitmonitor $r10 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : goto [?= return r25]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : goto [?= return r25] >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : return r25
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.findReferenceMetadata : return r25 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : virtualinvoke r5.<org.springframework.beans.factory.'annotation'.InjectionMetadata: void inject(java.lang.Object,java.lang.String,org.springframework.beans.PropertyValues)>(r3, r4, r1)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : virtualinvoke r5.<org.springframework.beans.factory.'annotation'.InjectionMetadata: void inject(java.lang.Object,java.lang.String,org.springframework.beans.PropertyValues)>(r3, r4, r1) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : goto [?= return r1]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : goto [?= return r1] >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : return r1
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues : return r1 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r3 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap referenceBeansCache>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r3 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap referenceBeansCache> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : if $z0 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r5 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r5 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap injectionMetadataCache> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: void clear()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: void clear()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r6 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap referenceBeansCache>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r6 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: java.util.concurrent.ConcurrentMap referenceBeansCache> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: void clear()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : interfaceinvoke $r6.<java.util.concurrent.ConcurrentMap: void clear()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r7 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r7 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $z1 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isInfoEnabled()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $z1 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isInfoEnabled()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : if $z1 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r9 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r9 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ReferenceAnnotationBeanPostProcessor: org.apache.commons.logging.Log logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r8 = new java.lang.StringBuilder
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r8 = new java.lang.StringBuilder >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was destroying!")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was destroying!") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.destroy : interfaceinvoke $r9.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r13)
