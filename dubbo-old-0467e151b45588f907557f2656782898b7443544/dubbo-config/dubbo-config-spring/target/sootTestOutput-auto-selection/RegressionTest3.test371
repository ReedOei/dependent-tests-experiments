com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r1 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.util.Set serviceConfigs> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : r12 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : r12 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : if $z0 == 0
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r2 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.util.concurrent.ConcurrentMap referenceConfigs>
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r2 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.util.concurrent.ConcurrentMap referenceConfigs> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : r15 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : r15 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : if $z1 == 0
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String annotationPackage> = r1
com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String annotationPackage> = r1 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : if r1 == null
com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : if r1 == null >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : if $i0 != 0
com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : if $i0 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : $r2 = <com.alibaba.dubbo.common.Constants: java.util.regex.Pattern COMMA_SPLIT_PATTERN>
com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : $r2 = <com.alibaba.dubbo.common.Constants: java.util.regex.Pattern COMMA_SPLIT_PATTERN> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : $r4 = virtualinvoke $r2.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>(r1)
com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : $r4 = virtualinvoke $r2.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages> = $r4
com.alibaba.dubbo.config.spring.AnnotationBean.setPackage : r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages> = $r4 >>>>>>>> com.alibaba.dubbo.config.spring.ServiceBean.setBeanName : r0.<com.alibaba.dubbo.config.spring.ServiceBean: java.lang.String beanName> = r1
com.alibaba.dubbo.config.spring.ServiceBean.setBeanName : r0.<com.alibaba.dubbo.config.spring.ServiceBean: java.lang.String beanName> = r1 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.postProcessAfterInitialization : $z0 = specialinvoke r0.<com.alibaba.dubbo.config.spring.AnnotationBean: boolean isMatchPackage(java.lang.Object)>(r1)
com.alibaba.dubbo.config.spring.AnnotationBean.postProcessAfterInitialization : $z0 = specialinvoke r0.<com.alibaba.dubbo.config.spring.AnnotationBean: boolean isMatchPackage(java.lang.Object)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $r5 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages>
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $r5 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if $r5 == null
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if $r5 == null >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $r6 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages>
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $r6 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $i1 = lengthof $r6
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $i1 = lengthof $r6 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if $i1 != 0
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if $i1 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : r2 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>()
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : r2 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : r3 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages>
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : r3 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : i0 = lengthof r3
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : i0 = lengthof r3 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : i2 = 0
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : i2 = 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if i2 >= i0
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if i2 >= i0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : r4 = r3[i2]
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : r4 = r3[i2] >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r4)
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r4) >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if $z0 == 0
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : i2 = i2 + 1
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : i2 = i2 + 1 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : goto [?= (branch)]
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : goto [?= (branch)] >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : return 0
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : return 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.postProcessAfterInitialization : if $z0 != 0
com.alibaba.dubbo.config.spring.AnnotationBean.postProcessAfterInitialization : if $z0 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.postProcessAfterInitialization : return r1
