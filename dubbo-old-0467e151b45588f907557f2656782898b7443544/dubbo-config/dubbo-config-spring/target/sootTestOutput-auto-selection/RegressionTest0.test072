com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r1 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.util.Set serviceConfigs> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : r12 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : r12 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : if $z0 == 0
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r2 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.util.concurrent.ConcurrentMap referenceConfigs>
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r2 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.util.concurrent.ConcurrentMap referenceConfigs> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : r15 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : r15 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.destroy : if $z1 == 0
com.alibaba.dubbo.config.spring.AnnotationBean.destroy : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.postProcessBeanFactory : $r8 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String annotationPackage>
com.alibaba.dubbo.config.spring.AnnotationBean.postProcessBeanFactory : $r8 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String annotationPackage> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.postProcessBeanFactory : if $r8 == null
com.alibaba.dubbo.config.spring.AnnotationBean.postProcessBeanFactory : if $r8 == null >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.postProcessBeforeInitialization : $z0 = specialinvoke r0.<com.alibaba.dubbo.config.spring.AnnotationBean: boolean isMatchPackage(java.lang.Object)>(r1)
com.alibaba.dubbo.config.spring.AnnotationBean.postProcessBeforeInitialization : $z0 = specialinvoke r0.<com.alibaba.dubbo.config.spring.AnnotationBean: boolean isMatchPackage(java.lang.Object)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $r5 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages>
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : $r5 = r0.<com.alibaba.dubbo.config.spring.AnnotationBean: java.lang.String[] annotationPackages> >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if $r5 == null
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : if $r5 == null >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : return 1
com.alibaba.dubbo.config.spring.AnnotationBean.isMatchPackage : return 1 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.postProcessBeforeInitialization : if $z0 != 0
com.alibaba.dubbo.config.spring.AnnotationBean.postProcessBeforeInitialization : if $z0 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.AnnotationBean.postProcessBeforeInitialization : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
