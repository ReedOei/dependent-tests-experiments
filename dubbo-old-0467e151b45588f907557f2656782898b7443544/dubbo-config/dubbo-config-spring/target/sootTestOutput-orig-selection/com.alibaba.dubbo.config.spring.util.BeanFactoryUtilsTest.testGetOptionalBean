com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : r3 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>(r0, r2) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : $z0 = staticinvoke <com.alibaba.dubbo.common.utils.StringUtils: boolean isContains(java.lang.String[],java.lang.String)>(r3, r1)
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : $z0 = staticinvoke <com.alibaba.dubbo.common.utils.StringUtils: boolean isContains(java.lang.String[],java.lang.String)>(r3, r1) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : if $z0 != 0
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : if $z0 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : r4 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.util.Map beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>(r0, r2)
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : r4 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.util.Map beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>(r0, r2) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : $r5 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : $r5 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : return $r5
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getOptionalBean : return $r5 >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean.getName : $r1 = r0.<com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean: java.lang.String name>
com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean.getName : $r1 = r0.<com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean: java.lang.String name> >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean.getName : return $r1
