com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : r3 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>(r0, r2) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $r7 = new java.util.ArrayList
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $r7 = new java.util.ArrayList >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $i1 = lengthof r1
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $i1 = lengthof r1 >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1)
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : i0 = lengthof r1
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : i0 = lengthof r1 >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : i2 = 0
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : i2 = 0 >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : if i2 >= i0
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : if i2 >= i0 >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : r6 = r1[i2]
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : r6 = r1[i2] >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $z0 = staticinvoke <com.alibaba.dubbo.common.utils.StringUtils: boolean isContains(java.lang.String[],java.lang.String)>(r3, r6)
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $z0 = staticinvoke <com.alibaba.dubbo.common.utils.StringUtils: boolean isContains(java.lang.String[],java.lang.String)>(r3, r6) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : if $z0 == 0
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $r9 = interfaceinvoke r0.<org.springframework.beans.factory.ListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>(r6, r2)
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $r9 = interfaceinvoke r0.<org.springframework.beans.factory.ListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>(r6, r2) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r9)
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : i2 = i2 + 1
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : i2 = i2 + 1 >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : goto [?= (branch)]
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : goto [?= (branch)] >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7)
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7) >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : return $r8
com.alibaba.dubbo.config.spring.util.BeanFactoryUtils.getBeans : return $r8 >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean.getName : $r1 = r0.<com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean: java.lang.String name>
com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean.getName : $r1 = r0.<com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean: java.lang.String name> >>>>>>>> com.alibaba.dubbo.config.spring.util.BeanFactoryUtilsTest$TestBean.getName : return $r1
