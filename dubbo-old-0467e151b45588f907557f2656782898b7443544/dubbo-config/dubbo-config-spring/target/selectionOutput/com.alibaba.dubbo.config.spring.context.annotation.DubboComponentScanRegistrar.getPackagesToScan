com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r9 = class "Lcom/alibaba/dubbo/config/spring/context/annotation/DubboComponentScan;" >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>()
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r11 = interfaceinvoke r1.<org.springframework.core.type.AnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String)>($r10)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r11 = interfaceinvoke r1.<org.springframework.core.type.AnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String)>($r10) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r2 = staticinvoke <org.springframework.core.'annotation'.AnnotationAttributes: org.springframework.core.'annotation'.AnnotationAttributes fromMap(java.util.Map)>($r11)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r2 = staticinvoke <org.springframework.core.'annotation'.AnnotationAttributes: org.springframework.core.'annotation'.AnnotationAttributes fromMap(java.util.Map)>($r11) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r3 = virtualinvoke r2.<org.springframework.core.'annotation'.AnnotationAttributes: java.lang.String[] getStringArray(java.lang.String)>("basePackages")
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r3 = virtualinvoke r2.<org.springframework.core.'annotation'.AnnotationAttributes: java.lang.String[] getStringArray(java.lang.String)>("basePackages") >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r4 = virtualinvoke r2.<org.springframework.core.'annotation'.AnnotationAttributes: java.lang.Class[] getClassArray(java.lang.String)>("basePackageClasses")
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r4 = virtualinvoke r2.<org.springframework.core.'annotation'.AnnotationAttributes: java.lang.Class[] getClassArray(java.lang.String)>("basePackageClasses") >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r5 = virtualinvoke r2.<org.springframework.core.'annotation'.AnnotationAttributes: java.lang.String[] getStringArray(java.lang.String)>("value")
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r5 = virtualinvoke r2.<org.springframework.core.'annotation'.AnnotationAttributes: java.lang.String[] getStringArray(java.lang.String)>("value") >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r12 = new java.util.LinkedHashSet
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r12 = new java.util.LinkedHashSet >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : specialinvoke $r12.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r13)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : specialinvoke $r12.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r13) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : interfaceinvoke $r12.<java.util.Set: boolean addAll(java.util.Collection)>($r14)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : interfaceinvoke $r12.<java.util.Set: boolean addAll(java.util.Collection)>($r14) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : i0 = lengthof r4
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : i0 = lengthof r4 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : i1 = 0
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : i1 = 0 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : if i1 >= i0
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : if i1 >= i0 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r8 = r4[i1]
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : if i1 >= i0 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $z1 = interfaceinvoke $r12.<java.util.Set: boolean isEmpty()>()
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $z1 = interfaceinvoke $r12.<java.util.Set: boolean isEmpty()>() >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : if $z1 == 0
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r15 = interfaceinvoke r1.<org.springframework.core.type.AnnotationMetadata: java.lang.String getClassName()>()
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : return $r12
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r15 = interfaceinvoke r1.<org.springframework.core.type.AnnotationMetadata: java.lang.String getClassName()>() >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r16 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getPackageName(java.lang.String)>($r15)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r16 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getPackageName(java.lang.String)>($r15) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r17 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r16)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r17 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r16) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : return $r17
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : r8 = r4[i1] >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r18 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getPackageName(java.lang.Class)>(r8)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : $r18 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getPackageName(java.lang.Class)>(r8) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r18)
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r18) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : i1 = i1 + 1
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : i1 = i1 + 1 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : goto [?= (branch)]
com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : goto [?= (branch)] >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboComponentScanRegistrar.getPackagesToScan : if i1 >= i0
