com.thoughtworks.xstream.mapper.ArrayMapper.realClass : i0 = 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("-array")
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("-array") >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if $z0 == 0
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if i0 <= 0
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if i0 <= 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : r2 = specialinvoke r0.<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class primitiveClassNamed(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if i0 <= 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r13 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r13 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : return $r13
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : r2 = specialinvoke r0.<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class primitiveClassNamed(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if r2 != null
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if r2 != null >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : r2 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if r2 != null >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r4 = specialinvoke r0.<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class arrayType(int,java.lang.Class)>(i0, r2)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : if r2 != null >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r5 := @caughtexception
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : r3 = $r5 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r6 = new com.thoughtworks.xstream.mapper.CannotResolveClassException
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r6 = new com.thoughtworks.xstream.mapper.CannotResolveClassException >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r7 = new java.lang.StringBuilder
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r7 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ")
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r10 = virtualinvoke r3.<java.lang.ClassNotFoundException: java.lang.String getMessage()>()
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r10 = virtualinvoke r3.<java.lang.ClassNotFoundException: java.lang.String getMessage()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : specialinvoke $r6.<com.thoughtworks.xstream.mapper.CannotResolveClassException: void <init>(java.lang.String)>($r12)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : specialinvoke $r6.<com.thoughtworks.xstream.mapper.CannotResolveClassException: void <init>(java.lang.String)>($r12) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : throw $r6
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r4 = specialinvoke r0.<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class arrayType(int,java.lang.Class)>(i0, r2) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : return $r4
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r4 = specialinvoke r0.<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class arrayType(int,java.lang.Class)>(i0, r2) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r5 := @caughtexception
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : r2 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r4 = specialinvoke r0.<com.thoughtworks.xstream.mapper.ArrayMapper: java.lang.Class arrayType(int,java.lang.Class)>(i0, r2)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : r2 = specialinvoke r0.<com.thoughtworks.xstream.mapper.MapperWrapper: java.lang.Class realClass(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $r5 := @caughtexception
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $i1 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $i2 = $i1 - 6
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $i2 = $i1 - 6 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2)
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : i0 = i0 + 1
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : i0 = i0 + 1 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : goto [?= $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("-array")]
com.thoughtworks.xstream.mapper.ArrayMapper.realClass : goto [?= $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("-array")] >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.realClass : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("-array")
