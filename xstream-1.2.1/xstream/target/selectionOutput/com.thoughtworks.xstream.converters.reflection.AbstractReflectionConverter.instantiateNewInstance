com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r5 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r6 = interfaceinvoke $r5.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("resolves-to")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r6 = interfaceinvoke $r5.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("resolves-to") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : r3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>($r6)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : r3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>($r6) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : r4 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object currentObject()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : r4 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object currentObject()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : if r4 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : if r4 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : return r4
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : if r4 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : if r3 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : if r3 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r7 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : if r3 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r12 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Class getRequiredType()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r12 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Class getRequiredType()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r13 = interfaceinvoke $r11.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Object newInstance(java.lang.Class)>($r12)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r13 = interfaceinvoke $r11.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Object newInstance(java.lang.Class)>($r12) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : return $r13
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r7 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r8 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r8 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r9 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r3)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r9 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r3) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r10 = interfaceinvoke $r7.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Object newInstance(java.lang.Class)>($r9)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : $r10 = interfaceinvoke $r7.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Object newInstance(java.lang.Class)>($r9) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.instantiateNewInstance : return $r10
