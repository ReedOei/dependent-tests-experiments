com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : $r3 = new com.thoughtworks.xstream.io.binary.Token$Attribute >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : $r4 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamWriter: com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry idRegistry>
com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : $r4 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamWriter: com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry idRegistry> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : $l0 = virtualinvoke $r4.<com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry: long getId(java.lang.String)>(r1)
com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : $l0 = virtualinvoke $r4.<com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry: long getId(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : specialinvoke $r3.<com.thoughtworks.xstream.io.binary.Token$Attribute: void <init>(long,java.lang.String)>($l0, r2)
com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : specialinvoke $r3.<com.thoughtworks.xstream.io.binary.Token$Attribute: void <init>(long,java.lang.String)>($l0, r2) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamWriter: void write(com.thoughtworks.xstream.io.binary.Token)>($r3)
com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : specialinvoke r0.<com.thoughtworks.xstream.io.binary.BinaryStreamWriter: void write(com.thoughtworks.xstream.io.binary.Token)>($r3) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamWriter.addAttribute : return
