com.thoughtworks.xstream.io.binary.Token.writeId : $b2 = l0 cmp 0L >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : if $b2 >= 0
com.thoughtworks.xstream.io.binary.Token.writeId : if $b2 >= 0 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r2 = new java.io.IOException
com.thoughtworks.xstream.io.binary.Token.writeId : if $b2 >= 0 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : lookupswitch(b1) {     case 8:
com.thoughtworks.xstream.io.binary.Token.writeId : lookupswitch(b1) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $i3 = (int) l0
com.thoughtworks.xstream.io.binary.Token.writeId : lookupswitch(b1) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $i6 = (int) l0
com.thoughtworks.xstream.io.binary.Token.writeId : lookupswitch(b1) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $i9 = (int) l0
com.thoughtworks.xstream.io.binary.Token.writeId : lookupswitch(b1) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $l11 = l0 + -9223372036854775808L
com.thoughtworks.xstream.io.binary.Token.writeId : lookupswitch(b1) {     case 8: >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r7 = new java.lang.Error
com.thoughtworks.xstream.io.binary.Token.writeId : $r7 = new java.lang.Error >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r8 = new java.lang.StringBuilder
com.thoughtworks.xstream.io.binary.Token.writeId : $r8 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.io.binary.Token.writeId : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown idType ")
com.thoughtworks.xstream.io.binary.Token.writeId : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown idType ") >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1)
com.thoughtworks.xstream.io.binary.Token.writeId : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.io.binary.Token.writeId : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : specialinvoke $r7.<java.lang.Error: void <init>(java.lang.String)>($r11)
com.thoughtworks.xstream.io.binary.Token.writeId : specialinvoke $r7.<java.lang.Error: void <init>(java.lang.String)>($r11) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : throw $r7
com.thoughtworks.xstream.io.binary.Token.writeId : $l11 = l0 + -9223372036854775808L >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : interfaceinvoke r1.<java.io.DataOutput: void writeLong(long)>($l11)
com.thoughtworks.xstream.io.binary.Token.writeId : interfaceinvoke r1.<java.io.DataOutput: void writeLong(long)>($l11) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : goto [?= return]
com.thoughtworks.xstream.io.binary.Token.writeId : goto [?= return] >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : return
com.thoughtworks.xstream.io.binary.Token.writeId : $i9 = (int) l0 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $i10 = $i9 + -2147483648
com.thoughtworks.xstream.io.binary.Token.writeId : $i10 = $i9 + -2147483648 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : interfaceinvoke r1.<java.io.DataOutput: void writeInt(int)>($i10)
com.thoughtworks.xstream.io.binary.Token.writeId : interfaceinvoke r1.<java.io.DataOutput: void writeInt(int)>($i10) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : goto [?= return]
com.thoughtworks.xstream.io.binary.Token.writeId : goto [?= return] >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : return
com.thoughtworks.xstream.io.binary.Token.writeId : $i6 = (int) l0 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $s7 = (short) $i6
com.thoughtworks.xstream.io.binary.Token.writeId : $s7 = (short) $i6 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $i8 = $s7 + -32768
com.thoughtworks.xstream.io.binary.Token.writeId : $i8 = $s7 + -32768 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : interfaceinvoke r1.<java.io.DataOutput: void writeShort(int)>($i8)
com.thoughtworks.xstream.io.binary.Token.writeId : interfaceinvoke r1.<java.io.DataOutput: void writeShort(int)>($i8) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : goto [?= return]
com.thoughtworks.xstream.io.binary.Token.writeId : goto [?= return] >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : return
com.thoughtworks.xstream.io.binary.Token.writeId : $i3 = (int) l0 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $b4 = (byte) $i3
com.thoughtworks.xstream.io.binary.Token.writeId : $b4 = (byte) $i3 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $i5 = $b4 + -128
com.thoughtworks.xstream.io.binary.Token.writeId : $i5 = $b4 + -128 >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : interfaceinvoke r1.<java.io.DataOutput: void writeByte(int)>($i5)
com.thoughtworks.xstream.io.binary.Token.writeId : interfaceinvoke r1.<java.io.DataOutput: void writeByte(int)>($i5) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : goto [?= return]
com.thoughtworks.xstream.io.binary.Token.writeId : goto [?= return] >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : return
com.thoughtworks.xstream.io.binary.Token.writeId : $r2 = new java.io.IOException >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r3 = new java.lang.StringBuilder
com.thoughtworks.xstream.io.binary.Token.writeId : $r3 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.io.binary.Token.writeId : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id must not be negative ")
com.thoughtworks.xstream.io.binary.Token.writeId : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id must not be negative ") >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
com.thoughtworks.xstream.io.binary.Token.writeId : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.io.binary.Token.writeId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6)
com.thoughtworks.xstream.io.binary.Token.writeId : specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.writeId : throw $r2
