com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r3 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r1 = new java.lang.Long
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r1 = new java.lang.Long >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : specialinvoke $r1.<java.lang.Long: void <init>(long)>(l0)
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : specialinvoke $r1.<java.lang.Long: void <init>(long)>(l0) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1)
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : r2 = (java.lang.String) $r4
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : r2 = (java.lang.String) $r4 >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : if r2 != null
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : if r2 != null >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r5 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : if r2 != null >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : return r2
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r5 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r6 = new java.lang.StringBuilder
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r6 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown ID : ")
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown ID : ") >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : specialinvoke $r5.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.String)>($r9)
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : specialinvoke $r5.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.String)>($r9) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.get : throw $r5
