com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : $r2 = new java.util.ArrayList >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : r3 = $r2
com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : r3 = $r2 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : if r1 == class "java/lang/Object"
com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : if r1 == class "java/lang/Object" >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r1)
com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : if r1 == class "java/lang/Object" >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : staticinvoke <java.util.Collections: void reverse(java.util.List)>(r3)
com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : staticinvoke <java.util.Collections: void reverse(java.util.List)>(r3) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : return r3
com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>()
com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : goto [?= (branch)]
com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializableConverter.hierarchyFor : if r1 == class "java/lang/Object"
