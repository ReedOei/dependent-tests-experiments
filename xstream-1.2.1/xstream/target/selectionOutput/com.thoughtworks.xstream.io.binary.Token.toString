com.thoughtworks.xstream.io.binary.Token.toString : $r1 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.io.binary.Token.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.io.binary.Token.toString : $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.io.binary.Token.toString : $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
com.thoughtworks.xstream.io.binary.Token.toString : $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [id=")
com.thoughtworks.xstream.io.binary.Token.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [id=") >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $l0 = r0.<com.thoughtworks.xstream.io.binary.Token: long id>
com.thoughtworks.xstream.io.binary.Token.toString : $l0 = r0.<com.thoughtworks.xstream.io.binary.Token: long id> >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
com.thoughtworks.xstream.io.binary.Token.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value=\'")
com.thoughtworks.xstream.io.binary.Token.toString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value=\'") >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r8 = r0.<com.thoughtworks.xstream.io.binary.Token: java.lang.String value>
com.thoughtworks.xstream.io.binary.Token.toString : $r8 = r0.<com.thoughtworks.xstream.io.binary.Token: java.lang.String value> >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
com.thoughtworks.xstream.io.binary.Token.toString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\']")
com.thoughtworks.xstream.io.binary.Token.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\']") >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.io.binary.Token.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token.toString : return $r11
