com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r7 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r8 = interfaceinvoke $r7.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("class")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r8 = interfaceinvoke $r7.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("class") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : r5 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>($r8)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : r5 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>($r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : if r5 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : if r5 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r9 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : if r5 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : if z0 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : if z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : if z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r16 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r16 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r18 = interfaceinvoke $r17.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r2, r3, r4)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r18 = interfaceinvoke $r17.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r2, r3, r4) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r19 = interfaceinvoke $r16.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class defaultImplementationOf(java.lang.Class)>($r18)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r19 = interfaceinvoke $r16.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class defaultImplementationOf(java.lang.Class)>($r18) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : return $r19
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r12 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r12 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : r6 = interfaceinvoke $r11.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>($r12, r3)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : r6 = interfaceinvoke $r11.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String)>($r12, r3) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : if r6 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : if r6 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : return r6
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : if r6 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r13 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r13 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r14 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r14 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r15 = interfaceinvoke $r13.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r14)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r15 = interfaceinvoke $r13.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r14) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : return $r15
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r9 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r10 = interfaceinvoke $r9.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r5)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : $r10 = interfaceinvoke $r9.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r5) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.determineType : return $r10
