com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : $r2 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token pushback> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : if $r2 != null
com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : if $r2 != null >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token pushback> = r1
com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : if $r2 != null >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : $r3 = new java.lang.Error
com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : $r3 = new java.lang.Error >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String)>("Cannot push more than one token back")
com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String)>("Cannot push more than one token back") >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : throw $r3
com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader: com.thoughtworks.xstream.io.binary.Token pushback> = r1 >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : goto [?= return]
com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : goto [?= return] >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader.pushBack : return
