com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : $r3 = r0.<com.thoughtworks.xstream.io.xml.QNameMap: java.util.Map qnameToJava> >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : if $r3 == null
com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : if $r3 == null >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : $r4 = r0.<com.thoughtworks.xstream.io.xml.QNameMap: java.util.Map qnameToJava>
com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : if $r3 == null >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : $r6 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()
com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : $r6 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>() >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : return $r6
com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : $r4 = r0.<com.thoughtworks.xstream.io.xml.QNameMap: java.util.Map qnameToJava> >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : r2 = (java.lang.String) $r5
com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : r2 = (java.lang.String) $r5 >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : if r2 == null
com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : if r2 == null >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : return r2
com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : if r2 == null >>>>>>>> com.thoughtworks.xstream.io.xml.QNameMap.getJavaClassName : $r6 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()
