com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $r2 = <java.lang.Double: java.lang.Class TYPE> >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2)
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2) >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : if $z0 != 0
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/Double")
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : if $z0 != 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $z2 = 1
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $z2 = 1 >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : goto [?= return $z2]
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : goto [?= return $z2] >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : return $z2
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "java/lang/Double") >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : if $z1 == 0
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $z2 = 1
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $z2 = 0
com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : $z2 = 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.DoubleConverter.canConvert : return $z2
