com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $z0 = staticinvoke <net.sf.cglib.proxy.Enhancer: boolean isEnhanced(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if $z0 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if r1 != class "com/thoughtworks/xstream/mapper/CGLIBMapper$Marker"
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if r1 != class "com/thoughtworks/xstream/mapper/CGLIBMapper$Marker" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $z1 = 1
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if r1 != class "com/thoughtworks/xstream/mapper/CGLIBMapper$Marker" >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $z1 = 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $z1 = 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : return $z1
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $z1 = 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : goto [?= return $z1]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : goto [?= return $z1] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : return $z1
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $r2 = <com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: java.lang.String DEFAULT_NAMING_MARKER>
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $r2 = <com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: java.lang.String DEFAULT_NAMING_MARKER> >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>($r2)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>($r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if $i0 > 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if $i0 > 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if r1 != class "com/thoughtworks/xstream/mapper/CGLIBMapper$Marker"
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : if $i0 > 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.canConvert : $z1 = 1
