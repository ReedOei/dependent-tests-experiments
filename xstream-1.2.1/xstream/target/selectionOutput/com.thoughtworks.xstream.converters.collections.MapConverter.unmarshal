com.thoughtworks.xstream.converters.collections.MapConverter.unmarshal : $r4 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Class getRequiredType()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.unmarshal : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object createCollection(java.lang.Class)>($r4)
com.thoughtworks.xstream.converters.collections.MapConverter.unmarshal : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: java.lang.Object createCollection(java.lang.Class)>($r4) >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.unmarshal : r3 = (java.util.Map) $r5
com.thoughtworks.xstream.converters.collections.MapConverter.unmarshal : r3 = (java.util.Map) $r5 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.unmarshal : virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map)>(r1, r2, r3)
com.thoughtworks.xstream.converters.collections.MapConverter.unmarshal : virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map)>(r1, r2, r3) >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.unmarshal : return r3
