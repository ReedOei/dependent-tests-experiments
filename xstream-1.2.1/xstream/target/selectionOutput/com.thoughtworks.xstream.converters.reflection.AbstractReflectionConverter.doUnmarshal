com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r4 = new com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r4.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1)>(null)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r4.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void <init>(com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1)>(null) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r5 = $r4
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r5 = $r4 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r6 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.util.Iterator getAttributeNames()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r6 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.util.Iterator getAttributeNames()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z1 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r35 = null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r35 = null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z4 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z4 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z4 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z4 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z4 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : return r1
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r36 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r36 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r37 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r37 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r38 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r38 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r39 = interfaceinvoke $r36.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String realMember(java.lang.Class,java.lang.String)>($r37, $r38)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r39 = interfaceinvoke $r36.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String realMember(java.lang.Class,java.lang.String)>($r37, $r38) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r40 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r40 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r41 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r41 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r42 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r42 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r43 = interfaceinvoke $r40.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>($r41, $r42)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r43 = interfaceinvoke $r40.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String)>($r41, $r42) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $r43 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $r43 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z5 = 1
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $r43 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z5 = 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z5 = 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z6 = $z5
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z6 = $z5 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r44 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader)>(r2)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r44 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader)>(r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z6 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z6 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r45 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z6 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z8 = 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z8 = 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z9 = $z8
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z9 = $z8 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r47 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,boolean,java.lang.Object,java.lang.String,java.lang.Class)>(r2, z9, r1, r39, r44)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r47 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,boolean,java.lang.Object,java.lang.String,java.lang.Class)>(r2, z9, r1, r39, r44) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z9 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z9 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r48 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z9 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r50 = interfaceinvoke r3.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(r1, r47)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r50 = interfaceinvoke r3.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(r1, r47) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r50 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r50 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r52 = virtualinvoke r50.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r50 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z9 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z9 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r63 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z9 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r35 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.util.Map writeValueToImplicitCollection(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>(r3, r50, r35, r1, r39)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r35 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.util.Map writeValueToImplicitCollection(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.util.Map,java.lang.Object,java.lang.String)>(r3, r50, r35, r1, r39) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z4 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z4 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z4 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r63 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke $r63.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r1, r39, r50, r44)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke $r63.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r1, r39, r50, r44) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : virtualinvoke r5.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void add(java.lang.Class,java.lang.String)>(r44, r39)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : virtualinvoke r5.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void add(java.lang.Class,java.lang.String)>(r44, r39) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r52 = virtualinvoke r50.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z11 = virtualinvoke r47.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r52)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z11 = virtualinvoke r47.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r52) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z11 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z11 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r53 = new com.thoughtworks.xstream.converters.ConversionException
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z11 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z9 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r53 = new com.thoughtworks.xstream.converters.ConversionException >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r54 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r54 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r54.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r54.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot convert type ")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot convert type ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r56 = virtualinvoke r50.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r56 = virtualinvoke r50.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r57 = virtualinvoke $r56.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r57 = virtualinvoke $r56.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to type ")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to type ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r60 = virtualinvoke r47.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r60 = virtualinvoke r47.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r53.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>($r62)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r53.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>($r62) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : throw $r53
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r48 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r49 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r49 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r13 = interfaceinvoke $r48.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>($r49, r39)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r13 = interfaceinvoke $r48.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)>($r49, r39) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r50 = virtualinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>(r3, r1, r47, r13)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r50 = virtualinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field)>(r3, r1, r47, r13) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r51 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r51 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r14 = interfaceinvoke $r51.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r1, r39, r44)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r14 = interfaceinvoke $r51.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r1, r39, r44) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z10 = virtualinvoke r14.<java.lang.Class: boolean isPrimitive()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z10 = virtualinvoke r14.<java.lang.Class: boolean isPrimitive()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z10 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z10 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r47 = r14
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z10 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= (branch)]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r50 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r47 = r14 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= (branch)]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r45 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r46 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r46 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z7 = interfaceinvoke $r45.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r39, $r46)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z7 = interfaceinvoke $r45.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r39, $r46) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z7 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z7 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z8 = 1
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z7 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z8 = 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z8 = 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= z9 = $z8]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= z9 = $z8] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z9 = $z8
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z5 = 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= z6 = $z5]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= z6 = $z5] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z6 = $z5
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r7 = (java.lang.String) $r15
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r7 = (java.lang.String) $r15 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r16 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r16 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r8 = interfaceinvoke $r16.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String attributeForAlias(java.lang.String)>(r7)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r8 = interfaceinvoke $r16.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String attributeForAlias(java.lang.String)>(r7) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r9 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader)>(r2)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r9 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader)>(r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r17 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r18 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r18 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z0 = interfaceinvoke $r17.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r8, $r18)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : z0 = interfaceinvoke $r17.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: boolean fieldDefinedInClass(java.lang.String,java.lang.Class)>(r8, $r18) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z0 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r19 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r19 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r10 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)>(r8)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r10 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String)>(r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r20 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r20 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r11 = interfaceinvoke $r20.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r1, r8, r9)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r11 = interfaceinvoke $r20.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class)>(r1, r8, r9) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 != null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r21 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r22 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>(r7)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r22 = interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>(r7) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r12 = interfaceinvoke r10.<com.thoughtworks.xstream.converters.SingleValueConverter: java.lang.Object fromString(java.lang.String)>($r22)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r12 = interfaceinvoke r10.<com.thoughtworks.xstream.converters.SingleValueConverter: java.lang.Object fromString(java.lang.String)>($r22) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z2 = virtualinvoke r11.<java.lang.Class: boolean isPrimitive()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z2 = virtualinvoke r11.<java.lang.Class: boolean isPrimitive()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z2 == 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r11 = staticinvoke <com.thoughtworks.xstream.core.util.Primitives: java.lang.Class box(java.lang.Class)>(r11)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r12 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r12 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r23 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r12 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke $r34.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r1, r8, r12, r9)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : interfaceinvoke $r34.<com.thoughtworks.xstream.converters.reflection.ReflectionProvider: void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)>(r1, r8, r12, r9) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : virtualinvoke r5.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void add(java.lang.Class,java.lang.String)>(r9, r8)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : virtualinvoke r5.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields: void add(java.lang.Class,java.lang.String)>(r9, r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r23 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z3 = virtualinvoke r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r23)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $z3 = virtualinvoke r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r23) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z3 != 0
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z3 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r24 = new com.thoughtworks.xstream.converters.ConversionException
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if $z3 != 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r34 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider>
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r24 = new com.thoughtworks.xstream.converters.ConversionException >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r25 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r25 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot convert type ")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot convert type ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r27 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r27 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r28 = virtualinvoke $r27.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to type ")
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to type ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r31 = virtualinvoke r11.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r31 = virtualinvoke r11.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r24.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>($r33)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : specialinvoke $r24.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>($r33) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : throw $r24
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r11 = staticinvoke <com.thoughtworks.xstream.core.util.Primitives: java.lang.Class box(java.lang.Class)>(r11) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r12 == null
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : $r21 = r0.<com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r10 = interfaceinvoke $r21.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class)>(r11)
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : r10 = interfaceinvoke $r21.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class)>(r11) >>>>>>>> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal : if r10 == null
