com.thoughtworks.xstream.core.TreeMarshaller.start : r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = r2 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : if r1 != null
com.thoughtworks.xstream.core.TreeMarshaller.start : if r1 != null >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.TreeMarshaller.start : if r1 != null >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r7 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.TreeMarshaller.start : $r7 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r8 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.TreeMarshaller.start : $r8 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.core.TreeMarshaller.start : $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r10 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r9)
com.thoughtworks.xstream.core.TreeMarshaller.start : $r10 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r9) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.core.TreeMarshaller.start : $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>($r7, $r10, $r11)
com.thoughtworks.xstream.core.TreeMarshaller.start : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>($r7, $r10, $r11) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : virtualinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.TreeMarshaller.start : virtualinvoke r0.<com.thoughtworks.xstream.core.TreeMarshaller: void convertAnother(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r12 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.TreeMarshaller.start : $r12 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : interfaceinvoke $r12.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.core.TreeMarshaller.start : interfaceinvoke $r12.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : return
com.thoughtworks.xstream.core.TreeMarshaller.start : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r4 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.TreeMarshaller.start : $r4 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r5 = interfaceinvoke $r4.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(null)
com.thoughtworks.xstream.core.TreeMarshaller.start : $r5 = interfaceinvoke $r4.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(null) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : interfaceinvoke $r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>($r5)
com.thoughtworks.xstream.core.TreeMarshaller.start : interfaceinvoke $r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>($r5) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : $r6 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.TreeMarshaller.start : $r6 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : interfaceinvoke $r6.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.core.TreeMarshaller.start : interfaceinvoke $r6.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : goto [?= return]
com.thoughtworks.xstream.core.TreeMarshaller.start : goto [?= return] >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.start : return
