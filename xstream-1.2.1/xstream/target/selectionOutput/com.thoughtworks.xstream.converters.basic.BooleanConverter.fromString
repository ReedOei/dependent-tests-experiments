com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $z0 = r0.<com.thoughtworks.xstream.converters.basic.BooleanConverter: boolean caseSensitive> >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : if $z0 == 0
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r2 = r0.<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.String positive>
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r4 = r0.<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.String positive>
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r4 = r0.<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.String positive> >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1)
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : if $z2 == 0
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : if $z2 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r5 = <java.lang.Boolean: java.lang.Boolean FALSE> >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : return $r5
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r5 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : goto [?= return $r5]
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : goto [?= return $r5] >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : return $r5
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r2 = r0.<com.thoughtworks.xstream.converters.basic.BooleanConverter: java.lang.String positive> >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1)
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : if $z1 == 0
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r3 = <java.lang.Boolean: java.lang.Boolean FALSE> >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : return $r3
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : $r3 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : goto [?= return $r3]
com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : goto [?= return $r3] >>>>>>>> com.thoughtworks.xstream.converters.basic.BooleanConverter.fromString : return $r3
