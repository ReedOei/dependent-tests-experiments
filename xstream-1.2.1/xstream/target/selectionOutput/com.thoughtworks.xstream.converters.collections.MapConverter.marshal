com.thoughtworks.xstream.converters.collections.MapConverter.marshal : r4 = (java.util.Map) r1 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r7 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r7 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : r5 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : r5 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : if $z0 == 0
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : return
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : r6 = (java.util.Map$Entry) $r8
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : r6 = (java.util.Map$Entry) $r8 >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r9 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r9 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r10 = interfaceinvoke $r9.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(class "java/util/Map$Entry")
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r10 = interfaceinvoke $r9.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(class "java/util/Map$Entry") >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>($r10)
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>($r10) >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>($r11, r3, r2)
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>($r11, r3, r2) >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>($r12, r3, r2)
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>($r12, r3, r2) >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.converters.collections.MapConverter.marshal : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.thoughtworks.xstream.converters.collections.MapConverter.marshal : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
