com.thoughtworks.xstream.XStream.toXML : $r4 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.io.HierarchicalStreamDriver hierarchicalStreamDriver> >>>>>>>> com.thoughtworks.xstream.XStream.toXML : r3 = interfaceinvoke $r4.<com.thoughtworks.xstream.io.HierarchicalStreamDriver: com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)>(r2)
com.thoughtworks.xstream.XStream.toXML : r3 = interfaceinvoke $r4.<com.thoughtworks.xstream.io.HierarchicalStreamDriver: com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream)>(r2) >>>>>>>> com.thoughtworks.xstream.XStream.toXML : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>(r1, r3)
com.thoughtworks.xstream.XStream.toXML : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)>(r1, r3) >>>>>>>> com.thoughtworks.xstream.XStream.toXML : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void flush()>()
com.thoughtworks.xstream.XStream.toXML : interfaceinvoke r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void flush()>() >>>>>>>> com.thoughtworks.xstream.XStream.toXML : return
