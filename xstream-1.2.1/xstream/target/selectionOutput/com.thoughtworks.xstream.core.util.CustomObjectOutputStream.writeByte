com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : $r2 = virtualinvoke r0.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream: com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback peekCallback()>() >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : $r1 = new java.lang.Byte
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : $r1 = new java.lang.Byte >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : $b1 = (byte) i0
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : $b1 = (byte) i0 >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : specialinvoke $r1.<java.lang.Byte: void <init>(byte)>($b1)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : specialinvoke $r1.<java.lang.Byte: void <init>(byte)>($b1) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : interfaceinvoke $r2.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback: void writeToStream(java.lang.Object)>($r1)
com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : interfaceinvoke $r2.<com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback: void writeToStream(java.lang.Object)>($r1) >>>>>>>> com.thoughtworks.xstream.core.util.CustomObjectOutputStream.writeByte : return
