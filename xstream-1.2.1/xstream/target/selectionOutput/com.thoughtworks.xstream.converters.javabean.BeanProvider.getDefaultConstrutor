com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : i0 = 0
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : i0 = 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $i1 = lengthof r2
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $i1 = lengthof r2 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : if i0 >= $i1
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : if i0 >= $i1 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : r3 = r2[i0]
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : if i0 >= $i1 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : return null
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : r3 = r2[i0] >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $r4 = virtualinvoke r3.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $r4 = virtualinvoke r3.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $i2 = lengthof $r4
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $i2 = lengthof $r4 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : if $i2 != 0
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : if $i2 != 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $i3 = virtualinvoke r3.<java.lang.reflect.Constructor: int getModifiers()>()
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : if $i2 != 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : i0 = i0 + 1
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : i0 = i0 + 1 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : goto [?= $i1 = lengthof r2]
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : goto [?= $i1 = lengthof r2] >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $i1 = lengthof r2
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $i3 = virtualinvoke r3.<java.lang.reflect.Constructor: int getModifiers()>() >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i3)
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i3) >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : if $z0 == 0
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : return r3
com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.javabean.BeanProvider.getDefaultConstrutor : i0 = i0 + 1
