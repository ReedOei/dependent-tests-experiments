com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r21 = $r20 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r22 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r22 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : specialinvoke $r22.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r21)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : specialinvoke $r22.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r21) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : throw $r22
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r6 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: com.thoughtworks.xstream.io.xml.QNameMap qnameMap> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxWriter: java.lang.String escapeXmlName(java.lang.String)>(r1)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r6 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: com.thoughtworks.xstream.io.xml.QNameMap qnameMap> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxWriter: java.lang.String escapeXmlName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r2 = virtualinvoke $r6.<com.thoughtworks.xstream.io.xml.QNameMap: javax.xml.namespace.QName getQName(java.lang.String)>($r7)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxWriter: java.lang.String escapeXmlName(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r2 = virtualinvoke $r6.<com.thoughtworks.xstream.io.xml.QNameMap: javax.xml.namespace.QName getQName(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r3 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getPrefix()>()
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r2 = virtualinvoke $r6.<com.thoughtworks.xstream.io.xml.QNameMap: javax.xml.namespace.QName getQName(java.lang.String)>($r7) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r3 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getPrefix()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r4 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r3 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getPrefix()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r4 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r3 == null
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r4 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i0 = virtualinvoke r3.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z3 = 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r3 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z3 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z0 = $z3
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z3 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z0 = $z3 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r4 == null
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z0 = $z3 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r4 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i1 = virtualinvoke r4.<java.lang.String: int length()>()
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r4 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z4 = 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r4 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z4 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z1 = $z4
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z4 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z1 = $z4 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z1 = $z4 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r13 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z2 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r15 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r15 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r16 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r15 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r16 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r15.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r3, $r16, r4)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r16 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r15.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r3, $r16, r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r15.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r3, $r16, r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z2 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z1 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i3 = $i2 + 1
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i3 = $i2 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth> = $i3
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i3 = $i2 + 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth> = $i3 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= return]
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth> = $i3 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= return] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : return
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z2 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxWriter: boolean isNamespaceRepairingMode()>()
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z2 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z2 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxWriter: boolean isNamespaceRepairingMode()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z7 != 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z7 = virtualinvoke r0.<com.thoughtworks.xstream.io.xml.StaxWriter: boolean isNamespaceRepairingMode()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z7 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z7 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z7 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r17 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r18 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r18 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r18.<javax.xml.stream.XMLStreamWriter: void writeDefaultNamespace(java.lang.String)>(r4)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r18 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r18.<javax.xml.stream.XMLStreamWriter: void writeDefaultNamespace(java.lang.String)>(r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r18.<javax.xml.stream.XMLStreamWriter: void writeDefaultNamespace(java.lang.String)>(r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r17 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r17.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>(r3, r4)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r17 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r17.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>(r3, r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth>]
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r17.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>(r3, r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth>] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= $i2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: int tagDepth>] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z2 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r14 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z2 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r15 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z2 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r14 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r14.<javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>(r4)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r14 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r14.<javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>(r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r15 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r14.<javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>(r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r13 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r13.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>(r3, r4)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r13 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r13.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>(r3, r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= $r15 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>]
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : interfaceinvoke $r13.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>(r3, r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= $r15 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r15 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= $r15 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r8 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r10 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out>
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r10 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r11 = interfaceinvoke $r10.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>()
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r10 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r11 = interfaceinvoke $r10.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r12 = interfaceinvoke $r11.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>("")
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r11 = interfaceinvoke $r10.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r12 = interfaceinvoke $r11.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>("") >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r12 == null
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r12 = interfaceinvoke $r11.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>("") >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r12 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z6 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>(r4)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r12 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 1
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r12 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z6 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>(r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z6 != 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z6 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>(r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z6 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 1
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z6 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z6 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r8 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r9 = interfaceinvoke $r8.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>()
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r8 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r9 = interfaceinvoke $r8.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r5 = interfaceinvoke $r9.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>(r3)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r9 = interfaceinvoke $r8.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r5 = interfaceinvoke $r9.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>(r3) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r5 == null
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : r5 = interfaceinvoke $r9.<javax.xml.namespace.NamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>(r3) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r5 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r4)
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r5 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 1
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if r5 == null >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= (branch)]
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if z0 == 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z5 != 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r4) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z5 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z2 = 1
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z5 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= (branch)]
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $z5 != 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i1 = virtualinvoke r4.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $i1 <= 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i1 = virtualinvoke r4.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $i1 <= 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z4 = 1
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $i1 <= 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z4 = 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $i1 <= 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z4 = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= z1 = $z4]
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z4 = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= z1 = $z4] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z1 = $z4
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= z1 = $z4] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i0 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $i0 <= 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $i0 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $i0 <= 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z3 = 1
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $i0 <= 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z3 = 0
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : if $i0 <= 0 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z3 = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= z0 = $z3]
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $z3 = 1 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= z0 = $z3] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : z0 = $z3
com.thoughtworks.xstream.io.xml.StaxWriter.startNode : goto [?= z0 = $z3] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.startNode : $r20 := @caughtexception
