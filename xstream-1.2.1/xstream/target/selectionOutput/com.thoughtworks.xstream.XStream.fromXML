com.thoughtworks.xstream.XStream.fromXML : $r3 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.io.HierarchicalStreamDriver hierarchicalStreamDriver> >>>>>>>> com.thoughtworks.xstream.XStream.fromXML : $r4 = interfaceinvoke $r3.<com.thoughtworks.xstream.io.HierarchicalStreamDriver: com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)>(r1)
com.thoughtworks.xstream.XStream.fromXML : $r4 = interfaceinvoke $r3.<com.thoughtworks.xstream.io.HierarchicalStreamDriver: com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream)>(r1) >>>>>>>> com.thoughtworks.xstream.XStream.fromXML : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.XStream: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object)>($r4, r2)
com.thoughtworks.xstream.XStream.fromXML : $r5 = virtualinvoke r0.<com.thoughtworks.xstream.XStream: java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object)>($r4, r2) >>>>>>>> com.thoughtworks.xstream.XStream.fromXML : return $r5
