com.thoughtworks.xstream.io.binary.Token$Formatter.read : b0 = interfaceinvoke r1.<java.io.DataInput: byte readByte()>() >>>>>>>> com.thoughtworks.xstream.io.binary.Token$Formatter.read : $b3 = b0 & 7
com.thoughtworks.xstream.io.binary.Token$Formatter.read : $b3 = b0 & 7 >>>>>>>> com.thoughtworks.xstream.io.binary.Token$Formatter.read : b1 = (byte) $b3
com.thoughtworks.xstream.io.binary.Token$Formatter.read : b1 = (byte) $b3 >>>>>>>> com.thoughtworks.xstream.io.binary.Token$Formatter.read : $b4 = b0 & 56
com.thoughtworks.xstream.io.binary.Token$Formatter.read : $b4 = b0 & 56 >>>>>>>> com.thoughtworks.xstream.io.binary.Token$Formatter.read : b2 = (byte) $b4
com.thoughtworks.xstream.io.binary.Token$Formatter.read : b2 = (byte) $b4 >>>>>>>> com.thoughtworks.xstream.io.binary.Token$Formatter.read : r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.Token$Formatter: com.thoughtworks.xstream.io.binary.Token contructToken(byte)>(b1)
com.thoughtworks.xstream.io.binary.Token$Formatter.read : r2 = specialinvoke r0.<com.thoughtworks.xstream.io.binary.Token$Formatter: com.thoughtworks.xstream.io.binary.Token contructToken(byte)>(b1) >>>>>>>> com.thoughtworks.xstream.io.binary.Token$Formatter.read : virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: void readFrom(java.io.DataInput,byte)>(r1, b2)
com.thoughtworks.xstream.io.binary.Token$Formatter.read : virtualinvoke r2.<com.thoughtworks.xstream.io.binary.Token: void readFrom(java.io.DataInput,byte)>(r1, b2) >>>>>>>> com.thoughtworks.xstream.io.binary.Token$Formatter.read : return r2
