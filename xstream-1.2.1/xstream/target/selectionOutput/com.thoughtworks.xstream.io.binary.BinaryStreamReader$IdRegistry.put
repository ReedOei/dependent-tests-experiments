com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.put : $r3 = r0.<com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry: java.util.Map map> >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.put : $r2 = new java.lang.Long
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.put : $r2 = new java.lang.Long >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.put : specialinvoke $r2.<java.lang.Long: void <init>(long)>(l0)
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.put : specialinvoke $r2.<java.lang.Long: void <init>(long)>(l0) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r1)
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.put : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r1) >>>>>>>> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry.put : return
