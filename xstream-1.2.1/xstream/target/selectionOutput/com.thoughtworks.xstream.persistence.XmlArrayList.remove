com.thoughtworks.xstream.persistence.XmlArrayList.remove : i1 = virtualinvoke r0.<com.thoughtworks.xstream.persistence.XmlArrayList: int size()>() >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : specialinvoke r0.<com.thoughtworks.xstream.persistence.XmlArrayList: void rangeCheck(int)>(i0)
com.thoughtworks.xstream.persistence.XmlArrayList.remove : specialinvoke r0.<com.thoughtworks.xstream.persistence.XmlArrayList: void rangeCheck(int)>(i0) >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r2 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map>
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r2 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map> >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0)
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0) >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : r1 = virtualinvoke $r2.<com.thoughtworks.xstream.persistence.XmlMap: java.lang.Object get(java.lang.Object)>($r3)
com.thoughtworks.xstream.persistence.XmlArrayList.remove : r1 = virtualinvoke $r2.<com.thoughtworks.xstream.persistence.XmlMap: java.lang.Object get(java.lang.Object)>($r3) >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : i2 = i0
com.thoughtworks.xstream.persistence.XmlArrayList.remove : i2 = i0 >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $i3 = i1 - 1
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $i3 = i1 - 1 >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : if i2 >= $i3
com.thoughtworks.xstream.persistence.XmlArrayList.remove : if i2 >= $i3 >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r4 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map>
com.thoughtworks.xstream.persistence.XmlArrayList.remove : if i2 >= $i3 >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r10 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map>
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r10 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map> >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $i5 = i1 - 1
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $i5 = i1 - 1 >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i5)
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i5) >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : virtualinvoke $r10.<com.thoughtworks.xstream.persistence.XmlMap: java.lang.Object remove(java.lang.Object)>($r11)
com.thoughtworks.xstream.persistence.XmlArrayList.remove : virtualinvoke $r10.<com.thoughtworks.xstream.persistence.XmlMap: java.lang.Object remove(java.lang.Object)>($r11) >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : return r1
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r4 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map> >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i2)
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i2) >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r6 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map>
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r6 = r0.<com.thoughtworks.xstream.persistence.XmlArrayList: com.thoughtworks.xstream.persistence.XmlMap map> >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $i4 = i2 + 1
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $i4 = i2 + 1 >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4)
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4) >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r8 = virtualinvoke $r6.<com.thoughtworks.xstream.persistence.XmlMap: java.lang.Object get(java.lang.Object)>($r7)
com.thoughtworks.xstream.persistence.XmlArrayList.remove : $r8 = virtualinvoke $r6.<com.thoughtworks.xstream.persistence.XmlMap: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : virtualinvoke $r4.<com.thoughtworks.xstream.persistence.XmlMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r8)
com.thoughtworks.xstream.persistence.XmlArrayList.remove : virtualinvoke $r4.<com.thoughtworks.xstream.persistence.XmlMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r8) >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : i2 = i2 + 1
com.thoughtworks.xstream.persistence.XmlArrayList.remove : i2 = i2 + 1 >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : goto [?= $i3 = i1 - 1]
com.thoughtworks.xstream.persistence.XmlArrayList.remove : goto [?= $i3 = i1 - 1] >>>>>>>> com.thoughtworks.xstream.persistence.XmlArrayList.remove : $i3 = i1 - 1
