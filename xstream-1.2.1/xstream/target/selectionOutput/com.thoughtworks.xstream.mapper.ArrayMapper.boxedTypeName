com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : $r2 = <com.thoughtworks.xstream.mapper.ArrayMapper: java.util.Collection BOXED_TYPES> >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>(r1)
com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : if $z0 == 0
com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : $r3 = null
com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : $r3 = null >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : return $r3
com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : goto [?= return $r3]
com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : goto [?= return $r3] >>>>>>>> com.thoughtworks.xstream.mapper.ArrayMapper.boxedTypeName : return $r3
