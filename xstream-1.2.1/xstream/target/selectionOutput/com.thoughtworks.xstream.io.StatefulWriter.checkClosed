com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i1 = r0.<com.thoughtworks.xstream.io.StatefulWriter: int state> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_CLOSED>
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $i0 = <com.thoughtworks.xstream.io.StatefulWriter: int STATE_CLOSED> >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : if $i1 != $i0
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : if $i1 != $i0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $r2 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : if $i1 != $i0 >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : return
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $r2 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $r1 = new java.io.IOException
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : $r1 = new java.io.IOException >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Writing on a closed stream")
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Writing on a closed stream") >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : specialinvoke $r2.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>($r1)
com.thoughtworks.xstream.io.StatefulWriter.checkClosed : specialinvoke $r2.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>($r1) >>>>>>>> com.thoughtworks.xstream.io.StatefulWriter.checkClosed : throw $r2
