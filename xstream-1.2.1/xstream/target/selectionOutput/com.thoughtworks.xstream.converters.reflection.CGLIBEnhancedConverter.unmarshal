com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r3 = new net.sf.cglib.proxy.Enhancer >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : specialinvoke $r3.<net.sf.cglib.proxy.Enhancer: void <init>()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : specialinvoke $r3.<net.sf.cglib.proxy.Enhancer: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : r4 = $r3
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : r4 = $r3 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r7 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, class "java/lang/Class")
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r7 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, class "java/lang/Class") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r8 = (java.lang.Class) $r7
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r8 = (java.lang.Class) $r7 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setSuperclass(java.lang.Class)>($r8)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setSuperclass(java.lang.Class)>($r8) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r9 = new java.util.ArrayList
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r9 = new java.util.ArrayList >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : r5 = $r9
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : r5 = $r9 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z0 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $i0 = interfaceinvoke r5.<java.util.List: int size()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $i0 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r14 = newarray (java.lang.Class)[$i0]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r14 = newarray (java.lang.Class)[$i0] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r15 = interfaceinvoke r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r16 = (java.lang.Class[]) $r15
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r16 = (java.lang.Class[]) $r15 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r17 = (java.lang.Class[]) $r16
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r17 = (java.lang.Class[]) $r16 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setInterfaces(java.lang.Class[])>($r17)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setInterfaces(java.lang.Class[])>($r17) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r18 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r18 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z2 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>($r18)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z2 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>($r18) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setUseFactory(boolean)>($z2)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setUseFactory(boolean)>($z2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r19 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r19 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r20 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r20 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r21 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r20)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r21 = interfaceinvoke $r19.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r20) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r22 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, $r21)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r22 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, $r21) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r23 = (net.sf.cglib.proxy.Callback) $r22
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r23 = (net.sf.cglib.proxy.Callback) $r22 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setCallback(net.sf.cglib.proxy.Callback)>($r23)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setCallback(net.sf.cglib.proxy.Callback)>($r23) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : r6 = null
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : r6 = null >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z3 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z3 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r29 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker serializationMethodInvoker>
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r29 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker serializationMethodInvoker> >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if r6 != null
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if r6 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r30 = virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: java.lang.Object create()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if r6 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r30 = r6
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r30 = r6 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r31 = virtualinvoke $r29.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object callReadResolve(java.lang.Object)>($r30)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r31 = virtualinvoke $r29.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object callReadResolve(java.lang.Object)>($r30) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : return $r31
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r30 = virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: java.lang.Object create()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : goto [?= $r31 = virtualinvoke $r29.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object callReadResolve(java.lang.Object)>($r30)]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : goto [?= $r31 = virtualinvoke $r29.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object callReadResolve(java.lang.Object)>($r30)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r31 = virtualinvoke $r29.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object callReadResolve(java.lang.Object)>($r30)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r24 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r24 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z4 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("serialVersionUID")
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z4 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("serialVersionUID") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z4 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z4 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r25 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z4 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r27 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r27 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z5 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("instance")
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z5 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("instance") >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z5 == 0
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z5 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : r6 = virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: java.lang.Object create()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : if $z5 == 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : goto [?= $z3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : goto [?= $z3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : r6 = virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: java.lang.Object create()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>(r6, r1, r2)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.SerializableConverter: java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)>(r6, r1, r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r25 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r25)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r25) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setSerialVersionUID(java.lang.Long)>($r26)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : virtualinvoke r4.<net.sf.cglib.proxy.Enhancer: void setSerialVersionUID(java.lang.Long)>($r26) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r11 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r11 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r12 = interfaceinvoke $r10.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r11)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r12 = interfaceinvoke $r10.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r11) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r13 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, $r12)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $r13 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, $r12) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13)
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()]
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()] >>>>>>>> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
