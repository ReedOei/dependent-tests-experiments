com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : if r1 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r2 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : if r1 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r4 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r4 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r5 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r5 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r6 = staticinvoke <com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter)>($r5)
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r6 = staticinvoke <com.thoughtworks.xstream.converters.reflection.ExternalizableConverter: com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter)>($r5) >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r8 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r7)
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r8 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>($r7) >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>($r4, $r8, $r9)
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : staticinvoke <com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper: void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class)>($r4, $r8, $r9) >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.converters.MarshallingContext val$context>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r10 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.converters.MarshallingContext val$context> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : interfaceinvoke $r10.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>(r1)
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : interfaceinvoke $r10.<com.thoughtworks.xstream.converters.MarshallingContext: void convertAnother(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r11 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : interfaceinvoke $r11.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : interfaceinvoke $r11.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : return
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r2 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : interfaceinvoke $r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("null")
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : interfaceinvoke $r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void startNode(java.lang.String)>("null") >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r3 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer>
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : $r3 = r0.<com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1: com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer> >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : interfaceinvoke $r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>()
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : interfaceinvoke $r3.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void endNode()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : goto [?= return]
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : goto [?= return] >>>>>>>> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1.writeToStream : return
