com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $z0 = r1 instanceof java.lang.reflect.Method >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : if $z0 == 0
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : r4 = (java.lang.reflect.Method) r1
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : r9 = (java.lang.reflect.Constructor) r1
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : r9 = (java.lang.reflect.Constructor) r1 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r10 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>()
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r10 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r12 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r12 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : specialinvoke r0.<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])>(r2, r11, null, $r12)
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : specialinvoke r0.<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])>(r2, r11, null, $r12) >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : return
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : r4 = (java.lang.reflect.Method) r1 >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>()
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : r5 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : r5 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r7 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>()
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r7 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r8 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>()
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : $r8 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : specialinvoke r0.<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])>(r2, r5, $r7, $r8)
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : specialinvoke r0.<com.thoughtworks.xstream.converters.extended.JavaMethodConverter: void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[])>(r2, r5, $r7, $r8) >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : goto [?= return]
com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : goto [?= return] >>>>>>>> com.thoughtworks.xstream.converters.extended.JavaMethodConverter.marshal : return
