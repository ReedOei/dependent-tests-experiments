com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $z0 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2)
com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $z0 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2) >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : if $z0 == 0
com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $r3 = r0
com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $r4 = r0.<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper wrapped>
com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $r4 = r0.<com.thoughtworks.xstream.mapper.MapperWrapper: com.thoughtworks.xstream.mapper.Mapper wrapped> >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $r3 = interfaceinvoke $r4.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class)>(r1)
com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $r3 = interfaceinvoke $r4.<com.thoughtworks.xstream.mapper.Mapper: com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class)>(r1) >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : return $r3
com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : $r3 = r0 >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : goto [?= return $r3]
com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : goto [?= return $r3] >>>>>>>> com.thoughtworks.xstream.mapper.MapperWrapper.lookupMapperOfType : return $r3
