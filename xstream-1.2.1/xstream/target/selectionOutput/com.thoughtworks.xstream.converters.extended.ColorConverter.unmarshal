com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r3 = new java.util.HashMap >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : specialinvoke $r3.<java.util.HashMap: void <init>()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : specialinvoke $r3.<java.util.HashMap: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : r4 = $r3
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : r4 = $r3 >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : if $z0 == 0
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r9 = new java.awt.Color
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r9 = new java.awt.Color >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r10 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("red")
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r10 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("red") >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r11 = (java.lang.Integer) $r10
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r11 = (java.lang.Integer) $r10 >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r12 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("green")
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r12 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("green") >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r13 = (java.lang.Integer) $r12
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r13 = (java.lang.Integer) $r12 >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r14 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("blue")
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r14 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("blue") >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r15 = (java.lang.Integer) $r14
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r15 = (java.lang.Integer) $r14 >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $i2 = virtualinvoke $r15.<java.lang.Integer: int intValue()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $i2 = virtualinvoke $r15.<java.lang.Integer: int intValue()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r16 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("alpha")
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r16 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("alpha") >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r17 = (java.lang.Integer) $r16
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r17 = (java.lang.Integer) $r16 >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $i3 = virtualinvoke $r17.<java.lang.Integer: int intValue()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $i3 = virtualinvoke $r17.<java.lang.Integer: int intValue()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : specialinvoke $r9.<java.awt.Color: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3)
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : specialinvoke $r9.<java.awt.Color: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3) >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : return $r9
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r5 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r5 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r6 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r6 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getValue()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r6)
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r6) >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7)
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7) >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()]
com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : goto [?= $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()] >>>>>>>> com.thoughtworks.xstream.converters.extended.ColorConverter.unmarshal : $z0 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: boolean hasMoreChildren()>()
