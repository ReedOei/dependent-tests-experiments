com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r6 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.mapper.Mapper getMapper()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z0 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: boolean isImmutableValueType(java.lang.Class)>($r7)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z0 = interfaceinvoke $r6.<com.thoughtworks.xstream.mapper.Mapper: boolean isImmutableValueType(java.lang.Class)>($r7) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z0 == 0
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r8 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r9 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.PathTracker pathTracker>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r9 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.PathTracker pathTracker> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r3 = virtualinvoke $r9.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path getPath()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r3 = virtualinvoke $r9.<com.thoughtworks.xstream.io.path.PathTracker: com.thoughtworks.xstream.io.path.Path getPath()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r10 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r10 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r4 = virtualinvoke $r10.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.lang.Object lookupId(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r4 = virtualinvoke $r10.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.lang.Object lookupId(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if r4 == null
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if r4 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r11 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if r4 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r15 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary implicitElements>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r15 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary implicitElements> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r16 = virtualinvoke $r15.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.lang.Object lookupId(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r16 = virtualinvoke $r15.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: java.lang.Object lookupId(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $r16 == null
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $r16 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r17 = new com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $r16 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r5 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path)>(r3)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r5 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path)>(r3) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r18 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r18 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $r18 == null
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $r18 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r19 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $r18 == null >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void fireValidReference(java.lang.Object)>(r5)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void fireValidReference(java.lang.Object)>(r5) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath> = r3
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath> = r3 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r20 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r20 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary references> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke $r20.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>(r1, r5)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke $r20.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>(r1, r5) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= $r22 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>]
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= $r22 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>] >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r22 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r22 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r22, r0)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r22, r0) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : return
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r19 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.path.Path lastPath> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z1 = virtualinvoke r3.<com.thoughtworks.xstream.io.path.Path: boolean isAncestor(com.thoughtworks.xstream.io.path.Path)>($r19)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $z1 = virtualinvoke r3.<com.thoughtworks.xstream.io.path.Path: boolean isAncestor(com.thoughtworks.xstream.io.path.Path)>($r19) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z1 != 0
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: void fireValidReference(java.lang.Object)>(r5)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : if $z1 != 0 >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r21 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary implicitElements>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r21 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary implicitElements> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke $r21.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>(r1, r5)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : virtualinvoke $r21.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>(r1, r5) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r22 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r17 = new com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : specialinvoke $r17.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException: void <init>(java.lang.Object,com.thoughtworks.xstream.io.path.Path)>(r1, r3)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : specialinvoke $r17.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException: void <init>(java.lang.Object,com.thoughtworks.xstream.io.path.Path)>(r1, r3) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : throw $r17
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r11 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r12 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.mapper.Mapper getMapper()>()
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r12 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.mapper.Mapper getMapper()>() >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r13 = interfaceinvoke $r12.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("reference")
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r13 = interfaceinvoke $r12.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("reference") >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r14 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>(r3, r4)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r14 = virtualinvoke r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object)>(r3, r4) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke $r11.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r13, $r14)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke $r11.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r13, $r14) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= return]
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= return] >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : return
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : $r8 = r0.<com.thoughtworks.xstream.core.AbstractReferenceMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r8, r0)
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r8, r0) >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= return]
com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : goto [?= return] >>>>>>>> com.thoughtworks.xstream.core.AbstractReferenceMarshaller.convert : return
