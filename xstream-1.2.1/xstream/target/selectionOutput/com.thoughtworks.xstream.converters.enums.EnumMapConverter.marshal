com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r5 = r0.<com.thoughtworks.xstream.converters.enums.EnumMapConverter: java.lang.reflect.Field typeField> >>>>>>>> com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r6 = staticinvoke <com.thoughtworks.xstream.core.util.Fields: java.lang.Object read(java.lang.reflect.Field,java.lang.Object)>($r5, r1)
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r6 = staticinvoke <com.thoughtworks.xstream.core.util.Fields: java.lang.Object read(java.lang.reflect.Field,java.lang.Object)>($r5, r1) >>>>>>>> com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : r4 = (java.lang.Class) $r6
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : r4 = (java.lang.Class) $r6 >>>>>>>> com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.converters.enums.EnumMapConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.converters.enums.EnumMapConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>() >>>>>>>> com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r8 = interfaceinvoke $r7.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("enum-type")
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r8 = interfaceinvoke $r7.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("enum-type") >>>>>>>> com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r9 = virtualinvoke r0.<com.thoughtworks.xstream.converters.enums.EnumMapConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r9 = virtualinvoke r0.<com.thoughtworks.xstream.converters.enums.EnumMapConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>() >>>>>>>> com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r10 = interfaceinvoke $r9.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(r4)
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : $r10 = interfaceinvoke $r9.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String serializedClass(java.lang.Class)>(r4) >>>>>>>> com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r8, $r10)
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : interfaceinvoke r2.<com.thoughtworks.xstream.io.HierarchicalStreamWriter: void addAttribute(java.lang.String,java.lang.String)>($r8, $r10) >>>>>>>> com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : specialinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, r2, r3)
com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : specialinvoke r0.<com.thoughtworks.xstream.converters.collections.MapConverter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, r2, r3) >>>>>>>> com.thoughtworks.xstream.converters.enums.EnumMapConverter.marshal : return
