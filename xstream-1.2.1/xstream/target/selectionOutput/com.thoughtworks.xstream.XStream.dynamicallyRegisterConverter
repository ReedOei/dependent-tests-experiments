com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r12 = $r11 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r13 = new com.thoughtworks.xstream.XStream$InitializationException
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r13 = new com.thoughtworks.xstream.XStream$InitializationException >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r14 = new java.lang.StringBuilder
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r14 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instatiate converter : ")
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instatiate converter : ") >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : specialinvoke $r13.<com.thoughtworks.xstream.XStream$InitializationException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r12)
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : specialinvoke $r13.<com.thoughtworks.xstream.XStream$InitializationException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r12) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : throw $r13
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r7 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.util.ClassLoaderReference classLoaderReference> >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r8 = virtualinvoke $r7.<com.thoughtworks.xstream.core.util.ClassLoaderReference: java.lang.ClassLoader getReference()>()
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r7 = r0.<com.thoughtworks.xstream.XStream: com.thoughtworks.xstream.core.util.ClassLoaderReference classLoaderReference> >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r8 = virtualinvoke $r7.<com.thoughtworks.xstream.core.util.ClassLoaderReference: java.lang.ClassLoader getReference()>() >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, $r8)
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r8 = virtualinvoke $r7.<com.thoughtworks.xstream.core.util.ClassLoaderReference: java.lang.ClassLoader getReference()>() >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, $r8) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r2)
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, $r8) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r2) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r6 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r3)
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r2) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r6 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r3) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $z0 = r6 instanceof com.thoughtworks.xstream.converters.Converter
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : r6 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r3) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $z0 = r6 instanceof com.thoughtworks.xstream.converters.Converter >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : if $z0 == 0
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $z0 = r6 instanceof com.thoughtworks.xstream.converters.Converter >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r9 = (com.thoughtworks.xstream.converters.Converter) r6
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $z1 = r6 instanceof com.thoughtworks.xstream.converters.SingleValueConverter
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $z1 = r6 instanceof com.thoughtworks.xstream.converters.SingleValueConverter >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : if $z1 == 0
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $z1 = r6 instanceof com.thoughtworks.xstream.converters.SingleValueConverter >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r10 = (com.thoughtworks.xstream.converters.SingleValueConverter) r6
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : goto [?= return]
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : goto [?= return] >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : return
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r10 = (com.thoughtworks.xstream.converters.SingleValueConverter) r6 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int)>($r10, i0)
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r10 = (com.thoughtworks.xstream.converters.SingleValueConverter) r6 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int)>($r10, i0) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : goto [?= return]
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int)>($r10, i0) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r9 = (com.thoughtworks.xstream.converters.Converter) r6 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>($r9, i0)
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r9 = (com.thoughtworks.xstream.converters.Converter) r6 >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>($r9, i0) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : goto [?= (branch)]
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : virtualinvoke r0.<com.thoughtworks.xstream.XStream: void registerConverter(com.thoughtworks.xstream.converters.Converter,int)>($r9, i0) >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : goto [?= return]
com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : goto [?= (branch)] >>>>>>>> com.thoughtworks.xstream.XStream.dynamicallyRegisterConverter : $r11 := @caughtexception
