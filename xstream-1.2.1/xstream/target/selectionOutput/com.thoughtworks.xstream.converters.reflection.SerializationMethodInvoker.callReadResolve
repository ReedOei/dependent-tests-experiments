com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : if r1 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : return null
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : if r1 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : r2 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>($r4, "readResolve", null, 1)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : r2 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>($r4, "readResolve", null, 1) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : if r2 == null
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : if r2 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r5 = <com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object[] EMPTY_ARGS>
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : if r2 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : return r1
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : if r2 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r7 := @caughtexception
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : if r2 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r16 := @caughtexception
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : r17 = $r16 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r18 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r18 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r19 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r19 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not call ")
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not call ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r21 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r21 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".readResolve()")
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".readResolve()") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r26 = virtualinvoke r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r26 = virtualinvoke r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : specialinvoke $r18.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r26)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : specialinvoke $r18.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r26) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : throw $r18
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : r3 = $r7 >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r8 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r8 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r9 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r9 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not call ")
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not call ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".readResolve()")
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".readResolve()") >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : specialinvoke $r8.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String,java.lang.Throwable)>($r15, r3)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : specialinvoke $r8.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String,java.lang.Throwable)>($r15, r3) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : throw $r8
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r5 = <com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object[] EMPTY_ARGS> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r7 := @caughtexception
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r5 = <com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object[] EMPTY_ARGS> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r16 := @caughtexception
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r5 = <com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker: java.lang.Object[] EMPTY_ARGS> >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r6 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5)
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r6 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r7 := @caughtexception
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r6 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r16 := @caughtexception
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : $r6 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5) >>>>>>>> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker.callReadResolve : return $r6
