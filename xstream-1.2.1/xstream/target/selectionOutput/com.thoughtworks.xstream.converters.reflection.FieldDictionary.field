com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r3 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $z0 = 1
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r3 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $z0 = 0
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $z0 = 0 >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r6 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>(r1, $z0)
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r6 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>(r1, $z0) >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r3 == null
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r3 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r19 = new com.thoughtworks.xstream.converters.reflection.FieldDictionary$FieldKey
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r3 == null >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r9 = r2
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r9 = r2 >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r10 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9)
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r10 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9) >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r7 = (java.lang.reflect.Field) $r10
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r7 = (java.lang.reflect.Field) $r10 >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r7 != null
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r7 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r21 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : if r7 != null >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : return r7
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r21 = new com.thoughtworks.xstream.converters.reflection.ObjectAccessException >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r20 = new java.lang.StringBuilder
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r20 = new java.lang.StringBuilder >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : specialinvoke r20.<java.lang.StringBuilder: void <init>()>()
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : specialinvoke r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such field ")
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such field ") >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r14 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r14 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : specialinvoke r21.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String)>($r18)
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : specialinvoke r21.<com.thoughtworks.xstream.converters.reflection.ObjectAccessException: void <init>(java.lang.String)>($r18) >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : throw r21
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r19 = new com.thoughtworks.xstream.converters.reflection.FieldDictionary$FieldKey >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r9 = r19
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r9 = r19 >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : specialinvoke r19.<com.thoughtworks.xstream.converters.reflection.FieldDictionary$FieldKey: void <init>(java.lang.String,java.lang.Class,int)>(r2, r3, 0)
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : specialinvoke r19.<com.thoughtworks.xstream.converters.reflection.FieldDictionary$FieldKey: void <init>(java.lang.String,java.lang.Class,int)>(r2, r3, 0) >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : goto [?= $r10 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9)]
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : goto [?= $r10 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $r10 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9)
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : $z0 = 1 >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : goto [?= r6 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>(r1, $z0)]
com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : goto [?= r6 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>(r1, $z0)] >>>>>>>> com.thoughtworks.xstream.converters.reflection.FieldDictionary.field : r6 = specialinvoke r0.<com.thoughtworks.xstream.converters.reflection.FieldDictionary: java.util.Map buildMap(java.lang.Class,boolean)>(r1, $z0)
