com.thoughtworks.xstream.core.TreeMarshaller.convert : $r3 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : $z0 = virtualinvoke $r3.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: boolean containsId(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.TreeMarshaller.convert : $z0 = virtualinvoke $r3.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: boolean containsId(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : if $z0 == 0
com.thoughtworks.xstream.core.TreeMarshaller.convert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : $r4 = new com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException
com.thoughtworks.xstream.core.TreeMarshaller.convert : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : $r5 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects>
com.thoughtworks.xstream.core.TreeMarshaller.convert : $r5 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : virtualinvoke $r5.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>(r1, "")
com.thoughtworks.xstream.core.TreeMarshaller.convert : virtualinvoke $r5.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void associateId(java.lang.Object,java.lang.Object)>(r1, "") >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : $r6 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer>
com.thoughtworks.xstream.core.TreeMarshaller.convert : $r6 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamWriter writer> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r6, r0)
com.thoughtworks.xstream.core.TreeMarshaller.convert : interfaceinvoke r2.<com.thoughtworks.xstream.converters.Converter: void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext)>(r1, $r6, r0) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : $r7 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects>
com.thoughtworks.xstream.core.TreeMarshaller.convert : $r7 = r0.<com.thoughtworks.xstream.core.TreeMarshaller: com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects> >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : virtualinvoke $r7.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void removeId(java.lang.Object)>(r1)
com.thoughtworks.xstream.core.TreeMarshaller.convert : virtualinvoke $r7.<com.thoughtworks.xstream.core.util.ObjectIdDictionary: void removeId(java.lang.Object)>(r1) >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : return
com.thoughtworks.xstream.core.TreeMarshaller.convert : $r4 = new com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : specialinvoke $r4.<com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException: void <init>()>()
com.thoughtworks.xstream.core.TreeMarshaller.convert : specialinvoke $r4.<com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException: void <init>()>() >>>>>>>> com.thoughtworks.xstream.core.TreeMarshaller.convert : throw $r4
