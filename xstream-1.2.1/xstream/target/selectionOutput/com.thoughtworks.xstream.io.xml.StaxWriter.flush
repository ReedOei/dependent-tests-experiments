com.thoughtworks.xstream.io.xml.StaxWriter.flush : r1 = $r3 >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.flush : $r4 = new com.thoughtworks.xstream.io.StreamException
com.thoughtworks.xstream.io.xml.StaxWriter.flush : $r4 = new com.thoughtworks.xstream.io.StreamException >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.flush : specialinvoke $r4.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r1)
com.thoughtworks.xstream.io.xml.StaxWriter.flush : specialinvoke $r4.<com.thoughtworks.xstream.io.StreamException: void <init>(java.lang.Throwable)>(r1) >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.flush : throw $r4
com.thoughtworks.xstream.io.xml.StaxWriter.flush : $r2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.flush : interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void close()>()
com.thoughtworks.xstream.io.xml.StaxWriter.flush : $r2 = r0.<com.thoughtworks.xstream.io.xml.StaxWriter: javax.xml.stream.XMLStreamWriter out> >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.flush : $r3 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.flush : interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void close()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.flush : goto [?= return]
com.thoughtworks.xstream.io.xml.StaxWriter.flush : interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void close()>() >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.flush : $r3 := @caughtexception
com.thoughtworks.xstream.io.xml.StaxWriter.flush : goto [?= return] >>>>>>>> com.thoughtworks.xstream.io.xml.StaxWriter.flush : return
