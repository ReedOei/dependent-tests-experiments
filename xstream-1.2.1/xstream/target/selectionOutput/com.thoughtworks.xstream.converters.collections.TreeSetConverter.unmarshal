com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveDown()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r6 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r6 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("comparator")
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("comparator") >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : if $z0 == 0
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : r3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("class")
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r11 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r11 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("no-comparator")
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("no-comparator") >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : if $z1 == 0
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r12 = new java.util.TreeSet
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : if $z1 == 0 >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r13 = new com.thoughtworks.xstream.converters.ConversionException
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r13 = new com.thoughtworks.xstream.converters.ConversionException >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : specialinvoke $r13.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("TreeSet does not contain <comparator> element")
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : specialinvoke $r13.<com.thoughtworks.xstream.converters.ConversionException: void <init>(java.lang.String)>("TreeSet does not contain <comparator> element") >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : throw $r13
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r12 = new java.util.TreeSet >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : specialinvoke $r12.<java.util.TreeSet: void <init>()>()
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : specialinvoke $r12.<java.util.TreeSet: void <init>()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : r5 = $r12
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : r5 = $r12 >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()]
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()] >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : specialinvoke r0.<com.thoughtworks.xstream.converters.collections.CollectionConverter: void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection)>(r1, r2, r5)
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : specialinvoke r0.<com.thoughtworks.xstream.converters.collections.CollectionConverter: void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection)>(r1, r2, r5) >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : return r5
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : r3 = interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>("class") >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.TreeSetConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>()
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r7 = virtualinvoke r0.<com.thoughtworks.xstream.converters.collections.TreeSetConverter: com.thoughtworks.xstream.mapper.Mapper mapper()>() >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r8 = interfaceinvoke $r7.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r3)
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r8 = interfaceinvoke $r7.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r3) >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r9 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, $r8)
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r9 = interfaceinvoke r2.<com.thoughtworks.xstream.converters.UnmarshallingContext: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, $r8) >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : r4 = (java.util.Comparator) $r9
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : r4 = (java.util.Comparator) $r9 >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r10 = new java.util.TreeSet
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : $r10 = new java.util.TreeSet >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : specialinvoke $r10.<java.util.TreeSet: void <init>(java.util.Comparator)>(r4)
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : specialinvoke $r10.<java.util.TreeSet: void <init>(java.util.Comparator)>(r4) >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : r5 = $r10
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : r5 = $r10 >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()]
com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : goto [?= interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()] >>>>>>>> com.thoughtworks.xstream.converters.collections.TreeSetConverter.unmarshal : interfaceinvoke r1.<com.thoughtworks.xstream.io.HierarchicalStreamReader: void moveUp()>()
