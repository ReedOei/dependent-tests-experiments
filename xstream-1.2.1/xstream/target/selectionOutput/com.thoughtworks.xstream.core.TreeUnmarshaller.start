com.thoughtworks.xstream.core.TreeUnmarshaller.start : r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.converters.DataHolder dataHolder> = r1 >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r7 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.io.HierarchicalStreamReader reader>
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r7 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.io.HierarchicalStreamReader reader> >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r8 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r8 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r9 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("class")
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r9 = interfaceinvoke $r8.<com.thoughtworks.xstream.mapper.Mapper: java.lang.String aliasForAttribute(java.lang.String)>("class") >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : r2 = interfaceinvoke $r7.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>($r9)
com.thoughtworks.xstream.core.TreeUnmarshaller.start : r2 = interfaceinvoke $r7.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getAttribute(java.lang.String)>($r9) >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : if r2 != null
com.thoughtworks.xstream.core.TreeUnmarshaller.start : if r2 != null >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r10 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.TreeUnmarshaller.start : if r2 != null >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r13 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.mapper.Mapper mapper>
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r13 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : r3 = interfaceinvoke $r13.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r2)
com.thoughtworks.xstream.core.TreeUnmarshaller.start : r3 = interfaceinvoke $r13.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>(r2) >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : r4 = virtualinvoke r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, r3)
com.thoughtworks.xstream.core.TreeUnmarshaller.start : r4 = virtualinvoke r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, r3) >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r14 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.core.util.PrioritizedList validationList>
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r14 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.core.util.PrioritizedList validationList> >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : r5 = virtualinvoke $r14.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Iterator iterator()>()
com.thoughtworks.xstream.core.TreeUnmarshaller.start : r5 = virtualinvoke $r14.<com.thoughtworks.xstream.core.util.PrioritizedList: java.util.Iterator iterator()>() >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : if $z0 == 0
com.thoughtworks.xstream.core.TreeUnmarshaller.start : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
com.thoughtworks.xstream.core.TreeUnmarshaller.start : if $z0 == 0 >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : return r4
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : r6 = (java.lang.Runnable) $r15
com.thoughtworks.xstream.core.TreeUnmarshaller.start : r6 = (java.lang.Runnable) $r15 >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : interfaceinvoke r6.<java.lang.Runnable: void run()>()
com.thoughtworks.xstream.core.TreeUnmarshaller.start : interfaceinvoke r6.<java.lang.Runnable: void run()>() >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
com.thoughtworks.xstream.core.TreeUnmarshaller.start : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r10 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.mapper.Mapper mapper> >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r11 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.io.HierarchicalStreamReader reader>
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r11 = r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: com.thoughtworks.xstream.io.HierarchicalStreamReader reader> >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r12 = interfaceinvoke $r11.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>()
com.thoughtworks.xstream.core.TreeUnmarshaller.start : $r12 = interfaceinvoke $r11.<com.thoughtworks.xstream.io.HierarchicalStreamReader: java.lang.String getNodeName()>() >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : r3 = interfaceinvoke $r10.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r12)
com.thoughtworks.xstream.core.TreeUnmarshaller.start : r3 = interfaceinvoke $r10.<com.thoughtworks.xstream.mapper.Mapper: java.lang.Class realClass(java.lang.String)>($r12) >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : goto [?= r4 = virtualinvoke r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, r3)]
com.thoughtworks.xstream.core.TreeUnmarshaller.start : goto [?= r4 = virtualinvoke r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, r3)] >>>>>>>> com.thoughtworks.xstream.core.TreeUnmarshaller.start : r4 = virtualinvoke r0.<com.thoughtworks.xstream.core.TreeUnmarshaller: java.lang.Object convertAnother(java.lang.Object,java.lang.Class)>(null, r3)
