dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.util.Util.newList : $r1 = new java.util.ArrayList
dynoptic.util.Util.newList : $r1 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0)
dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0) >>>>>>>> dynoptic.util.Util.newList : return $r1
dynoptic.util.Util.newList : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $z0 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $z0 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.lastState : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMPath.lastState : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states>
dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states>
dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $i0 = interfaceinvoke $r4.<java.util.List: int size()>()
dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $i0 = interfaceinvoke $r4.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $i1 = $i0 - 1
dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $i1 = $i0 - 1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1)
dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $r6 = (dynoptic.model.fifosys.gfsm.GFSMState) $r5
dynoptic.model.fifosys.gfsm.GFSMPath.lastState : $r6 = (dynoptic.model.fifosys.gfsm.GFSMState) $r5 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.lastState : return $r6
dynoptic.model.fifosys.gfsm.GFSMPath.lastState : return $r6 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z0 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z0 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z1 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z1 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z1 != 0
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $r8 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states>
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $r8 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>()
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z2 == 0
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z5 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z5 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z5 != 0
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z5 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : i0 = 0
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : i0 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $r14 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states>
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $r14 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $i4 = interfaceinvoke $r14.<java.util.List: int size()>()
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $i4 = interfaceinvoke $r14.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $i5 = $i4 - 2
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $i5 = $i4 - 2 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if i0 >= $i5
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if i0 >= $i5 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : return 1
