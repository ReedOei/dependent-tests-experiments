dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r1 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r1 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toString : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.toString : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSMState.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toString : return $r2
dynoptic.model.fifosys.gfsm.GFSMState.toString : return $r2 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r6 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r6 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z0 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isInitial()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z0 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isInitial()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : i0 = 0
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : i0 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: int numProcesses>
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: int numProcesses> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : if i0 >= $i1
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : if i0 >= $i1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : return 1
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : return 1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r8 = "_i"
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r8 = "_i" >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : goto [?= $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)]
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : goto [?= $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r11 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r11 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z1 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isAccept()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z1 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isAccept()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : i0 = 0
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : i0 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: int numProcesses>
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: int numProcesses> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : if i0 >= $i1
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : if i0 >= $i1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : return 1
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : return 1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z1 == 0
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r13 = "_t"
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r13 = "_t" >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : goto [?= $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)]
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : goto [?= $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)] >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: void recreateCachedTransitions()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: void recreateCachedTransitions()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : interfaceinvoke $r3.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : interfaceinvoke $r3.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r16 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r16 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r2 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r2 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z2 == 0
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : return r15
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : return r15 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : $r3 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid>
dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : $r3 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : $z1 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: boolean atLeastOneStatePidEvalTrue(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r3, i0)
dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : $z1 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: boolean atLeastOneStatePidEvalTrue(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r3, i0) >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : if $z0 == 0
dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : return 0
dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : return $z1
dynoptic.model.fifosys.gfsm.GFSMState.isInitForPid : return $z1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsAcceptForPid>
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsAcceptForPid> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrueWithPid(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r1, i0)
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrueWithPid(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r1, i0) >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : if $z0 == 0
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : return r2
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : return r2 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : return $r3
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : return $r3 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid>
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrueWithPid(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r1, i0)
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrueWithPid(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r1, i0) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : return $r3
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : return $r3 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z1 == 0
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5]
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>()
dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>()
dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states>
dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0
dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0 >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : $r8 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : $r8 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2 >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : if $z1 == 0
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : if $z1 == 0 >>>>>>>> dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.util.Util.newList : $r1 = new java.util.ArrayList
dynoptic.util.Util.newList : $r1 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0)
dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0) >>>>>>>> dynoptic.util.Util.newList : return $r1
dynoptic.util.Util.newList : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z0 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z0 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z1 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z1 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z1 != 0
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $r8 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states>
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $r8 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>()
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z2 == 0
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z3 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : $z3 = <dynoptic.model.fifosys.gfsm.GFSMPath: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z3 != 0
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : if $z3 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : return 1
dynoptic.model.fifosys.gfsm.GFSMPath.checkPathCompleteness : return 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if r1 != r0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if r1 != r0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : return 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : return 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $r2 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $r2 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $r1 = <dynoptic.model.fifosys.cfsm.CFSMState: dynoptic.model.AbsFSMState$IStateToBooleanFn fnIsInitialState>
dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $r1 = <dynoptic.model.fifosys.cfsm.CFSMState: dynoptic.model.AbsFSMState$IStateToBooleanFn fnIsInitialState> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $z0 = staticinvoke <dynoptic.model.fifosys.cfsm.CFSMState: boolean statesEvalToTrue(java.util.Collection,dynoptic.model.AbsFSMState$IStateToBooleanFn)>($r2, $r1)
dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $z0 = staticinvoke <dynoptic.model.fifosys.cfsm.CFSMState: boolean statesEvalToTrue(java.util.Collection,dynoptic.model.AbsFSMState$IStateToBooleanFn)>($r2, $r1) >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
dynoptic.model.AbsFSMState.statesEvalToTrue : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSMState.statesEvalToTrue : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : if $z0 == 0
dynoptic.model.AbsFSMState.statesEvalToTrue : if $z0 == 0 >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.AbsFSMState.statesEvalToTrue : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : r3 = (dynoptic.model.AbsFSMState) $r4
dynoptic.model.AbsFSMState.statesEvalToTrue : r3 = (dynoptic.model.AbsFSMState) $r4 >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : $z1 = interfaceinvoke r1.<dynoptic.model.AbsFSMState$IStateToBooleanFn: boolean eval(java.lang.Object)>(r3)
dynoptic.model.AbsFSMState.statesEvalToTrue : $z1 = interfaceinvoke r1.<dynoptic.model.AbsFSMState$IStateToBooleanFn: boolean eval(java.lang.Object)>(r3) >>>>>>>> dynoptic.model.AbsFSMState$1.eval : $r2 = (dynoptic.model.AbsFSMState) r1
dynoptic.model.AbsFSMState$1.eval : $r2 = (dynoptic.model.AbsFSMState) r1 >>>>>>>> dynoptic.model.AbsFSMState$1.eval : $z0 = virtualinvoke r0.<dynoptic.model.AbsFSMState$1: boolean eval(dynoptic.model.AbsFSMState)>($r2)
dynoptic.model.AbsFSMState$1.eval : $z0 = virtualinvoke r0.<dynoptic.model.AbsFSMState$1: boolean eval(dynoptic.model.AbsFSMState)>($r2) >>>>>>>> dynoptic.model.AbsFSMState$1.eval : $z0 = virtualinvoke r1.<dynoptic.model.AbsFSMState: boolean isAccept()>()
dynoptic.model.AbsFSMState$1.eval : $z0 = virtualinvoke r1.<dynoptic.model.AbsFSMState: boolean isAccept()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : return $z0
dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : return $z0 >>>>>>>> dynoptic.model.AbsFSMState$1.eval : return $z0
dynoptic.model.AbsFSMState$1.eval : return $z0 >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : if $z1 != 0
dynoptic.model.AbsFSMState.statesEvalToTrue : if $z1 != 0 >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : return 0
dynoptic.model.AbsFSMState.statesEvalToTrue : return 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.isInitial : return $z0
dynoptic.model.fifosys.cfsm.CFSMState.isInitial : return $z0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r3 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r2
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r3 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : return $r3
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : return $r3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : if $z0 == 0
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r3 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r5
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r3 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r5 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r6 = virtualinvoke r3.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r6 = virtualinvoke r3.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r6)
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r6) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : return r1
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : return r1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>()
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: void recreateCachedTransitions()>()
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: void recreateCachedTransitions()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : return $r3
