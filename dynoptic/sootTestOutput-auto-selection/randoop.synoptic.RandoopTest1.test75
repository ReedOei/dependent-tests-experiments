dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r8 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r8 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : specialinvoke $r8.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, 1, 0, r1, 1)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : specialinvoke $r8.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, 1, 0, r1, 1) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : r2 = $r8
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : r2 = $r8 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r9 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r9 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r2)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r2) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : return r2
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : return r2 >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isInitState : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.ObsFSMState obsState>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isInitState : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.ObsFSMState obsState> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isInitState : $z0 = virtualinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial()>()
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isInitState : $z0 = virtualinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : return $z0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : return $z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isInitState : return $z0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isInitState : return $z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getNextEvent : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getNextEvent : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getNextEvent : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getNextEvent : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getNextEvent : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: synoptic.model.event.Event nextEvent>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getNextEvent : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: synoptic.model.event.Event nextEvent> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getNextEvent : return $r2
