dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid>
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrueWithPid(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r1, i0)
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrueWithPid(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r1, i0) >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : if $z0 == 0
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : return r2
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : return r2 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : return $r3
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : return $r3 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z1 == 0
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5]
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>()
dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>()
dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states>
dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0
dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getPid : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getPid : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getPid : return $i0
dynoptic.model.fifosys.cfsm.fsm.FSMState.getPid : return $i0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r1 = ""
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r1 = "" >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r4 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getUniqueEventStrings(synoptic.model.event.IDistEventType)>(null)
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r4 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getUniqueEventStrings(synoptic.model.event.IDistEventType)>(null) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r5 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r5 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if $z0 == 0
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if $z0 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : return r2
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : return r2 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : if $z0 == 0
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : if $z0 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : return r1
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : return r1 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toString : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.toString : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
dynoptic.model.alphabet.FSMAlphabet.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toString : return $r2
dynoptic.model.alphabet.FSMAlphabet.toString : return $r2 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : $r1 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : $r1 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : specialinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, r0, 0)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : specialinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, r0, 0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : return $r1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : return $r1 >>>>>>>> dynoptic.util.Util.newList : $r1 = new java.util.ArrayList
dynoptic.util.Util.newList : $r1 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0)
dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0) >>>>>>>> dynoptic.util.Util.newList : return $r1
dynoptic.util.Util.newList : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r1 != null
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r1 != null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r0 != r1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r0 != r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getObsState : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.ObsFSMState obsState>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getObsState : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.ObsFSMState obsState> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getObsState : return $r1
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getObsState : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $z2 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean hasOccurred()>()
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $z2 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean hasOccurred()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean occurredInSym>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean occurredInSym> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : return $z2
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : return $z2 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : if $z2 == 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $r4 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode prevState>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $r4 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode prevState> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : if $r4 == null
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : if $r4 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $r6 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: java.util.Set remoteDependencies>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $r6 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: java.util.Set remoteDependencies> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : r1 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : r1 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $z4 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : if $z4 == 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : if $z4 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : return 1
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : return 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.setOccurred : $z1 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.setOccurred : $z1 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.setOccurred : if $z1 != 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.setOccurred : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.setOccurred : r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean occurredInSym> = z0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.setOccurred : r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean occurredInSym> = z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : $z2 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : $z2 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : if $z2 != 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : $r5 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: java.util.Set remoteDependencies>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : $r5 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: java.util.Set remoteDependencies> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r1)
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.addRemoteDependency : interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.remove : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.remove : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.remove : $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1)
dynoptic.model.alphabet.FSMAlphabet.remove : $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.remove : return $z0
dynoptic.model.alphabet.FSMAlphabet.remove : return $z0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.isEmpty : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.isEmpty : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.isEmpty : $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>()
dynoptic.model.alphabet.FSMAlphabet.isEmpty : $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.isEmpty : return $z0
dynoptic.model.alphabet.FSMAlphabet.isEmpty : return $z0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.iterator : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.iterator : $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : return $r2
dynoptic.model.alphabet.FSMAlphabet.iterator : return $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.setAccept : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> = 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.setAccept : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> = 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : return $r1
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2
