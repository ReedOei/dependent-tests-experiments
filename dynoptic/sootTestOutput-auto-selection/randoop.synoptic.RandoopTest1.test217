dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : $r1 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : specialinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, r0, 0)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : specialinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, r0, 0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : return $r1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getPid : $i0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int pid>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getPid : $i0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int pid> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getPid : return $i0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getPid : return $i0 >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid>
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrueWithPid(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r1, i0)
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrueWithPid(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r2, $r1, i0) >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : if $z0 == 0
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : return r2
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : return r2 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : return $r3
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : return $r3 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r1 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r1 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toString : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.toString : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSMState.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toString : return $r2
dynoptic.model.fifosys.gfsm.GFSMState.toString : return $r2 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r6 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r6 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z0 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isInitial()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z0 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isInitial()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : i0 = 0
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : i0 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: int numProcesses>
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: int numProcesses> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : if i0 >= $i1
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : if i0 >= $i1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $r2 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid>
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $r2 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsInitialForPid> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $z0 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: boolean atLeastOneStatePidEvalTrue(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r1, $r2, i0)
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : $z0 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: boolean atLeastOneStatePidEvalTrue(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r1, $r2, i0) >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : if $z0 == 0
dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : return 0
dynoptic.model.fifosys.AbsMultiFSMState.atLeastOneStatePidEvalTrue : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isInitial : return 0
dynoptic.model.fifosys.gfsm.GFSMState.isInitial : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r8 = ""
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r8 = "" >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r11 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r11 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z1 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isAccept()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z1 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: boolean isAccept()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : i0 = 0
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : i0 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: int numProcesses>
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $i1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: int numProcesses> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : if i0 >= $i1
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : if i0 >= $i1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $r2 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsAcceptForPid>
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $r2 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn fnIsAcceptForPid> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $z0 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: boolean atLeastOneStatePidEvalTrue(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r1, $r2, i0)
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : $z0 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: boolean atLeastOneStatePidEvalTrue(java.util.Collection,dynoptic.model.fifosys.AbsMultiFSMState$IStatePidToBooleanFn,int)>($r1, $r2, i0) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.isAccept : return 0
dynoptic.model.fifosys.gfsm.GFSMState.isAccept : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z1 == 0
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r13 = ""
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r13 = "" >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: void recreateCachedTransitions()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: void recreateCachedTransitions()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : interfaceinvoke $r3.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : interfaceinvoke $r3.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r16 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r16 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r2 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : r2 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z2 == 0
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toLongString : return r15
dynoptic.model.fifosys.gfsm.GFSMState.toLongString : return r15 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z1 == 0
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObs : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObs : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObs : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.AbsFSMState$IStateToBooleanFn fnIsAcceptState>
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObs : $r1 = <dynoptic.model.fifosys.gfsm.GFSMState: dynoptic.model.AbsFSMState$IStateToBooleanFn fnIsAcceptState> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObs : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrue(java.util.Set,dynoptic.model.AbsFSMState$IStateToBooleanFn)>($r2, $r1)
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObs : $r3 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set getStatesThatEvalToTrue(java.util.Set,dynoptic.model.AbsFSMState$IStateToBooleanFn)>($r2, $r1) >>>>>>>> dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : if $z0 == 0
dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : if $z0 == 0 >>>>>>>> dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : return r2
dynoptic.model.AbsFSMState.getStatesThatEvalToTrue : return r2 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObs : return $r3
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObs : return $r3 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.retainAll : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.retainAll : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.retainAll : $z0 = interfaceinvoke $r2.<java.util.Set: boolean retainAll(java.util.Collection)>(r1)
dynoptic.model.alphabet.FSMAlphabet.retainAll : $z0 = interfaceinvoke $r2.<java.util.Set: boolean retainAll(java.util.Collection)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.retainAll : return $z0
dynoptic.model.alphabet.FSMAlphabet.retainAll : return $z0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toArray : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.toArray : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toArray : $r3 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r1)
dynoptic.model.alphabet.FSMAlphabet.toArray : $r3 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toArray : return $r3
dynoptic.model.alphabet.FSMAlphabet.toArray : return $r3 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toArray : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.toArray : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toArray : $r2 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray()>()
dynoptic.model.alphabet.FSMAlphabet.toArray : $r2 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toArray : return $r2
dynoptic.model.alphabet.FSMAlphabet.toArray : return $r2 >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : $r8 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : $r8 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>()
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: void recreateCachedTransitions()>()
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : virtualinvoke r0.<dynoptic.model.fifosys.gfsm.GFSMState: void recreateCachedTransitions()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : return $r3
dynoptic.model.fifosys.gfsm.GFSMState.getTransitioningEvents : return $r3 >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : if $z1 == 0
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r1 != null
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r1 != null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r0 != r1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r0 != r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 0
