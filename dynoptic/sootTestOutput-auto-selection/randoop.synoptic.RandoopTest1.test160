dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : $r0 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : $r1 = staticinvoke <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String getNextAnonName()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : $r1 = staticinvoke <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String getNextAnonName()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i1 = $i0 + 1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i1 = $i0 + 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = $i1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = $i1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i2 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i2 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : return $r0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : specialinvoke $r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, $r1, 1)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : specialinvoke $r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, $r1, 1) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : return $r0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : return $z0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : return $z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : return $z0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : return $z0 >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : return $r1
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : return $r1 >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.AbsFSMState.getNextStates : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : $r4 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.AbsFSMState.getNextStates : $r4 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2 >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSMState.getNextStates : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSMState.getNextStates : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : if $z0 == 0
dynoptic.model.AbsFSMState.getNextStates : if $z0 == 0 >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : return r1
dynoptic.model.AbsFSMState.getNextStates : return r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r1 != null
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r1 != null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r0 != r1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r0 != r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.markTerm : r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal> = 1
