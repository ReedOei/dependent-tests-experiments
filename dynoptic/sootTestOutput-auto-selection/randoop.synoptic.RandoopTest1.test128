dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : $r0 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : $r1 = staticinvoke <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String getNextAnonName()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : $r1 = staticinvoke <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String getNextAnonName()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i1 = $i0 + 1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i1 = $i0 + 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = $i1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = $i1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i2 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $i2 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : return $r0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getNextAnonName : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : specialinvoke $r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, $r1, 1)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : specialinvoke $r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, $r1, 1) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : return $r0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.anonObsFSMState : return $r0 >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode prevState>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode prevState> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : return $r2
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : return $r2 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isTermState : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.ObsFSMState obsState>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isTermState : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.ObsFSMState obsState> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isTermState : $z0 = virtualinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal()>()
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isTermState : $z0 = virtualinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : return $z0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : return $z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isTermState : return $z0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isTermState : return $z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean occurredInSym>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean occurredInSym> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : return $z2
