dynoptic.model.alphabet.FSMAlphabet.size : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if r1 != r0 goto $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : return 0
dynoptic.model.automaton.EventTypeEncodings.getEventType : $r3 = new java.lang.IllegalArgumentException
dynoptic.model.automaton.EventTypeEncodings.getEventType : $r1 = r0.<dynoptic.model.automaton.EventTypeEncodings: java.util.Map charEncodings>
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : return r2
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r5 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.alphabet.FSMAlphabet.toArray : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r1 = ""
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r4 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getUniqueEventStrings(synoptic.model.event.IDistEventType)>(null)
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : return r1
