dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPid : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.ObsFSMState obsState>
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : return r2
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.AbsMultiFSMState.getStatesThatEvalToTrueWithPid : r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : $r1 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.GFSMState.getInitialObsForPid : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states>
dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.alphabet.FSMAlphabet.contains : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getPid : $i0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int pid>
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMState.removeAllObs : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r1 != null goto (branch)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z1 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : r2 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) r1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r0 != r1 goto $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.getName : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String name>
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $r6 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: java.util.Set remoteDependencies>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : return 1
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $r4 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode prevState>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.isEnabled : $z2 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean hasOccurred()>()
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : $r8 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.AbsFSMState.findNonPidTransitiveClosure : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.hasOccurred : $z2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean occurredInSym>
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newList : $r1 = new java.util.ArrayList
dynoptic.model.alphabet.FSMAlphabet.retainAll : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getNextEvent : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getNextEvent : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: synoptic.model.event.Event nextEvent>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : $z0 = <dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode.getPrevState : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode: dynoptic.model.fifosys.gfsm.observed.dag.ObsDAGNode prevState>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
