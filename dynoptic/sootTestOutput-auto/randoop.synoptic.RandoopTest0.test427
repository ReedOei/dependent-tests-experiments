dynoptic.model.AbsFSMState.getNextStates : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.AbsFSMState.getNextStates : $r4 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.AbsFSMState.getNextStates : return r1
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.model.fifosys.cfsm.fsm.FSMState.setAccept : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> = 1
dynoptic.model.fifosys.cfsm.CFSMState.isInitForPid : $z0 = <dynoptic.model.fifosys.cfsm.CFSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSMState.isInitForPid : $r3 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
