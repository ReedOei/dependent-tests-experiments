dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init_1> = $r1
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init_1> = $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listInit_1> = $r2
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listInit_1> = $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r3 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listInit_1>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r3 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listInit_1> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init_1>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init_1> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r5 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r5 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r5.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r5.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accepting_1> = $r5
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accepting_1> = $r5 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r6 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r6 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listAccepting_1> = $r6
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listAccepting_1> = $r6 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listAccepting_1>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listAccepting_1> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accepting_1>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accepting_1> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r8)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r8) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r9 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r9 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r9.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 0, 2, 2)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r9.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 0, 2, 2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState state_2> = $r9
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState state_2> = $r9 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r10 = new synoptic.model.channelid.ChannelId
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r10 = new synoptic.model.channelid.ChannelId >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r10.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(1, 2, 0)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r10.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(1, 2, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.channelid.ChannelId cid> = $r10
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.channelid.ChannelId cid> = $r10 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r12 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r11)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r12 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r11) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.event.DistEventType e_pid1> = $r12
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.event.DistEventType e_pid1> = $r12 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 1)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.event.DistEventType e2_pid1> = $r13
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.event.DistEventType e2_pid1> = $r13 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r14 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r14 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set states> = $r14
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set states> = $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : return
