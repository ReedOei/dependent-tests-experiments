dynoptic.invariants.BinaryInvariant.toString : $r1 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.BinaryInvariant.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
dynoptic.invariants.BinaryInvariant.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first>
dynoptic.invariants.BinaryInvariant.toString : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first> >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)
dynoptic.invariants.BinaryInvariant.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ")
dynoptic.invariants.BinaryInvariant.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r6 = r0.<dynoptic.invariants.BinaryInvariant: java.lang.String connectorStr>
dynoptic.invariants.BinaryInvariant.toString : $r6 = r0.<dynoptic.invariants.BinaryInvariant: java.lang.String connectorStr> >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
dynoptic.invariants.BinaryInvariant.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (")
dynoptic.invariants.BinaryInvariant.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r9 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second>
dynoptic.invariants.BinaryInvariant.toString : $r9 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second> >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
dynoptic.invariants.BinaryInvariant.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
dynoptic.invariants.BinaryInvariant.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.BinaryInvariant.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : return $r12
