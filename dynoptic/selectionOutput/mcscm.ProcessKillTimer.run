mcscm.ProcessKillTimer.run : r6 = $r5 >>>>>>>> mcscm.ProcessKillTimer.run : return
mcscm.ProcessKillTimer.run : r2 = r0 >>>>>>>> mcscm.ProcessKillTimer.run : entermonitor r0
mcscm.ProcessKillTimer.run : r2 = r0 >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : entermonitor r0 >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : entermonitor r0 >>>>>>>> mcscm.ProcessKillTimer.run : $r4 := @caughtexception
mcscm.ProcessKillTimer.run : entermonitor r0 >>>>>>>> mcscm.ProcessKillTimer.run : $i0 = r0.<mcscm.ProcessKillTimer: int timeout>
mcscm.ProcessKillTimer.run : $i0 = r0.<mcscm.ProcessKillTimer: int timeout> >>>>>>>> mcscm.ProcessKillTimer.run : $r4 := @caughtexception
mcscm.ProcessKillTimer.run : $i0 = r0.<mcscm.ProcessKillTimer: int timeout> >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : $i0 = r0.<mcscm.ProcessKillTimer: int timeout> >>>>>>>> mcscm.ProcessKillTimer.run : $l1 = (long) $i0
mcscm.ProcessKillTimer.run : $l1 = (long) $i0 >>>>>>>> mcscm.ProcessKillTimer.run : $r4 := @caughtexception
mcscm.ProcessKillTimer.run : $l1 = (long) $i0 >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : $l1 = (long) $i0 >>>>>>>> mcscm.ProcessKillTimer.run : $l2 = $l1 * 1000L
mcscm.ProcessKillTimer.run : $l2 = $l1 * 1000L >>>>>>>> mcscm.ProcessKillTimer.run : $r4 := @caughtexception
mcscm.ProcessKillTimer.run : $l2 = $l1 * 1000L >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : $l2 = $l1 * 1000L >>>>>>>> mcscm.ProcessKillTimer.run : virtualinvoke r0.<java.lang.Object: void wait(long)>($l2)
mcscm.ProcessKillTimer.run : virtualinvoke r0.<java.lang.Object: void wait(long)>($l2) >>>>>>>> mcscm.ProcessKillTimer.run : $r4 := @caughtexception
mcscm.ProcessKillTimer.run : virtualinvoke r0.<java.lang.Object: void wait(long)>($l2) >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : virtualinvoke r0.<java.lang.Object: void wait(long)>($l2) >>>>>>>> mcscm.ProcessKillTimer.run : exitmonitor r2
mcscm.ProcessKillTimer.run : exitmonitor r2 >>>>>>>> mcscm.ProcessKillTimer.run : $r4 := @caughtexception
mcscm.ProcessKillTimer.run : exitmonitor r2 >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : exitmonitor r2 >>>>>>>> mcscm.ProcessKillTimer.run : goto [?= (branch)]
mcscm.ProcessKillTimer.run : goto [?= (branch)] >>>>>>>> mcscm.ProcessKillTimer.run : goto [?= r0.<mcscm.ProcessKillTimer: boolean killed> = 1]
mcscm.ProcessKillTimer.run : goto [?= (branch)] >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : goto [?= r0.<mcscm.ProcessKillTimer: boolean killed> = 1] >>>>>>>> mcscm.ProcessKillTimer.run : r0.<mcscm.ProcessKillTimer: boolean killed> = 1
mcscm.ProcessKillTimer.run : r0.<mcscm.ProcessKillTimer: boolean killed> = 1 >>>>>>>> mcscm.ProcessKillTimer.run : $r7 = r0.<mcscm.ProcessKillTimer: java.lang.Process proc>
mcscm.ProcessKillTimer.run : $r7 = r0.<mcscm.ProcessKillTimer: java.lang.Process proc> >>>>>>>> mcscm.ProcessKillTimer.run : virtualinvoke $r7.<java.lang.Process: void destroy()>()
mcscm.ProcessKillTimer.run : virtualinvoke $r7.<java.lang.Process: void destroy()>() >>>>>>>> mcscm.ProcessKillTimer.run : return
mcscm.ProcessKillTimer.run : r3 = $r4 >>>>>>>> mcscm.ProcessKillTimer.run : $r4 := @caughtexception
mcscm.ProcessKillTimer.run : r3 = $r4 >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : r3 = $r4 >>>>>>>> mcscm.ProcessKillTimer.run : exitmonitor r2
mcscm.ProcessKillTimer.run : exitmonitor r2 >>>>>>>> mcscm.ProcessKillTimer.run : $r4 := @caughtexception
mcscm.ProcessKillTimer.run : exitmonitor r2 >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
mcscm.ProcessKillTimer.run : exitmonitor r2 >>>>>>>> mcscm.ProcessKillTimer.run : throw r3
mcscm.ProcessKillTimer.run : throw r3 >>>>>>>> mcscm.ProcessKillTimer.run : $r5 := @caughtexception
