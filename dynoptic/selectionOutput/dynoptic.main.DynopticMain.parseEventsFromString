dynoptic.main.DynopticMain.parseEventsFromString : $z0 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : if $z0 != 0
dynoptic.main.DynopticMain.parseEventsFromString : if $z0 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : if r1 != null
dynoptic.main.DynopticMain.parseEventsFromString : if $z0 != 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : r3 = virtualinvoke r1.<synoptic.main.parser.TraceParser: java.util.ArrayList parseTraceString(java.lang.String,java.lang.String,int)>(r2, "trace", -1)
dynoptic.main.DynopticMain.parseEventsFromString : r3 = virtualinvoke r1.<synoptic.main.parser.TraceParser: java.util.ArrayList parseTraceString(java.lang.String,java.lang.String,int)>(r2, "trace", -1) >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : $z1 = virtualinvoke r1.<synoptic.main.parser.TraceParser: boolean logTimeTypeIsTotallyOrdered()>()
dynoptic.main.DynopticMain.parseEventsFromString : $z1 = virtualinvoke r1.<synoptic.main.parser.TraceParser: boolean logTimeTypeIsTotallyOrdered()>() >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : if $z1 == 0
dynoptic.main.DynopticMain.parseEventsFromString : if $z1 == 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : $r5 = new dynoptic.main.OptionException
dynoptic.main.DynopticMain.parseEventsFromString : if $z1 == 0 >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : specialinvoke r0.<dynoptic.main.DynopticMain: void postParseEvents(java.util.List)>(r3)
dynoptic.main.DynopticMain.parseEventsFromString : specialinvoke r0.<dynoptic.main.DynopticMain: void postParseEvents(java.util.List)>(r3) >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : return r3
dynoptic.main.DynopticMain.parseEventsFromString : $r5 = new dynoptic.main.OptionException >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : specialinvoke $r5.<dynoptic.main.OptionException: void <init>(java.lang.String)>("Dynoptic expects a log that is partially ordered.")
dynoptic.main.DynopticMain.parseEventsFromString : specialinvoke $r5.<dynoptic.main.OptionException: void <init>(java.lang.String)>("Dynoptic expects a log that is partially ordered.") >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : throw $r5
dynoptic.main.DynopticMain.parseEventsFromString : if r1 != null >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : $r4 = new java.lang.AssertionError
dynoptic.main.DynopticMain.parseEventsFromString : if r1 != null >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : r3 = virtualinvoke r1.<synoptic.main.parser.TraceParser: java.util.ArrayList parseTraceString(java.lang.String,java.lang.String,int)>(r2, "trace", -1)
dynoptic.main.DynopticMain.parseEventsFromString : $r4 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : specialinvoke $r4.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.parseEventsFromString : specialinvoke $r4.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.parseEventsFromString : throw $r4
