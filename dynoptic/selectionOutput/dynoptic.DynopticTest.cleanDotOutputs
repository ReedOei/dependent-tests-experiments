dynoptic.DynopticTest.cleanDotOutputs : $r1 = new java.io.File >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(".")
dynoptic.DynopticTest.cleanDotOutputs : specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(".") >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : r2 = $r1
dynoptic.DynopticTest.cleanDotOutputs : r2 = $r1 >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : $r7 = new org.apache.commons.io.filefilter.WildcardFileFilter
dynoptic.DynopticTest.cleanDotOutputs : $r7 = new org.apache.commons.io.filefilter.WildcardFileFilter >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : specialinvoke $r7.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String)>("test.dot*")
dynoptic.DynopticTest.cleanDotOutputs : specialinvoke $r7.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String)>("test.dot*") >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : r3 = $r7
dynoptic.DynopticTest.cleanDotOutputs : r3 = $r7 >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : r4 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>(r3)
dynoptic.DynopticTest.cleanDotOutputs : r4 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>(r3) >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : r5 = r4
dynoptic.DynopticTest.cleanDotOutputs : r5 = r4 >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : i0 = lengthof r5
dynoptic.DynopticTest.cleanDotOutputs : i0 = lengthof r5 >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : i1 = 0
dynoptic.DynopticTest.cleanDotOutputs : i1 = 0 >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : if i1 >= i0
dynoptic.DynopticTest.cleanDotOutputs : if i1 >= i0 >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : r6 = r5[i1]
dynoptic.DynopticTest.cleanDotOutputs : if i1 >= i0 >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : return
dynoptic.DynopticTest.cleanDotOutputs : r6 = r5[i1] >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : virtualinvoke r6.<java.io.File: boolean delete()>()
dynoptic.DynopticTest.cleanDotOutputs : virtualinvoke r6.<java.io.File: boolean delete()>() >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : i1 = i1 + 1
dynoptic.DynopticTest.cleanDotOutputs : i1 = i1 + 1 >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : goto [?= (branch)]
dynoptic.DynopticTest.cleanDotOutputs : goto [?= (branch)] >>>>>>>> dynoptic.DynopticTest.cleanDotOutputs : if i1 >= i0
