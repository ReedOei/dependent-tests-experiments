dynoptic.invariants.AlwaysFollowedBy.satisfies : z0 = 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
dynoptic.invariants.AlwaysFollowedBy.satisfies : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.invariants.AlwaysFollowedBy.satisfies : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : if $z1 == 0
dynoptic.invariants.AlwaysFollowedBy.satisfies : if $z1 == 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
dynoptic.invariants.AlwaysFollowedBy.satisfies : if $z1 == 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : if z0 != 0
dynoptic.invariants.AlwaysFollowedBy.satisfies : if z0 != 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $z4 = 1
dynoptic.invariants.AlwaysFollowedBy.satisfies : if z0 != 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $z4 = 0
dynoptic.invariants.AlwaysFollowedBy.satisfies : $z4 = 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : return $z4
dynoptic.invariants.AlwaysFollowedBy.satisfies : $z4 = 1 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : goto [?= return $z4]
dynoptic.invariants.AlwaysFollowedBy.satisfies : goto [?= return $z4] >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : return $z4
dynoptic.invariants.AlwaysFollowedBy.satisfies : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : r3 = (synoptic.model.event.DistEventType) $r4
dynoptic.invariants.AlwaysFollowedBy.satisfies : r3 = (synoptic.model.event.DistEventType) $r4 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $r5 = r0.<dynoptic.invariants.AlwaysFollowedBy: synoptic.model.event.DistEventType first>
dynoptic.invariants.AlwaysFollowedBy.satisfies : $r5 = r0.<dynoptic.invariants.AlwaysFollowedBy: synoptic.model.event.DistEventType first> >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $z2 = virtualinvoke r3.<synoptic.model.event.DistEventType: boolean equals(java.lang.Object)>($r5)
dynoptic.invariants.AlwaysFollowedBy.satisfies : $z2 = virtualinvoke r3.<synoptic.model.event.DistEventType: boolean equals(java.lang.Object)>($r5) >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : if $z2 == 0
dynoptic.invariants.AlwaysFollowedBy.satisfies : if $z2 == 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : z0 = 1
dynoptic.invariants.AlwaysFollowedBy.satisfies : if $z2 == 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $r6 = r0.<dynoptic.invariants.AlwaysFollowedBy: synoptic.model.event.DistEventType second>
dynoptic.invariants.AlwaysFollowedBy.satisfies : $r6 = r0.<dynoptic.invariants.AlwaysFollowedBy: synoptic.model.event.DistEventType second> >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $z3 = virtualinvoke r3.<synoptic.model.event.DistEventType: boolean equals(java.lang.Object)>($r6)
dynoptic.invariants.AlwaysFollowedBy.satisfies : $z3 = virtualinvoke r3.<synoptic.model.event.DistEventType: boolean equals(java.lang.Object)>($r6) >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : if $z3 == 0
dynoptic.invariants.AlwaysFollowedBy.satisfies : if $z3 == 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : z0 = 0
dynoptic.invariants.AlwaysFollowedBy.satisfies : if $z3 == 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.invariants.AlwaysFollowedBy.satisfies : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.invariants.AlwaysFollowedBy.satisfies : z0 = 0 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.invariants.AlwaysFollowedBy.satisfies : z0 = 1 >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.invariants.AlwaysFollowedBy.satisfies : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.invariants.AlwaysFollowedBy.satisfies : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
