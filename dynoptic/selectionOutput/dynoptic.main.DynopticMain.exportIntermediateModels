dynoptic.main.DynopticMain.exportIntermediateModels : $r4 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.exportIntermediateModels : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
dynoptic.main.DynopticMain.exportIntermediateModels : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".gfsm.")
dynoptic.main.DynopticMain.exportIntermediateModels : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".gfsm.") >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.exportIntermediateModels : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dot")
dynoptic.main.DynopticMain.exportIntermediateModels : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dot") >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.exportIntermediateModels : r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : staticinvoke <dynoptic.model.export.GraphExporter: void exportGFSM(java.lang.String,dynoptic.model.fifosys.gfsm.GFSM)>(r5, r1)
dynoptic.main.DynopticMain.exportIntermediateModels : staticinvoke <dynoptic.model.export.GraphExporter: void exportGFSM(java.lang.String,dynoptic.model.fifosys.gfsm.GFSM)>(r5, r1) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r11 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.exportIntermediateModels : $r11 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts> >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $z0 = $r11.<dynoptic.main.DynopticOptions: boolean minimize>
dynoptic.main.DynopticMain.exportIntermediateModels : $z0 = $r11.<dynoptic.main.DynopticOptions: boolean minimize> >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : r6 = virtualinvoke r1.<dynoptic.model.fifosys.gfsm.GFSM: dynoptic.model.fifosys.cfsm.CFSM getCFSM(boolean)>($z0)
dynoptic.main.DynopticMain.exportIntermediateModels : r6 = virtualinvoke r1.<dynoptic.model.fifosys.gfsm.GFSM: dynoptic.model.fifosys.cfsm.CFSM getCFSM(boolean)>($z0) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r12 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.exportIntermediateModels : $r12 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.exportIntermediateModels : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
dynoptic.main.DynopticMain.exportIntermediateModels : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cfsm-no-inv.")
dynoptic.main.DynopticMain.exportIntermediateModels : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cfsm-no-inv.") >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.exportIntermediateModels : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dot")
dynoptic.main.DynopticMain.exportIntermediateModels : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dot") >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.exportIntermediateModels : r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : staticinvoke <dynoptic.model.export.GraphExporter: void exportCFSM(java.lang.String,dynoptic.model.fifosys.cfsm.CFSM)>(r17, r6)
dynoptic.main.DynopticMain.exportIntermediateModels : staticinvoke <dynoptic.model.export.GraphExporter: void exportCFSM(java.lang.String,dynoptic.model.fifosys.cfsm.CFSM)>(r17, r6) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : virtualinvoke r6.<dynoptic.model.fifosys.cfsm.CFSM: void augmentWithInvTracing(dynoptic.invariants.BinaryInvariant)>(r2)
dynoptic.main.DynopticMain.exportIntermediateModels : virtualinvoke r6.<dynoptic.model.fifosys.cfsm.CFSM: void augmentWithInvTracing(dynoptic.invariants.BinaryInvariant)>(r2) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r18 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.exportIntermediateModels : $r18 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.exportIntermediateModels : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
dynoptic.main.DynopticMain.exportIntermediateModels : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cfsm.")
dynoptic.main.DynopticMain.exportIntermediateModels : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cfsm.") >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.exportIntermediateModels : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dot")
dynoptic.main.DynopticMain.exportIntermediateModels : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dot") >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.exportIntermediateModels : r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : staticinvoke <dynoptic.model.export.GraphExporter: void exportCFSM(java.lang.String,dynoptic.model.fifosys.cfsm.CFSM)>(r23, r6)
dynoptic.main.DynopticMain.exportIntermediateModels : staticinvoke <dynoptic.model.export.GraphExporter: void exportCFSM(java.lang.String,dynoptic.model.fifosys.cfsm.CFSM)>(r23, r6) >>>>>>>> dynoptic.main.DynopticMain.exportIntermediateModels : return
