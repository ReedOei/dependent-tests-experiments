dynoptic.invariants.checkers.BinChecker.inheritState : $z0 = <dynoptic.invariants.checkers.BinChecker: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : if $z0 != 0
dynoptic.invariants.checkers.BinChecker.inheritState : if $z0 != 0 >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : $r2 = r1.<dynoptic.invariants.checkers.BinChecker: java.lang.Object s>
dynoptic.invariants.checkers.BinChecker.inheritState : if $z0 != 0 >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : $r7 = r1.<dynoptic.invariants.checkers.BinChecker: java.lang.Object s>
dynoptic.invariants.checkers.BinChecker.inheritState : $r7 = r1.<dynoptic.invariants.checkers.BinChecker: java.lang.Object s> >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : r0.<dynoptic.invariants.checkers.BinChecker: java.lang.Object s> = $r7
dynoptic.invariants.checkers.BinChecker.inheritState : r0.<dynoptic.invariants.checkers.BinChecker: java.lang.Object s> = $r7 >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : return
dynoptic.invariants.checkers.BinChecker.inheritState : $r2 = r1.<dynoptic.invariants.checkers.BinChecker: java.lang.Object s> >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>()
dynoptic.invariants.checkers.BinChecker.inheritState : $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : $r4 = r0.<dynoptic.invariants.checkers.BinChecker: java.lang.Object s>
dynoptic.invariants.checkers.BinChecker.inheritState : $r4 = r0.<dynoptic.invariants.checkers.BinChecker: java.lang.Object s> >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>()
dynoptic.invariants.checkers.BinChecker.inheritState : $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : if $r3 == $r5
dynoptic.invariants.checkers.BinChecker.inheritState : if $r3 == $r5 >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : $r6 = new java.lang.AssertionError
dynoptic.invariants.checkers.BinChecker.inheritState : if $r3 == $r5 >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : $r7 = r1.<dynoptic.invariants.checkers.BinChecker: java.lang.Object s>
dynoptic.invariants.checkers.BinChecker.inheritState : $r6 = new java.lang.AssertionError >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : specialinvoke $r6.<java.lang.AssertionError: void <init>()>()
dynoptic.invariants.checkers.BinChecker.inheritState : specialinvoke $r6.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.invariants.checkers.BinChecker.inheritState : throw $r6
