dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z0 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return 1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z2 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: boolean isAccept()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z2 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: boolean isAccept()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z2 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z3 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: boolean isFail()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r4 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Set getTransitioningEvents()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r4 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r5 = null
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r5 = null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $i0 = interfaceinvoke r4.<java.util.Set: int size()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $i0 = interfaceinvoke r4.<java.util.Set: int size()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $i0 <= 1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $i0 <= 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r5 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: dynoptic.invariants.checkers.BinChecker getClone()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $i0 <= 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r6 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r6 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z5 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z5 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z5 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return 1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r7 = (synoptic.model.event.DistEventType) $r9
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r7 = (synoptic.model.event.DistEventType) $r9 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r8 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: dynoptic.invariants.checkers.BinChecker$Validity transition(synoptic.model.event.DistEventType)>(r7)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r8 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: dynoptic.invariants.checkers.BinChecker$Validity transition(synoptic.model.event.DistEventType)>(r7) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r10 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_FAIL>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r10 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_FAIL> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r8 != $r10
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r8 != $r10 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r8 != $r10 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r11 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r11 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r8 != $r11
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r8 != $r11 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r8 != $r11 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r12 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState getNextState(synoptic.model.event.DistEventType)>(r7)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r12 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState getNextState(synoptic.model.event.DistEventType)>(r7) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z6 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean checkInvariant(dynoptic.invariants.checkers.BinChecker,dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState,java.util.Set)>(r1, $r12, r3)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z6 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean checkInvariant(dynoptic.invariants.checkers.BinChecker,dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState,java.util.Set)>(r1, $r12, r3) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z6 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z6 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z6 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r5 == null
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r5 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: void inheritState(dynoptic.invariants.checkers.BinChecker)>(r5)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r5 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: void inheritState(dynoptic.invariants.checkers.BinChecker)>(r5) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r5 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: dynoptic.invariants.checkers.BinChecker getClone()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r6 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z3 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: boolean isFail()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z3 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z3 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z4 = 1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z3 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z4 = 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z4 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return $z4
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z4 = 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= return $z4]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= return $z4] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return $z4
