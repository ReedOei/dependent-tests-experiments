dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : $r3 = r0.<dynoptic.model.fifosys.channel.channelstate.AbsMultiChState: java.util.List channelStates> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : if $z0 == 0
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : return 1
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : r2 = (dynoptic.model.fifosys.channel.channelstate.ChState) $r4
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : r2 = (dynoptic.model.fifosys.channel.channelstate.ChState) $r4 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : $z1 = virtualinvoke r2.<dynoptic.model.fifosys.channel.channelstate.ChState: boolean isEmpty()>()
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : $z1 = virtualinvoke r2.<dynoptic.model.fifosys.channel.channelstate.ChState: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : if $z1 != 0
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : return 0
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.isEmpty : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
