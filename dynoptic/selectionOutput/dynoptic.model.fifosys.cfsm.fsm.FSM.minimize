dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r1 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: dynoptic.model.automaton.EventTypeEncodings getEventTypeEncodings()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r2 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: dynoptic.model.automaton.EncodedAutomaton getEncodedAutomaton(dynoptic.model.automaton.EventTypeEncodings)>(r1)
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r2 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: dynoptic.model.automaton.EncodedAutomaton getEncodedAutomaton(dynoptic.model.automaton.EventTypeEncodings)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : virtualinvoke r2.<dynoptic.model.automaton.EncodedAutomaton: void minimize()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : virtualinvoke r2.<dynoptic.model.automaton.EncodedAutomaton: void minimize()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r3 = virtualinvoke r2.<dynoptic.model.automaton.EncodedAutomaton: dk.brics.automaton.Automaton getAutomaton()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r3 = virtualinvoke r2.<dynoptic.model.automaton.EncodedAutomaton: dk.brics.automaton.Automaton getAutomaton()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states>
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r7.<java.util.Set: void clear()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r7.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set initStates>
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set initStates> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r8.<java.util.Set: void clear()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r8.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r9 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set acceptStates>
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r9 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set acceptStates> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r9.<java.util.Set: void clear()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r9.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r4 = virtualinvoke r3.<dk.brics.automaton.Automaton: dk.brics.automaton.State getInitialState()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r4 = virtualinvoke r3.<dk.brics.automaton.Automaton: dk.brics.automaton.State getInitialState()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r10 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r10 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $z0 = virtualinvoke r4.<dk.brics.automaton.State: boolean isAccept()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $z0 = virtualinvoke r4.<dk.brics.automaton.State: boolean isAccept()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : specialinvoke $r10.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>($z0, 1, $i0, 0)
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : specialinvoke $r10.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>($z0, 1, $i0, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r5 = $r10
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r5 = $r10 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states>
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r5)
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r12 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set initStates>
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r12 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set initStates> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r5)
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $z3 = virtualinvoke r4.<dk.brics.automaton.State: boolean isAccept()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $z3 = virtualinvoke r4.<dk.brics.automaton.State: boolean isAccept()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : if $z3 == 0
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r13 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set acceptStates>
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r14 = new java.util.LinkedHashMap
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r14 = new java.util.LinkedHashMap >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r6 = $r14
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : r6 = $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: void DFS(dk.brics.automaton.State,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Map,dynoptic.model.automaton.EventTypeEncodings)>(r4, r5, r6, r1)
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: void DFS(dk.brics.automaton.State,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Map,dynoptic.model.automaton.EventTypeEncodings)>(r4, r5, r6, r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : virtualinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: void recomputeAlphabet()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : virtualinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: void recomputeAlphabet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : return
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r13 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set acceptStates> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>(r5)
dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.minimize : $r14 = new java.util.LinkedHashMap
