dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r4 = r0.<dynoptic.model.fifosys.exec.FifoSysExecution: dynoptic.model.fifosys.exec.FifoSysExecState currState> >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : r2 = virtualinvoke $r4.<dynoptic.model.fifosys.exec.FifoSysExecState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r1)
dynoptic.model.fifosys.exec.FifoSysExecution.transition : r2 = virtualinvoke $r4.<dynoptic.model.fifosys.exec.FifoSysExecState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r1) >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
dynoptic.model.fifosys.exec.FifoSysExecution.transition : $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : if $z0 == 0
dynoptic.model.fifosys.exec.FifoSysExecution.transition : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r5 = new synoptic.util.InternalSynopticException
dynoptic.model.fifosys.exec.FifoSysExecution.transition : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : r3 = staticinvoke <dynoptic.util.Util: java.util.List newList(java.util.Collection)>(r2)
dynoptic.model.fifosys.exec.FifoSysExecution.transition : r3 = staticinvoke <dynoptic.util.Util: java.util.List newList(java.util.Collection)>(r2) >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r6 = new java.util.Random
dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r6 = new java.util.Random >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : specialinvoke $r6.<java.util.Random: void <init>()>()
dynoptic.model.fifosys.exec.FifoSysExecution.transition : specialinvoke $r6.<java.util.Random: void <init>()>() >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : $i1 = interfaceinvoke r2.<java.util.Set: int size()>()
dynoptic.model.fifosys.exec.FifoSysExecution.transition : $i1 = interfaceinvoke r2.<java.util.Set: int size()>() >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>($i1)
dynoptic.model.fifosys.exec.FifoSysExecution.transition : i0 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>($i1) >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0)
dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r8 = (dynoptic.model.fifosys.exec.FifoSysExecState) $r7
dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r8 = (dynoptic.model.fifosys.exec.FifoSysExecState) $r7 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : r0.<dynoptic.model.fifosys.exec.FifoSysExecution: dynoptic.model.fifosys.exec.FifoSysExecState currState> = $r8
dynoptic.model.fifosys.exec.FifoSysExecution.transition : r0.<dynoptic.model.fifosys.exec.FifoSysExecution: dynoptic.model.fifosys.exec.FifoSysExecState currState> = $r8 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r9 = r0.<dynoptic.model.fifosys.exec.FifoSysExecution: java.util.List stateSequence>
dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r9 = r0.<dynoptic.model.fifosys.exec.FifoSysExecution: java.util.List stateSequence> >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r10 = r0.<dynoptic.model.fifosys.exec.FifoSysExecution: dynoptic.model.fifosys.exec.FifoSysExecState currState>
dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r10 = r0.<dynoptic.model.fifosys.exec.FifoSysExecution: dynoptic.model.fifosys.exec.FifoSysExecState currState> >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10)
dynoptic.model.fifosys.exec.FifoSysExecution.transition : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r11 = r0.<dynoptic.model.fifosys.exec.FifoSysExecution: dynoptic.model.fifosys.exec.FifoSysExecState currState>
dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r11 = r0.<dynoptic.model.fifosys.exec.FifoSysExecution: dynoptic.model.fifosys.exec.FifoSysExecState currState> >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : return $r11
dynoptic.model.fifosys.exec.FifoSysExecution.transition : $r5 = new synoptic.util.InternalSynopticException >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : specialinvoke $r5.<synoptic.util.InternalSynopticException: void <init>(java.lang.String)>("Cannot transition on an event that is not possible from this state.")
dynoptic.model.fifosys.exec.FifoSysExecution.transition : specialinvoke $r5.<synoptic.util.InternalSynopticException: void <init>(java.lang.String)>("Cannot transition on an event that is not possible from this state.") >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecution.transition : throw $r5
