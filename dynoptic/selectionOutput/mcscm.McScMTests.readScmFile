mcscm.McScMTests.readScmFile : $r2 = new java.lang.StringBuilder >>>>>>>> mcscm.McScMTests.readScmFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
mcscm.McScMTests.readScmFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> mcscm.McScMTests.readScmFile : $r8 = r0.<mcscm.McScMTests: java.lang.String scmFilePrefix>
mcscm.McScMTests.readScmFile : $r8 = r0.<mcscm.McScMTests: java.lang.String scmFilePrefix> >>>>>>>> mcscm.McScMTests.readScmFile : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
mcscm.McScMTests.readScmFile : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> mcscm.McScMTests.readScmFile : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
mcscm.McScMTests.readScmFile : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> mcscm.McScMTests.readScmFile : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
mcscm.McScMTests.readScmFile : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> mcscm.McScMTests.readScmFile : $r11 = new java.io.BufferedReader
mcscm.McScMTests.readScmFile : $r11 = new java.io.BufferedReader >>>>>>>> mcscm.McScMTests.readScmFile : $r4 = new java.io.FileReader
mcscm.McScMTests.readScmFile : $r4 = new java.io.FileReader >>>>>>>> mcscm.McScMTests.readScmFile : specialinvoke $r4.<java.io.FileReader: void <init>(java.lang.String)>(r3)
mcscm.McScMTests.readScmFile : specialinvoke $r4.<java.io.FileReader: void <init>(java.lang.String)>(r3) >>>>>>>> mcscm.McScMTests.readScmFile : specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4)
mcscm.McScMTests.readScmFile : specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4) >>>>>>>> mcscm.McScMTests.readScmFile : r5 = $r11
mcscm.McScMTests.readScmFile : r5 = $r11 >>>>>>>> mcscm.McScMTests.readScmFile : $r12 = new java.lang.StringBuilder
mcscm.McScMTests.readScmFile : $r12 = new java.lang.StringBuilder >>>>>>>> mcscm.McScMTests.readScmFile : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
mcscm.McScMTests.readScmFile : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> mcscm.McScMTests.readScmFile : r6 = $r12
mcscm.McScMTests.readScmFile : r6 = $r12 >>>>>>>> mcscm.McScMTests.readScmFile : $r13 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()
mcscm.McScMTests.readScmFile : $r13 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>() >>>>>>>> mcscm.McScMTests.readScmFile : r7 = $r13
mcscm.McScMTests.readScmFile : r7 = $r13 >>>>>>>> mcscm.McScMTests.readScmFile : if $r13 == null
mcscm.McScMTests.readScmFile : if $r13 == null >>>>>>>> mcscm.McScMTests.readScmFile : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
mcscm.McScMTests.readScmFile : if $r13 == null >>>>>>>> mcscm.McScMTests.readScmFile : $r16 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>()
mcscm.McScMTests.readScmFile : $r16 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> mcscm.McScMTests.readScmFile : return $r16
mcscm.McScMTests.readScmFile : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> mcscm.McScMTests.readScmFile : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
mcscm.McScMTests.readScmFile : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> mcscm.McScMTests.readScmFile : goto [?= $r13 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()]
mcscm.McScMTests.readScmFile : goto [?= $r13 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()] >>>>>>>> mcscm.McScMTests.readScmFile : $r13 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>()
