dynoptic.main.DynopticMain.refineCExample : i0 = 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>()
dynoptic.main.DynopticMain.refineCExample : $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if i0 >= $i1
dynoptic.main.DynopticMain.refineCExample : if i0 >= $i1 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r6 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.refineCExample : if i0 >= $i1 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z4 = <dynoptic.main.DynopticMain: boolean assertsOn>
dynoptic.main.DynopticMain.refineCExample : $z4 = <dynoptic.main.DynopticMain: boolean assertsOn> >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if $z4 == 0
dynoptic.main.DynopticMain.refineCExample : if $z4 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z5 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.refineCExample : if $z4 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r28 = new java.lang.Exception
dynoptic.main.DynopticMain.refineCExample : $r28 = new java.lang.Exception >>>>>>>> dynoptic.main.DynopticMain.refineCExample : specialinvoke $r28.<java.lang.Exception: void <init>(java.lang.String)>("Unable to eliminate CFSM counter-example from GFSM.")
dynoptic.main.DynopticMain.refineCExample : specialinvoke $r28.<java.lang.Exception: void <init>(java.lang.String)>("Unable to eliminate CFSM counter-example from GFSM.") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : throw $r28
dynoptic.main.DynopticMain.refineCExample : $z5 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if $z5 != 0
dynoptic.main.DynopticMain.refineCExample : if $z5 != 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r27 = new java.lang.AssertionError
dynoptic.main.DynopticMain.refineCExample : if $z5 != 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r28 = new java.lang.Exception
dynoptic.main.DynopticMain.refineCExample : $r27 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.refineCExample : specialinvoke $r27.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.refineCExample : specialinvoke $r27.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : throw $r27
dynoptic.main.DynopticMain.refineCExample : $r6 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r7 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.refineCExample : $r7 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.refineCExample : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.refineCExample : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Computing process ")
dynoptic.main.DynopticMain.refineCExample : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Computing process ") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.refineCExample : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" paths...")
dynoptic.main.DynopticMain.refineCExample : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" paths...") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.refineCExample : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r6.<java.util.logging.Logger: void info(java.lang.String)>($r11)
dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r6.<java.util.logging.Logger: void info(java.lang.String)>($r11) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : r3 = virtualinvoke r1.<dynoptic.model.fifosys.gfsm.GFSM: java.util.Set getCExamplePaths(mcscm.McScMCExample,int)>(r2, i0)
dynoptic.main.DynopticMain.refineCExample : r3 = virtualinvoke r1.<dynoptic.model.fifosys.gfsm.GFSM: java.util.Set getCExamplePaths(mcscm.McScMCExample,int)>(r2, i0) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if r3 != null
dynoptic.main.DynopticMain.refineCExample : if r3 != null >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r12 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.refineCExample : if r3 != null >>>>>>>> dynoptic.main.DynopticMain.refineCExample : z0 = 1
dynoptic.main.DynopticMain.refineCExample : z0 = 1 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.main.DynopticMain.refineCExample : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.main.DynopticMain.refineCExample : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if $z1 == 0
dynoptic.main.DynopticMain.refineCExample : if $z1 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
dynoptic.main.DynopticMain.refineCExample : if $z1 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if z0 == 0
dynoptic.main.DynopticMain.refineCExample : if z0 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : return
dynoptic.main.DynopticMain.refineCExample : if z0 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : i0 = i0 + 1
dynoptic.main.DynopticMain.refineCExample : i0 = i0 + 1 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : goto [?= $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>()]
dynoptic.main.DynopticMain.refineCExample : goto [?= $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>()] >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>()
dynoptic.main.DynopticMain.refineCExample : $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : r5 = (dynoptic.model.fifosys.gfsm.GFSMPath) $r18
dynoptic.main.DynopticMain.refineCExample : r5 = (dynoptic.model.fifosys.gfsm.GFSMPath) $r18 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r19 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.refineCExample : $r19 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r20 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.refineCExample : $r20 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.refineCExample : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.refineCExample : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to resolve process ")
dynoptic.main.DynopticMain.refineCExample : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to resolve process ") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.refineCExample : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path: ")
dynoptic.main.DynopticMain.refineCExample : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path: ") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r24 = virtualinvoke r5.<dynoptic.model.fifosys.gfsm.GFSMPath: java.lang.String toString()>()
dynoptic.main.DynopticMain.refineCExample : $r24 = virtualinvoke r5.<dynoptic.model.fifosys.gfsm.GFSMPath: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
dynoptic.main.DynopticMain.refineCExample : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.refineCExample : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r19.<java.util.logging.Logger: void info(java.lang.String)>($r26)
dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r19.<java.util.logging.Logger: void info(java.lang.String)>($r26) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z2 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMPath: boolean checkPathCompleteness(dynoptic.model.fifosys.gfsm.GFSMPath)>(r5)
dynoptic.main.DynopticMain.refineCExample : $z2 = staticinvoke <dynoptic.model.fifosys.gfsm.GFSMPath: boolean checkPathCompleteness(dynoptic.model.fifosys.gfsm.GFSMPath)>(r5) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if $z2 != 0
dynoptic.main.DynopticMain.refineCExample : if $z2 != 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
dynoptic.main.DynopticMain.refineCExample : if $z2 != 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z3 = virtualinvoke r5.<dynoptic.model.fifosys.gfsm.GFSMPath: boolean refine(dynoptic.model.fifosys.gfsm.GFSM)>(r1)
dynoptic.main.DynopticMain.refineCExample : $z3 = virtualinvoke r5.<dynoptic.model.fifosys.gfsm.GFSMPath: boolean refine(dynoptic.model.fifosys.gfsm.GFSM)>(r1) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if $z3 != 0
dynoptic.main.DynopticMain.refineCExample : if $z3 != 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : z0 = 0
dynoptic.main.DynopticMain.refineCExample : if $z3 != 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
dynoptic.main.DynopticMain.refineCExample : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.main.DynopticMain.refineCExample : z0 = 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : goto [?= (branch)]
dynoptic.main.DynopticMain.refineCExample : goto [?= (branch)] >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if z0 == 0
dynoptic.main.DynopticMain.refineCExample : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.main.DynopticMain.refineCExample : $r12 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r13 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.refineCExample : $r13 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.refineCExample : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.refineCExample : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No matching paths for process ")
dynoptic.main.DynopticMain.refineCExample : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No matching paths for process ") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.refineCExample : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exist, continuing.")
dynoptic.main.DynopticMain.refineCExample : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exist, continuing.") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.refineCExample : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r12.<java.util.logging.Logger: void info(java.lang.String)>($r17)
dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r12.<java.util.logging.Logger: void info(java.lang.String)>($r17) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : return
