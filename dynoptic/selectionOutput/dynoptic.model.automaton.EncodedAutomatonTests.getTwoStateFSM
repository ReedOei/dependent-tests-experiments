dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : r2 = specialinvoke r0.<dynoptic.model.automaton.EncodedAutomatonTests: dynoptic.model.fifosys.cfsm.fsm.FSMState getInitState(int)>(i0) >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : r3 = specialinvoke r0.<dynoptic.model.automaton.EncodedAutomatonTests: dynoptic.model.fifosys.cfsm.fsm.FSMState getAcceptState(int)>(i0)
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : r3 = specialinvoke r0.<dynoptic.model.automaton.EncodedAutomatonTests: dynoptic.model.fifosys.cfsm.fsm.FSMState getAcceptState(int)>(i0) >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r3)
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r3) >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $r6 = newarray (dynoptic.model.fifosys.cfsm.fsm.FSMState)[2]
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $r6 = newarray (dynoptic.model.fifosys.cfsm.fsm.FSMState)[2] >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $r6[0] = r2
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $r6[0] = r2 >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $r6[1] = r3
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $r6[1] = r3 >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : r4 = specialinvoke r0.<dynoptic.model.automaton.EncodedAutomatonTests: java.util.Set toSet(dynoptic.model.fifosys.cfsm.fsm.FSMState[])>($r6)
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : r4 = specialinvoke r0.<dynoptic.model.automaton.EncodedAutomatonTests: java.util.Set toSet(dynoptic.model.fifosys.cfsm.fsm.FSMState[])>($r6) >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $r7 = new dynoptic.model.fifosys.cfsm.fsm.FSM
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $r7 = new dynoptic.model.fifosys.cfsm.fsm.FSM >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $i1 = r0.<dynoptic.model.automaton.EncodedAutomatonTests: int nextScmId>
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : $i1 = r0.<dynoptic.model.automaton.EncodedAutomatonTests: int nextScmId> >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : specialinvoke $r7.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(i0, r2, r3, r4, $i1)
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : specialinvoke $r7.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(i0, r2, r3, r4, $i1) >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : r5 = $r7
dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : r5 = $r7 >>>>>>>> dynoptic.model.automaton.EncodedAutomatonTests.getTwoStateFSM : return r5
