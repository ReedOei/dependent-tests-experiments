dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z0 != 0
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z0 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z0 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z1 != 0
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z1 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z1 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r5 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r5 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ")
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ") >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : return $r15
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $r3 != null
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $r3 != null >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r4 = new java.lang.AssertionError
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $r3 != null >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r5 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r4 = new java.lang.AssertionError >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : specialinvoke $r4.<java.lang.AssertionError: void <init>()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : specialinvoke $r4.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : throw $r4
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $r1 != null
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $r1 != null >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r2 = new java.lang.AssertionError
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $r1 != null >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r2 = new java.lang.AssertionError >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : specialinvoke $r2.<java.lang.AssertionError: void <init>()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : specialinvoke $r2.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : throw $r2
