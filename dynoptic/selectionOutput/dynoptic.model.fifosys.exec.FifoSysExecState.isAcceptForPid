dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $r1 = r0.<dynoptic.model.fifosys.exec.FifoSysExecState: dynoptic.model.fifosys.AbsMultiFSMState processStates> >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $z0 = virtualinvoke $r1.<dynoptic.model.fifosys.AbsMultiFSMState: boolean isAcceptForPid(int)>(i0)
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $z0 = virtualinvoke $r1.<dynoptic.model.fifosys.AbsMultiFSMState: boolean isAcceptForPid(int)>(i0) >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : if $z0 == 0
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $r2 = r0.<dynoptic.model.fifosys.exec.FifoSysExecState: dynoptic.model.fifosys.channel.channelstate.MutableMultiChState channelStates>
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $z2 = 0
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $z2 = 0 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : return $z2
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $r2 = r0.<dynoptic.model.fifosys.exec.FifoSysExecState: dynoptic.model.fifosys.channel.channelstate.MutableMultiChState channelStates> >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $z1 = virtualinvoke $r2.<dynoptic.model.fifosys.channel.channelstate.MutableMultiChState: boolean isEmptyForPid(int)>(i0)
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $z1 = virtualinvoke $r2.<dynoptic.model.fifosys.channel.channelstate.MutableMultiChState: boolean isEmptyForPid(int)>(i0) >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : if $z1 == 0
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $z2 = 1
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $z2 = 0
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : $z2 = 1 >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : goto [?= return $z2]
dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : goto [?= return $z2] >>>>>>>> dynoptic.model.fifosys.exec.FifoSysExecState.isAcceptForPid : return $z2
