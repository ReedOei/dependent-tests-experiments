dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r5 = virtualinvoke r0.<synoptic.model.DAGsTraceGraph: java.util.Set getNodes()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : return
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : r3 = (synoptic.model.EventNode) $r6
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : r3 = (synoptic.model.EventNode) $r6 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $i2 = virtualinvoke r3.<synoptic.model.EventNode: int getTraceID()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $i2 = virtualinvoke r3.<synoptic.model.EventNode: int getTraceID()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $i2 == i0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $i2 == i0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $i2 == i0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z1 = virtualinvoke r3.<synoptic.model.EventNode: boolean isInitial()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z1 = virtualinvoke r3.<synoptic.model.EventNode: boolean isInitial()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z1 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z2 = virtualinvoke r3.<synoptic.model.EventNode: boolean isTerminal()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z2 = virtualinvoke r3.<synoptic.model.EventNode: boolean isTerminal()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z2 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : r4 = virtualinvoke r3.<synoptic.model.EventNode: synoptic.model.event.Event getEvent()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : r4 = virtualinvoke r3.<synoptic.model.EventNode: synoptic.model.event.Event getEvent()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r7 = virtualinvoke r4.<synoptic.model.event.Event: synoptic.model.event.EventType getEType()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r7 = virtualinvoke r4.<synoptic.model.event.Event: synoptic.model.event.EventType getEType()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r8 = (synoptic.model.event.DistEventType) $r7
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r8 = (synoptic.model.event.DistEventType) $r7 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : i1 = virtualinvoke $r8.<synoptic.model.event.DistEventType: int getPid()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : i1 = virtualinvoke $r8.<synoptic.model.event.DistEventType: int getPid()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z3 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z3 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z3 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z3 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $i3 = interfaceinvoke r1.<java.util.List: int size()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z3 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $r10 == null
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $r10 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r11 = virtualinvoke r3.<synoptic.model.EventNode: synoptic.util.time.ITime getTime()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $r10 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r3)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r3) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r11 = virtualinvoke r3.<synoptic.model.EventNode: synoptic.util.time.ITime getTime()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r13 = (synoptic.model.EventNode) $r12
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r13 = (synoptic.model.EventNode) $r12 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r14 = virtualinvoke $r13.<synoptic.model.EventNode: synoptic.util.time.ITime getTime()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r14 = virtualinvoke $r13.<synoptic.model.EventNode: synoptic.util.time.ITime getTime()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z4 = interfaceinvoke $r11.<synoptic.util.time.ITime: boolean lessThan(synoptic.util.time.ITime)>($r14)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z4 = interfaceinvoke $r11.<synoptic.util.time.ITime: boolean lessThan(synoptic.util.time.ITime)>($r14) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z4 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z4 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r3)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if $z4 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $i3 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if i1 < $i3
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if i1 < $i3 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r9 = new java.lang.AssertionError
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : if i1 < $i3 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r10 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $r9 = new java.lang.AssertionError >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : specialinvoke $r9.<java.lang.AssertionError: void <init>()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : specialinvoke $r9.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : throw $r9
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.buildInitPidEventNodes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
