dynoptic.invariants.BinaryInvariant.getFirst : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first>
dynoptic.invariants.BinaryInvariant.getSecond : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second>
dynoptic.invariants.checkers.APChecker.transition : $r3 = r0.<dynoptic.invariants.checkers.APChecker: java.lang.Object s>
dynoptic.invariants.checkers.APChecker.transition : $r14 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS>
dynoptic.invariants.checkers.APChecker.transition : $r19 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity TEMP_SUCCESS>
dynoptic.invariants.checkers.APChecker.transition : $r11 = r0.<dynoptic.invariants.checkers.APChecker: dynoptic.invariants.BinaryInvariant inv>
dynoptic.invariants.checkers.APChecker.transition : $z0 = <dynoptic.invariants.checkers.APChecker: boolean $assertionsDisabled>
dynoptic.invariants.checkers.APChecker.transition : $r7 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_FAIL>
dynoptic.invariants.checkers.APChecker.transition : $r15 = r0.<dynoptic.invariants.checkers.APChecker: dynoptic.invariants.BinaryInvariant inv>
dynoptic.invariants.checkers.APChecker.transition : $r18 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_FAIL>
dynoptic.invariants.checkers.APChecker.transition : $r17 = <dynoptic.invariants.checkers.APState: dynoptic.invariants.checkers.APState SAW_Y>
dynoptic.invariants.checkers.APChecker.transition : $r13 = <dynoptic.invariants.checkers.APState: dynoptic.invariants.checkers.APState SAW_X>
dynoptic.invariants.checkers.APChecker.transition : $r4 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS>
dynoptic.invariants.checkers.APChecker.transition : $r5 = r0.<dynoptic.invariants.checkers.APChecker: java.lang.Object s>
dynoptic.invariants.checkers.APChecker.isFail : $r2 = r0.<dynoptic.invariants.checkers.APChecker: java.lang.Object s>
dynoptic.invariants.AlwaysPrecedes.newChecker : $r1 = virtualinvoke r0.<dynoptic.invariants.AlwaysPrecedes: dynoptic.invariants.checkers.APChecker newChecker()>()
dynoptic.invariants.AlwaysPrecedes.newChecker : $r1 = new dynoptic.invariants.checkers.APChecker
