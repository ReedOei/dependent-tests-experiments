dynoptic.invariants.BinaryInvariant.checkInitialized : $z3 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z2 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> = r2
dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> = r1
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.invariants.AlwaysFollowedBy.scmBadStateQRe : $r1 = new java.lang.StringBuilder
dynoptic.invariants.AlwaysFollowedBy.scmBadStateQRe : virtualinvoke r0.<dynoptic.invariants.AlwaysFollowedBy: void checkInitialized()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r5 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r16 = virtualinvoke $r15.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r1 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : virtualinvoke r0.<dynoptic.invariants.BinaryInvariant: void checkInitialized()>()
dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1> = r1
dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2> = r2
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap>
