dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.invariants.NeverFollowedBy.satisfies : if z0 == 0 goto (branch)
dynoptic.invariants.NeverFollowedBy.satisfies : z0 = 1
dynoptic.invariants.NeverFollowedBy.satisfies : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.invariants.NeverFollowedBy.satisfies : z0 = 0
dynoptic.invariants.NeverFollowedBy.satisfies : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
dynoptic.invariants.NeverFollowedBy.satisfies : return 1
dynoptic.invariants.NeverFollowedBy.satisfies : return 0
dynoptic.invariants.NeverFollowedBy.satisfies : if z0 != 0 goto (branch)
dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap>
