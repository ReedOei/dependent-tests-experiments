dynoptic.model.fifosys.cfsm.CFSMTests.setUp : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: void setUp()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke r0.<dynoptic.DynopticTest: void setUp()>()
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke r0.<dynoptic.DynopticTest: void setUp()>() >>>>>>>> dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : if $r1 == null
dynoptic.main.DynopticMain.setUpLogging : if $r1 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 0, 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 0, 0) >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> = $r1
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> = $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r2 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r2 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 0, 1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 0, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> = $r2
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> = $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> = $r3
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> = $r3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r5 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r5 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5]
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r6 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r6 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i3 = $i1 + $b2]
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i3 = $i1 + $b2] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if r1 != r0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if r1 != r0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : r2 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) r1
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : r2 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) r1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z1 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z1 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z2 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z2 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z1 == $z2
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z1 == $z2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : return 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : return 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r8 = new synoptic.model.channelid.ChannelId
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r8 = new synoptic.model.channelid.ChannelId >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r8.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(0, 1, 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r8.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(0, 1, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> = $r8
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> = $r8 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r9 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>(1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r9 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>(1) >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(i0)
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> = $r9
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> = $r9 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r10 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r10 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r12)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r12) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm> = $r13
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm> = $r13 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r14 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r14 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le> = $r14
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le> = $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r15.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r16, $r17)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r15.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r16, $r17) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z1 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z2 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransitionNoChecks(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransitionNoChecks(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : if $r5 != null
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : if $r5 != null >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r6 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r6 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : goto [?= interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)]
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : goto [?= interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r20 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r20 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r18.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r19, $r20)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r18.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r19, $r20) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r21 = new dynoptic.model.fifosys.cfsm.fsm.FSM
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r21 = new dynoptic.model.fifosys.cfsm.fsm.FSM >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r22 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r22 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r23 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r23 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r24 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r24 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r21.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(0, $r22, $r23, $r24, 2)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r21.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(0, $r22, $r23, $r24, 2) >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>()
dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>()
dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states>
dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0
dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.AbsFSM.recomputeAlphabet : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r2 = (dynoptic.model.AbsFSMState) $r6
dynoptic.model.AbsFSM.recomputeAlphabet : r2 = (dynoptic.model.AbsFSMState) $r6 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r3 = virtualinvoke r2.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.AbsFSM.recomputeAlphabet : r3 = virtualinvoke r2.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r7 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.recomputeAlphabet : $r7 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r7.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>(r3)
dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r7.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>(r3) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.addAll : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.addAll : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.addAll : $z0 = interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1)
dynoptic.model.alphabet.FSMAlphabet.addAll : $z0 = interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.addAll : return $z0
dynoptic.model.alphabet.FSMAlphabet.addAll : return $z0 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.AbsFSM.recomputeAlphabet : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0> = $r21
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0> = $r21 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r25 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r25 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r25.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r25.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> = $r25
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> = $r25 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r26 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r26 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r26.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r26.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> = $r26
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> = $r26 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r27 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r27 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r27.<java.util.Set: void clear()>()
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r27.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r28 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r28 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r29 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r29 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r28.<java.util.Set: boolean add(java.lang.Object)>($r29)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r28.<java.util.Set: boolean add(java.lang.Object)>($r29) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r30 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r30 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r31 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r31 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>($r31)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>($r31) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r32 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r32 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r33 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType RecvEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r32)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r33 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType RecvEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r32) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm> = $r33
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm> = $r33 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r34 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("f", 1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r34 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("f", 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf> = $r34
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf> = $r34 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r35 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r35 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r36 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r36 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r37 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r37 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r35.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r36, $r37)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r35.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r36, $r37) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r38 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r38 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r39 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r39 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r40 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r40 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r38.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r39, $r40)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r38.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r39, $r40) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r41 = new dynoptic.model.fifosys.cfsm.fsm.FSM
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r41 = new dynoptic.model.fifosys.cfsm.fsm.FSM >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r42 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r42 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r43 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r43 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r44 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r44 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r41.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(1, $r42, $r43, $r44, 2)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r41.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(1, $r42, $r43, $r44, 2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1> = $r41
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1> = $r41 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r45 = new dynoptic.model.fifosys.cfsm.CFSM
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r45 = new dynoptic.model.fifosys.cfsm.CFSM >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r46 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r46 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r45.<dynoptic.model.fifosys.cfsm.CFSM: void <init>(int,java.util.List)>(2, $r46)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r45.<dynoptic.model.fifosys.cfsm.CFSM: void <init>(int,java.util.List)>(2, $r46) >>>>>>>> dynoptic.util.Util.newList : $r1 = new java.util.ArrayList
dynoptic.util.Util.newList : $r1 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0)
dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0) >>>>>>>> dynoptic.util.Util.newList : return $r1
dynoptic.util.Util.newList : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> = $r45
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> = $r45 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r47 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r47 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r48 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r48 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r47.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r48)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r47.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r48) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z0 != 0
dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z1 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z1 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z1 != 0
dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : i0 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: int getPid()>()
dynoptic.model.fifosys.cfsm.CFSM.addFSM : i0 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: int getPid()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.getPid : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSM.getPid : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.getPid : return $i0
dynoptic.model.fifosys.cfsm.fsm.FSM.getPid : return $i0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z2 = <dynoptic.main.DynopticMain: boolean assertsOn>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z2 = <dynoptic.main.DynopticMain: boolean assertsOn> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z2 == 0
dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : interfaceinvoke $r17.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1)
dynoptic.model.fifosys.cfsm.CFSM.addFSM : interfaceinvoke $r17.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r20 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: dynoptic.model.alphabet.FSMAlphabet getAlphabet()>()
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r20 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: dynoptic.model.alphabet.FSMAlphabet getAlphabet()>() >>>>>>>> dynoptic.model.AbsFSM.getAlphabet : $r1 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.getAlphabet : $r1 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.getAlphabet : return $r1
dynoptic.model.AbsFSM.getAlphabet : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : virtualinvoke $r19.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>($r20)
dynoptic.model.fifosys.cfsm.CFSM.addFSM : virtualinvoke $r19.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>($r20) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.iterator : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.iterator : $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : return $r2
dynoptic.model.alphabet.FSMAlphabet.iterator : return $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $i9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int unSpecifiedPids>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $i9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int unSpecifiedPids> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $i10 = $i9 - 1
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $i10 = $i9 - 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : r0.<dynoptic.model.fifosys.cfsm.CFSM: int unSpecifiedPids> = $i10
dynoptic.model.fifosys.cfsm.CFSM.addFSM : r0.<dynoptic.model.fifosys.cfsm.CFSM: int unSpecifiedPids> = $i10 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r49 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r49 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r50 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r50 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r49.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r50)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r49.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r50) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r1 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.toString : $r1 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.BinaryInvariant.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
dynoptic.invariants.BinaryInvariant.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first>
dynoptic.invariants.BinaryInvariant.toString : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first> >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)
dynoptic.invariants.BinaryInvariant.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ")
dynoptic.invariants.BinaryInvariant.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r6 = r0.<dynoptic.invariants.BinaryInvariant: java.lang.String connectorStr>
dynoptic.invariants.BinaryInvariant.toString : $r6 = r0.<dynoptic.invariants.BinaryInvariant: java.lang.String connectorStr> >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
dynoptic.invariants.BinaryInvariant.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (")
dynoptic.invariants.BinaryInvariant.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r9 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second>
dynoptic.invariants.BinaryInvariant.toString : $r9 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second> >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
dynoptic.invariants.BinaryInvariant.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
dynoptic.invariants.BinaryInvariant.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.BinaryInvariant.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : return $r12
dynoptic.invariants.BinaryInvariant.toString : return $r12 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : $z0 = r1 instanceof dynoptic.invariants.EventuallyHappens
dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : $z0 = r1 instanceof dynoptic.invariants.EventuallyHappens >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : if $z0 == 0
dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : $z1 = r1 instanceof dynoptic.invariants.AlwaysPrecedes
dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : $z1 = r1 instanceof dynoptic.invariants.AlwaysPrecedes >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : if $z1 != 0
dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void augmentWithBinInvTracing(dynoptic.invariants.BinaryInvariant)>(r1)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void augmentWithBinInvTracing(dynoptic.invariants.BinaryInvariant)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r2 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType getFirst()>()
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r2 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType getFirst()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.getFirst : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first>
dynoptic.invariants.BinaryInvariant.getFirst : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first> >>>>>>>> dynoptic.invariants.BinaryInvariant.getFirst : return $r1
dynoptic.invariants.BinaryInvariant.getFirst : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r3 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType getSecond()>()
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r3 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType getSecond()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.getSecond : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second>
dynoptic.invariants.BinaryInvariant.getSecond : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second> >>>>>>>> dynoptic.invariants.BinaryInvariant.getSecond : return $r1
dynoptic.invariants.BinaryInvariant.getSecond : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z0 != 0
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z2 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z2 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z2 != 0
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z4 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z4 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z4 != 0
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z4 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z5 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z5 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z5 != 0
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z5 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z6 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $z6 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z6 != 0
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $z6 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r23 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r23 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r24 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r24 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : i0 = interfaceinvoke $r24.<java.util.List: int size()>()
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : i0 = interfaceinvoke $r24.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $i5 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $i5 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $i5 <= i0
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : if $i5 <= i0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex> = i0
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex> = i0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r25 = new dynoptic.model.fifosys.channel.channelid.InvChannelId
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r25 = new dynoptic.model.fifosys.channel.channelid.InvChannelId >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : specialinvoke $r25.<dynoptic.model.fifosys.channel.channelid.InvChannelId: void <init>(dynoptic.invariants.BinaryInvariant,int)>(r1, i0)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : specialinvoke $r25.<dynoptic.model.fifosys.channel.channelid.InvChannelId: void <init>(dynoptic.invariants.BinaryInvariant,int)>(r1, i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r4 = $r25
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r4 = $r25 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r26 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r26 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>(r4)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r5 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r5 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r27 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r27 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $i6 = virtualinvoke r2.<synoptic.model.event.DistEventType: int getPid()>()
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $i6 = virtualinvoke r2.<synoptic.model.event.DistEventType: int getPid()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>($i6)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>($i6) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r6 = (dynoptic.model.fifosys.cfsm.fsm.FSM) $r28
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r6 = (dynoptic.model.fifosys.cfsm.fsm.FSM) $r28 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r7 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SynthSendEvent(synoptic.model.event.DistEventType,synoptic.model.channelid.ChannelId,boolean)>(r2, r4, 1)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r7 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SynthSendEvent(synoptic.model.event.DistEventType,synoptic.model.channelid.ChannelId,boolean)>(r2, r4, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r8 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SynthSendEvent(synoptic.model.event.DistEventType,synoptic.model.channelid.ChannelId,boolean)>(r2, r4, 0)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r8 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SynthSendEvent(synoptic.model.event.DistEventType,synoptic.model.channelid.ChannelId,boolean)>(r2, r4, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void addSendToEventTx(dynoptic.model.fifosys.cfsm.fsm.FSM,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,java.util.Set)>(r6, r2, r7, r8, r5)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void addSendToEventTx(dynoptic.model.fifosys.cfsm.fsm.FSM,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,java.util.Set)>(r6, r2, r7, r8, r5) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : $r8 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set getInitStates()>()
dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : $r8 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set getInitStates()>() >>>>>>>> dynoptic.model.AbsFSM.getInitStates : $r1 = r0.<dynoptic.model.AbsFSM: java.util.Set initStates>
dynoptic.model.AbsFSM.getInitStates : $r1 = r0.<dynoptic.model.AbsFSM: java.util.Set initStates> >>>>>>>> dynoptic.model.AbsFSM.getInitStates : return $r1
dynoptic.model.AbsFSM.getInitStates : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : r6 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : r6 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : if $z0 == 0
dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : r7 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r9
dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : r7 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r9 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void recurseAddSendToEventTx(dynoptic.model.fifosys.cfsm.fsm.FSM,dynoptic.model.fifosys.cfsm.fsm.FSMState,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,java.util.Set)>(r1, r7, r2, r3, r4, r5)
dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void recurseAddSendToEventTx(dynoptic.model.fifosys.cfsm.fsm.FSM,dynoptic.model.fifosys.cfsm.fsm.FSMState,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,java.util.Set)>(r1, r7, r2, r3, r4, r5) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z0 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>(r2)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z0 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z0 == 0
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r2)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r11 = virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r11 = virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r3)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z2 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r3) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z2 == 0
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r12 = virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r3)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r12 = virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r3) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : if $z1 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $r5 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $r5 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $r7 = (java.util.Set) $r6
dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $r7 = (java.util.Set) $r6 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $r8 = staticinvoke <dynoptic.util.Util: java.util.Set newSet(java.util.Set)>($r7)
dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : $r8 = staticinvoke <dynoptic.util.Util: java.util.Set newSet(java.util.Set)>($r7) >>>>>>>> dynoptic.util.Util.newSet : $r1 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r1 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r0)
dynoptic.util.Util.newSet : specialinvoke $r1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r0) >>>>>>>> dynoptic.util.Util.newSet : return $r1
dynoptic.util.Util.newSet : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : return $r8
dynoptic.model.fifosys.cfsm.fsm.FSMState.getNextStates : return $r8 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r7 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r7 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z3 == 0
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r13 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r13 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r8 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r13
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r8 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r13 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: void addSyntheticState(dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType)>(r2, r8, r3, r4, r5)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: void addSyntheticState(dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType)>(r2, r8, r3, r4, r5) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : if $z2 != 0
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void rmTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r3, r2)
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void rmTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r3, r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z1 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z2 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z3 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z3 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z3 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z3 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $r9 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $r9 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : r3 = (java.util.Set) $r10
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : r3 = (java.util.Set) $r10 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z5 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z5 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z5 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z5 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>(r2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z8 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $z8 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z8 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : if $z8 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $r12 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : $r12 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.fsm.FSMState.rmTransition : interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $r12 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $r12 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : specialinvoke $r12.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 0, $i0, $i1)
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : specialinvoke $r12.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 0, $i0, $i1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : r6 = $r12
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : r6 = $r12 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i2 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i2 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i3 = $i2 + 1
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i3 = $i2 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId> = $i3
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId> = $i3 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $r14 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $r14 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i5 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i5 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : specialinvoke $r14.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 0, $i4, $i5)
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : specialinvoke $r14.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 0, $i4, $i5) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : r7 = $r14
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : r7 = $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i6 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i6 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i7 = $i6 + 1
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $i7 = $i6 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId> = $i7
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int nextScmFSMStateId> = $i7 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addSynthTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r4, r6)
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addSynthTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r4, r6) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : if $z1 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : if $z2 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransitionNoChecks(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addSynthTransition : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransitionNoChecks(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r2) >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : i0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: int hashCode()>()
dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : i0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: int hashCode()>() >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : $i1 = 31 * i0
dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : $i1 = 31 * i0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : $r1 = r0.<dynoptic.model.fifosys.channel.channelid.InvChannelId: dynoptic.invariants.BinaryInvariant inv>
dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : $r1 = r0.<dynoptic.model.fifosys.channel.channelid.InvChannelId: dynoptic.invariants.BinaryInvariant inv> >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : $i2 = virtualinvoke $r1.<dynoptic.invariants.BinaryInvariant: int hashCode()>()
dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : $i2 = virtualinvoke $r1.<dynoptic.invariants.BinaryInvariant: int hashCode()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : b0 = 17
dynoptic.invariants.BinaryInvariant.hashCode : b0 = 17 >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : $i1 = 31 * b0
dynoptic.invariants.BinaryInvariant.hashCode : $i1 = 31 * b0 >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first>
dynoptic.invariants.BinaryInvariant.hashCode : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first> >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : $i2 = virtualinvoke $r1.<synoptic.model.event.DistEventType: int hashCode()>()
dynoptic.invariants.BinaryInvariant.hashCode : $i2 = virtualinvoke $r1.<synoptic.model.event.DistEventType: int hashCode()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : i3 = $i1 + $i2
dynoptic.invariants.BinaryInvariant.hashCode : i3 = $i1 + $i2 >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : $i4 = 31 * i3
dynoptic.invariants.BinaryInvariant.hashCode : $i4 = 31 * i3 >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : $r2 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second>
dynoptic.invariants.BinaryInvariant.hashCode : $r2 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second> >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : $i5 = virtualinvoke $r2.<synoptic.model.event.DistEventType: int hashCode()>()
dynoptic.invariants.BinaryInvariant.hashCode : $i5 = virtualinvoke $r2.<synoptic.model.event.DistEventType: int hashCode()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : i6 = $i4 + $i5
dynoptic.invariants.BinaryInvariant.hashCode : i6 = $i4 + $i5 >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : $i7 = 31 * i6
dynoptic.invariants.BinaryInvariant.hashCode : $i7 = 31 * i6 >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : $r3 = r0.<dynoptic.invariants.BinaryInvariant: java.lang.String connectorStr>
dynoptic.invariants.BinaryInvariant.hashCode : $r3 = r0.<dynoptic.invariants.BinaryInvariant: java.lang.String connectorStr> >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : $i8 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
dynoptic.invariants.BinaryInvariant.hashCode : $i8 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : i9 = $i7 + $i8
dynoptic.invariants.BinaryInvariant.hashCode : i9 = $i7 + $i8 >>>>>>>> dynoptic.invariants.BinaryInvariant.hashCode : return i9
dynoptic.invariants.BinaryInvariant.hashCode : return i9 >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : $i3 = $i1 + $i2
dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : $i3 = $i1 + $i2 >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : return $i3
dynoptic.model.fifosys.channel.channelid.InvChannelId.hashCode : return $i3 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : virtualinvoke r6.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r3, r7)
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : virtualinvoke r6.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r3, r7) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : virtualinvoke r7.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addSynthTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r5, r2)
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : virtualinvoke r7.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addSynthTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r5, r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $r16 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $r16 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>(r6)
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z3 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z3 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z3 == $z4
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z3 == $z4 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $r17 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states>
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : $r17 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>(r7)
dynoptic.model.fifosys.cfsm.fsm.FSM.addSyntheticState : interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>(r7) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $i0 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $i0 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $i1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $i1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $i0 == $i1
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $i0 == $i1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $i2 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $i2 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $i3 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $i3 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $i2 == $i3
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $i2 == $i3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z4 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>(r8)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z4 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>(r8) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z4 != 0
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z4 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void recurseAddSendToEventTx(dynoptic.model.fifosys.cfsm.fsm.FSM,dynoptic.model.fifosys.cfsm.fsm.FSMState,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,java.util.Set)>(r1, r8, r3, r4, r5, r6)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void recurseAddSendToEventTx(dynoptic.model.fifosys.cfsm.fsm.FSM,dynoptic.model.fifosys.cfsm.fsm.FSMState,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,java.util.Set)>(r1, r8, r3, r4, r5, r6) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r14 = virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r14 = virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z5 == 0
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z5 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r17 = (synoptic.model.event.DistEventType) $r16
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r17 = (synoptic.model.event.DistEventType) $r16 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z6 = virtualinvoke r17.<synoptic.model.event.DistEventType: boolean equals(java.lang.Object)>(r4)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z6 = virtualinvoke r17.<synoptic.model.event.DistEventType: boolean equals(java.lang.Object)>(r4) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z6 != 0
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z6 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r18 = virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r17)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r18 = virtualinvoke r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Set getNextStates(synoptic.model.event.DistEventType)>(r17) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r9 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r9 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z7 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z7 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z7 == 0
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z7 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r19 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $r19 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r10 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r19
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : r10 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r19 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z8 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>(r10)
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : $z8 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>(r10) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z8 == 0
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : if $z8 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : goto [?= $z7 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : goto [?= $z7 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : goto [?= $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : goto [?= $z5 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.recurseAddSendToEventTx : goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $z0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: boolean equals(java.lang.Object)>(r1)
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $z0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: boolean equals(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : if $z0 != 0
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $z1 = r1 instanceof dynoptic.model.fifosys.channel.channelid.InvChannelId
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $z1 = r1 instanceof dynoptic.model.fifosys.channel.channelid.InvChannelId >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : if $z1 != 0
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : r2 = (dynoptic.model.fifosys.channel.channelid.InvChannelId) r1
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : r2 = (dynoptic.model.fifosys.channel.channelid.InvChannelId) r1 >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $r3 = r0.<dynoptic.model.fifosys.channel.channelid.InvChannelId: dynoptic.invariants.BinaryInvariant inv>
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $r3 = r0.<dynoptic.model.fifosys.channel.channelid.InvChannelId: dynoptic.invariants.BinaryInvariant inv> >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $r4 = r2.<dynoptic.model.fifosys.channel.channelid.InvChannelId: dynoptic.invariants.BinaryInvariant inv>
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $r4 = r2.<dynoptic.model.fifosys.channel.channelid.InvChannelId: dynoptic.invariants.BinaryInvariant inv> >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $z2 = virtualinvoke $r3.<dynoptic.invariants.BinaryInvariant: boolean equals(java.lang.Object)>($r4)
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : $z2 = virtualinvoke $r3.<dynoptic.invariants.BinaryInvariant: boolean equals(java.lang.Object)>($r4) >>>>>>>> dynoptic.invariants.BinaryInvariant.equals : if r1 != null
dynoptic.invariants.BinaryInvariant.equals : if r1 != null >>>>>>>> dynoptic.invariants.BinaryInvariant.equals : if r0 != r1
dynoptic.invariants.BinaryInvariant.equals : if r0 != r1 >>>>>>>> dynoptic.invariants.BinaryInvariant.equals : return 1
dynoptic.invariants.BinaryInvariant.equals : return 1 >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : if $z2 != 0
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : return 1
dynoptic.model.fifosys.channel.channelid.InvChannelId.equals : return 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.addSendToEventTx : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r29 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r29 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke $r29.<dynoptic.model.alphabet.FSMAlphabet: boolean add(synoptic.model.event.IDistEventType)>(r7)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke $r29.<dynoptic.model.alphabet.FSMAlphabet: boolean add(synoptic.model.event.IDistEventType)>(r7) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.add : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.add : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.add : $z0 = interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1)
dynoptic.model.alphabet.FSMAlphabet.add : $z0 = interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.add : return $z0
dynoptic.model.alphabet.FSMAlphabet.add : return $z0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r30 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r30 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke $r30.<dynoptic.model.alphabet.FSMAlphabet: boolean add(synoptic.model.event.IDistEventType)>(r8)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke $r30.<dynoptic.model.alphabet.FSMAlphabet: boolean add(synoptic.model.event.IDistEventType)>(r8) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : interfaceinvoke r5.<java.util.Set: void clear()>()
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : interfaceinvoke r5.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r31 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r31 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $i7 = virtualinvoke r3.<synoptic.model.event.DistEventType: int getPid()>()
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $i7 = virtualinvoke r3.<synoptic.model.event.DistEventType: int getPid()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r32 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>($i7)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r32 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>($i7) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r9 = (dynoptic.model.fifosys.cfsm.fsm.FSM) $r32
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r9 = (dynoptic.model.fifosys.cfsm.fsm.FSM) $r32 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r10 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SynthSendEvent(synoptic.model.event.DistEventType,synoptic.model.channelid.ChannelId,boolean)>(r3, r4, 1)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r10 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SynthSendEvent(synoptic.model.event.DistEventType,synoptic.model.channelid.ChannelId,boolean)>(r3, r4, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r11 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SynthSendEvent(synoptic.model.event.DistEventType,synoptic.model.channelid.ChannelId,boolean)>(r3, r4, 0)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : r11 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SynthSendEvent(synoptic.model.event.DistEventType,synoptic.model.channelid.ChannelId,boolean)>(r3, r4, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void addSendToEventTx(dynoptic.model.fifosys.cfsm.fsm.FSM,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,java.util.Set)>(r9, r3, r10, r11, r5)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: void addSendToEventTx(dynoptic.model.fifosys.cfsm.fsm.FSM,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,synoptic.model.event.DistEventType,java.util.Set)>(r9, r3, r10, r11, r5) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r33 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r33 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke $r33.<dynoptic.model.alphabet.FSMAlphabet: boolean add(synoptic.model.event.IDistEventType)>(r10)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke $r33.<dynoptic.model.alphabet.FSMAlphabet: boolean add(synoptic.model.event.IDistEventType)>(r10) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r34 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : $r34 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke $r34.<dynoptic.model.alphabet.FSMAlphabet: boolean add(synoptic.model.event.IDistEventType)>(r11)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke $r34.<dynoptic.model.alphabet.FSMAlphabet: boolean add(synoptic.model.event.IDistEventType)>(r11) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: void setFirstSynthTracers(synoptic.model.event.DistEventType,synoptic.model.event.DistEventType)>(r7, r8)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: void setFirstSynthTracers(synoptic.model.event.DistEventType,synoptic.model.event.DistEventType)>(r7, r8) >>>>>>>> dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> = r1
dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> = r1 >>>>>>>> dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> = r2
dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> = r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: void setSecondSynthTracers(synoptic.model.event.DistEventType,synoptic.model.event.DistEventType)>(r10, r11)
dynoptic.model.fifosys.cfsm.CFSM.augmentWithBinInvTracing : virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: void setSecondSynthTracers(synoptic.model.event.DistEventType,synoptic.model.event.DistEventType)>(r10, r11) >>>>>>>> dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1> = r1
dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1> = r1 >>>>>>>> dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2> = r2
dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2> = r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : goto [?= return]
dynoptic.model.fifosys.cfsm.CFSM.augmentWithInvTracing : goto [?= return] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z0 != 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r1 = staticinvoke <dynoptic.util.Util: java.util.List newList()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r1 = staticinvoke <dynoptic.util.Util: java.util.List newList()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r6 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r6 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z2 == 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r3 = (dynoptic.invariants.BinaryInvariant) $r7
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r3 = (dynoptic.invariants.BinaryInvariant) $r7 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r8 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List getBadStates(dynoptic.invariants.BinaryInvariant)>(r3)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r8 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List getBadStates(dynoptic.invariants.BinaryInvariant)>(r3) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z2 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z2 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r2 = staticinvoke <dynoptic.util.Util: java.util.List newList()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r2 = staticinvoke <dynoptic.util.Util: java.util.List newList()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r3 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.Set getAcceptStates()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r3 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.Set getAcceptStates()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : if $z0 != 0
dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : $r2 = <dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.fifosys.cfsm.CFSM$IFSMToStateSetFn fnGetAcceptStates>
dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : $r2 = <dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.fifosys.cfsm.CFSM$IFSMToStateSetFn fnGetAcceptStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : $r3 = specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.Set deriveAllPermsOfStates(dynoptic.model.fifosys.cfsm.CFSM$IFSMToStateSetFn)>($r2)
dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : $r3 = specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.Set deriveAllPermsOfStates(dynoptic.model.fifosys.cfsm.CFSM$IFSMToStateSetFn)>($r2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $i0 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int numProcesses>
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $i0 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int numProcesses> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : if $i0 != 1
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : if $i0 != 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $z2 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $z2 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : if $z2 != 0
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms>
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r14 = (dynoptic.model.AbsFSM) $r13
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r14 = (dynoptic.model.AbsFSM) $r13 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r15 = interfaceinvoke r1.<dynoptic.model.fifosys.cfsm.CFSM$IFSMToStateSetFn: java.util.Set eval(dynoptic.model.AbsFSM)>($r14)
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r15 = interfaceinvoke r1.<dynoptic.model.fifosys.cfsm.CFSM$IFSMToStateSetFn: java.util.Set eval(dynoptic.model.AbsFSM)>($r14) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM$2.eval : $r2 = virtualinvoke r1.<dynoptic.model.AbsFSM: java.util.Set getAcceptStates()>()
dynoptic.model.fifosys.cfsm.CFSM$2.eval : $r2 = virtualinvoke r1.<dynoptic.model.AbsFSM: java.util.Set getAcceptStates()>() >>>>>>>> dynoptic.model.AbsFSM.getAcceptStates : $r1 = r0.<dynoptic.model.AbsFSM: java.util.Set acceptStates>
dynoptic.model.AbsFSM.getAcceptStates : $r1 = r0.<dynoptic.model.AbsFSM: java.util.Set acceptStates> >>>>>>>> dynoptic.model.AbsFSM.getAcceptStates : return $r1
dynoptic.model.AbsFSM.getAcceptStates : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM$2.eval : return $r2
dynoptic.model.fifosys.cfsm.CFSM$2.eval : return $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms>
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(1)
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r18 = (dynoptic.model.AbsFSM) $r17
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r18 = (dynoptic.model.AbsFSM) $r17 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r19 = interfaceinvoke r1.<dynoptic.model.fifosys.cfsm.CFSM$IFSMToStateSetFn: java.util.Set eval(dynoptic.model.AbsFSM)>($r18)
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r19 = interfaceinvoke r1.<dynoptic.model.fifosys.cfsm.CFSM$IFSMToStateSetFn: java.util.Set eval(dynoptic.model.AbsFSM)>($r18) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : r20 = staticinvoke <dynoptic.util.Util: java.util.List get2DPermutations(java.lang.Iterable,java.lang.Iterable)>($r15, $r19)
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : r20 = staticinvoke <dynoptic.util.Util: java.util.List get2DPermutations(java.lang.Iterable,java.lang.Iterable)>($r15, $r19) >>>>>>>> dynoptic.util.Util.get2DPermutations : r2 = staticinvoke <dynoptic.util.Util: java.util.List newList()>()
dynoptic.util.Util.get2DPermutations : r2 = staticinvoke <dynoptic.util.Util: java.util.List newList()>() >>>>>>>> dynoptic.util.Util.get2DPermutations : r3 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>()
dynoptic.util.Util.get2DPermutations : r3 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> dynoptic.util.Util.get2DPermutations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.util.Util.get2DPermutations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.util.Util.get2DPermutations : if $z0 == 0
dynoptic.util.Util.get2DPermutations : if $z0 == 0 >>>>>>>> dynoptic.util.Util.get2DPermutations : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
dynoptic.util.Util.get2DPermutations : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.util.Util.get2DPermutations : r5 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>()
dynoptic.util.Util.get2DPermutations : r5 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> dynoptic.util.Util.get2DPermutations : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
dynoptic.util.Util.get2DPermutations : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.util.Util.get2DPermutations : if $z1 == 0
dynoptic.util.Util.get2DPermutations : if $z1 == 0 >>>>>>>> dynoptic.util.Util.get2DPermutations : r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
dynoptic.util.Util.get2DPermutations : r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.util.Util.get2DPermutations : r7 = staticinvoke <dynoptic.util.Util: java.util.List newList()>()
dynoptic.util.Util.get2DPermutations : r7 = staticinvoke <dynoptic.util.Util: java.util.List newList()>() >>>>>>>> dynoptic.util.Util.get2DPermutations : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4)
dynoptic.util.Util.get2DPermutations : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> dynoptic.util.Util.get2DPermutations : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r6)
dynoptic.util.Util.get2DPermutations : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> dynoptic.util.Util.get2DPermutations : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r7)
dynoptic.util.Util.get2DPermutations : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> dynoptic.util.Util.get2DPermutations : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
dynoptic.util.Util.get2DPermutations : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.util.Util.get2DPermutations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
dynoptic.util.Util.get2DPermutations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.util.Util.get2DPermutations : return r2
dynoptic.util.Util.get2DPermutations : return r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : i2 = 2
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : i2 = 2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int numProcesses>
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int numProcesses> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : if i2 == $i3
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : if i2 == $i3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r25 = staticinvoke <dynoptic.model.fifosys.cfsm.CFSMState: java.util.Set CFSMStatesFromFSMListLists(java.util.List)>(r20)
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : $r25 = staticinvoke <dynoptic.model.fifosys.cfsm.CFSMState: java.util.Set CFSMStatesFromFSMListLists(java.util.List)>(r20) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : if $z0 == 0
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : r3 = (java.util.List) $r5
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : r3 = (java.util.List) $r5 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : $r4 = new dynoptic.model.fifosys.cfsm.CFSMState
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : $r4 = new dynoptic.model.fifosys.cfsm.CFSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : specialinvoke $r4.<dynoptic.model.fifosys.cfsm.CFSMState: void <init>(java.util.List)>(r3)
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : specialinvoke $r4.<dynoptic.model.fifosys.cfsm.CFSMState: void <init>(java.util.List)>(r3) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4)
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : return r1
dynoptic.model.fifosys.cfsm.CFSMState.CFSMStatesFromFSMListLists : return r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : return $r25
dynoptic.model.fifosys.cfsm.CFSM.deriveAllPermsOfStates : return $r25 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : return $r3
dynoptic.model.fifosys.cfsm.CFSM.getAcceptStates : return $r3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z3 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z3 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z3 == 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r14 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r14 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i2 = interfaceinvoke $r14.<java.util.List: int size()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i2 = interfaceinvoke $r14.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r4 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>($i2)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r4 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>($i2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i0 = 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i0 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i0 >= $i3
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i0 >= $i3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("_")
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>("_") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i0 = i0 + 1
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i0 = i0 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $i3 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i4 = interfaceinvoke $r15.<java.util.List: int indexOf(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i4 = interfaceinvoke $r15.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i5 = interfaceinvoke $r16.<java.util.List: int size()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i5 = interfaceinvoke $r16.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 >= $i5
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 >= $i5 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i6 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i6 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int firstSyntheticChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i7 = $i6 + i4
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i7 = $i6 + i4 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i7
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i7 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r17 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: java.lang.String scmBadStateQRe()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r17 = virtualinvoke r1.<dynoptic.invariants.BinaryInvariant: java.lang.String scmBadStateQRe()>() >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : virtualinvoke r0.<dynoptic.invariants.AlwaysPrecedes: void checkInitialized()>()
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : virtualinvoke r0.<dynoptic.invariants.AlwaysPrecedes: void checkInitialized()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : if $z0 != 0
dynoptic.invariants.BinaryInvariant.checkInitialized : if $z0 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : if $z1 != 0
dynoptic.invariants.BinaryInvariant.checkInitialized : if $z1 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : $z2 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z2 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : if $z2 != 0
dynoptic.invariants.BinaryInvariant.checkInitialized : if $z2 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : $z3 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z3 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : if $z3 != 0
dynoptic.invariants.BinaryInvariant.checkInitialized : if $z3 != 0 >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r1 = new java.lang.StringBuilder
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r1 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r2 = virtualinvoke r0.<dynoptic.invariants.AlwaysPrecedes: java.lang.String secondSynthEventsQRe()>()
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r2 = virtualinvoke r0.<dynoptic.invariants.AlwaysPrecedes: java.lang.String secondSynthEventsQRe()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : if $z0 != 0
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : if $z0 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : if $z1 != 0
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : if $z1 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r5 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r5 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1>
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1> >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ")
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ") >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2>
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2> >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : return $r15
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : return $r15 >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^+ . ")
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^+ . ") >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r5 = virtualinvoke r0.<dynoptic.invariants.AlwaysPrecedes: java.lang.String someSynthEventsQRe()>()
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r5 = virtualinvoke r0.<dynoptic.invariants.AlwaysPrecedes: java.lang.String someSynthEventsQRe()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : virtualinvoke r0.<dynoptic.invariants.BinaryInvariant: void checkInitialized()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : virtualinvoke r0.<dynoptic.invariants.BinaryInvariant: void checkInitialized()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r1 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r1 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1>
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r4 = virtualinvoke $r3.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r4 = virtualinvoke $r3.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2>
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1>
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1> >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r15 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2>
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r15 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2> >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r16 = virtualinvoke $r15.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r16 = virtualinvoke $r15.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")^*")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")^*") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : return $r19
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : return $r19 >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : return $r7
dynoptic.invariants.AlwaysPrecedes.scmBadStateQRe : return $r7 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r17)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r17) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= i1 = i1 + 1]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= i1 = i1 + 1] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = i1 + 1
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : i1 = i1 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r30 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r30 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z13 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z13 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z13 == 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z13 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r31 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r31 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r32 = (dynoptic.model.fifosys.cfsm.CFSMState) $r31
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r32 = (dynoptic.model.fifosys.cfsm.CFSMState) $r31 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r33 = new dynoptic.model.fifosys.cfsm.BadState
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r33 = new dynoptic.model.fifosys.cfsm.BadState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r33.<dynoptic.model.fifosys.cfsm.BadState: void <init>(dynoptic.model.fifosys.cfsm.CFSMState,java.util.List)>(r32, r4)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r33.<dynoptic.model.fifosys.cfsm.BadState: void <init>(dynoptic.model.fifosys.cfsm.CFSMState,java.util.List)>(r32, r4) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r33)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r33) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z13 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z13 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : return r2
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : return r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r8)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r8) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : return r1
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : return r1 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = "("
dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = "(" >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : i0 = 0
dynoptic.model.fifosys.cfsm.BadState.toScmString : i0 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r3 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState>
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r3 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState> >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $i1 = virtualinvoke $r3.<dynoptic.model.fifosys.cfsm.CFSMState: int getNumProcesses()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $i1 = virtualinvoke $r3.<dynoptic.model.fifosys.cfsm.CFSMState: int getNumProcesses()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : $i0 = r0.<dynoptic.model.fifosys.AbsMultiFSMState: int numProcesses>
dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : $i0 = r0.<dynoptic.model.fifosys.AbsMultiFSMState: int numProcesses> >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : return $i0
dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : return $i0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : if i0 >= $i1
dynoptic.model.fifosys.cfsm.BadState.toScmString : if i0 >= $i1 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r4 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r4 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("automaton p")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("automaton p") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": in ")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": in ") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r9 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState>
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r9 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState> >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r10 = virtualinvoke $r9.<dynoptic.model.fifosys.cfsm.CFSMState: dynoptic.model.fifosys.cfsm.fsm.FSMState getFSMState(int)>(i0)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r10 = virtualinvoke $r9.<dynoptic.model.fifosys.cfsm.CFSMState: dynoptic.model.fifosys.cfsm.fsm.FSMState getFSMState(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r3 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r2
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r3 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : return $r3
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : return $r3 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $i2 = virtualinvoke $r10.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $i2 = virtualinvoke $r10.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : return $i0
dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : return $i0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": true\n")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": true\n") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : i0 = i0 + 1
dynoptic.model.fifosys.cfsm.BadState.toScmString : i0 = i0 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : goto [?= $r3 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState>]
dynoptic.model.fifosys.cfsm.BadState.toScmString : goto [?= $r3 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState>] >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r13 = r0.<dynoptic.model.fifosys.cfsm.BadState: java.util.List qReList>
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r13 = r0.<dynoptic.model.fifosys.cfsm.BadState: java.util.List qReList> >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $z0 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $z0 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z0 != 0
dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r14 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r14 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with ")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with ") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r18 = r0.<dynoptic.model.fifosys.cfsm.BadState: java.util.List qReList>
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r18 = r0.<dynoptic.model.fifosys.cfsm.BadState: java.util.List qReList> >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z1 == 0
dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r2 = (java.lang.String) $r20
dynoptic.model.fifosys.cfsm.BadState.toScmString : r2 = (java.lang.String) $r20 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r21 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r21 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z2 == 0
dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r24 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r24 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . # . ")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . # . ") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.BadState.toScmString : goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r27 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r27 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r30 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r30 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : return $r33
dynoptic.model.fifosys.cfsm.BadState.toScmString : return $r33 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : if $z0 != 0
dynoptic.model.fifosys.cfsm.CFSM.toScmString : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r6 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r6 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scm ")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scm ") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\n\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":\n\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i2 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int localEventsChIndex>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i2 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int localEventsChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : if $i2 != 2147483647
dynoptic.model.fifosys.cfsm.CFSM.toScmString : if $i2 != 2147483647 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r10 = new dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r10 = new dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i3 = interfaceinvoke $r11.<java.util.List: int size()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i3 = interfaceinvoke $r11.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r10.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: void <init>(int)>($i3)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r10.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: void <init>(int)>($i3) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r3 = $r10
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r3 = $r10 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i4 = virtualinvoke r3.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: int getScmId()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i4 = virtualinvoke r3.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r0.<dynoptic.model.fifosys.cfsm.CFSM: int localEventsChIndex> = $i4
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r0.<dynoptic.model.fifosys.cfsm.CFSM: int localEventsChIndex> = $i4 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r3)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : goto [?= $r15 = new java.lang.StringBuilder]
dynoptic.model.fifosys.cfsm.CFSM.toScmString : goto [?= $r15 = new java.lang.StringBuilder] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r15 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r15 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nb_channels = ")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nb_channels = ") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i6 = interfaceinvoke $r18.<java.util.List: int size()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i6 = interfaceinvoke $r18.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r22 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r22 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/*\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/*\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : i0 = 0
dynoptic.model.fifosys.cfsm.CFSM.toScmString : i0 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r26 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r26 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i7 = interfaceinvoke $r26.<java.util.List: int size()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i7 = interfaceinvoke $r26.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : if i0 >= $i7
dynoptic.model.fifosys.cfsm.CFSM.toScmString : if i0 >= $i7 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r27 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r27 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("channel ")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("channel ") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r30 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r30 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r33 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r33 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r34 = interfaceinvoke $r33.<java.util.List: java.lang.Object get(int)>(i0)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r34 = interfaceinvoke $r33.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r35 = (synoptic.model.channelid.ChannelId) $r34
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r35 = (synoptic.model.channelid.ChannelId) $r34 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r36 = virtualinvoke $r35.<synoptic.model.channelid.ChannelId: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r36 = virtualinvoke $r35.<synoptic.model.channelid.ChannelId: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r25 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r25 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : i0 = i0 + 1
dynoptic.model.fifosys.cfsm.CFSM.toScmString : i0 = i0 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : goto [?= $r26 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>]
dynoptic.model.fifosys.cfsm.CFSM.toScmString : goto [?= $r26 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List channelIds>] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r39 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r39 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*/\n\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*/\n\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r43 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r43 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameters :\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameters :\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r47 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r47 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r49 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r49 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r50 = virtualinvoke $r49.<dynoptic.model.alphabet.FSMAlphabet: java.lang.String toScmParametersString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r50 = virtualinvoke $r49.<dynoptic.model.alphabet.FSMAlphabet: java.lang.String toScmParametersString()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r1 = ""
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r1 = "" >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r4 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getUniqueEventStrings(synoptic.model.event.IDistEventType)>(null)
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r4 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getUniqueEventStrings(synoptic.model.event.IDistEventType)>(null) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r5 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r5 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if $z0 == 0
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if $z0 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r4 = (synoptic.model.event.IDistEventType) $r6
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r4 = (synoptic.model.event.IDistEventType) $r6 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if r1 == null
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if r1 == null >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r7 = interfaceinvoke r4.<synoptic.model.event.IDistEventType: java.lang.String getScmEventString()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r7 = interfaceinvoke r4.<synoptic.model.event.IDistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7)
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : return r2
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : return r2 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : if $z0 == 0
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : if $z0 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r3 = (java.lang.String) $r5
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r3 = (java.lang.String) $r5 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r6 = new java.lang.StringBuilder
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r6 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("real ")
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("real ") >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n")
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n") >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : return r1
dynoptic.model.alphabet.FSMAlphabet.toScmParametersString : return r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r53 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r53 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : i8 = 0
dynoptic.model.fifosys.cfsm.CFSM.toScmString : i8 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int numProcesses>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $i9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int numProcesses> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : if i8 >= $i9
dynoptic.model.fifosys.cfsm.CFSM.toScmString : if i8 >= $i9 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r57 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r57 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r58 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(i8)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r58 = interfaceinvoke $r57.<java.util.List: java.lang.Object get(int)>(i8) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r4 = (dynoptic.model.fifosys.cfsm.fsm.FSM) $r58
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r4 = (dynoptic.model.fifosys.cfsm.fsm.FSM) $r58 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r59 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r59 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r59.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r59.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("automaton p")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("automaton p") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r62 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i8)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r62 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i8) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r66 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r66 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r66.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r66.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r68 = virtualinvoke r4.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.lang.String toScmString(dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId)>(r3)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r68 = virtualinvoke r4.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.lang.String toScmString(dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId)>(r3) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r2 = null
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r2 = null >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set initStates>
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set initStates> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z2 == 0
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r4 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r8
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r4 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r8 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if r2 != null
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if r2 != null >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r9 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r9 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initial : ")
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initial : ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $i0 = virtualinvoke r4.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $i0 = virtualinvoke r4.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= (branch)]
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= (branch)] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r16 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r16 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r20 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states>
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r20 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z3 == 0
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r23 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r22
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r23 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r22 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r24 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r24 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r26 = virtualinvoke r23.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.lang.String toScmString(dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId)>(r1)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r26 = virtualinvoke r23.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.lang.String toScmString(dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r2 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r2 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state ")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :\n")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :\n") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r12 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r12 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z0 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r5 = (synoptic.model.event.DistEventType) $r14
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r5 = (synoptic.model.event.DistEventType) $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z1 = virtualinvoke r5.<synoptic.model.event.DistEventType: boolean isCommEvent()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z1 = virtualinvoke r5.<synoptic.model.event.DistEventType: boolean isCommEvent()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z1 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r15 = virtualinvoke r5.<synoptic.model.event.DistEventType: synoptic.model.channelid.ChannelId getChannelId()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r15 = virtualinvoke r5.<synoptic.model.event.DistEventType: synoptic.model.channelid.ChannelId getChannelId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i1 = virtualinvoke $r15.<synoptic.model.channelid.ChannelId: int getScmId()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i1 = virtualinvoke $r15.<synoptic.model.channelid.ChannelId: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r6 = virtualinvoke r5.<synoptic.model.event.DistEventType: java.lang.String toString(java.lang.String,char)>($r16, 32)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r6 = virtualinvoke r5.<synoptic.model.event.DistEventType: java.lang.String toString(java.lang.String,char)>($r16, 32) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $r21 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>]
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $r21 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r21 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r21 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r23 = (java.util.Set) $r22
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r23 = (java.util.Set) $r22 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z2 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r8 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r25
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r8 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r25 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r26 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r26 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to ")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i3 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i3 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : when true , ")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : when true , ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r3 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r3 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : return r3
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : return r3 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r29 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r29 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n")
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r19 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r19 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r7 = virtualinvoke r5.<synoptic.model.event.DistEventType: java.lang.String getScmEventFullString()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r7 = virtualinvoke r5.<synoptic.model.event.DistEventType: java.lang.String getScmEventFullString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : virtualinvoke r1.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: void addLocalEventString(synoptic.model.event.DistEventType,java.lang.String)>(r5, r7)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : virtualinvoke r1.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: void addLocalEventString(synoptic.model.event.DistEventType,java.lang.String)>(r5, r7) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z0 = <dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: boolean $assertionsDisabled>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z0 = <dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z0 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r4 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r4 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z2 == 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r9 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r9 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r17 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r17 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i2 = virtualinvoke r1.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: int getScmId()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i2 = virtualinvoke r1.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ! ")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ! ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r6 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r6 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : return r19
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : return r19 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r71 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r71 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r56 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r56 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : i8 = i8 + 1
dynoptic.model.fifosys.cfsm.CFSM.toScmString : i8 = i8 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : goto [?= $i9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int numProcesses>]
dynoptic.model.fifosys.cfsm.CFSM.toScmString : goto [?= $i9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int numProcesses>] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r74 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs>
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r74 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List invs> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $z2 = interfaceinvoke $r74.<java.util.List: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $z2 = interfaceinvoke $r74.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : if $z2 != 0
dynoptic.model.fifosys.cfsm.CFSM.toScmString : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r75 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r75 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r75.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nbad_states:\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nbad_states:\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r56 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r56 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r78 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List getBadStates()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r78 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List getBadStates()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i8 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int localEventsChIndex>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i8 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int localEventsChIndex> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i8
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if i1 != $i8 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r5 = virtualinvoke $r18.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getLocalEventScmStrings()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r5 = virtualinvoke $r18.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getLocalEventScmStrings()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $r4 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $r4 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : if $z0 == 0
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : if $z0 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : r3 = (synoptic.model.event.IDistEventType) $r5
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : r3 = (synoptic.model.event.IDistEventType) $r5 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $z1 = interfaceinvoke r3.<synoptic.model.event.IDistEventType: boolean isLocalEvent()>()
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $z1 = interfaceinvoke r3.<synoptic.model.event.IDistEventType: boolean isLocalEvent()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : if $z1 == 0
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : if $z1 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $r6 = interfaceinvoke r3.<synoptic.model.event.IDistEventType: java.lang.String getScmEventFullString()>()
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : $r6 = interfaceinvoke r3.<synoptic.model.event.IDistEventType: java.lang.String getScmEventFullString()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r6)
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r6) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : return r1
dynoptic.model.alphabet.FSMAlphabet.getLocalEventScmStrings : return r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z8 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z8 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z8 != 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z8 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r6 = "("
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r6 = "(" >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r7 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r7 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z9 == 0
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : if $z9 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r8 = (java.lang.String) $r19
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r8 = (java.lang.String) $r19 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r20 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r20 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ")
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i9 = virtualinvoke r6.<java.lang.String: int length()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i9 = virtualinvoke r6.<java.lang.String: int length()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i10 = $i9 - 3
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $i10 = $i9 - 3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r24 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i10)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r24 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i10) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r25 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r25 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")^*")
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")^*") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r28)
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r28) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= (branch)]
dynoptic.model.fifosys.cfsm.CFSM.getBadStates : goto [?= (branch)] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r79 = interfaceinvoke $r78.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r79 = interfaceinvoke $r78.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $z3 = interfaceinvoke r79.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $z3 = interfaceinvoke r79.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : if $z3 == 0
dynoptic.model.fifosys.cfsm.CFSM.toScmString : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r80 = interfaceinvoke r79.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r80 = interfaceinvoke r79.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r81 = (dynoptic.model.fifosys.cfsm.BadState) $r80
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r81 = (dynoptic.model.fifosys.cfsm.BadState) $r80 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r82 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r82 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r82.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : specialinvoke $r82.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r84 = virtualinvoke r81.<dynoptic.model.fifosys.cfsm.BadState: java.lang.String toScmString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r84 = virtualinvoke r81.<dynoptic.model.fifosys.cfsm.BadState: java.lang.String toScmString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84)
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
dynoptic.model.fifosys.cfsm.CFSM.toScmString : $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : r56 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.CFSM.toScmString : r56 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : goto [?= $z3 = interfaceinvoke r79.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.CFSM.toScmString : goto [?= $z3 = interfaceinvoke r79.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.toScmString : return r56
