dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : if $r1 == null
dynoptic.main.DynopticMain.setUpLogging : if $r1 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = "("
dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = "(" >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : i0 = 0
dynoptic.model.fifosys.cfsm.BadState.toScmString : i0 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r3 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState>
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r3 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState> >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $i1 = virtualinvoke $r3.<dynoptic.model.fifosys.cfsm.CFSMState: int getNumProcesses()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $i1 = virtualinvoke $r3.<dynoptic.model.fifosys.cfsm.CFSMState: int getNumProcesses()>() >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : $i0 = r0.<dynoptic.model.fifosys.AbsMultiFSMState: int numProcesses>
dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : $i0 = r0.<dynoptic.model.fifosys.AbsMultiFSMState: int numProcesses> >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : return $i0
dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : return $i0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : if i0 >= $i1
dynoptic.model.fifosys.cfsm.BadState.toScmString : if i0 >= $i1 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r4 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r4 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("automaton p")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("automaton p") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": in ")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": in ") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r9 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState>
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r9 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState> >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r10 = virtualinvoke $r9.<dynoptic.model.fifosys.cfsm.CFSMState: dynoptic.model.fifosys.cfsm.fsm.FSMState getFSMState(int)>(i0)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r10 = virtualinvoke $r9.<dynoptic.model.fifosys.cfsm.CFSMState: dynoptic.model.fifosys.cfsm.fsm.FSMState getFSMState(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r3 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r2
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r3 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : return $r3
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : return $r3 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $i2 = virtualinvoke $r10.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $i2 = virtualinvoke $r10.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : return $i0
dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : return $i0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": true\n")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": true\n") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : i0 = i0 + 1
dynoptic.model.fifosys.cfsm.BadState.toScmString : i0 = i0 + 1 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : goto [?= $r3 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState>]
dynoptic.model.fifosys.cfsm.BadState.toScmString : goto [?= $r3 = r0.<dynoptic.model.fifosys.cfsm.BadState: dynoptic.model.fifosys.cfsm.CFSMState fsmState>] >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r13 = r0.<dynoptic.model.fifosys.cfsm.BadState: java.util.List qReList>
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r13 = r0.<dynoptic.model.fifosys.cfsm.BadState: java.util.List qReList> >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $z0 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $z0 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z0 != 0
dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r14 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r14 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with ")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with ") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r18 = r0.<dynoptic.model.fifosys.cfsm.BadState: java.util.List qReList>
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r18 = r0.<dynoptic.model.fifosys.cfsm.BadState: java.util.List qReList> >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z1 == 0
dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r2 = (java.lang.String) $r20
dynoptic.model.fifosys.cfsm.BadState.toScmString : r2 = (java.lang.String) $r20 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r21 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r21 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z2 == 0
dynoptic.model.fifosys.cfsm.BadState.toScmString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r24 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r24 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . # . ")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . # . ") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r17 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.BadState.toScmString : goto [?= $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r27 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r27 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : r1 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r30 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r30 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.BadState.toScmString : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toScmString : return $r33
dynoptic.model.fifosys.cfsm.BadState.toScmString : return $r33 >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toString : $r1 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.BadState: java.lang.String toScmString()>()
dynoptic.model.fifosys.cfsm.BadState.toString : $r1 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.BadState: java.lang.String toScmString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.BadState.toString : return $r1
