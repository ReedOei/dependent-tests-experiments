dynoptic.invariants.EventuallyHappens.newChecker : $r1 = virtualinvoke r0.<dynoptic.invariants.EventuallyHappens: dynoptic.invariants.checkers.EventuallyChecker newChecker()>() >>>>>>>> dynoptic.invariants.EventuallyHappens.newChecker : $r1 = new dynoptic.invariants.checkers.EventuallyChecker
dynoptic.invariants.EventuallyHappens.newChecker : $r1 = new dynoptic.invariants.checkers.EventuallyChecker >>>>>>>> dynoptic.invariants.EventuallyHappens.newChecker : specialinvoke $r1.<dynoptic.invariants.checkers.EventuallyChecker: void <init>(dynoptic.invariants.BinaryInvariant)>(r0)
dynoptic.invariants.EventuallyHappens.newChecker : specialinvoke $r1.<dynoptic.invariants.checkers.EventuallyChecker: void <init>(dynoptic.invariants.BinaryInvariant)>(r0) >>>>>>>> dynoptic.invariants.EventuallyHappens.newChecker : return $r1
dynoptic.invariants.EventuallyHappens.newChecker : return $r1 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.isFail : $r2 = r0.<dynoptic.invariants.checkers.EventuallyChecker: java.lang.Object s>
dynoptic.invariants.checkers.EventuallyChecker.isFail : $r2 = r0.<dynoptic.invariants.checkers.EventuallyChecker: java.lang.Object s> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.isFail : $r1 = <dynoptic.invariants.checkers.EventuallyState: dynoptic.invariants.checkers.EventuallyState INITIAL>
dynoptic.invariants.checkers.EventuallyChecker.isFail : $r1 = <dynoptic.invariants.checkers.EventuallyState: dynoptic.invariants.checkers.EventuallyState INITIAL> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.isFail : if $r2 != $r1
dynoptic.invariants.checkers.EventuallyChecker.isFail : if $r2 != $r1 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.isFail : $z0 = 1
dynoptic.invariants.checkers.EventuallyChecker.isFail : $z0 = 1 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.isFail : goto [?= return $z0]
dynoptic.invariants.checkers.EventuallyChecker.isFail : goto [?= return $z0] >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.isFail : return $z0
dynoptic.invariants.checkers.EventuallyChecker.isFail : return $z0 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $r3 = r0.<dynoptic.invariants.checkers.EventuallyChecker: java.lang.Object s>
dynoptic.invariants.checkers.EventuallyChecker.transition : $r3 = r0.<dynoptic.invariants.checkers.EventuallyChecker: java.lang.Object s> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $r2 = <dynoptic.invariants.checkers.EventuallyState: dynoptic.invariants.checkers.EventuallyState SAW_X>
dynoptic.invariants.checkers.EventuallyChecker.transition : $r2 = <dynoptic.invariants.checkers.EventuallyState: dynoptic.invariants.checkers.EventuallyState SAW_X> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : if $r3 != $r2
dynoptic.invariants.checkers.EventuallyChecker.transition : if $r3 != $r2 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $z0 = <dynoptic.invariants.checkers.EventuallyChecker: boolean $assertionsDisabled>
dynoptic.invariants.checkers.EventuallyChecker.transition : $z0 = <dynoptic.invariants.checkers.EventuallyChecker: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : if $z0 != 0
dynoptic.invariants.checkers.EventuallyChecker.transition : if $z0 != 0 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $r8 = r0.<dynoptic.invariants.checkers.EventuallyChecker: dynoptic.invariants.BinaryInvariant inv>
dynoptic.invariants.checkers.EventuallyChecker.transition : $r8 = r0.<dynoptic.invariants.checkers.EventuallyChecker: dynoptic.invariants.BinaryInvariant inv> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $r9 = virtualinvoke $r8.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType getSecond()>()
dynoptic.invariants.checkers.EventuallyChecker.transition : $r9 = virtualinvoke $r8.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType getSecond()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.getSecond : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second>
dynoptic.invariants.BinaryInvariant.getSecond : $r1 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second> >>>>>>>> dynoptic.invariants.BinaryInvariant.getSecond : return $r1
dynoptic.invariants.BinaryInvariant.getSecond : return $r1 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $z1 = virtualinvoke $r9.<synoptic.model.event.DistEventType: boolean equals(java.lang.Object)>(r1)
dynoptic.invariants.checkers.EventuallyChecker.transition : $z1 = virtualinvoke $r9.<synoptic.model.event.DistEventType: boolean equals(java.lang.Object)>(r1) >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : if $z1 == 0
dynoptic.invariants.checkers.EventuallyChecker.transition : if $z1 == 0 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $r12 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity TEMP_FAIL>
dynoptic.invariants.checkers.EventuallyChecker.transition : $r12 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity TEMP_FAIL> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : return $r12
dynoptic.invariants.checkers.EventuallyChecker.transition : return $r12 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $r10 = <dynoptic.invariants.checkers.EventuallyState: dynoptic.invariants.checkers.EventuallyState SAW_X>
dynoptic.invariants.checkers.EventuallyChecker.transition : $r10 = <dynoptic.invariants.checkers.EventuallyState: dynoptic.invariants.checkers.EventuallyState SAW_X> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : r0.<dynoptic.invariants.checkers.EventuallyChecker: java.lang.Object s> = $r10
dynoptic.invariants.checkers.EventuallyChecker.transition : r0.<dynoptic.invariants.checkers.EventuallyChecker: java.lang.Object s> = $r10 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $r11 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS>
dynoptic.invariants.checkers.EventuallyChecker.transition : $r11 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : return $r11
dynoptic.invariants.checkers.EventuallyChecker.transition : return $r11 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.isFail : $z0 = 0
dynoptic.invariants.checkers.EventuallyChecker.isFail : $z0 = 0 >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : $r4 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS>
dynoptic.invariants.checkers.EventuallyChecker.transition : $r4 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS> >>>>>>>> dynoptic.invariants.checkers.EventuallyChecker.transition : return $r4
