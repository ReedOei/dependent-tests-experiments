dynoptic.model.fifosys.cfsm.CFSMTests.setUp : specialinvoke r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: void setUp()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke r0.<dynoptic.DynopticTest: void setUp()>()
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke r0.<dynoptic.DynopticTest: void setUp()>() >>>>>>>> dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : if $r1 == null
dynoptic.main.DynopticMain.setUpLogging : if $r1 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 0, 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 0, 0) >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> = $r1
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> = $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r2 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r2 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 0, 1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 0, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> = $r2
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> = $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> = $r3
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> = $r3 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r5 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r5 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5]
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r6 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r6 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i3 = $i1 + $b2]
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i3 = $i1 + $b2] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if r1 != r0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if r1 != r0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : r2 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) r1
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : r2 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) r1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z1 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z1 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z2 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z2 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z1 == $z2
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z1 == $z2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : return 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : return 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r8 = new synoptic.model.channelid.ChannelId
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r8 = new synoptic.model.channelid.ChannelId >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r8.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(0, 1, 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r8.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(0, 1, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> = $r8
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> = $r8 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r9 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>(1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r9 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>(1) >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(i0)
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(i0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> = $r9
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> = $r9 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r10 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r10 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r12 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r12)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r12) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm> = $r13
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm> = $r13 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r14 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r14 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le> = $r14
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le> = $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r15 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r16 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Sm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r15.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r16, $r17)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r15.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r16, $r17) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z1 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z2 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransitionNoChecks(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransitionNoChecks(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : if $r5 != null
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : if $r5 != null >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r6 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r6 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : goto [?= interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)]
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : goto [?= interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r18 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p0Le> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r20 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r20 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r18.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r19, $r20)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r18.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r19, $r20) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r21 = new dynoptic.model.fifosys.cfsm.fsm.FSM
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r21 = new dynoptic.model.fifosys.cfsm.fsm.FSM >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r22 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r22 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r23 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r23 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p0Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r24 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r24 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r21.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(0, $r22, $r23, $r24, 2)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r21.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(0, $r22, $r23, $r24, 2) >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>()
dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>()
dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states>
dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0
dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.AbsFSM.recomputeAlphabet : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r2 = (dynoptic.model.AbsFSMState) $r6
dynoptic.model.AbsFSM.recomputeAlphabet : r2 = (dynoptic.model.AbsFSMState) $r6 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r3 = virtualinvoke r2.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.AbsFSM.recomputeAlphabet : r3 = virtualinvoke r2.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r7 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.recomputeAlphabet : $r7 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r7.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>(r3)
dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r7.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>(r3) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.addAll : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.addAll : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.addAll : $z0 = interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1)
dynoptic.model.alphabet.FSMAlphabet.addAll : $z0 = interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.addAll : return $z0
dynoptic.model.alphabet.FSMAlphabet.addAll : return $z0 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.AbsFSM.recomputeAlphabet : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0> = $r21
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0> = $r21 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r25 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r25 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r25.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r25.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> = $r25
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> = $r25 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r26 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r26 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r26.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r26.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> = $r26
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> = $r26 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r27 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r27 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r27.<java.util.Set: void clear()>()
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r27.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r28 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r28 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r29 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r29 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r28.<java.util.Set: boolean add(java.lang.Object)>($r29)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r28.<java.util.Set: boolean add(java.lang.Object)>($r29) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r30 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r30 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r31 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r31 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>($r31)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>($r31) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r32 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r32 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r33 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType RecvEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r32)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r33 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType RecvEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r32) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm> = $r33
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm> = $r33 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r34 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("f", 1)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r34 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("f", 1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf> = $r34
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf> = $r34 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r35 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r35 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r36 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r36 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Rm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r37 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r37 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r35.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r36, $r37)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r35.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r36, $r37) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r38 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r38 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r39 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r39 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: synoptic.model.event.DistEventType p1Lf> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r40 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r40 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r38.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r39, $r40)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r38.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransition(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>($r39, $r40) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r41 = new dynoptic.model.fifosys.cfsm.fsm.FSM
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r41 = new dynoptic.model.fifosys.cfsm.fsm.FSM >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r42 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r42 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Init> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r43 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r43 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSMState p1Accept> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r44 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r44 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r41.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(1, $r42, $r43, $r44, 2)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r41.<dynoptic.model.fifosys.cfsm.fsm.FSM: void <init>(int,dynoptic.model.fifosys.cfsm.fsm.FSMState,dynoptic.model.fifosys.cfsm.fsm.FSMState,java.util.Set,int)>(1, $r42, $r43, $r44, 2) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1> = $r41
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1> = $r41 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r45 = new dynoptic.model.fifosys.cfsm.CFSM
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r45 = new dynoptic.model.fifosys.cfsm.CFSM >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r46 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r46 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: java.util.List channels> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r45.<dynoptic.model.fifosys.cfsm.CFSM: void <init>(int,java.util.List)>(2, $r46)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : specialinvoke $r45.<dynoptic.model.fifosys.cfsm.CFSM: void <init>(int,java.util.List)>(2, $r46) >>>>>>>> dynoptic.util.Util.newList : $r1 = new java.util.ArrayList
dynoptic.util.Util.newList : $r1 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0)
dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0) >>>>>>>> dynoptic.util.Util.newList : return $r1
dynoptic.util.Util.newList : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> = $r45
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> = $r45 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r47 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r47 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r48 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r48 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f0> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r47.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r48)
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r47.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r48) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z0 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z0 != 0
dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z1 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z1 = <dynoptic.model.fifosys.cfsm.CFSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z1 != 0
dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : i0 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: int getPid()>()
dynoptic.model.fifosys.cfsm.CFSM.addFSM : i0 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: int getPid()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.getPid : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSM.getPid : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.getPid : return $i0
dynoptic.model.fifosys.cfsm.fsm.FSM.getPid : return $i0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z2 = <dynoptic.main.DynopticMain: boolean assertsOn>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $z2 = <dynoptic.main.DynopticMain: boolean assertsOn> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z2 == 0
dynoptic.model.fifosys.cfsm.CFSM.addFSM : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r17 = r0.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List fsms> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : interfaceinvoke $r17.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1)
dynoptic.model.fifosys.cfsm.CFSM.addFSM : interfaceinvoke $r17.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r19 = r0.<dynoptic.model.fifosys.cfsm.CFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r20 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: dynoptic.model.alphabet.FSMAlphabet getAlphabet()>()
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $r20 = virtualinvoke r1.<dynoptic.model.fifosys.cfsm.fsm.FSM: dynoptic.model.alphabet.FSMAlphabet getAlphabet()>() >>>>>>>> dynoptic.model.AbsFSM.getAlphabet : $r1 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.getAlphabet : $r1 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.getAlphabet : return $r1
dynoptic.model.AbsFSM.getAlphabet : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : virtualinvoke $r19.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>($r20)
dynoptic.model.fifosys.cfsm.CFSM.addFSM : virtualinvoke $r19.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>($r20) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.iterator : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.iterator : $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : return $r2
dynoptic.model.alphabet.FSMAlphabet.iterator : return $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $i9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int unSpecifiedPids>
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $i9 = r0.<dynoptic.model.fifosys.cfsm.CFSM: int unSpecifiedPids> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : $i10 = $i9 - 1
dynoptic.model.fifosys.cfsm.CFSM.addFSM : $i10 = $i9 - 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSM.addFSM : r0.<dynoptic.model.fifosys.cfsm.CFSM: int unSpecifiedPids> = $i10
dynoptic.model.fifosys.cfsm.CFSM.addFSM : r0.<dynoptic.model.fifosys.cfsm.CFSM: int unSpecifiedPids> = $i10 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r49 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r49 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.CFSM cfsm> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r50 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1>
dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : $r50 = r0.<dynoptic.model.fifosys.cfsm.CFSMTesting: dynoptic.model.fifosys.cfsm.fsm.FSM f1> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMTesting.setUp : virtualinvoke $r49.<dynoptic.model.fifosys.cfsm.CFSM: void addFSM(dynoptic.model.fifosys.cfsm.fsm.FSM)>($r50)
