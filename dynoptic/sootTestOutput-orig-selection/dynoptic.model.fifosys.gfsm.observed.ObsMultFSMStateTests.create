dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : if $r1 == null
dynoptic.main.DynopticMain.setUpLogging : if $r1 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : $r1 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : $r1 = new dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : specialinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, r0, 0)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : specialinvoke $r1.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: void <init>(int,boolean,boolean,java.lang.String,boolean)>(i0, z0, z1, r0, 0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : return $r1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.namedObsFSMState : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r6 = new dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r6 = new dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : specialinvoke $r6.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: void <init>(java.util.List)>(r0)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : specialinvoke $r6.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: void <init>(java.util.List)>(r0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : r2 = $r6
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : r2 = $r6 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r7 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r7 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : b0 = 17
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : b0 = 17 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i1 = 31 * b0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i1 = 31 * b0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $s2 = 1237
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $s2 = 1237 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i3 = $i1 + $s2
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i3 = $i1 + $s2 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i4 = 31 * i3
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i4 = 31 * i3 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : if $z1 == 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $s5 = 1231
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $s5 = 1231 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : goto [?= i6 = $i4 + $s5]
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : goto [?= i6 = $i4 + $s5] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i6 = $i4 + $s5
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i6 = $i4 + $s5 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i7 = 31 * i6
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i7 = 31 * i6 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int pid>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int pid> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i9 = $i7 + $i8
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i9 = $i7 + $i8 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i10 = 31 * i9
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i10 = 31 * i9 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String name>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String name> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i11 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i11 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i12 = $i10 + $i11
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i12 = $i10 + $i11 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : return i12
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : return i12 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : return r2
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : return r2 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.equals : if r1 != null
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.equals : if r1 != null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.equals : return 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.equals : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : $r3 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : $r3 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : r2 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r4
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : r2 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r4 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : $z1 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : $z1 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : return $z0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isTerminal : return $z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : if $z1 != 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : return 1
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAccept : return 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : $r3 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r2
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : $r3 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r2 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : $z0 = virtualinvoke $r3.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : $z0 = virtualinvoke $r3.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : return $z0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isAcceptForPid : return $z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : $r3 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : $r3 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : r2 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r4
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : r2 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r4 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : $z1 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : $z1 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : return $z0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.isInitial : return $z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : if $z1 != 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : return 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitial : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : $r3 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r2
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : $r3 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r2 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : $z0 = virtualinvoke $r3.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : $z0 = virtualinvoke $r3.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : return $z0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.isInitForPid : return $z0 >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : $i0 = r0.<dynoptic.model.fifosys.AbsMultiFSMState: int numProcesses>
dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : $i0 = r0.<dynoptic.model.fifosys.AbsMultiFSMState: int numProcesses> >>>>>>>> dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : return $i0
dynoptic.model.fifosys.AbsMultiFSMState.getNumProcesses : return $i0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : r1 = ""
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : r1 = "" >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r4 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r4 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : r3 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r5
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : r3 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r5 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r6 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r6 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ")
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r9 = virtualinvoke r3.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r9 = virtualinvoke r3.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r1 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r1 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r2 = ""
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r2 = "" >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $z1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isAnon>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $z1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isAnon> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : if $z1 == 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r4 = ""
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r4 = "" >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r6 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String name>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r6 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String name> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $z2 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $z2 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : if $z2 == 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r8 = "_t"
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r8 = "_t" >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : goto [?= $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)]
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : goto [?= $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : return $r10
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.toString : return $r10 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r11 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r11 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FSMStates[")
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FSMStates[") >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r13 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r13 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]")
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : return $r16
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.toString : return $r16 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r3 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r3 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r5 = (dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState) $r4
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r5 = (dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState) $r4 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : return $r5
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : return $r5 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.equals : if r0 != r1
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.equals : if r0 != r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.equals : return 1
