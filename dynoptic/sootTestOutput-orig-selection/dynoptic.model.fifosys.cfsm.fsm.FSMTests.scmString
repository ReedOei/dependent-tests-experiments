dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0) >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init_1> = $r1
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init_1> = $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listInit_1> = $r2
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listInit_1> = $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r3 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listInit_1>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r3 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listInit_1> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init_1>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init_1> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : b0 = 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i1 = b0 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i3 = $i1 + $b2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i4 = i3 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5]
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i6 = $i4 + $b5] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i6 = $i4 + $b5 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i7 = i6 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i9 = $i7 + $i8 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i10 = i9 * 31 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $i11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : i12 = $i10 + $i11 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : return 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r5 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r5 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r5.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r5.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accepting_1> = $r5
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accepting_1> = $r5 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r6 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r6 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listAccepting_1> = $r6
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listAccepting_1> = $r6 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listAccepting_1>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set listAccepting_1> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accepting_1>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r8 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accepting_1> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r8)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r8) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 1
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b2 = 1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i3 = $i1 + $b2]
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : goto [?= i3 = $i1 + $b2] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.hashCode : $b5 = 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r9 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r9 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r9.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 0, 2, 2)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r9.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 0, 2, 2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState state_2> = $r9
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: dynoptic.model.fifosys.cfsm.fsm.FSMState state_2> = $r9 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r10 = new synoptic.model.channelid.ChannelId
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r10 = new synoptic.model.channelid.ChannelId >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r10.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(1, 2, 0)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : specialinvoke $r10.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(1, 2, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.channelid.ChannelId cid> = $r10
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.channelid.ChannelId cid> = $r10 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r11 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r12 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r11)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r12 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r11) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.event.DistEventType e_pid1> = $r12
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.event.DistEventType e_pid1> = $r12 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 1)
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r13 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.event.DistEventType e2_pid1> = $r13
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: synoptic.model.event.DistEventType e2_pid1> = $r13 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r14 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : $r14 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set states> = $r14
dynoptic.model.fifosys.cfsm.fsm.FSMTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMTests: java.util.Set states> = $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z1 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z1 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : $z2 = <dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z2 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransitionNoChecks(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransition : specialinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void addTransitionNoChecks(synoptic.model.event.DistEventType,dynoptic.model.fifosys.cfsm.fsm.FSMState)>(r1, r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : if $r5 != null
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : if $r5 != null >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : r3 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r6 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : $r6 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : goto [?= interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)]
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : goto [?= interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.addTransitionNoChecks : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if r1 != r0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if r1 != r0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : r2 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) r1
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : r2 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) r1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z1 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z1 = r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z2 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : $z2 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z1 == $z2
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : if $z1 == $z2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : return 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.equals : return 0 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.recomputeAlphabet : $r4 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>()
dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r4.<dynoptic.model.alphabet.FSMAlphabet: void clear()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>()
dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states>
dynoptic.model.AbsFSM.recomputeAlphabet : $r5 = r0.<dynoptic.model.AbsFSM: java.util.Set states> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSM.recomputeAlphabet : r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSM.recomputeAlphabet : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0
dynoptic.model.AbsFSM.recomputeAlphabet : if $z0 == 0 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.AbsFSM.recomputeAlphabet : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r2 = (dynoptic.model.AbsFSMState) $r6
dynoptic.model.AbsFSM.recomputeAlphabet : r2 = (dynoptic.model.AbsFSMState) $r6 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : r3 = virtualinvoke r2.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.AbsFSM.recomputeAlphabet : r3 = virtualinvoke r2.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2
dynoptic.model.fifosys.cfsm.fsm.FSMState.getTransitioningEvents : return $r2 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : $r7 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet>
dynoptic.model.AbsFSM.recomputeAlphabet : $r7 = r0.<dynoptic.model.AbsFSM: dynoptic.model.alphabet.FSMAlphabet alphabet> >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r7.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>(r3)
dynoptic.model.AbsFSM.recomputeAlphabet : virtualinvoke $r7.<dynoptic.model.alphabet.FSMAlphabet: boolean addAll(java.util.Collection)>(r3) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.addAll : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.addAll : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.addAll : $z0 = interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1)
dynoptic.model.alphabet.FSMAlphabet.addAll : $z0 = interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.addAll : return $z0
dynoptic.model.alphabet.FSMAlphabet.addAll : return $z0 >>>>>>>> dynoptic.model.AbsFSM.recomputeAlphabet : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.AbsFSM.recomputeAlphabet : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSM: boolean $assertionsDisabled>
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z0 = <dynoptic.model.fifosys.cfsm.fsm.FSM: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z0 != 0
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r2 = null
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r2 = null >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set initStates>
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r7 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set initStates> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z2 == 0
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r4 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r8
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r4 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r8 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if r2 != null
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if r2 != null >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r9 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r9 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initial : ")
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initial : ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $i0 = virtualinvoke r4.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $i0 = virtualinvoke r4.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : return $i0
dynoptic.model.fifosys.cfsm.fsm.FSMState.getScmId : return $i0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= (branch)]
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= (branch)] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r16 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r16 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r20 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states>
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r20 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSM: java.util.Set states> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z3 == 0
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r23 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r22
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r23 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r22 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r24 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r24 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r26 = virtualinvoke r23.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.lang.String toScmString(dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId)>(r1)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r26 = virtualinvoke r23.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.lang.String toScmString(dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r2 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r2 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state ")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :\n")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :\n") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r12 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r12 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z0 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r5 = (synoptic.model.event.DistEventType) $r14
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r5 = (synoptic.model.event.DistEventType) $r14 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z1 = virtualinvoke r5.<synoptic.model.event.DistEventType: boolean isCommEvent()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z1 = virtualinvoke r5.<synoptic.model.event.DistEventType: boolean isCommEvent()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z1 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r15 = virtualinvoke r5.<synoptic.model.event.DistEventType: synoptic.model.channelid.ChannelId getChannelId()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r15 = virtualinvoke r5.<synoptic.model.event.DistEventType: synoptic.model.channelid.ChannelId getChannelId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i1 = virtualinvoke $r15.<synoptic.model.channelid.ChannelId: int getScmId()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i1 = virtualinvoke $r15.<synoptic.model.channelid.ChannelId: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r6 = virtualinvoke r5.<synoptic.model.event.DistEventType: java.lang.String toString(java.lang.String,char)>($r16, 32)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r6 = virtualinvoke r5.<synoptic.model.event.DistEventType: java.lang.String toString(java.lang.String,char)>($r16, 32) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $r21 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>]
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $r21 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r21 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions>
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r21 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r23 = (java.util.Set) $r22
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r23 = (java.util.Set) $r22 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z2 == 0
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r8 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r25
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r8 = (dynoptic.model.fifosys.cfsm.fsm.FSMState) $r25 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r26 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r26 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to ")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i3 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i3 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : when true , ")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : when true , ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r3 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r3 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : return r3
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : return r3 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r29 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r29 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28)
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n")
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r19 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : r19 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : goto [?= $z3 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r7 = virtualinvoke r5.<synoptic.model.event.DistEventType: java.lang.String getScmEventFullString()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r7 = virtualinvoke r5.<synoptic.model.event.DistEventType: java.lang.String getScmEventFullString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : virtualinvoke r1.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: void addLocalEventString(synoptic.model.event.DistEventType,java.lang.String)>(r5, r7)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : virtualinvoke r1.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: void addLocalEventString(synoptic.model.event.DistEventType,java.lang.String)>(r5, r7) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z0 = <dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: boolean $assertionsDisabled>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z0 = <dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z0 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r4 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r4 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z2 == 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r9 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r9 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r17 = new java.lang.StringBuilder
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r17 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i2 = virtualinvoke r1.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: int getScmId()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $i2 = virtualinvoke r1.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: int getScmId()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ! ")
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ! ") >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r6 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toScmString : r6 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSM.toScmString : return r19
