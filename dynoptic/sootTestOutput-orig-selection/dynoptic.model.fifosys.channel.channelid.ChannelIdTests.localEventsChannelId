dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : if $r1 == null
dynoptic.main.DynopticMain.setUpLogging : if $r1 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : i0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: int hashCode()>()
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : i0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: int hashCode()>() >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : $i1 = 31 * i0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : $i1 = 31 * i0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : $r1 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : $r1 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : $i2 = interfaceinvoke $r1.<java.util.Map: int hashCode()>()
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : $i2 = interfaceinvoke $r1.<java.util.Map: int hashCode()>() >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : $i3 = $i1 + $i2
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : $i3 = $i1 + $i2 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : return $i3
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.hashCode : return $i3 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: boolean equals(java.lang.Object)>(r1)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: boolean equals(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z0 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : return 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : return 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z1 = r1 instanceof dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z1 = r1 instanceof dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z1 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : r2 = (dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId) r1
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : r2 = (dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId) r1 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $r3 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $r3 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $r4 = r2.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $r4 = r2.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z2 = interfaceinvoke $r3.<java.util.Map: boolean equals(java.lang.Object)>($r4)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z2 = interfaceinvoke $r3.<java.util.Map: boolean equals(java.lang.Object)>($r4) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z2 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : return 1
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : return 1 >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r1 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.toString : $r1 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.BinaryInvariant.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
dynoptic.invariants.BinaryInvariant.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first>
dynoptic.invariants.BinaryInvariant.toString : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType first> >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)
dynoptic.invariants.BinaryInvariant.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ")
dynoptic.invariants.BinaryInvariant.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r6 = r0.<dynoptic.invariants.BinaryInvariant: java.lang.String connectorStr>
dynoptic.invariants.BinaryInvariant.toString : $r6 = r0.<dynoptic.invariants.BinaryInvariant: java.lang.String connectorStr> >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
dynoptic.invariants.BinaryInvariant.toString : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (")
dynoptic.invariants.BinaryInvariant.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r9 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second>
dynoptic.invariants.BinaryInvariant.toString : $r9 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType second> >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
dynoptic.invariants.BinaryInvariant.toString : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9) >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
dynoptic.invariants.BinaryInvariant.toString : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.BinaryInvariant.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.toString : return $r12
