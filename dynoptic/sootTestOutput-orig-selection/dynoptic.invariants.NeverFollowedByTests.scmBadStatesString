dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : if $r1 == null
dynoptic.main.DynopticMain.setUpLogging : if $r1 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> = r1
dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> = r1 >>>>>>>> dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> = r2
dynoptic.invariants.BinaryInvariant.setFirstSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> = r2 >>>>>>>> dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1> = r1
dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1> = r1 >>>>>>>> dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2> = r2
dynoptic.invariants.BinaryInvariant.setSecondSynthTracers : r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2> = r2 >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: void checkInitialized()>()
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: void checkInitialized()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : if $z0 != 0
dynoptic.invariants.BinaryInvariant.checkInitialized : if $z0 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : if $z1 != 0
dynoptic.invariants.BinaryInvariant.checkInitialized : if $z1 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : $z2 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z2 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : if $z2 != 0
dynoptic.invariants.BinaryInvariant.checkInitialized : if $z2 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : $z3 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.checkInitialized : $z3 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.checkInitialized : if $z3 != 0
dynoptic.invariants.BinaryInvariant.checkInitialized : if $z3 != 0 >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r1 = new java.lang.StringBuilder
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r1 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r2 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String someSynthEventsQRe()>()
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r2 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String someSynthEventsQRe()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : virtualinvoke r0.<dynoptic.invariants.BinaryInvariant: void checkInitialized()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : virtualinvoke r0.<dynoptic.invariants.BinaryInvariant: void checkInitialized()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r1 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r1 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1>
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r3 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r4 = virtualinvoke $r3.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r4 = virtualinvoke $r3.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2>
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1>
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1> >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r15 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2>
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r15 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2> >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r16 = virtualinvoke $r15.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r16 = virtualinvoke $r15.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")^*")
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")^*") >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : return $r19
dynoptic.invariants.BinaryInvariant.someSynthEventsQRe : return $r19 >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ")
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ") >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r5 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String firstSynthEventsQRe()>()
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r5 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String firstSynthEventsQRe()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z0 != 0
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z0 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z1 != 0
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : if $z1 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r5 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r5 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth1> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ")
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ") >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2>
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType firstSynth2> >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : return $r15
dynoptic.invariants.BinaryInvariant.firstSynthEventsQRe : return $r15 >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ")
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ") >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r8 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String someSynthEventsQRe()>()
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r8 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String someSynthEventsQRe()>() >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ")
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ") >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r11 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String secondSynthEventsQRe()>()
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r11 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String secondSynthEventsQRe()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $z0 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : if $z0 != 0
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : if $z0 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled>
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $z1 = <dynoptic.invariants.BinaryInvariant: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : if $z1 != 0
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : if $z1 != 0 >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r5 = new java.lang.StringBuilder
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r5 = new java.lang.StringBuilder >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1>
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r7 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth1> >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r8 = virtualinvoke $r7.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ")
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ") >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2>
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r11 = r0.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType secondSynth2> >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>()
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r12 = virtualinvoke $r11.<synoptic.model.event.DistEventType: java.lang.String getScmEventString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : return $r15
dynoptic.invariants.BinaryInvariant.secondSynthEventsQRe : return $r15 >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ")
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" . ") >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r14 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String someSynthEventsQRe()>()
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r14 = virtualinvoke r0.<dynoptic.invariants.NeverFollowedBy: java.lang.String someSynthEventsQRe()>() >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.invariants.NeverFollowedBy.scmBadStateQRe : return $r16
