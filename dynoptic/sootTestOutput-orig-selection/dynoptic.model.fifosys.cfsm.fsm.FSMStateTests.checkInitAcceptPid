dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r1 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0)
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : specialinvoke $r1.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(0, 1, 1, 0) >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init> = $r1
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: dynoptic.model.fifosys.cfsm.fsm.FSMState init> = $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r2 = new dynoptic.model.fifosys.cfsm.fsm.FSMState
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r2 = new dynoptic.model.fifosys.cfsm.fsm.FSMState >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : specialinvoke $r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1)
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : specialinvoke $r2.<dynoptic.model.fifosys.cfsm.fsm.FSMState: void <init>(boolean,boolean,int,int)>(1, 0, 1, 1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accept> = $r2
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: dynoptic.model.fifosys.cfsm.fsm.FSMState accept> = $r2 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r3 = new synoptic.model.channelid.ChannelId
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r3 = new synoptic.model.channelid.ChannelId >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : specialinvoke $r3.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(1, 2, 0)
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : specialinvoke $r3.<synoptic.model.channelid.ChannelId: void <init>(int,int,int)>(1, 2, 0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.channelid.ChannelId cid> = $r3
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.channelid.ChannelId cid> = $r3 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.channelid.ChannelId cid>
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r4 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.channelid.ChannelId cid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r5 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r4)
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r5 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType SendEvent(java.lang.String,synoptic.model.channelid.ChannelId)>("m", $r4) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.event.DistEventType e_pid1> = $r5
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.event.DistEventType e_pid1> = $r5 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r6 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 1)
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r6 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 1) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.event.DistEventType e2_pid1> = $r6
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.event.DistEventType e2_pid1> = $r6 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r7 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 2)
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : $r7 = staticinvoke <synoptic.model.event.DistEventType: synoptic.model.event.DistEventType LocalEvent(java.lang.String,int)>("e", 2) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.event.DistEventType e3_pid2> = $r7
dynoptic.model.fifosys.cfsm.fsm.FSMStateTests.setUp : r0.<dynoptic.model.fifosys.cfsm.fsm.FSMStateTests: synoptic.model.event.DistEventType e3_pid2> = $r7 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.isInitial : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial>
dynoptic.model.fifosys.cfsm.fsm.FSMState.isInitial : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.isInitial : return $z0
dynoptic.model.fifosys.cfsm.fsm.FSMState.isInitial : return $z0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : return $z0
dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : return $z0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getPid : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid>
dynoptic.model.fifosys.cfsm.fsm.FSMState.getPid : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int pid> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.getPid : return $i0
dynoptic.model.fifosys.cfsm.fsm.FSMState.getPid : return $i0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toString : $r1 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.lang.String toShortIntString()>()
dynoptic.model.fifosys.cfsm.fsm.FSMState.toString : $r1 = virtualinvoke r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: java.lang.String toShortIntString()>() >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId>
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $i0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: int scmId> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : return $r1
dynoptic.model.fifosys.cfsm.fsm.FSMState.toShortIntString : return $r1 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.toString : return $r1
