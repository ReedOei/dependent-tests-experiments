dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.setUpLogging : $r1 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.setUpLogging : if $r1 == null
dynoptic.main.DynopticMain.setUpLogging : if $r1 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map prevStateAndEventMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : interfaceinvoke $r1.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.clearCache : <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int prevAnonId> = -1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.clearCache : interfaceinvoke $r0.<java.util.Map: void clear()>() >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z0 = <dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: boolean $assertionsDisabled>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z0 = <dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z0 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r4 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r4 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z2 == 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r9 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : $r9 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.addLocalEventString : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : $z0 = <dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: boolean $assertionsDisabled>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : $z0 = <dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : if $z0 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : $r4 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : $r4 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : $r6 = (synoptic.model.event.DistEventType) $r5
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : $r6 = (synoptic.model.event.DistEventType) $r5 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : return $r6
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.getEventType : return $r6 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: boolean equals(java.lang.Object)>(r1)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z0 = specialinvoke r0.<synoptic.model.channelid.ChannelId: boolean equals(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z0 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z1 = r1 instanceof dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z1 = r1 instanceof dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z1 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : r2 = (dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId) r1
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : r2 = (dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId) r1 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $r3 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $r3 = r0.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $r4 = r2.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType>
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $r4 = r2.<dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId: java.util.Map eventStrToDistEventType> >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z2 = interfaceinvoke $r3.<java.util.Map: boolean equals(java.lang.Object)>($r4)
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : $z2 = interfaceinvoke $r3.<java.util.Map: boolean equals(java.lang.Object)>($r4) >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z2 != 0
dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelid.LocalEventsChannelId.equals : return 0
