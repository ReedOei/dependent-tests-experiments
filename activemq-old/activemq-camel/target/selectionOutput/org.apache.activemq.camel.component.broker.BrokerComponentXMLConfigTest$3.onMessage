org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : r2 = $r4 >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>()
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>() >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : return
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : $r3 = r0.<org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3: java.util.concurrent.CountDownLatch val$divertLatch> >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>()
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : $r3 = r0.<org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3: java.util.concurrent.CountDownLatch val$divertLatch> >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : $r4 := @caughtexception
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : goto [?= return]
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : $r4 := @caughtexception
org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : goto [?= return] >>>>>>>> org.apache.activemq.camel.component.broker.BrokerComponentXMLConfigTest$3.onMessage : return
