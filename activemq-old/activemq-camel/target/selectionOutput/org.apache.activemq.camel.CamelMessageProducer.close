org.apache.activemq.camel.CamelMessageProducer.close : $z0 = r0.<org.apache.activemq.camel.CamelMessageProducer: boolean closed> >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : if $z0 != 0
org.apache.activemq.camel.CamelMessageProducer.close : if $z0 != 0 >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : r0.<org.apache.activemq.camel.CamelMessageProducer: boolean closed> = 1
org.apache.activemq.camel.CamelMessageProducer.close : if $z0 != 0 >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : return
org.apache.activemq.camel.CamelMessageProducer.close : r0.<org.apache.activemq.camel.CamelMessageProducer: boolean closed> = 1 >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : $r3 := @caughtexception
org.apache.activemq.camel.CamelMessageProducer.close : r0.<org.apache.activemq.camel.CamelMessageProducer: boolean closed> = 1 >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : $r4 := @caughtexception
org.apache.activemq.camel.CamelMessageProducer.close : r0.<org.apache.activemq.camel.CamelMessageProducer: boolean closed> = 1 >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : $r2 = r0.<org.apache.activemq.camel.CamelMessageProducer: org.apache.camel.Producer producer>
org.apache.activemq.camel.CamelMessageProducer.close : $r2 = r0.<org.apache.activemq.camel.CamelMessageProducer: org.apache.camel.Producer producer> >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : $r3 := @caughtexception
org.apache.activemq.camel.CamelMessageProducer.close : $r2 = r0.<org.apache.activemq.camel.CamelMessageProducer: org.apache.camel.Producer producer> >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : $r4 := @caughtexception
org.apache.activemq.camel.CamelMessageProducer.close : $r2 = r0.<org.apache.activemq.camel.CamelMessageProducer: org.apache.camel.Producer producer> >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : interfaceinvoke $r2.<org.apache.camel.Producer: void stop()>()
org.apache.activemq.camel.CamelMessageProducer.close : interfaceinvoke $r2.<org.apache.camel.Producer: void stop()>() >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : $r3 := @caughtexception
org.apache.activemq.camel.CamelMessageProducer.close : interfaceinvoke $r2.<org.apache.camel.Producer: void stop()>() >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : $r4 := @caughtexception
org.apache.activemq.camel.CamelMessageProducer.close : interfaceinvoke $r2.<org.apache.camel.Producer: void stop()>() >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : goto [?= return]
org.apache.activemq.camel.CamelMessageProducer.close : goto [?= return] >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : return
org.apache.activemq.camel.CamelMessageProducer.close : r5 = $r4 >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : $r6 = staticinvoke <org.apache.activemq.util.JMSExceptionSupport: javax.jms.JMSException create(java.lang.Exception)>(r5)
org.apache.activemq.camel.CamelMessageProducer.close : $r6 = staticinvoke <org.apache.activemq.util.JMSExceptionSupport: javax.jms.JMSException create(java.lang.Exception)>(r5) >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : throw $r6
org.apache.activemq.camel.CamelMessageProducer.close : r1 = $r3 >>>>>>>> org.apache.activemq.camel.CamelMessageProducer.close : throw r1
