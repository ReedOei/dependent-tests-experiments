org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $r1 = r0.<org.apache.activemq.camel.TransactedConsumeTest$1: org.apache.activemq.camel.TransactedConsumeTest this$0> >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $r2 = $r1.<org.apache.activemq.camel.TransactedConsumeTest: org.apache.activemq.broker.BrokerService broker>
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $r2 = $r1.<org.apache.activemq.camel.TransactedConsumeTest: org.apache.activemq.broker.BrokerService broker> >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $r3 = virtualinvoke $r2.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.jmx.BrokerView getAdminView()>()
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $r3 = virtualinvoke $r2.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.jmx.BrokerView getAdminView()>() >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $l0 = virtualinvoke $r3.<org.apache.activemq.broker.jmx.BrokerView: long getTotalDequeueCount()>()
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $l0 = virtualinvoke $r3.<org.apache.activemq.broker.jmx.BrokerView: long getTotalDequeueCount()>() >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $r4 = r0.<org.apache.activemq.camel.TransactedConsumeTest$1: org.apache.activemq.camel.TransactedConsumeTest this$0>
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $r4 = r0.<org.apache.activemq.camel.TransactedConsumeTest$1: org.apache.activemq.camel.TransactedConsumeTest this$0> >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $i1 = $r4.<org.apache.activemq.camel.TransactedConsumeTest: int messageCount>
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $i1 = $r4.<org.apache.activemq.camel.TransactedConsumeTest: int messageCount> >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $l2 = (long) $i1
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $l2 = (long) $i1 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $b3 = $l0 cmp $l2
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $b3 = $l0 cmp $l2 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : if $b3 < 0
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : if $b3 < 0 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $z0 = 1
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : if $b3 < 0 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $z0 = 0
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $z0 = 0 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : return $z0
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : $z0 = 1 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : goto [?= return $z0]
org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : goto [?= return $z0] >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest$1.isSatisified : return $z0
