org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r3 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.advisory.DestinationSource source> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r3 == null
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r3 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r5 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.EnhancedConnection connection>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r5 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.activemq.EnhancedConnection connection> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r5 == null
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $r5 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r7 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r7 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : r1 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : r1 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : r2 = (org.apache.activemq.Service) $r8
org.apache.activemq.camel.component.ActiveMQComponent.doStop : r2 = (org.apache.activemq.Service) $r8 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : interfaceinvoke r2.<org.apache.activemq.Service: void stop()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : interfaceinvoke r2.<org.apache.activemq.Service: void stop()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.activemq.camel.component.ActiveMQComponent.doStop : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r9 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r9 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList pooledConnectionFactoryServiceList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: void clear()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: void clear()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r10 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r10 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : r11 = virtualinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : r11 = virtualinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z1 == 0
org.apache.activemq.camel.component.ActiveMQComponent.doStop : if $z1 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r14 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList>
org.apache.activemq.camel.component.ActiveMQComponent.doStop : $r14 = r0.<org.apache.activemq.camel.component.ActiveMQComponent: java.util.concurrent.CopyOnWriteArrayList singleConnectionFactoryList> >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r14.<java.util.concurrent.CopyOnWriteArrayList: void clear()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : virtualinvoke $r14.<java.util.concurrent.CopyOnWriteArrayList: void clear()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.doStop : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStop()>()
org.apache.activemq.camel.component.ActiveMQComponent.doStop : specialinvoke r0.<org.apache.camel.component.jms.JmsComponent: void doStop()>() >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : $r2 = new org.apache.activemq.xbean.XBeanBrokerFactory
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : $r2 = new org.apache.activemq.xbean.XBeanBrokerFactory >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : specialinvoke $r2.<org.apache.activemq.xbean.XBeanBrokerFactory: void <init>()>()
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : specialinvoke $r2.<org.apache.activemq.xbean.XBeanBrokerFactory: void <init>()>() >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : r3 = $r2
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : r3 = $r2 >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : $r5 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URI getURI()>()
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : $r5 = interfaceinvoke r1.<org.springframework.core.io.Resource: java.net.URI getURI()>() >>>>>>>> org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : r4 = virtualinvoke r3.<org.apache.activemq.xbean.XBeanBrokerFactory: org.apache.activemq.broker.BrokerService createBroker(java.net.URI)>($r5)
org.apache.activemq.camel.camelplugin.CamelPluginConfigTest.createBroker : r4 = virtualinvoke r3.<org.apache.activemq.xbean.XBeanBrokerFactory: org.apache.activemq.broker.BrokerService createBroker(java.net.URI)>($r5) >>>>>>>> org.apache.activemq.camel.CamelJmsTest.createApplicationContext : $r1 = virtualinvoke r0.<org.apache.activemq.camel.CamelJmsTest: org.springframework.context.support.ClassPathXmlApplicationContext createApplicationContext()>()
org.apache.activemq.camel.CamelJmsTest.createApplicationContext : $r1 = virtualinvoke r0.<org.apache.activemq.camel.CamelJmsTest: org.springframework.context.support.ClassPathXmlApplicationContext createApplicationContext()>() >>>>>>>> org.apache.activemq.camel.CamelJmsTest.createApplicationContext : $r1 = new org.springframework.context.support.ClassPathXmlApplicationContext
org.apache.activemq.camel.CamelJmsTest.createApplicationContext : $r1 = new org.springframework.context.support.ClassPathXmlApplicationContext >>>>>>>> org.apache.activemq.camel.CamelJmsTest.createApplicationContext : specialinvoke $r1.<org.springframework.context.support.ClassPathXmlApplicationContext: void <init>(java.lang.String)>("org/apache/activemq/camel/spring.xml")
org.apache.activemq.camel.CamelJmsTest.createApplicationContext : specialinvoke $r1.<org.springframework.context.support.ClassPathXmlApplicationContext: void <init>(java.lang.String)>("org/apache/activemq/camel/spring.xml") >>>>>>>> org.apache.activemq.camel.ActiveMQComponentFactoryUserNamePasswordTest.createApplicationContext : $r1 = new org.springframework.context.support.ClassPathXmlApplicationContext
org.apache.activemq.camel.ActiveMQComponentFactoryUserNamePasswordTest.createApplicationContext : $r1 = new org.springframework.context.support.ClassPathXmlApplicationContext >>>>>>>> org.apache.activemq.camel.ActiveMQComponentFactoryUserNamePasswordTest.createApplicationContext : specialinvoke $r1.<org.springframework.context.support.ClassPathXmlApplicationContext: void <init>(java.lang.String)>("org/apache/activemq/camel/ActiveMQComponentFactoryUserNamePassword.xml")
org.apache.activemq.camel.ActiveMQComponentFactoryUserNamePasswordTest.createApplicationContext : specialinvoke $r1.<org.springframework.context.support.ClassPathXmlApplicationContext: void <init>(java.lang.String)>("org/apache/activemq/camel/ActiveMQComponentFactoryUserNamePassword.xml") >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : $r1 = virtualinvoke r0.<org.apache.activemq.camel.TransactedConsumeTest: org.springframework.context.support.AbstractXmlApplicationContext createApplicationContext()>()
org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : $r1 = virtualinvoke r0.<org.apache.activemq.camel.TransactedConsumeTest: org.springframework.context.support.AbstractXmlApplicationContext createApplicationContext()>() >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : staticinvoke <org.apache.activemq.camel.TransactedConsumeTest: boolean deleteDirectory(java.lang.String)>("target/data")
org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : staticinvoke <org.apache.activemq.camel.TransactedConsumeTest: boolean deleteDirectory(java.lang.String)>("target/data") >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : $r2 = specialinvoke r0.<org.apache.activemq.camel.TransactedConsumeTest: org.apache.activemq.broker.BrokerService createBroker(boolean)>(1)
org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : $r2 = specialinvoke r0.<org.apache.activemq.camel.TransactedConsumeTest: org.apache.activemq.broker.BrokerService createBroker(boolean)>(1) >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : $r1 = new org.apache.activemq.broker.BrokerService
org.apache.activemq.camel.TransactedConsumeTest.createBroker : $r1 = new org.apache.activemq.broker.BrokerService >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : specialinvoke $r1.<org.apache.activemq.broker.BrokerService: void <init>()>()
org.apache.activemq.camel.TransactedConsumeTest.createBroker : specialinvoke $r1.<org.apache.activemq.broker.BrokerService: void <init>()>() >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : r2 = $r1
org.apache.activemq.camel.TransactedConsumeTest.createBroker : r2 = $r1 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setDeleteAllMessagesOnStartup(boolean)>(z0)
org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setDeleteAllMessagesOnStartup(boolean)>(z0) >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setBrokerName(java.lang.String)>("test")
org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setBrokerName(java.lang.String)>("test") >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : $r6 = new org.apache.activemq.broker.region.policy.PolicyMap
org.apache.activemq.camel.TransactedConsumeTest.createBroker : $r6 = new org.apache.activemq.broker.region.policy.PolicyMap >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : specialinvoke $r6.<org.apache.activemq.broker.region.policy.PolicyMap: void <init>()>()
org.apache.activemq.camel.TransactedConsumeTest.createBroker : specialinvoke $r6.<org.apache.activemq.broker.region.policy.PolicyMap: void <init>()>() >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : r3 = $r6
org.apache.activemq.camel.TransactedConsumeTest.createBroker : r3 = $r6 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : $r7 = new org.apache.activemq.broker.region.policy.PolicyEntry
org.apache.activemq.camel.TransactedConsumeTest.createBroker : $r7 = new org.apache.activemq.broker.region.policy.PolicyEntry >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : specialinvoke $r7.<org.apache.activemq.broker.region.policy.PolicyEntry: void <init>()>()
org.apache.activemq.camel.TransactedConsumeTest.createBroker : specialinvoke $r7.<org.apache.activemq.broker.region.policy.PolicyEntry: void <init>()>() >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : r4 = $r7
org.apache.activemq.camel.TransactedConsumeTest.createBroker : r4 = $r7 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r3.<org.apache.activemq.broker.region.policy.PolicyMap: void setDefaultEntry(org.apache.activemq.broker.region.policy.PolicyEntry)>(r4)
org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r3.<org.apache.activemq.broker.region.policy.PolicyMap: void setDefaultEntry(org.apache.activemq.broker.region.policy.PolicyEntry)>(r4) >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setDestinationPolicy(org.apache.activemq.broker.region.policy.PolicyMap)>(r3)
org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setDestinationPolicy(org.apache.activemq.broker.region.policy.PolicyMap)>(r3) >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setAdvisorySupport(boolean)>(0)
org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setAdvisorySupport(boolean)>(0) >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setDataDirectory(java.lang.String)>("target/data")
org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: void setDataDirectory(java.lang.String)>("target/data") >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : $r8 = virtualinvoke r2.<org.apache.activemq.broker.BrokerService: org.apache.activemq.store.PersistenceAdapter getPersistenceAdapter()>()
org.apache.activemq.camel.TransactedConsumeTest.createBroker : $r8 = virtualinvoke r2.<org.apache.activemq.broker.BrokerService: org.apache.activemq.store.PersistenceAdapter getPersistenceAdapter()>() >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : r5 = (org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter) $r8
org.apache.activemq.camel.TransactedConsumeTest.createBroker : r5 = (org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter) $r8 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r5.<org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter: void setEnableJournalDiskSyncs(boolean)>(0)
org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r5.<org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter: void setEnableJournalDiskSyncs(boolean)>(0) >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.TransportConnector addConnector(java.lang.String)>("tcp://localhost:61616")
org.apache.activemq.camel.TransactedConsumeTest.createBroker : virtualinvoke r2.<org.apache.activemq.broker.BrokerService: org.apache.activemq.broker.TransportConnector addConnector(java.lang.String)>("tcp://localhost:61616") >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : r1 = $r4
org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : r1 = $r4 >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : $r5 = new java.lang.RuntimeException
org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : $r5 = new java.lang.RuntimeException >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to start broker", r1)
org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to start broker", r1) >>>>>>>> org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : throw $r5
org.apache.activemq.camel.TransactedConsumeTest.createApplicationContext : throw $r5 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r1 = new org.apache.activemq.camel.component.ActiveMQComponent
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r1 = new org.apache.activemq.camel.component.ActiveMQComponent >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : specialinvoke $r1.<org.apache.activemq.camel.component.ActiveMQComponent: void <init>()>()
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : specialinvoke $r1.<org.apache.activemq.camel.component.ActiveMQComponent: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : r2 = $r1
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : r2 = $r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r3 = virtualinvoke r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>()
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r3 = virtualinvoke r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : $r1 = new org.apache.activemq.camel.component.ActiveMQConfiguration
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : $r1 = new org.apache.activemq.camel.component.ActiveMQConfiguration >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : specialinvoke $r1.<org.apache.activemq.camel.component.ActiveMQConfiguration: void <init>()>()
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : specialinvoke $r1.<org.apache.activemq.camel.component.ActiveMQConfiguration: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : r2 = $r1
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : r2 = $r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : virtualinvoke r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setActiveMQComponent(org.apache.activemq.camel.component.ActiveMQComponent)>(r0)
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : virtualinvoke r2.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setActiveMQComponent(org.apache.activemq.camel.component.ActiveMQComponent)>(r0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.setActiveMQComponent : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> = r1
org.apache.activemq.camel.component.ActiveMQConfiguration.setActiveMQComponent : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: org.apache.activemq.camel.component.ActiveMQComponent activeMQComponent> = r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : return r2
org.apache.activemq.camel.component.ActiveMQComponent.createConfiguration : return r2 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $z0 = $r3 instanceof org.apache.activemq.camel.component.ActiveMQConfiguration
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $z0 = $r3 instanceof org.apache.activemq.camel.component.ActiveMQConfiguration >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : if $z0 == 0
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : if $z0 == 0 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r4 = virtualinvoke r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>()
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r4 = virtualinvoke r2.<org.apache.activemq.camel.component.ActiveMQComponent: org.apache.camel.component.jms.JmsConfiguration getConfiguration()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r5 = (org.apache.activemq.camel.component.ActiveMQConfiguration) $r4
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : $r5 = (org.apache.activemq.camel.component.ActiveMQConfiguration) $r4 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : virtualinvoke $r5.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setBrokerURL(java.lang.String)>(r0)
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : virtualinvoke $r5.<org.apache.activemq.camel.component.ActiveMQConfiguration: void setBrokerURL(java.lang.String)>(r0) >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.setBrokerURL : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL> = r1
org.apache.activemq.camel.component.ActiveMQConfiguration.setBrokerURL : r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL> = r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : return r2
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent : return r2 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r1 = new org.apache.activemq.spring.ActiveMQConnectionFactory
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r1 = new org.apache.activemq.spring.ActiveMQConnectionFactory >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : specialinvoke $r1.<org.apache.activemq.spring.ActiveMQConnectionFactory: void <init>()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : specialinvoke $r1.<org.apache.activemq.spring.ActiveMQConnectionFactory: void <init>()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : r2 = $r1
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : r2 = $r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r4 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String userName>
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r4 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String userName> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r4 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r4 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r6 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String password>
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r6 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String password> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r6 == null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r6 == null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r8 = virtualinvoke r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: java.lang.String getBeanName()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r8 = virtualinvoke r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: java.lang.String getBeanName()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r8 != null
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : if $r8 != null >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBeanName(java.lang.String)>("Camel")
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBeanName(java.lang.String)>("Camel") >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r9 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getBrokerURL()>()
org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : $r9 = virtualinvoke r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String getBrokerURL()>() >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : $r1 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL>
org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : $r1 = r0.<org.apache.activemq.camel.component.ActiveMQConfiguration: java.lang.String brokerURL> >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : return $r1
org.apache.activemq.camel.component.ActiveMQConfiguration.getBrokerURL : return $r1 >>>>>>>> org.apache.activemq.camel.component.ActiveMQConfiguration.createConnectionFactory : virtualinvoke r2.<org.apache.activemq.spring.ActiveMQConnectionFactory: void setBrokerURL(java.lang.String)>($r9)
