org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(int)>(32) >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : staticinvoke <org.apache.xml.security.c14n.implementations.CanonicalizerBase: void writeStringToUtf8(java.lang.String,java.io.OutputStream)>(r0, r2)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : staticinvoke <org.apache.xml.security.c14n.implementations.CanonicalizerBase: void writeStringToUtf8(java.lang.String,java.io.OutputStream)>(r0, r2) >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : $r4 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] equalsStr>
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : $r4 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] equalsStr> >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r4)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r4) >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : i1 = 0
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : i1 = 0 >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : if i1 >= i0
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : if i1 >= i0 >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : if i1 >= i0 >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(int)>(34)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(int)>(34) >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : return
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1) >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : lookupswitch(c2) {     case 9:
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : lookupswitch(c2) {     case 9: >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] __X9_>
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : lookupswitch(c2) {     case 9: >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] __XA_>
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : lookupswitch(c2) {     case 9: >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] __XD_>
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : lookupswitch(c2) {     case 9: >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] _QUOT_>
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : lookupswitch(c2) {     case 9: >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] _AMP_>
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : lookupswitch(c2) {     case 9: >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] _LT_>
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : lookupswitch(c2) {     case 9: >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : staticinvoke <org.apache.xml.security.c14n.implementations.CanonicalizerBase: void writeCharToUtf8(char,java.io.OutputStream)>(c2, r2)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : staticinvoke <org.apache.xml.security.c14n.implementations.CanonicalizerBase: void writeCharToUtf8(char,java.io.OutputStream)>(c2, r2) >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= i1 = i1 + 1]
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : i1 = i1 + 1
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : i1 = i1 + 1 >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= (branch)]
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= (branch)] >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : if i1 >= i0
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] _LT_> >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)]
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)] >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3) >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : i1 = i1 + 1
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] _AMP_> >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)]
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)] >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] _QUOT_> >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)]
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)] >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] __XD_> >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)]
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)] >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] __XA_> >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)]
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)] >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : r3 = <org.apache.xml.security.c14n.implementations.CanonicalizerBase: byte[] __X9_> >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)]
org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : goto [?= virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)] >>>>>>>> org.apache.xml.security.c14n.implementations.CanonicalizerBase.outputAttrToWriter : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r3)
