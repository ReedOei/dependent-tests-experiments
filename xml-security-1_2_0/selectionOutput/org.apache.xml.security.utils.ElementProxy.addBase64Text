org.apache.xml.security.utils.ElementProxy.addBase64Text : if r1 == null >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : $r4 = r0.<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Document _doc>
org.apache.xml.security.utils.ElementProxy.addBase64Text : if r1 == null >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : return
org.apache.xml.security.utils.ElementProxy.addBase64Text : $r4 = r0.<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Document _doc> >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : $r2 = new java.lang.StringBuilder
org.apache.xml.security.utils.ElementProxy.addBase64Text : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.utils.ElementProxy.addBase64Text : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
org.apache.xml.security.utils.ElementProxy.addBase64Text : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : $r6 = staticinvoke <org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>(r1)
org.apache.xml.security.utils.ElementProxy.addBase64Text : $r6 = staticinvoke <org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>(r1) >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.xml.security.utils.ElementProxy.addBase64Text : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
org.apache.xml.security.utils.ElementProxy.addBase64Text : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.utils.ElementProxy.addBase64Text : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : r3 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r9)
org.apache.xml.security.utils.ElementProxy.addBase64Text : r3 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r9) >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : $r10 = r0.<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element _constructionElement>
org.apache.xml.security.utils.ElementProxy.addBase64Text : $r10 = r0.<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element _constructionElement> >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : interfaceinvoke $r10.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r3)
org.apache.xml.security.utils.ElementProxy.addBase64Text : interfaceinvoke $r10.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r3) >>>>>>>> org.apache.xml.security.utils.ElementProxy.addBase64Text : return
