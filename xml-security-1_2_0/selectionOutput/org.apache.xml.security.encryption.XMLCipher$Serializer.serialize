org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r2 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : r3 = $r2
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : r3 = $r2 >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r4 = r0.<org.apache.xml.security.encryption.XMLCipher$Serializer: org.apache.xml.security.encryption.XMLCipher this$0>
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r4 = r0.<org.apache.xml.security.encryption.XMLCipher$Serializer: org.apache.xml.security.encryption.XMLCipher this$0> >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r5 = staticinvoke <org.apache.xml.security.encryption.XMLCipher: org.apache.xml.security.c14n.Canonicalizer access$100(org.apache.xml.security.encryption.XMLCipher)>($r4)
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r5 = staticinvoke <org.apache.xml.security.encryption.XMLCipher: org.apache.xml.security.c14n.Canonicalizer access$100(org.apache.xml.security.encryption.XMLCipher)>($r4) >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : virtualinvoke $r5.<org.apache.xml.security.c14n.Canonicalizer: void setWriter(java.io.OutputStream)>(r3)
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : virtualinvoke $r5.<org.apache.xml.security.c14n.Canonicalizer: void setWriter(java.io.OutputStream)>(r3) >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : i0 = 0
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : i0 = 0 >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $i1 = interfaceinvoke r1.<org.w3c.dom.NodeList: int getLength()>()
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $i1 = interfaceinvoke r1.<org.w3c.dom.NodeList: int getLength()>() >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : if i0 >= $i1
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : if i0 >= $i1 >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r6 = r0.<org.apache.xml.security.encryption.XMLCipher$Serializer: org.apache.xml.security.encryption.XMLCipher this$0>
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : if i0 >= $i1 >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : virtualinvoke r3.<java.io.ByteArrayOutputStream: void close()>()
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : virtualinvoke r3.<java.io.ByteArrayOutputStream: void close()>() >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r10 = virtualinvoke r3.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF-8")
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r10 = virtualinvoke r3.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF-8") >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : return $r10
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r6 = r0.<org.apache.xml.security.encryption.XMLCipher$Serializer: org.apache.xml.security.encryption.XMLCipher this$0> >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r7 = staticinvoke <org.apache.xml.security.encryption.XMLCipher: org.apache.xml.security.c14n.Canonicalizer access$100(org.apache.xml.security.encryption.XMLCipher)>($r6)
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r7 = staticinvoke <org.apache.xml.security.encryption.XMLCipher: org.apache.xml.security.c14n.Canonicalizer access$100(org.apache.xml.security.encryption.XMLCipher)>($r6) >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r8 = interfaceinvoke r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0)
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $r8 = interfaceinvoke r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0) >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : virtualinvoke $r7.<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>($r8)
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : virtualinvoke $r7.<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>($r8) >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : i0 = i0 + 1
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : i0 = i0 + 1 >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : goto [?= $i1 = interfaceinvoke r1.<org.w3c.dom.NodeList: int getLength()>()]
org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : goto [?= $i1 = interfaceinvoke r1.<org.w3c.dom.NodeList: int getLength()>()] >>>>>>>> org.apache.xml.security.encryption.XMLCipher$Serializer.serialize : $i1 = interfaceinvoke r1.<org.w3c.dom.NodeList: int getLength()>()
