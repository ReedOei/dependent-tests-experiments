org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r2 = <org.apache.xml.security.test.resource.TestVectorResolver: org.apache.log4j.Category cat> >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r3 = new java.lang.StringBuilder
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getInputStream(")
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getInputStream(") >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : virtualinvoke $r2.<org.apache.log4j.Category: void debug(java.lang.Object)>($r8)
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : virtualinvoke $r2.<org.apache.log4j.Category: void debug(java.lang.Object)>($r8) >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r9 = <org.apache.xml.security.test.resource.TestVectorResolver: java.util.HashMap vectors>
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r9 = <org.apache.xml.security.test.resource.TestVectorResolver: java.util.HashMap vectors> >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r11 = (byte[]) $r10
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r11 = (byte[]) $r10 >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : r4 = (byte[]) $r11
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : r4 = (byte[]) $r11 >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : if r4 != null
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : if r4 != null >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r12 = <org.apache.xml.security.test.resource.TestVectorResolver: org.apache.log4j.Category cat>
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : if r4 != null >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r18 = new java.io.ByteArrayInputStream
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r18 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : specialinvoke $r18.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4)
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : specialinvoke $r18.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4) >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : return $r18
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r12 = <org.apache.xml.security.test.resource.TestVectorResolver: org.apache.log4j.Category cat> >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r13 = new java.lang.StringBuilder
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requested ")
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requested ") >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resulted in null")
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resulted in null") >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : virtualinvoke $r12.<org.apache.log4j.Category: void fatal(java.lang.Object)>($r17)
org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : virtualinvoke $r12.<org.apache.log4j.Category: void fatal(java.lang.Object)>($r17) >>>>>>>> org.apache.xml.security.test.resource.TestVectorResolver.getInputStream : $r18 = new java.io.ByteArrayInputStream
