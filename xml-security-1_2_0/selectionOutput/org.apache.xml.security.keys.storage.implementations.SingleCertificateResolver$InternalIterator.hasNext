org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : $z0 = r0.<org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator: boolean _alreadyReturned> >>>>>>>> org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : if $z0 != 0
org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : if $z0 != 0 >>>>>>>> org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : $z1 = 1
org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : if $z0 != 0 >>>>>>>> org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : $z1 = 0
org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : $z1 = 0 >>>>>>>> org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : return $z1
org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : $z1 = 1 >>>>>>>> org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : goto [?= return $z1]
org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : goto [?= return $z1] >>>>>>>> org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver$InternalIterator.hasNext : return $z1
