org.apache.xml.security.utils.XMLUtils.findClassLoader : n0 = null >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r1 = class "java/lang/Thread"
org.apache.xml.security.utils.XMLUtils.findClassLoader : n0 = null >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r4 := @caughtexception
org.apache.xml.security.utils.XMLUtils.findClassLoader : r0 = $r4 >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r5 = class "org/apache/xml/security/utils/XMLUtils"
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r5 = class "org/apache/xml/security/utils/XMLUtils" >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : return $r6
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r1 = class "java/lang/Thread" >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r2 = newarray (java.lang.Class)[0]
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r1 = class "java/lang/Thread" >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r4 := @caughtexception
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r2 = newarray (java.lang.Class)[0] >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getContextClassLoader", $r2)
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r2 = newarray (java.lang.Class)[0] >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r4 := @caughtexception
org.apache.xml.security.utils.XMLUtils.findClassLoader : r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getContextClassLoader", $r2) >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : goto [?= $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()]
org.apache.xml.security.utils.XMLUtils.findClassLoader : r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getContextClassLoader", $r2) >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r4 := @caughtexception
org.apache.xml.security.utils.XMLUtils.findClassLoader : goto [?= $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()] >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.xml.security.utils.XMLUtils.findClassLoader : goto [?= $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()] >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r11 := @caughtexception
org.apache.xml.security.utils.XMLUtils.findClassLoader : r12 = $r11 >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r13 = new java.lang.RuntimeException
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r13 = new java.lang.RuntimeException >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r14 = virtualinvoke r12.<java.lang.Exception: java.lang.String toString()>()
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r14 = virtualinvoke r12.<java.lang.Exception: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14)
org.apache.xml.security.utils.XMLUtils.findClassLoader : specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14) >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : throw $r13
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r8 = newarray (java.lang.Object)[0]
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r11 := @caughtexception
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r8 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r9 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r8)
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r8 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r11 := @caughtexception
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r9 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r8) >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r10 = (java.lang.ClassLoader) $r9
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r9 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r8) >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r11 := @caughtexception
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r10 = (java.lang.ClassLoader) $r9 >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : return $r10
org.apache.xml.security.utils.XMLUtils.findClassLoader : $r10 = (java.lang.ClassLoader) $r9 >>>>>>>> org.apache.xml.security.utils.XMLUtils.findClassLoader : $r11 := @caughtexception
