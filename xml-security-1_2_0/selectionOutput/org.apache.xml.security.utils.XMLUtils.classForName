org.apache.xml.security.utils.XMLUtils.classForName : r1 = staticinvoke <org.apache.xml.security.utils.XMLUtils: java.lang.ClassLoader findClassLoader()>() >>>>>>>> org.apache.xml.security.utils.XMLUtils.classForName : if r1 != null
org.apache.xml.security.utils.XMLUtils.classForName : if r1 != null >>>>>>>> org.apache.xml.security.utils.XMLUtils.classForName : $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0)
org.apache.xml.security.utils.XMLUtils.classForName : if r1 != null >>>>>>>> org.apache.xml.security.utils.XMLUtils.classForName : $r3 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0)
org.apache.xml.security.utils.XMLUtils.classForName : $r3 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.XMLUtils.classForName : return $r3
org.apache.xml.security.utils.XMLUtils.classForName : $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0) >>>>>>>> org.apache.xml.security.utils.XMLUtils.classForName : return $r2
