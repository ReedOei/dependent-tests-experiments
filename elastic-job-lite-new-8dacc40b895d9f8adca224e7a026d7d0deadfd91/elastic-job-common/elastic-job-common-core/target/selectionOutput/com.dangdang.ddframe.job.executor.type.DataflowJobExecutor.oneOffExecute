com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : r2 = specialinvoke r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutor: java.util.List fetchData(com.dangdang.ddframe.job.api.ShardingContext)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : if null == r2
com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : if null == r2 >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : if null == r2 >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : return
com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : if $z0 != 0
com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : specialinvoke r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutor: void processData(com.dangdang.ddframe.job.api.ShardingContext,java.util.List)>(r1, r2)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : return
com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : specialinvoke r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutor: void processData(com.dangdang.ddframe.job.api.ShardingContext,java.util.List)>(r1, r2) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutor.oneOffExecute : return
