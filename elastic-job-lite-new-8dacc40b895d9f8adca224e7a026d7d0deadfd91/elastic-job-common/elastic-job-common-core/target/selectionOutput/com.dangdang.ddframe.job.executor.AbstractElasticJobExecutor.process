com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: boolean isAllowSendJobEvent()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z0 == 0
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r13 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r5 = <com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: org.slf4j.Logger log>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r5 = <com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: org.slf4j.Logger log> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r6 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.lang.String jobName>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r6 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r5.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Job \'{}\' executing, item is: \'{}\'.", $r6, $r7)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r5.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Job \'{}\' executing, item is: \'{}\'.", $r6, $r7) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = null
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = null >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r16 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = null >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = null >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r8 = new com.dangdang.ddframe.job.api.ShardingContext
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r8 = new com.dangdang.ddframe.job.api.ShardingContext >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r16 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r8 = new com.dangdang.ddframe.job.api.ShardingContext >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r8 = new com.dangdang.ddframe.job.api.ShardingContext >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : specialinvoke $r8.<com.dangdang.ddframe.job.api.ShardingContext: void <init>(com.dangdang.ddframe.job.executor.ShardingContexts,int)>(r1, i0)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : specialinvoke $r8.<com.dangdang.ddframe.job.api.ShardingContext: void <init>(com.dangdang.ddframe.job.executor.ShardingContexts,int)>(r1, i0) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r16 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : specialinvoke $r8.<com.dangdang.ddframe.job.api.ShardingContext: void <init>(com.dangdang.ddframe.job.executor.ShardingContexts,int)>(r1, i0) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : specialinvoke $r8.<com.dangdang.ddframe.job.api.ShardingContext: void <init>(com.dangdang.ddframe.job.executor.ShardingContexts,int)>(r1, i0) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : virtualinvoke r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: void process(com.dangdang.ddframe.job.api.ShardingContext)>($r8)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : virtualinvoke r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: void process(com.dangdang.ddframe.job.api.ShardingContext)>($r8) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r16 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : virtualinvoke r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: void process(com.dangdang.ddframe.job.api.ShardingContext)>($r8) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : virtualinvoke r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: void process(com.dangdang.ddframe.job.api.ShardingContext)>($r8) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = virtualinvoke r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent executionSuccess()>()
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = virtualinvoke r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent executionSuccess()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r16 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = virtualinvoke r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent executionSuccess()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = virtualinvoke r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent executionSuccess()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r9 = <com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: org.slf4j.Logger log>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r9 = <com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: org.slf4j.Logger log> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r16 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r9 = <com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: org.slf4j.Logger log> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r9 = <com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: org.slf4j.Logger log> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r10 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.lang.String jobName>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r10 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r16 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r10 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r10 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r16 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Job \'{}\' executed, item is: \'{}\'.", $r10, $r11)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Job \'{}\' executed, item is: \'{}\'.", $r10, $r11) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r16 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Job \'{}\' executed, item is: \'{}\'.", $r10, $r11) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Job \'{}\' executed, item is: \'{}\'.", $r10, $r11) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $z1 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: boolean isAllowSendJobEvent()>()
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $z1 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: boolean isAllowSendJobEvent()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z1 == 0
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z1 == 0 >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r12 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z1 == 0 >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : return
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r12 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r12.<com.dangdang.ddframe.job.executor.JobFacade: void postJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r24)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r12.<com.dangdang.ddframe.job.executor.JobFacade: void postJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r24) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : goto [?= return]
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : return
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $z2 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: boolean isAllowSendJobEvent()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z2 == 0
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z2 == 0 >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r15 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z2 == 0 >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : throw $r14
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r15 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r15.<com.dangdang.ddframe.job.executor.JobFacade: void postJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r24)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r15.<com.dangdang.ddframe.job.executor.JobFacade: void postJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r24) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : throw $r14
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = virtualinvoke r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent executionFailure(java.lang.Throwable)>($r16) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r17 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.util.Map itemErrorMessages>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : r24 = virtualinvoke r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent executionFailure(java.lang.Throwable)>($r16) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r17 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.util.Map itemErrorMessages> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r17 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.util.Map itemErrorMessages> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r19 = staticinvoke <com.dangdang.ddframe.job.exception.ExceptionUtil: java.lang.String transform(java.lang.Throwable)>($r16)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r19 = staticinvoke <com.dangdang.ddframe.job.exception.ExceptionUtil: java.lang.String transform(java.lang.Throwable)>($r16) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r19 = staticinvoke <com.dangdang.ddframe.job.exception.ExceptionUtil: java.lang.String transform(java.lang.Throwable)>($r16) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r22 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.handler.JobExceptionHandler jobExceptionHandler>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r22 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.handler.JobExceptionHandler jobExceptionHandler> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r21 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.lang.String jobName>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r22 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.handler.JobExceptionHandler jobExceptionHandler> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r21 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r22.<com.dangdang.ddframe.job.executor.handler.JobExceptionHandler: void handleException(java.lang.String,java.lang.Throwable)>($r21, $r16)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r21 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r22.<com.dangdang.ddframe.job.executor.handler.JobExceptionHandler: void handleException(java.lang.String,java.lang.Throwable)>($r21, $r16) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $z3 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: boolean isAllowSendJobEvent()>()
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r22.<com.dangdang.ddframe.job.executor.handler.JobExceptionHandler: void handleException(java.lang.String,java.lang.Throwable)>($r21, $r16) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r14 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $z3 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: boolean isAllowSendJobEvent()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z3 == 0
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z3 == 0 >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r23 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : if $z3 == 0 >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : return
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r23 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r23.<com.dangdang.ddframe.job.executor.JobFacade: void postJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r24)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r23.<com.dangdang.ddframe.job.executor.JobFacade: void postJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r24) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : goto [?= return]
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : return
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r13 = r0.<com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r13.<com.dangdang.ddframe.job.executor.JobFacade: void postJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r2)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : interfaceinvoke $r13.<com.dangdang.ddframe.job.executor.JobFacade: void postJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r2) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.process : $r5 = <com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: org.slf4j.Logger log>
