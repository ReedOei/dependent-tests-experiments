org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r4 = staticinvoke <org.apache.activemq.util.JMSExceptionSupport: javax.jms.JMSException create(java.lang.Exception)>($r3) >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : throw $r4
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r2 = r0.<org.apache.activemq.camel.CamelMessageConsumer: org.apache.camel.Endpoint endpoint> >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r1 = new org.apache.activemq.camel.CamelMessageConsumer$1
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r2 = r0.<org.apache.activemq.camel.CamelMessageConsumer: org.apache.camel.Endpoint endpoint> >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r3 := @caughtexception
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r1 = new org.apache.activemq.camel.CamelMessageConsumer$1 >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r5 := @caughtexception
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r1 = new org.apache.activemq.camel.CamelMessageConsumer$1 >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r3 := @caughtexception
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r1 = new org.apache.activemq.camel.CamelMessageConsumer$1 >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : specialinvoke $r1.<org.apache.activemq.camel.CamelMessageConsumer$1: void <init>(org.apache.activemq.camel.CamelMessageConsumer)>(r0)
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : specialinvoke $r1.<org.apache.activemq.camel.CamelMessageConsumer$1: void <init>(org.apache.activemq.camel.CamelMessageConsumer)>(r0) >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r5 := @caughtexception
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : specialinvoke $r1.<org.apache.activemq.camel.CamelMessageConsumer$1: void <init>(org.apache.activemq.camel.CamelMessageConsumer)>(r0) >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r3 := @caughtexception
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : specialinvoke $r1.<org.apache.activemq.camel.CamelMessageConsumer$1: void <init>(org.apache.activemq.camel.CamelMessageConsumer)>(r0) >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : r6 = interfaceinvoke $r2.<org.apache.camel.Endpoint: org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)>($r1)
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : r6 = interfaceinvoke $r2.<org.apache.camel.Endpoint: org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)>($r1) >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r5 := @caughtexception
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : r6 = interfaceinvoke $r2.<org.apache.camel.Endpoint: org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)>($r1) >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r3 := @caughtexception
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : r6 = interfaceinvoke $r2.<org.apache.camel.Endpoint: org.apache.camel.Consumer createConsumer(org.apache.camel.Processor)>($r1) >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : interfaceinvoke r6.<org.apache.camel.Consumer: void start()>()
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : interfaceinvoke r6.<org.apache.camel.Consumer: void start()>() >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r5 := @caughtexception
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : interfaceinvoke r6.<org.apache.camel.Consumer: void start()>() >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : $r3 := @caughtexception
org.apache.activemq.camel.CamelMessageConsumer.createConsumer : interfaceinvoke r6.<org.apache.camel.Consumer: void start()>() >>>>>>>> org.apache.activemq.camel.CamelMessageConsumer.createConsumer : return r6
