de.htw.sdf.photoplatform.webservice.controller.PhotographerController.createCollection : $z0 = interfaceinvoke r2.<org.springframework.validation.BindingResult: boolean hasErrors()>()
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.createCollection : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.webservice.controller.PhotographerController: de.htw.sdf.photoplatform.persistence.model.User getAuthenticatedUser()>()
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.createCollection : $r4 = r0.<de.htw.sdf.photoplatform.webservice.controller.PhotographerController: de.htw.sdf.photoplatform.manager.PhotographerManager photographerManager>
de.htw.sdf.photoplatform.persistence.model.Collection.isPublic : $z0 = r0.<de.htw.sdf.photoplatform.persistence.model.Collection: boolean isPublic>
de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity.getCreatedBy : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity: java.lang.String createdBy>
de.htw.sdf.photoplatform.persistence.model.PhotographerData.setIban : r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String iban> = r1
de.htw.sdf.photoplatform.persistence.model.User.isAccountNonLocked : $z0 = r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean accountNonLocked>
de.htw.sdf.photoplatform.persistence.model.Image.setPublic : r0.<de.htw.sdf.photoplatform.persistence.model.Image: boolean isPublic> = z0
de.htw.sdf.photoplatform.persistence.model.User.isAccountNonExpired : return 1
de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity.getUpdatedBy : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity: java.lang.String updatedBy>
de.htw.sdf.photoplatform.persistence.model.UserImage.setImage : r0.<de.htw.sdf.photoplatform.persistence.model.UserImage: de.htw.sdf.photoplatform.persistence.model.Image image> = r1
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseEntity: java.lang.Long id>
de.htw.sdf.photoplatform.persistence.model.User.getFirstName : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String firstName>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getUserdata : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.UserData userdata>
de.htw.sdf.photoplatform.common.BaseTester.clearTables : $r1 = r0.<de.htw.sdf.photoplatform.common.BaseTester: de.htw.sdf.photoplatform.DBUtil dbUtil>
de.htw.sdf.photoplatform.common.BaseTester.clearTables : r0.<de.htw.sdf.photoplatform.common.BaseTester: java.util.List users> = null
de.htw.sdf.photoplatform.repository.impl.RoleDAOImpl.findByName : $r5 = interfaceinvoke r3.<javax.persistence.Query: java.lang.Object getSingleResult()>()
de.htw.sdf.photoplatform.repository.impl.RoleDAOImpl.findByName : interfaceinvoke r3.<javax.persistence.Query: javax.persistence.Query setParameter(java.lang.String,java.lang.Object)>("name", r1)
de.htw.sdf.photoplatform.repository.impl.RoleDAOImpl.findByName : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.RoleDAOImpl: javax.persistence.Query createQuery(java.lang.String)>("SELECT role FROM Role role WHERE role.name = :name")
de.htw.sdf.photoplatform.exception.common.AbstractBaseException.getErrors : $r1 = r0.<de.htw.sdf.photoplatform.exception.common.AbstractBaseException: org.springframework.validation.Errors errors>
de.htw.sdf.photoplatform.webservice.BaseAPIController.handleException : $r6 = virtualinvoke r2.<de.htw.sdf.photoplatform.exception.common.AbstractBaseException: org.springframework.validation.Errors getErrors()>()
de.htw.sdf.photoplatform.webservice.BaseAPIController.handleException : $r4 = new de.htw.sdf.photoplatform.exception.common.ResponseError
de.htw.sdf.photoplatform.persistence.model.User.setFirstName : r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String firstName> = r1
de.htw.sdf.photoplatform.persistence.model.PhotographerData.setSwift : r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String swift> = r1
de.htw.sdf.photoplatform.persistence.model.UserImage.setOwner : r0.<de.htw.sdf.photoplatform.persistence.model.UserImage: de.htw.sdf.photoplatform.persistence.model.User owner> = r1
de.htw.sdf.photoplatform.persistence.model.Collection.toString : $r1 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.persistence.model.PhotographerData.getSwift : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String swift>
de.htw.sdf.photoplatform.webservice.dto.UserData.isAdmin : $z0 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: boolean admin>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.ImageData thumbnail>
de.htw.sdf.photoplatform.persistence.model.Image.setPath : r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String path> = r1
de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity.getCreatedAt : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity: java.util.Date createdAt>
de.htw.sdf.photoplatform.persistence.model.User.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken>
de.htw.sdf.photoplatform.webservice.dto.UserData.getLastName : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String lastName>
de.htw.sdf.photoplatform.persistence.model.UserImage.getImage : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserImage: de.htw.sdf.photoplatform.persistence.model.Image image>
de.htw.sdf.photoplatform.persistence.model.User.setPassword : r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String password> = r1
de.htw.sdf.photoplatform.persistence.model.PhotographerData.setCompany : r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String company> = r1
de.htw.sdf.photoplatform.persistence.model.Collection.getName : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Collection: java.lang.String name>
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByEmail : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: javax.persistence.Query createQuery(java.lang.String)>("SELECT u FROM User u WHERE u.email = :email")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByEmail : $r5 = interfaceinvoke r2.<javax.persistence.Query: java.lang.Object getSingleResult()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByEmail : interfaceinvoke r2.<javax.persistence.Query: javax.persistence.Query setParameter(java.lang.String,java.lang.Object)>("email", r1)
de.htw.sdf.photoplatform.persistence.model.UserRole.setUser : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.User user> = r1
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setImageIds : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List imageIds> = r1
de.htw.sdf.photoplatform.persistence.model.Collection.getThumbnail : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Collection: de.htw.sdf.photoplatform.persistence.model.Image thumbnail>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.getCollection : if r2 != null goto $r4 = r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.repository.CollectionDAO collectionDAO>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.getCollection : return r3
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.getCollection : $r5 = new de.htw.sdf.photoplatform.exception.common.ManagerException
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.getCollection : $r4 = r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.repository.CollectionDAO collectionDAO>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.getCollection : if r3 != null goto return r3
de.htw.sdf.photoplatform.webservice.dto.UserCredential.setEmail : r0.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: java.lang.String email> = r1
de.htw.sdf.photoplatform.webservice.dto.UserCredential.getPassword : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: java.lang.String password>
de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity.setCreationDate : $r1 = new java.util.Date
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getImages : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List images>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setId : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: long id> = l0
de.htw.sdf.photoplatform.webservice.dto.UserData.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String secToken>
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : goto [?= $r33 = new de.htw.sdf.photoplatform.exception.BadRequestException]
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r33 = new de.htw.sdf.photoplatform.exception.BadRequestException
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r21 = r0.<de.htw.sdf.photoplatform.webservice.controller.PhotographerController: de.htw.sdf.photoplatform.common.Messages messages>
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : goto [?= $r21 = r0.<de.htw.sdf.photoplatform.webservice.controller.PhotographerController: de.htw.sdf.photoplatform.common.Messages messages>]
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $i0 = virtualinvoke $r24.<de.htw.sdf.photoplatform.exception.common.ManagerException: int getCode()>()
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $z0 = interfaceinvoke r2.<org.springframework.validation.BindingResult: boolean hasErrors()>()
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r25 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r12 = new com.fasterxml.jackson.databind.ObjectMapper
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : r4 = virtualinvoke r0.<de.htw.sdf.photoplatform.webservice.controller.PhotographerController: de.htw.sdf.photoplatform.persistence.model.User getAuthenticatedUser()>()
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r13 = virtualinvoke r6.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>("id")
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r34 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : r6 = virtualinvoke $r12.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String)>(r1)
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r18 = r0.<de.htw.sdf.photoplatform.webservice.controller.PhotographerController: de.htw.sdf.photoplatform.manager.PhotographerManager photographerManager>
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r38 = r0.<de.htw.sdf.photoplatform.webservice.controller.PhotographerController: de.htw.sdf.photoplatform.common.Messages messages>
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r15 = virtualinvoke r6.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>("imageIds")
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r29 = r0.<de.htw.sdf.photoplatform.webservice.controller.PhotographerController: de.htw.sdf.photoplatform.common.Messages messages>
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r32 = new org.springframework.validation.FieldError
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.addImageToCollection : $r41 = new org.springframework.validation.FieldError
de.htw.sdf.photoplatform.exception.common.ResponseError.getDeveloperInfo : $r1 = r0.<de.htw.sdf.photoplatform.exception.common.ResponseError: java.lang.String developerInfo>
de.htw.sdf.photoplatform.webservice.dto.UserData.getFirstName : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String firstName>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setUserdata : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.UserData userdata> = r1
de.htw.sdf.photoplatform.webservice.dto.UserData.getHomepage : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String homepage>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getDescription : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.lang.String description>
de.htw.sdf.photoplatform.persistence.model.Image.getName : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String name>
de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity.getUpdatedAt : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity: java.util.Date updatedAt>
de.htw.sdf.photoplatform.persistence.model.PhotographerData.setHomepage : r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String homepage> = r1
de.htw.sdf.photoplatform.common.BaseAPITester.initAPITest : virtualinvoke r0.<de.htw.sdf.photoplatform.common.BaseAPITester: void insertTestData()>()
de.htw.sdf.photoplatform.common.BaseAPITester.initAPITest : $r1 = r0.<de.htw.sdf.photoplatform.common.BaseAPITester: org.springframework.web.context.WebApplicationContext wac>
de.htw.sdf.photoplatform.persistence.model.PhotographerData.getCompany : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String company>
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.hashCode : $r1 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseEntity: java.lang.Long getId()>()
de.htw.sdf.photoplatform.security.RequestLoggerInterceptor.preHandle : return 1
de.htw.sdf.photoplatform.security.RequestLoggerInterceptor.preHandle : $r16 = r0.<de.htw.sdf.photoplatform.security.RequestLoggerInterceptor: org.apache.log4j.Logger log>
de.htw.sdf.photoplatform.security.RequestLoggerInterceptor.preHandle : $r6 = r0.<de.htw.sdf.photoplatform.security.RequestLoggerInterceptor: org.apache.log4j.Logger log>
de.htw.sdf.photoplatform.security.RequestLoggerInterceptor.preHandle : $r13 = "POST"
de.htw.sdf.photoplatform.security.RequestLoggerInterceptor.preHandle : r4 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>()
de.htw.sdf.photoplatform.webservice.dto.UserData.getCompany : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String company>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createCollection : virtualinvoke $r7.<de.htw.sdf.photoplatform.persistence.model.Collection: void setDescription(java.lang.String)>(r3)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createCollection : $r6 = r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.repository.UserDAO userDAO>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createCollection : virtualinvoke $r7.<de.htw.sdf.photoplatform.persistence.model.Collection: void setName(java.lang.String)>(r2)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createCollection : return $r7
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createCollection : $r8 = r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.repository.CollectionDAO collectionDAO>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createCollection : virtualinvoke $r7.<de.htw.sdf.photoplatform.persistence.model.Collection: void setPublic(boolean)>(0)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createCollection : virtualinvoke $r7.<de.htw.sdf.photoplatform.persistence.model.Collection: void setUser(de.htw.sdf.photoplatform.persistence.model.User)>(r4)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createCollection : $r7 = new de.htw.sdf.photoplatform.persistence.model.Collection
de.htw.sdf.photoplatform.persistence.model.Collection.setPublic : r0.<de.htw.sdf.photoplatform.persistence.model.Collection: boolean isPublic> = z0
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getId : $l0 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: long id>
de.htw.sdf.photoplatform.persistence.model.UserImage.setUser : r0.<de.htw.sdf.photoplatform.persistence.model.UserImage: de.htw.sdf.photoplatform.persistence.model.User user> = r1
de.htw.sdf.photoplatform.exception.common.ResponseError.getErrors : $r1 = r0.<de.htw.sdf.photoplatform.exception.common.ResponseError: java.util.Map errors>
de.htw.sdf.photoplatform.persistence.model.User.setSecToken : r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken> = r1
de.htw.sdf.photoplatform.persistence.model.PhotographerData.setPaypalID : r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String paypalID> = r1
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.user user ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.image image ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : $r2 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.owner owner ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : return $r2
de.htw.sdf.photoplatform.persistence.model.Collection.getDescription : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Collection: java.lang.String description>
de.htw.sdf.photoplatform.persistence.model.User.setUsername : r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String email> = r1
de.htw.sdf.photoplatform.persistence.model.Image.setEnabled : r0.<de.htw.sdf.photoplatform.persistence.model.Image: boolean enabled> = z0
de.htw.sdf.photoplatform.persistence.model.Image.setMetaData : r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String metaData> = r1
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.loadUserByUsername : $r5 = interfaceinvoke r3.<javax.persistence.Query: java.lang.Object getSingleResult()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.loadUserByUsername : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: javax.persistence.Query createQuery(java.lang.String)>("SELECT user FROM User user WHERE user.email = :email")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.loadUserByUsername : interfaceinvoke r3.<javax.persistence.Query: javax.persistence.Query setParameter(java.lang.String,java.lang.Object)>("email", r1)
de.htw.sdf.photoplatform.webservice.dto.UserData.getSwift : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String swift>
de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles>
de.htw.sdf.photoplatform.exception.common.ResponseError.getCode : $i0 = r0.<de.htw.sdf.photoplatform.exception.common.ResponseError: int code>
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : goto [?= $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : $r7 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : $r9 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : $r8 = new org.springframework.security.core.authority.SimpleGrantedAuthority
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : $r6 = new java.util.HashSet
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : $r3 = new java.util.HashSet
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : $r10 = virtualinvoke r13.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role getRole()>()
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : r15 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : $r4 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles>
de.htw.sdf.photoplatform.persistence.model.User.getAuthorities : $r5 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.deleteAll : interfaceinvoke $r8.<javax.persistence.Query: int executeUpdate()>()
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.deleteAll : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.persistence.model.CollectionImage.setImage : r0.<de.htw.sdf.photoplatform.persistence.model.CollectionImage: de.htw.sdf.photoplatform.persistence.model.Image image> = r1
de.htw.sdf.photoplatform.persistence.model.Collection.setDescription : r0.<de.htw.sdf.photoplatform.persistence.model.Collection: java.lang.String description> = r1
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findByUserAndCollectionId : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE owner.id = :userId AND collection.id = :collectionId")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findByUserAndCollectionId : $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findByUserAndCollectionId : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findByUserAndCollectionId : $r10 = interfaceinvoke r2.<javax.persistence.Query: java.lang.Object getSingleResult()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findByUserAndCollectionId : r1 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl: java.lang.StringBuilder initCollectionDataSelect()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findByUserAndCollectionId : return null
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findByUserAndCollectionId : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setPublic : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.lang.Boolean isPublic> = r1
de.htw.sdf.photoplatform.persistence.model.PhotographerData.setPhone : r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String phone> = r1
de.htw.sdf.photoplatform.persistence.model.CollectionImage.setCollection : r0.<de.htw.sdf.photoplatform.persistence.model.CollectionImage: de.htw.sdf.photoplatform.persistence.model.Collection collection> = r1
de.htw.sdf.photoplatform.persistence.model.UserRole.getRole : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role>
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.initSelectQuery : $r2 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH user.userRoles userRoles ")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.initSelectQuery : return $r2
de.htw.sdf.photoplatform.common.BaseTester.insertTestData : $r1 = r0.<de.htw.sdf.photoplatform.common.BaseTester: de.htw.sdf.photoplatform.DBUtil dbUtil>
de.htw.sdf.photoplatform.persistence.model.Image.setPrice : r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.Double price> = r1
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : if r2 != null goto $r5 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>()
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>()
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : $r5 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>()
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : $r7 = virtualinvoke r4.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role getRole()>()
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
de.htw.sdf.photoplatform.persistence.model.PhotographerData.getHomepage : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String homepage>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setName : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.lang.String name> = r1
de.htw.sdf.photoplatform.webservice.dto.UserData.getPaypalID : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String paypalID>
de.htw.sdf.photoplatform.persistence.model.Collection.setUser : r0.<de.htw.sdf.photoplatform.persistence.model.Collection: de.htw.sdf.photoplatform.persistence.model.User user> = r1
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.persistence.model.Image.setName : r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String name> = r1
de.htw.sdf.photoplatform.persistence.model.Role.getName : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Role: java.lang.String name>
de.htw.sdf.photoplatform.webservice.BaseAPIController.handleBaseException : $r2 = r0.<de.htw.sdf.photoplatform.webservice.BaseAPIController: org.apache.log4j.Logger log>
de.htw.sdf.photoplatform.persistence.model.User.isEnabled : $z0 = r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean enabled>
de.htw.sdf.photoplatform.security.TokenUtils.computeSignature : $r16 = virtualinvoke $r15.<java.lang.String: byte[] getBytes()>()
de.htw.sdf.photoplatform.security.TokenUtils.computeSignature : $r10 = interfaceinvoke r0.<org.springframework.security.core.userdetails.UserDetails: java.lang.String getPassword()>()
de.htw.sdf.photoplatform.security.TokenUtils.computeSignature : $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
de.htw.sdf.photoplatform.security.TokenUtils.computeSignature : goto [?= $r14 = new java.lang.String]
de.htw.sdf.photoplatform.security.TokenUtils.computeSignature : $r4 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.security.TokenUtils.computeSignature : $r5 = interfaceinvoke r0.<org.springframework.security.core.userdetails.UserDetails: java.lang.String getUsername()>()
de.htw.sdf.photoplatform.security.TokenUtils.computeSignature : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("obfuscate")
de.htw.sdf.photoplatform.security.TokenUtils.computeSignature : r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5")
de.htw.sdf.photoplatform.security.TokenUtils.computeSignature : $r14 = new java.lang.String
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : virtualinvoke $r2.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: void setEmail(java.lang.String)>("sergej@test.de")
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r8 = r0.<de.htw.sdf.photoplatform.common.BaseAPITester: com.fasterxml.jackson.databind.ObjectMapper mapper>
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r14 = virtualinvoke $r4.<org.springframework.test.web.servlet.MockMvc: org.springframework.test.web.servlet.ResultActions perform(org.springframework.test.web.servlet.RequestBuilder)>($r13)
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r6 = <org.springframework.http.MediaType: org.springframework.http.MediaType APPLICATION_JSON>
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r2 = new de.htw.sdf.photoplatform.webservice.dto.UserCredential
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : virtualinvoke $r2.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: void setPassword(java.lang.String)>("123")
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r13 = virtualinvoke $r10.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder accept(org.springframework.http.MediaType[])>($r11)
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r4 = r0.<de.htw.sdf.photoplatform.common.BaseAPITester: org.springframework.test.web.servlet.MockMvc mockMvc>
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionsByUser : $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionsByUser : if r1 == null goto (branch)
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionsByUser : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE owner.id = :userId")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionsByUser : $r8 = interfaceinvoke r3.<javax.persistence.Query: java.util.List getResultList()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionsByUser : if i2 <= 0 goto $r8 = interfaceinvoke r3.<javax.persistence.Query: java.util.List getResultList()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionsByUser : if r1 == null goto $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionsByUser : r2 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl: java.lang.StringBuilder initFullDataCollectionSelect()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionsByUser : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionsByUser : if i1 <= 0 goto (branch)
de.htw.sdf.photoplatform.exception.common.AbstractBaseException.getCode : $i0 = r0.<de.htw.sdf.photoplatform.exception.common.AbstractBaseException: int code>
de.htw.sdf.photoplatform.persistence.model.Collection.getCollectionCategories : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Collection: java.util.Set collectionCategories>
de.htw.sdf.photoplatform.webservice.dto.UserData.getPhone : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String phone>
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initFullDataCollectionSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collection.user owner ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initFullDataCollectionSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collection.collectionImages collectionImages ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initFullDataCollectionSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collectionImages.image image ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initFullDataCollectionSelect : $r2 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initFullDataCollectionSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collection.thumbnail thumbnail ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initFullDataCollectionSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collection.collectionCategories collectionCategories ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initFullDataCollectionSelect : return $r2
de.htw.sdf.photoplatform.common.BaseImageTester.initDefaultImage : $r4 = new de.htw.sdf.photoplatform.persistence.model.Image
de.htw.sdf.photoplatform.common.BaseImageTester.initDefaultImage : virtualinvoke $r4.<de.htw.sdf.photoplatform.persistence.model.Image: void setPath(java.lang.String)>(r2)
de.htw.sdf.photoplatform.common.BaseImageTester.initDefaultImage : virtualinvoke $r4.<de.htw.sdf.photoplatform.persistence.model.Image: void setName(java.lang.String)>(r1)
de.htw.sdf.photoplatform.common.BaseImageTester.initDefaultImage : virtualinvoke $r4.<de.htw.sdf.photoplatform.persistence.model.Image: void setEnabled(boolean)>(z1)
de.htw.sdf.photoplatform.common.BaseImageTester.initDefaultImage : virtualinvoke $r4.<de.htw.sdf.photoplatform.persistence.model.Image: void setMetaData(java.lang.String)>("")
de.htw.sdf.photoplatform.common.BaseImageTester.initDefaultImage : $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(10.18)
de.htw.sdf.photoplatform.common.BaseImageTester.initDefaultImage : return $r4
de.htw.sdf.photoplatform.common.BaseImageTester.initDefaultImage : virtualinvoke $r4.<de.htw.sdf.photoplatform.persistence.model.Image: void setMetaData(java.lang.String)>("jpg")
de.htw.sdf.photoplatform.common.BaseImageTester.initDefaultImage : virtualinvoke $r4.<de.htw.sdf.photoplatform.persistence.model.Image: void setPublic(boolean)>(z0)
de.htw.sdf.photoplatform.persistence.model.PhotographerData.getPaypalID : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String paypalID>
de.htw.sdf.photoplatform.webservice.BaseAPIController.getAuthenticatedUser : $r1 = r0.<de.htw.sdf.photoplatform.webservice.BaseAPIController: de.htw.sdf.photoplatform.webservice.controller.AuthorizationController authorizationController>
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : r2 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl: java.lang.StringBuilder initSelectQuery()>()
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE owner.id = :ownerId AND image.id IN (:imageIds)")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : $r9 = interfaceinvoke r3.<javax.persistence.Query: java.util.List getResultList()>()
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : interfaceinvoke r3.<javax.persistence.Query: javax.persistence.Query setParameter(java.lang.String,java.lang.Object)>("imageIds", r1)
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
de.htw.sdf.photoplatform.webservice.dto.UserData.getEmail : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String email>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.create : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.persistence.model.Collection.getCollectionImages : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Collection: java.util.Set collectionImages>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : return $r7
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : virtualinvoke $r11.<de.htw.sdf.photoplatform.persistence.model.UserImage: void setImage(de.htw.sdf.photoplatform.persistence.model.Image)>(r5)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : $r7 = new java.util.ArrayList
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : $r12 = r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.repository.UserImageDAO userImageDAO>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : $r11 = new de.htw.sdf.photoplatform.persistence.model.UserImage
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : virtualinvoke $r11.<de.htw.sdf.photoplatform.persistence.model.UserImage: void setUser(de.htw.sdf.photoplatform.persistence.model.User)>(r1)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : $r10 = r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.repository.ImageDAO imageDAO>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : $i0 = interfaceinvoke r2.<java.util.List: int size()>()
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r11)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.createPhotographImage : virtualinvoke $r11.<de.htw.sdf.photoplatform.persistence.model.UserImage: void setOwner(de.htw.sdf.photoplatform.persistence.model.User)>(r1)
de.htw.sdf.photoplatform.DBUtil.clearTables : $r3 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.CollectionDAO collectionDAO>
de.htw.sdf.photoplatform.DBUtil.clearTables : $r2 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.ImageDAO imageDAO>
de.htw.sdf.photoplatform.DBUtil.clearTables : $r4 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.UserRoleDAO userRoleDAO>
de.htw.sdf.photoplatform.DBUtil.clearTables : $r1 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.CollectionImageDAO collectionImageDAO>
de.htw.sdf.photoplatform.DBUtil.clearTables : $r5 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.UserDAO userDAO>
de.htw.sdf.photoplatform.webservice.dto.UserCredential.getEmail : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: java.lang.String email>
de.htw.sdf.photoplatform.persistence.model.User.getUsername : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String email>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getName : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.lang.String name>
de.htw.sdf.photoplatform.common.Messages.getMessage : $r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.common.Messages: java.lang.String getMessage(java.lang.String,java.lang.Object[])>(r1, null)
de.htw.sdf.photoplatform.common.Messages.getMessage : $r4 = r0.<de.htw.sdf.photoplatform.common.Messages: org.springframework.context.MessageSource messageSource>
de.htw.sdf.photoplatform.webservice.dto.UserData.getId : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.Long id>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getImageIds : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List imageIds>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setThumbnail : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.ImageData thumbnail> = r1
de.htw.sdf.photoplatform.common.BaseAPITester.cancel : virtualinvoke r0.<de.htw.sdf.photoplatform.common.BaseAPITester: void clearTables()>()
de.htw.sdf.photoplatform.persistence.model.UserRole.setRole : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role> = r1
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setDescription : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.lang.String description> = r1
de.htw.sdf.photoplatform.persistence.model.User.getPassword : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String password>
de.htw.sdf.photoplatform.webservice.dto.UserData.getIban : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.lang.String iban>
de.htw.sdf.photoplatform.persistence.model.User.setLastName : r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String lastName> = r1
de.htw.sdf.photoplatform.webservice.dto.UserData.isEnabled : $z0 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: boolean enabled>
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : $r18 = new de.htw.sdf.photoplatform.persistence.model.UserRole
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : $r19 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.UserRoleDAO userRoleDAO>
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r15.<de.htw.sdf.photoplatform.persistence.model.User: void setEnabled(boolean)>(1)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : $r15 = new de.htw.sdf.photoplatform.persistence.model.User
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r15.<de.htw.sdf.photoplatform.persistence.model.User: void setPhotographerData(de.htw.sdf.photoplatform.persistence.model.PhotographerData)>($r16)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r16.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: void setPaypalID(java.lang.String)>(r8)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r18.<de.htw.sdf.photoplatform.persistence.model.UserRole: void setUser(de.htw.sdf.photoplatform.persistence.model.User)>($r15)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r15.<de.htw.sdf.photoplatform.persistence.model.User: void setPassword(java.lang.String)>(r4)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r15.<de.htw.sdf.photoplatform.persistence.model.User: void setAccountNonLocked(boolean)>(1)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r18.<de.htw.sdf.photoplatform.persistence.model.UserRole: void setRole(de.htw.sdf.photoplatform.persistence.model.Role)>(r11)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : $r16 = new de.htw.sdf.photoplatform.persistence.model.PhotographerData
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r16.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: void setHomepage(java.lang.String)>(r7)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r15.<de.htw.sdf.photoplatform.persistence.model.User: void setUsername(java.lang.String)>(r1)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r15.<de.htw.sdf.photoplatform.persistence.model.User: void setLastName(java.lang.String)>(r3)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : return $r15
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : $r17 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.UserDAO userDAO>
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r15.<de.htw.sdf.photoplatform.persistence.model.User: void setFirstName(java.lang.String)>(r2)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r16.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: void setCompany(java.lang.String)>(r5)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r16.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: void setIban(java.lang.String)>(r9)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r16.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: void setSwift(java.lang.String)>(r10)
de.htw.sdf.photoplatform.DBUtil.createDefaultUser : virtualinvoke $r16.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: void setPhone(java.lang.String)>(r6)
de.htw.sdf.photoplatform.webservice.controller.AuthenticationController.login : goto [?= $r9 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()]
de.htw.sdf.photoplatform.webservice.controller.AuthenticationController.login : $r6 = virtualinvoke r1.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: java.lang.String getEmail()>()
de.htw.sdf.photoplatform.webservice.controller.AuthenticationController.login : $r9 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
de.htw.sdf.photoplatform.webservice.controller.AuthenticationController.login : $r5 = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken
de.htw.sdf.photoplatform.webservice.controller.AuthenticationController.login : $r13 = staticinvoke <de.htw.sdf.photoplatform.security.TokenUtils: java.lang.String createToken(org.springframework.security.core.userdetails.UserDetails)>(r26)
de.htw.sdf.photoplatform.webservice.controller.AuthenticationController.login : $z0 = interfaceinvoke r2.<org.springframework.validation.BindingResult: boolean hasErrors()>()
de.htw.sdf.photoplatform.webservice.controller.AuthenticationController.login : $r14 = new de.htw.sdf.photoplatform.webservice.dto.UserData
de.htw.sdf.photoplatform.webservice.controller.AuthenticationController.login : $r8 = r0.<de.htw.sdf.photoplatform.webservice.controller.AuthenticationController: org.springframework.security.authentication.AuthenticationManager authenticationManager>
de.htw.sdf.photoplatform.webservice.controller.AuthenticationController.login : $r10 = r0.<de.htw.sdf.photoplatform.webservice.controller.AuthenticationController: org.springframework.security.core.userdetails.UserDetailsService userDetailsService>
de.htw.sdf.photoplatform.persistence.model.PhotographerData.getIban : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String iban>
de.htw.sdf.photoplatform.persistence.model.User.setEnabled : r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean enabled> = z0
de.htw.sdf.photoplatform.exception.common.ResponseError.getMessage : $r1 = r0.<de.htw.sdf.photoplatform.exception.common.ResponseError: java.lang.String message>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getPublic : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.lang.Boolean isPublic>
de.htw.sdf.photoplatform.persistence.model.Collection.setName : r0.<de.htw.sdf.photoplatform.persistence.model.Collection: java.lang.String name> = r1
de.htw.sdf.photoplatform.webservice.dto.UserData.isBanned : $z0 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: boolean banned>
de.htw.sdf.photoplatform.persistence.model.User.setPhotographerData : r0.<de.htw.sdf.photoplatform.persistence.model.User: de.htw.sdf.photoplatform.persistence.model.PhotographerData photographerData> = r1
de.htw.sdf.photoplatform.exception.common.ResponseError.getStatus : $i0 = r0.<de.htw.sdf.photoplatform.exception.common.ResponseError: int status>
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initCollectionDataSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collection.user owner ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initCollectionDataSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collection.collectionImages collectionImages ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initCollectionDataSelect : $r2 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initCollectionDataSelect : return $r2
de.htw.sdf.photoplatform.persistence.model.User.getPhotographerData : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: de.htw.sdf.photoplatform.persistence.model.PhotographerData photographerData>
de.htw.sdf.photoplatform.webservice.dto.UserData.getRoles : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.UserData: java.util.List roles>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $z1 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>()
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : if r3 == null goto $r11 = new de.htw.sdf.photoplatform.exception.common.ManagerException
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : virtualinvoke $r15.<de.htw.sdf.photoplatform.persistence.model.CollectionImage: void setCollection(de.htw.sdf.photoplatform.persistence.model.Collection)>(r5)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $r18 = new de.htw.sdf.photoplatform.exception.common.ManagerException
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $r12 = r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.repository.UserImageDAO userImageDAO>
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $r10 = new java.util.ArrayList
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $i1 = interfaceinvoke $r10.<java.util.List: int size()>()
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : return $r10
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : r5 = specialinvoke r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.persistence.model.Collection getCollection(java.lang.Long,java.lang.Long)>(r1, r2)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $r15 = new de.htw.sdf.photoplatform.persistence.model.CollectionImage
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $r16 = virtualinvoke r8.<de.htw.sdf.photoplatform.persistence.model.UserImage: de.htw.sdf.photoplatform.persistence.model.Image getImage()>()
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r15)
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.addImagesToCollection : $r17 = r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.repository.CollectionImageDAO collectionImageDAO>
de.htw.sdf.photoplatform.persistence.model.User.setAccountNonLocked : r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean accountNonLocked> = z0
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findById : $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findById : $r7 = interfaceinvoke r3.<javax.persistence.Query: java.lang.Object getSingleResult()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findById : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE user.id = ?1")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findById : r2 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: java.lang.StringBuilder initSelectQuery()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findById : interfaceinvoke r3.<javax.persistence.Query: javax.persistence.Query setParameter(int,java.lang.Object)>(1, r1)
de.htw.sdf.photoplatform.security.TokenUtils.createToken : $r1 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.security.TokenUtils.createToken : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
de.htw.sdf.photoplatform.security.TokenUtils.createToken : $r7 = staticinvoke <de.htw.sdf.photoplatform.security.TokenUtils: java.lang.String computeSignature(org.springframework.security.core.userdetails.UserDetails,long)>(r0, l0)
de.htw.sdf.photoplatform.webservice.dto.UserCredential.setPassword : r0.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: java.lang.String password> = r1
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.toString : $r1 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.persistence.model.PhotographerData.getPhone : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.PhotographerData: java.lang.String phone>
de.htw.sdf.photoplatform.webservice.controller.AuthorizationController.getAuthenticatedUser : $r3 = interfaceinvoke r1.<org.springframework.security.core.Authentication: java.lang.Object getPrincipal()>()
de.htw.sdf.photoplatform.webservice.controller.AuthorizationController.getAuthenticatedUser : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
de.htw.sdf.photoplatform.persistence.model.User.isCredentialsNonExpired : return 1
de.htw.sdf.photoplatform.persistence.model.User.isAdmin : $z0 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean isRoleIncluded(java.lang.String)>("ROLE_ADMIN")
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setImages : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List images> = r1
de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl.getCollectionByUser : $r1 = r0.<de.htw.sdf.photoplatform.manager.impl.PhotographerManagerImpl: de.htw.sdf.photoplatform.repository.CollectionDAO collectionDAO>
de.htw.sdf.photoplatform.persistence.model.User.getLastName : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String lastName>
de.htw.sdf.photoplatform.DBUtil.createUsers : return $r7
de.htw.sdf.photoplatform.DBUtil.createUsers : $r15 = specialinvoke r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.persistence.model.User createDefaultUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,de.htw.sdf.photoplatform.persistence.model.Role)>("become@photographer.de", "Become", "Photographer", "$2a$10$za9rDqJOMBXCWXEG5O4.U.1GqyXoiS0mjuiHwqhCvO9wRU6Z/NdGG", "EGCompany", "030555555", "www.google.de", "mypaypalID", "iban", "swift", r6)
de.htw.sdf.photoplatform.DBUtil.createUsers : $r7 = new java.util.ArrayList
de.htw.sdf.photoplatform.DBUtil.createUsers : $r12 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.RoleDAO roleDAO>
de.htw.sdf.photoplatform.DBUtil.createUsers : $r8 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.RoleDAO roleDAO>
de.htw.sdf.photoplatform.DBUtil.createUsers : $r9 = specialinvoke r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.persistence.model.User createDefaultUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,de.htw.sdf.photoplatform.persistence.model.Role)>("vincent@test.de", "Vincent", "Test", "$2a$10$za9rDqJOMBXCWXEG5O4.U.1GqyXoiS0mjuiHwqhCvO9wRU6Z/NdGG", "EGCompany", "030555555", "wwww.mypage.com", "mypaypalID", null, null, r3)
de.htw.sdf.photoplatform.DBUtil.createUsers : $r10 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.RoleDAO roleDAO>
de.htw.sdf.photoplatform.DBUtil.createUsers : $r11 = specialinvoke r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.persistence.model.User createDefaultUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,de.htw.sdf.photoplatform.persistence.model.Role)>("peter@test.de", "Peter", "Test", "$2a$10$za9rDqJOMBXCWXEG5O4.U.1GqyXoiS0mjuiHwqhCvO9wRU6Z/NdGG", "EGCompany", "030555555", "wwww.mypage.com", "mypaypalID", null, null, r4)
de.htw.sdf.photoplatform.DBUtil.createUsers : $r13 = specialinvoke r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.persistence.model.User createDefaultUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,de.htw.sdf.photoplatform.persistence.model.Role)>("sergej@test.de", "Sergej", "Test", "$2a$10$za9rDqJOMBXCWXEG5O4.U.1GqyXoiS0mjuiHwqhCvO9wRU6Z/NdGG", "EGCompany", "030555555", "www.google.de", "mypaypalID", "iban", "swift", r5)
de.htw.sdf.photoplatform.DBUtil.createUsers : $r14 = r0.<de.htw.sdf.photoplatform.DBUtil: de.htw.sdf.photoplatform.repository.RoleDAO roleDAO>
de.htw.sdf.photoplatform.webservice.BaseAPIController.handleBadRequestException : $r3 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus BAD_REQUEST>
