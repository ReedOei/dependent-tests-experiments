de.htw.sdf.photoplatform.webservice.dto.CollectionData.setThumbnail : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.ImageData thumbnail> = r1
de.htw.sdf.photoplatform.persistence.model.Image.getDescription : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String description>
de.htw.sdf.photoplatform.persistence.model.Image.getThumbPath : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String thumbPath>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setPublic : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.lang.Boolean isPublic> = r1
de.htw.sdf.photoplatform.persistence.model.Image.getName : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String name>
de.htw.sdf.photoplatform.persistence.model.Image.getPrice : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.Double price>
de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity.getUpdatedBy : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseAuditEntity: java.lang.String updatedBy>
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseEntity: java.lang.Long id>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setName : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.lang.String name> = r1
de.htw.sdf.photoplatform.persistence.model.Image.getMobileThumbPath : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String mobileThumbPath>
de.htw.sdf.photoplatform.exception.common.AbstractBaseException.getErrors : $r1 = r0.<de.htw.sdf.photoplatform.exception.common.AbstractBaseException: org.springframework.validation.Errors errors>
de.htw.sdf.photoplatform.webservice.BaseAPIController.handleException : $r6 = virtualinvoke r2.<de.htw.sdf.photoplatform.exception.common.AbstractBaseException: org.springframework.validation.Errors getErrors()>()
de.htw.sdf.photoplatform.webservice.BaseAPIController.handleException : $r4 = new de.htw.sdf.photoplatform.exception.common.ResponseError
de.htw.sdf.photoplatform.webservice.BaseAPIController.handleNotFoundException : $r3 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus NOT_FOUND>
de.htw.sdf.photoplatform.webservice.dto.ImageData.getId : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.ImageData: java.lang.Long id>
de.htw.sdf.photoplatform.webservice.controller.PhotographerController.updateCollection : $z0 = interfaceinvoke r2.<org.springframework.validation.BindingResult: boolean hasErrors()>()
de.htw.sdf.photoplatform.exception.common.AbstractBaseException.getCode : $i0 = r0.<de.htw.sdf.photoplatform.exception.common.AbstractBaseException: int code>
de.htw.sdf.photoplatform.persistence.model.Image.getSmallThumbPath : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String smallThumbPath>
de.htw.sdf.photoplatform.persistence.model.Image.getMime : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String mime>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setImageIds : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List imageIds> = r1
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getImages : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List images>
de.htw.sdf.photoplatform.webservice.BaseAPIController.handleBadRequestException : $r3 = <org.springframework.http.HttpStatus: org.springframework.http.HttpStatus BAD_REQUEST>
de.htw.sdf.photoplatform.persistence.model.Image.getMetaData : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String metaData>
