de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.setClazz : r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: java.lang.Class clazz> = r1
de.htw.sdf.photoplatform.persistence.model.Image.getName : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.Image: java.lang.String name>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.ImageData thumbnail>
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initCollectionAndImagesSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collection.user owner ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initCollectionAndImagesSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collection.collectionImages collectionImages ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initCollectionAndImagesSelect : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH collectionImages.image image ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initCollectionAndImagesSelect : $r2 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.initCollectionAndImagesSelect : return $r2
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionImagesBy : r4 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl: java.lang.StringBuilder initCollectionAndImagesSelect()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionImagesBy : virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AND owner.id = :userId ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionImagesBy : virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AND image.id IN (:imageIds) ")
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionImagesBy : $r10 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.CollectionDAOImpl.findCollectionImagesBy : virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE collection.id = :collectionId ")
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.equals : if r1 == null goto return 0
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.equals : if r0 != r1 goto (branch)
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setImageIds : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List imageIds> = r1
de.htw.sdf.photoplatform.persistence.model.Image.toString : $r1 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setId : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: long id> = l0
