de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r8 = virtualinvoke r1.<de.htw.sdf.photoplatform.webservice.dto.UserPasswordChange: java.lang.String getNewPassword()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r9 = virtualinvoke r1.<de.htw.sdf.photoplatform.webservice.dto.UserPasswordChange: java.lang.String getPasswordConfirm()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r9 = virtualinvoke r1.<de.htw.sdf.photoplatform.webservice.dto.UserPasswordChange: java.lang.String getPasswordConfirm()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : if $z0 != 0
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : if $z0 != 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r25 = new org.springframework.validation.FieldError
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : if $z0 != 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $z1 = interfaceinvoke r2.<org.springframework.validation.BindingResult: boolean hasErrors()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $z1 = interfaceinvoke r2.<org.springframework.validation.BindingResult: boolean hasErrors()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : if $z1 == 0
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : if $z1 == 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r24 = new de.htw.sdf.photoplatform.exception.BadRequestException
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : if $z1 == 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r10 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r10 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : r3 = interfaceinvoke $r10.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : r3 = interfaceinvoke $r10.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r11 = interfaceinvoke r3.<org.springframework.security.core.Authentication: java.lang.Object getPrincipal()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r11 = interfaceinvoke r3.<org.springframework.security.core.Authentication: java.lang.Object getPrincipal()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : r4 = (de.htw.sdf.photoplatform.persistence.model.User) $r11
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : r4 = (de.htw.sdf.photoplatform.persistence.model.User) $r11 >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r12 = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r12 = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r13 = virtualinvoke r4.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String getUsername()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r13 = virtualinvoke r4.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String getUsername()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r14 = virtualinvoke r1.<de.htw.sdf.photoplatform.webservice.dto.UserPasswordChange: java.lang.String getPassword()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r14 = virtualinvoke r1.<de.htw.sdf.photoplatform.webservice.dto.UserPasswordChange: java.lang.String getPassword()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r12.<org.springframework.security.authentication.UsernamePasswordAuthenticationToken: void <init>(java.lang.Object,java.lang.Object)>($r13, $r14)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r12.<org.springframework.security.authentication.UsernamePasswordAuthenticationToken: void <init>(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r15 = r0.<de.htw.sdf.photoplatform.webservice.controller.UserController: org.springframework.security.authentication.AuthenticationManager authenticationManager>
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r15 = r0.<de.htw.sdf.photoplatform.webservice.controller.UserController: org.springframework.security.authentication.AuthenticationManager authenticationManager> >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : r6 = interfaceinvoke $r15.<org.springframework.security.authentication.AuthenticationManager: org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)>($r12)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r15 = r0.<de.htw.sdf.photoplatform.webservice.controller.UserController: org.springframework.security.authentication.AuthenticationManager authenticationManager> >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r28 := @caughtexception
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r29 = new org.springframework.validation.FieldError >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r30 = r0.<de.htw.sdf.photoplatform.webservice.controller.UserController: de.htw.sdf.photoplatform.common.Messages messages>
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r30 = r0.<de.htw.sdf.photoplatform.webservice.controller.UserController: de.htw.sdf.photoplatform.common.Messages messages> >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r31 = virtualinvoke $r30.<de.htw.sdf.photoplatform.common.Messages: java.lang.String getMessage(java.lang.String)>("Password.confirm")
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r31 = virtualinvoke $r30.<de.htw.sdf.photoplatform.common.Messages: java.lang.String getMessage(java.lang.String)>("Password.confirm") >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r29.<org.springframework.validation.FieldError: void <init>(java.lang.String,java.lang.String,java.lang.String)>("changePassword", "password", $r31)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r29.<org.springframework.validation.FieldError: void <init>(java.lang.String,java.lang.String,java.lang.String)>("changePassword", "password", $r31) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : interfaceinvoke r2.<org.springframework.validation.BindingResult: void addError(org.springframework.validation.ObjectError)>($r29)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : interfaceinvoke r2.<org.springframework.validation.BindingResult: void addError(org.springframework.validation.ObjectError)>($r29) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r32 = new de.htw.sdf.photoplatform.exception.BadRequestException
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r32 = new de.htw.sdf.photoplatform.exception.BadRequestException >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r32.<de.htw.sdf.photoplatform.exception.BadRequestException: void <init>(java.lang.String,org.springframework.validation.Errors)>("changePassword", r2)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r32.<de.htw.sdf.photoplatform.exception.BadRequestException: void <init>(java.lang.String,org.springframework.validation.Errors)>("changePassword", r2) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : throw $r32
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : r6 = interfaceinvoke $r15.<org.springframework.security.authentication.AuthenticationManager: org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)>($r12) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : goto [?= $r16 = new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder]
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : r6 = interfaceinvoke $r15.<org.springframework.security.authentication.AuthenticationManager: org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)>($r12) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r28 := @caughtexception
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : goto [?= $r16 = new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder] >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r16 = new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r16 = new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r16.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: void <init>()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r16.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: void <init>()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r17 = virtualinvoke r1.<de.htw.sdf.photoplatform.webservice.dto.UserPasswordChange: java.lang.String getNewPassword()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r17 = virtualinvoke r1.<de.htw.sdf.photoplatform.webservice.dto.UserPasswordChange: java.lang.String getNewPassword()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r18 = virtualinvoke $r16.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>($r17)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r18 = virtualinvoke $r16.<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>($r17) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : virtualinvoke r4.<de.htw.sdf.photoplatform.persistence.model.User: void setPassword(java.lang.String)>($r18)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : virtualinvoke r4.<de.htw.sdf.photoplatform.persistence.model.User: void setPassword(java.lang.String)>($r18) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r19 = r0.<de.htw.sdf.photoplatform.webservice.controller.UserController: de.htw.sdf.photoplatform.manager.UserManager userManager>
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r19 = r0.<de.htw.sdf.photoplatform.webservice.controller.UserController: de.htw.sdf.photoplatform.manager.UserManager userManager> >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : interfaceinvoke $r19.<de.htw.sdf.photoplatform.manager.UserManager: de.htw.sdf.photoplatform.persistence.model.User update(de.htw.sdf.photoplatform.persistence.model.User)>(r4)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : interfaceinvoke $r19.<de.htw.sdf.photoplatform.manager.UserManager: de.htw.sdf.photoplatform.persistence.model.User update(de.htw.sdf.photoplatform.persistence.model.User)>(r4) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r21 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r21 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : interfaceinvoke $r21.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r6)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : interfaceinvoke $r21.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r6) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r22 = staticinvoke <de.htw.sdf.photoplatform.security.TokenUtils: java.lang.String createToken(org.springframework.security.core.userdetails.UserDetails)>(r4)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r22 = staticinvoke <de.htw.sdf.photoplatform.security.TokenUtils: java.lang.String createToken(org.springframework.security.core.userdetails.UserDetails)>(r4) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : virtualinvoke r4.<de.htw.sdf.photoplatform.persistence.model.User: void setSecToken(java.lang.String)>($r22)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : virtualinvoke r4.<de.htw.sdf.photoplatform.persistence.model.User: void setSecToken(java.lang.String)>($r22) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r23 = new de.htw.sdf.photoplatform.webservice.dto.UserData
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r23 = new de.htw.sdf.photoplatform.webservice.dto.UserData >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r23.<de.htw.sdf.photoplatform.webservice.dto.UserData: void <init>(de.htw.sdf.photoplatform.persistence.model.User)>(r4)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r23.<de.htw.sdf.photoplatform.webservice.dto.UserData: void <init>(de.htw.sdf.photoplatform.persistence.model.User)>(r4) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : return $r23
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r24 = new de.htw.sdf.photoplatform.exception.BadRequestException >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r24.<de.htw.sdf.photoplatform.exception.BadRequestException: void <init>(java.lang.String,org.springframework.validation.Errors)>("changePassword", r2)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r24.<de.htw.sdf.photoplatform.exception.BadRequestException: void <init>(java.lang.String,org.springframework.validation.Errors)>("changePassword", r2) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : throw $r24
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r25 = new org.springframework.validation.FieldError >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r26 = r0.<de.htw.sdf.photoplatform.webservice.controller.UserController: de.htw.sdf.photoplatform.common.Messages messages>
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r26 = r0.<de.htw.sdf.photoplatform.webservice.controller.UserController: de.htw.sdf.photoplatform.common.Messages messages> >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r27 = virtualinvoke $r26.<de.htw.sdf.photoplatform.common.Messages: java.lang.String getMessage(java.lang.String)>("Password.confirm")
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $r27 = virtualinvoke $r26.<de.htw.sdf.photoplatform.common.Messages: java.lang.String getMessage(java.lang.String)>("Password.confirm") >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r25.<org.springframework.validation.FieldError: void <init>(java.lang.String,java.lang.String,java.lang.String)>("changePassword", "passwordConfirm", $r27)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : specialinvoke $r25.<org.springframework.validation.FieldError: void <init>(java.lang.String,java.lang.String,java.lang.String)>("changePassword", "passwordConfirm", $r27) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : interfaceinvoke r2.<org.springframework.validation.BindingResult: void addError(org.springframework.validation.ObjectError)>($r25)
de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : interfaceinvoke r2.<org.springframework.validation.BindingResult: void addError(org.springframework.validation.ObjectError)>($r25) >>>>>>>> de.htw.sdf.photoplatform.webservice.controller.UserController.changePassword : $z1 = interfaceinvoke r2.<org.springframework.validation.BindingResult: boolean hasErrors()>()
