de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r2 = new de.htw.sdf.photoplatform.webservice.dto.UserCredential >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : specialinvoke $r2.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: void <init>()>()
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : specialinvoke $r2.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: void <init>()>() >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : virtualinvoke $r2.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: void setEmail(java.lang.String)>("sergej@test.de")
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : virtualinvoke $r2.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: void setEmail(java.lang.String)>("sergej@test.de") >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : virtualinvoke $r2.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: void setPassword(java.lang.String)>("123")
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : virtualinvoke $r2.<de.htw.sdf.photoplatform.webservice.dto.UserCredential: void setPassword(java.lang.String)>("123") >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r4 = r0.<de.htw.sdf.photoplatform.common.BaseAPITester: org.springframework.test.web.servlet.MockMvc mockMvc>
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r4 = r0.<de.htw.sdf.photoplatform.common.BaseAPITester: org.springframework.test.web.servlet.MockMvc mockMvc> >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r3 = newarray (java.lang.Object)[0]
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r3 = newarray (java.lang.Object)[0] >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r5 = staticinvoke <org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder post(java.lang.String,java.lang.Object[])>("/api/user/login", $r3)
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r5 = staticinvoke <org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder post(java.lang.String,java.lang.Object[])>("/api/user/login", $r3) >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r6 = <org.springframework.http.MediaType: org.springframework.http.MediaType APPLICATION_JSON>
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r6 = <org.springframework.http.MediaType: org.springframework.http.MediaType APPLICATION_JSON> >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r7 = virtualinvoke $r5.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder contentType(org.springframework.http.MediaType)>($r6)
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r7 = virtualinvoke $r5.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder contentType(org.springframework.http.MediaType)>($r6) >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r8 = r0.<de.htw.sdf.photoplatform.common.BaseAPITester: com.fasterxml.jackson.databind.ObjectMapper mapper>
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r8 = r0.<de.htw.sdf.photoplatform.common.BaseAPITester: com.fasterxml.jackson.databind.ObjectMapper mapper> >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r9 = virtualinvoke $r8.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.String writeValueAsString(java.lang.Object)>($r2)
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r9 = virtualinvoke $r8.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.String writeValueAsString(java.lang.Object)>($r2) >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r10 = virtualinvoke $r7.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder content(java.lang.String)>($r9)
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r10 = virtualinvoke $r7.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder content(java.lang.String)>($r9) >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r11 = newarray (org.springframework.http.MediaType)[1]
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r11 = newarray (org.springframework.http.MediaType)[1] >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r12 = <org.springframework.http.MediaType: org.springframework.http.MediaType APPLICATION_JSON>
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r12 = <org.springframework.http.MediaType: org.springframework.http.MediaType APPLICATION_JSON> >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r11[0] = $r12
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r11[0] = $r12 >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r13 = virtualinvoke $r10.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder accept(org.springframework.http.MediaType[])>($r11)
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r13 = virtualinvoke $r10.<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder accept(org.springframework.http.MediaType[])>($r11) >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r14 = virtualinvoke $r4.<org.springframework.test.web.servlet.MockMvc: org.springframework.test.web.servlet.ResultActions perform(org.springframework.test.web.servlet.RequestBuilder)>($r13)
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r14 = virtualinvoke $r4.<org.springframework.test.web.servlet.MockMvc: org.springframework.test.web.servlet.ResultActions perform(org.springframework.test.web.servlet.RequestBuilder)>($r13) >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r15 = staticinvoke <org.springframework.test.web.servlet.result.MockMvcResultMatchers: org.springframework.test.web.servlet.result.StatusResultMatchers status()>()
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r15 = staticinvoke <org.springframework.test.web.servlet.result.MockMvcResultMatchers: org.springframework.test.web.servlet.result.StatusResultMatchers status()>() >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r16 = virtualinvoke $r15.<org.springframework.test.web.servlet.result.StatusResultMatchers: org.springframework.test.web.servlet.ResultMatcher isOk()>()
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : $r16 = virtualinvoke $r15.<org.springframework.test.web.servlet.result.StatusResultMatchers: org.springframework.test.web.servlet.ResultMatcher isOk()>() >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : interfaceinvoke $r14.<org.springframework.test.web.servlet.ResultActions: org.springframework.test.web.servlet.ResultActions andExpect(org.springframework.test.web.servlet.ResultMatcher)>($r16)
de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : interfaceinvoke $r14.<org.springframework.test.web.servlet.ResultActions: org.springframework.test.web.servlet.ResultActions andExpect(org.springframework.test.web.servlet.ResultMatcher)>($r16) >>>>>>>> de.htw.sdf.photoplatform.common.BaseAPITester.loginAsPhotograph : return
