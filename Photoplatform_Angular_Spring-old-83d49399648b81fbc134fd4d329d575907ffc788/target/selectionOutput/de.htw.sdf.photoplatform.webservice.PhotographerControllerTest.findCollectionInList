de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z0 == 0
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z0 == 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z0 == 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : return null
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : r6 = (de.htw.sdf.photoplatform.persistence.model.Collection) $r7
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : r6 = (de.htw.sdf.photoplatform.persistence.model.Collection) $r7 >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $r8 = virtualinvoke r6.<de.htw.sdf.photoplatform.persistence.model.Collection: java.lang.String getName()>()
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $r8 = virtualinvoke r6.<de.htw.sdf.photoplatform.persistence.model.Collection: java.lang.String getName()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2)
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2) >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z1 == 0
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z1 == 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $r9 = virtualinvoke r6.<de.htw.sdf.photoplatform.persistence.model.Collection: java.lang.String getDescription()>()
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z1 == 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $r9 = virtualinvoke r6.<de.htw.sdf.photoplatform.persistence.model.Collection: java.lang.String getDescription()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3)
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z2 == 0
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z2 == 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z3 = virtualinvoke r6.<de.htw.sdf.photoplatform.persistence.model.Collection: boolean isPublic()>()
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z2 == 0 >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z3 = virtualinvoke r6.<de.htw.sdf.photoplatform.persistence.model.Collection: boolean isPublic()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z4 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>()
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : $z4 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z3 != $z4
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z3 != $z4 >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : return r6
de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : if $z3 != $z4 >>>>>>>> de.htw.sdf.photoplatform.webservice.PhotographerControllerTest.findCollectionInList : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
