de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.setClazz : r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: java.lang.Class clazz> = r1 >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.ImageData thumbnail>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.ImageData thumbnail> >>>>>>>> de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : return $r1
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : return $r1 >>>>>>>> de.htw.sdf.photoplatform.webservice.dto.CollectionData.setImageIds : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List imageIds> = r1
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setImageIds : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List imageIds> = r1 >>>>>>>> de.htw.sdf.photoplatform.webservice.dto.CollectionData.setId : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: long id> = l0
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setId : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: long id> = l0 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : r2 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl: java.lang.StringBuilder initSelectQuery()>()
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : r2 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl: java.lang.StringBuilder initSelectQuery()>() >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : $r2 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : $r2 = new java.lang.StringBuilder >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT DISTINCT(userImage) FROM UserImage userImage ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT DISTINCT(userImage) FROM UserImage userImage ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.image image ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.image image ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.owner owner ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.owner owner ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.user user ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.user user ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : return $r2
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : return $r2 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE owner.id = :ownerId AND image.id IN (:imageIds)")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE owner.id = :ownerId AND image.id IN (:imageIds)") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl: javax.persistence.Query createQuery(java.lang.String)>($r5)
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl: javax.persistence.Query createQuery(java.lang.String)>($r5) >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r3 = interfaceinvoke $r2.<javax.persistence.EntityManager: javax.persistence.Query createQuery(java.lang.String)>(r1)
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.setClazz : r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: java.lang.Class clazz> = r1 >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.ImageData thumbnail>
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : $r1 = r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: de.htw.sdf.photoplatform.webservice.dto.ImageData thumbnail> >>>>>>>> de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : return $r1
de.htw.sdf.photoplatform.webservice.dto.CollectionData.getThumbnail : return $r1 >>>>>>>> de.htw.sdf.photoplatform.webservice.dto.CollectionData.setImageIds : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List imageIds> = r1
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setImageIds : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: java.util.List imageIds> = r1 >>>>>>>> de.htw.sdf.photoplatform.webservice.dto.CollectionData.setId : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: long id> = l0
de.htw.sdf.photoplatform.webservice.dto.CollectionData.setId : r0.<de.htw.sdf.photoplatform.webservice.dto.CollectionData: long id> = l0 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : r2 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl: java.lang.StringBuilder initSelectQuery()>()
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : r2 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl: java.lang.StringBuilder initSelectQuery()>() >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : $r2 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : $r2 = new java.lang.StringBuilder >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT DISTINCT(userImage) FROM UserImage userImage ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT DISTINCT(userImage) FROM UserImage userImage ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.image image ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.image image ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.owner owner ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.owner owner ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.user user ")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH userImage.user user ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : return $r2
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.initSelectQuery : return $r2 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE owner.id = :ownerId AND image.id IN (:imageIds)")
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE owner.id = :ownerId AND image.id IN (:imageIds)") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl: javax.persistence.Query createQuery(java.lang.String)>($r5)
de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl.getOwnerImages : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserImageDAOImpl: javax.persistence.Query createQuery(java.lang.String)>($r5) >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r3 = interfaceinvoke $r2.<javax.persistence.EntityManager: javax.persistence.Query createQuery(java.lang.String)>(r1)
