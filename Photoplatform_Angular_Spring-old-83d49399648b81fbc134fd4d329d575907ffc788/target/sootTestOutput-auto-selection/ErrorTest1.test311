de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.setClazz : r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: java.lang.Class clazz> = r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.getRole : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role>
de.htw.sdf.photoplatform.persistence.model.UserRole.getRole : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.getRole : return $r1
de.htw.sdf.photoplatform.persistence.model.UserRole.getRole : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.setRole : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role> = r1
de.htw.sdf.photoplatform.persistence.model.UserRole.setRole : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role> = r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.getUser : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.User user>
de.htw.sdf.photoplatform.persistence.model.UserRole.getUser : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.User user> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.getUser : return $r1
de.htw.sdf.photoplatform.persistence.model.UserRole.getUser : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAdmin : $z0 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean isRoleIncluded(java.lang.String)>("ROLE_ADMIN")
de.htw.sdf.photoplatform.persistence.model.User.isAdmin : $z0 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean isRoleIncluded(java.lang.String)>("ROLE_ADMIN") >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>()
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>() >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles>
de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : return $r1
de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : if r2 != null
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : if r2 != null >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : return 0
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : return 0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAdmin : return $z0
de.htw.sdf.photoplatform.persistence.model.User.isAdmin : return $z0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken>
de.htw.sdf.photoplatform.persistence.model.User.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getSecToken : return $r1
de.htw.sdf.photoplatform.persistence.model.User.getSecToken : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.setUser : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.User user> = r1
de.htw.sdf.photoplatform.persistence.model.UserRole.setUser : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.User user> = r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.Role.setName : r0.<de.htw.sdf.photoplatform.persistence.model.Role: java.lang.String name> = r1
de.htw.sdf.photoplatform.persistence.model.Role.setName : r0.<de.htw.sdf.photoplatform.persistence.model.Role: java.lang.String name> = r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRole : $r2 = virtualinvoke r1.<de.htw.sdf.photoplatform.persistence.model.Role: java.lang.Long getId()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRole : $r2 = virtualinvoke r1.<de.htw.sdf.photoplatform.persistence.model.Role: java.lang.Long getId()>() >>>>>>>> de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseEntity: java.lang.Long id>
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseEntity: java.lang.Long id> >>>>>>>> de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : return $r1
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : return $r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRole : $r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: java.util.List findByRoleId(java.lang.Long)>($r2)
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRole : $r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: java.util.List findByRoleId(java.lang.Long)>($r2) >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : $r4 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : $r4 = new java.lang.StringBuilder >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT user FROM User user ")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT user FROM User user ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH user.userRoles userRoles ")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH user.userRoles userRoles ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE userRoles.role.id = ?1")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE userRoles.role.id = ?1") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: javax.persistence.Query createQuery(java.lang.String)>($r7)
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: javax.persistence.Query createQuery(java.lang.String)>($r7) >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r3 = interfaceinvoke $r2.<javax.persistence.EntityManager: javax.persistence.Query createQuery(java.lang.String)>(r1)
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.setClazz : r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: java.lang.Class clazz> = r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.getRole : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role>
de.htw.sdf.photoplatform.persistence.model.UserRole.getRole : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.getRole : return $r1
de.htw.sdf.photoplatform.persistence.model.UserRole.getRole : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.setRole : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role> = r1
de.htw.sdf.photoplatform.persistence.model.UserRole.setRole : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.Role role> = r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.getUser : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.User user>
de.htw.sdf.photoplatform.persistence.model.UserRole.getUser : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.User user> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.getUser : return $r1
de.htw.sdf.photoplatform.persistence.model.UserRole.getUser : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAdmin : $z0 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean isRoleIncluded(java.lang.String)>("ROLE_ADMIN")
de.htw.sdf.photoplatform.persistence.model.User.isAdmin : $z0 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean isRoleIncluded(java.lang.String)>("ROLE_ADMIN") >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>()
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>() >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles>
de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : return $r1
de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : if r2 != null
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : if r2 != null >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : return 0
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : return 0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAdmin : return $z0
de.htw.sdf.photoplatform.persistence.model.User.isAdmin : return $z0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken>
de.htw.sdf.photoplatform.persistence.model.User.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getSecToken : return $r1
de.htw.sdf.photoplatform.persistence.model.User.getSecToken : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.UserRole.setUser : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.User user> = r1
de.htw.sdf.photoplatform.persistence.model.UserRole.setUser : r0.<de.htw.sdf.photoplatform.persistence.model.UserRole: de.htw.sdf.photoplatform.persistence.model.User user> = r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.Role.setName : r0.<de.htw.sdf.photoplatform.persistence.model.Role: java.lang.String name> = r1
de.htw.sdf.photoplatform.persistence.model.Role.setName : r0.<de.htw.sdf.photoplatform.persistence.model.Role: java.lang.String name> = r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRole : $r2 = virtualinvoke r1.<de.htw.sdf.photoplatform.persistence.model.Role: java.lang.Long getId()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRole : $r2 = virtualinvoke r1.<de.htw.sdf.photoplatform.persistence.model.Role: java.lang.Long getId()>() >>>>>>>> de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseEntity: java.lang.Long id>
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : $r1 = r0.<de.htw.sdf.photoplatform.persistence.AbstractBaseEntity: java.lang.Long id> >>>>>>>> de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : return $r1
de.htw.sdf.photoplatform.persistence.AbstractBaseEntity.getId : return $r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRole : $r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: java.util.List findByRoleId(java.lang.Long)>($r2)
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRole : $r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: java.util.List findByRoleId(java.lang.Long)>($r2) >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : $r4 = new java.lang.StringBuilder
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : $r4 = new java.lang.StringBuilder >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT user FROM User user ")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT user FROM User user ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH user.userRoles userRoles ")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LEFT JOIN FETCH user.userRoles userRoles ") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE userRoles.role.id = ?1")
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHERE userRoles.role.id = ?1") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: javax.persistence.Query createQuery(java.lang.String)>($r7)
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.findByRoleId : r3 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserDAOImpl: javax.persistence.Query createQuery(java.lang.String)>($r7) >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.createQuery : $r3 = interfaceinvoke $r2.<javax.persistence.EntityManager: javax.persistence.Query createQuery(java.lang.String)>(r1)
