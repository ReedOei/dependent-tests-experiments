de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.setClazz : r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: java.lang.Class clazz> = r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : $r1 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager getEntityManager()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : $r1 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager getEntityManager()>() >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : $r2 = new de.htw.sdf.photoplatform.security.XAuthTokenFilter
de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : $r2 = new de.htw.sdf.photoplatform.security.XAuthTokenFilter >>>>>>>> de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : $r3 = r0.<de.htw.sdf.photoplatform.security.XAuthTokenConfigurer: org.springframework.security.core.userdetails.UserDetailsService userDetailsService>
de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : $r3 = r0.<de.htw.sdf.photoplatform.security.XAuthTokenConfigurer: org.springframework.security.core.userdetails.UserDetailsService userDetailsService> >>>>>>>> de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : specialinvoke $r2.<de.htw.sdf.photoplatform.security.XAuthTokenFilter: void <init>(org.springframework.security.core.userdetails.UserDetailsService)>($r3)
de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : specialinvoke $r2.<de.htw.sdf.photoplatform.security.XAuthTokenFilter: void <init>(org.springframework.security.core.userdetails.UserDetailsService)>($r3) >>>>>>>> de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : virtualinvoke r1.<org.springframework.security.config.'annotation'.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.builders.HttpSecurity addFilterBefore(javax.servlet.Filter,java.lang.Class)>($r2, class "Lorg/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter;")
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.setClazz : r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: java.lang.Class clazz> = r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : $r1 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager getEntityManager()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : $r1 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager getEntityManager()>() >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : $r2 = new de.htw.sdf.photoplatform.security.XAuthTokenFilter
de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : $r2 = new de.htw.sdf.photoplatform.security.XAuthTokenFilter >>>>>>>> de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : $r3 = r0.<de.htw.sdf.photoplatform.security.XAuthTokenConfigurer: org.springframework.security.core.userdetails.UserDetailsService userDetailsService>
de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : $r3 = r0.<de.htw.sdf.photoplatform.security.XAuthTokenConfigurer: org.springframework.security.core.userdetails.UserDetailsService userDetailsService> >>>>>>>> de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : specialinvoke $r2.<de.htw.sdf.photoplatform.security.XAuthTokenFilter: void <init>(org.springframework.security.core.userdetails.UserDetailsService)>($r3)
de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : specialinvoke $r2.<de.htw.sdf.photoplatform.security.XAuthTokenFilter: void <init>(org.springframework.security.core.userdetails.UserDetailsService)>($r3) >>>>>>>> de.htw.sdf.photoplatform.security.XAuthTokenConfigurer.configure : virtualinvoke r1.<org.springframework.security.config.'annotation'.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.builders.HttpSecurity addFilterBefore(javax.servlet.Filter,java.lang.Class)>($r2, class "Lorg/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter;")
