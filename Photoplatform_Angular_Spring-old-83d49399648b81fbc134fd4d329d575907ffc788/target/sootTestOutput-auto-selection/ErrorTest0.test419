de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.setClazz : r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: java.lang.Class clazz> = r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : $r1 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager getEntityManager()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : $r1 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager getEntityManager()>() >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAdmin : $z0 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean isRoleIncluded(java.lang.String)>("ROLE_ADMIN")
de.htw.sdf.photoplatform.persistence.model.User.isAdmin : $z0 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean isRoleIncluded(java.lang.String)>("ROLE_ADMIN") >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>()
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>() >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles>
de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : return $r1
de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : if r2 != null
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : if r2 != null >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : return 0
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : return 0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAdmin : return $z0
de.htw.sdf.photoplatform.persistence.model.User.isAdmin : return $z0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken>
de.htw.sdf.photoplatform.persistence.model.User.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getSecToken : return $r1
de.htw.sdf.photoplatform.persistence.model.User.getSecToken : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAccountNonLocked : $z0 = r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean accountNonLocked>
de.htw.sdf.photoplatform.persistence.model.User.isAccountNonLocked : $z0 = r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean accountNonLocked> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAccountNonLocked : return $z0
de.htw.sdf.photoplatform.persistence.model.User.isAccountNonLocked : return $z0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isCredentialsNonExpired : return 1
de.htw.sdf.photoplatform.persistence.model.User.isCredentialsNonExpired : return 1 >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.update : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.update : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.update : $r3 = interfaceinvoke $r2.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r1)
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.setClazz : r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: java.lang.Class clazz> = r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : $r1 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager getEntityManager()>()
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : $r1 = specialinvoke r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager getEntityManager()>() >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : $r1 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : return $r1
de.htw.sdf.photoplatform.repository.impl.UserDAOImpl.getEntityManager : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAdmin : $z0 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean isRoleIncluded(java.lang.String)>("ROLE_ADMIN")
de.htw.sdf.photoplatform.persistence.model.User.isAdmin : $z0 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean isRoleIncluded(java.lang.String)>("ROLE_ADMIN") >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>()
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : r2 = virtualinvoke r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List getUserRoles()>() >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles>
de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.util.List userRoles> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : return $r1
de.htw.sdf.photoplatform.persistence.model.User.getUserRoles : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : if r2 != null
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : if r2 != null >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : return 0
de.htw.sdf.photoplatform.persistence.model.User.isRoleIncluded : return 0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAdmin : return $z0
de.htw.sdf.photoplatform.persistence.model.User.isAdmin : return $z0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken>
de.htw.sdf.photoplatform.persistence.model.User.getSecToken : $r1 = r0.<de.htw.sdf.photoplatform.persistence.model.User: java.lang.String secToken> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.getSecToken : return $r1
de.htw.sdf.photoplatform.persistence.model.User.getSecToken : return $r1 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAccountNonLocked : $z0 = r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean accountNonLocked>
de.htw.sdf.photoplatform.persistence.model.User.isAccountNonLocked : $z0 = r0.<de.htw.sdf.photoplatform.persistence.model.User: boolean accountNonLocked> >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isAccountNonLocked : return $z0
de.htw.sdf.photoplatform.persistence.model.User.isAccountNonLocked : return $z0 >>>>>>>> de.htw.sdf.photoplatform.persistence.model.User.isCredentialsNonExpired : return 1
de.htw.sdf.photoplatform.persistence.model.User.isCredentialsNonExpired : return 1 >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.update : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager>
de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.update : $r2 = r0.<de.htw.sdf.photoplatform.repository.common.GenericDAOImpl: javax.persistence.EntityManager entityManager> >>>>>>>> de.htw.sdf.photoplatform.repository.common.GenericDAOImpl.update : $r3 = interfaceinvoke $r2.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r1)
