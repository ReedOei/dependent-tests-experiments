com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r6 = interfaceinvoke r2.<com.alibaba.dubbo.config.'annotation'.Service: java.lang.Class interfaceClass()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $r3 = <java.lang.Void: java.lang.Class TYPE>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $r3 = <java.lang.Void: java.lang.Class TYPE> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r6)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r6) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $z0 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r6 = null
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if r6 != null
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if r6 != null >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r8 = virtualinvoke r1.<java.lang.Class: java.lang.Class[] getInterfaces()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if r6 != null >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r6, "@Service interfaceClass() or interfaceName() or interface class must be present!")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r6, "@Service interfaceClass() or interfaceName() or interface class must be present!") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $z3 = virtualinvoke r6.<java.lang.Class: boolean isInterface()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $z3 = virtualinvoke r6.<java.lang.Class: boolean isInterface()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z3, "The type that was annotated @Service is not an interface!")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : staticinvoke <org.springframework.util.Assert: void isTrue(boolean,java.lang.String)>($z3, "The type that was annotated @Service is not an interface!") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : return r6
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r8 = virtualinvoke r1.<java.lang.Class: java.lang.Class[] getInterfaces()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $i0 = lengthof r8
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $i0 = lengthof r8 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $i0 <= 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $i0 <= 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r6 = r8[0]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $i0 <= 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r6, "@Service interfaceClass() or interfaceName() or interface class must be present!")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r6 = r8[0] >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r6, "@Service interfaceClass() or interfaceName() or interface class must be present!")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r6 = null >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r7 = interfaceinvoke r2.<com.alibaba.dubbo.config.'annotation'.Service: java.lang.String interfaceName()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r7 = interfaceinvoke r2.<com.alibaba.dubbo.config.'annotation'.Service: java.lang.String interfaceName()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r7)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r7) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $z1 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $r4 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: java.lang.ClassLoader classLoader>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if r6 != null
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $r4 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: java.lang.ClassLoader classLoader> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $z2 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>(r7, $r4)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $z2 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>(r7, $r4) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $z2 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $z2 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $r5 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: java.lang.ClassLoader classLoader>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if $z2 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if r6 != null
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : $r5 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: java.lang.ClassLoader classLoader> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r6 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>(r7, $r5)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : r6 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>(r7, $r5) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveServiceInterfaceClass : if r6 != null
