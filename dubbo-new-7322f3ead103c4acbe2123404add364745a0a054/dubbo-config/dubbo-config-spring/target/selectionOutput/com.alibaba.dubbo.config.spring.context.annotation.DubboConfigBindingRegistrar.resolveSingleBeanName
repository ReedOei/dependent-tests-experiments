com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("id") >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : r7 = (java.lang.String) $r5
com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : r7 = (java.lang.String) $r5 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r7)
com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(r7) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : if $z0 != 0
com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : if $z0 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : r4 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class)>(r1)
com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : if $z0 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : return r7
com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : r4 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : $r6 = virtualinvoke r4.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>()
com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : $r6 = virtualinvoke r4.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>() >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : r7 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionReaderUtils: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)>($r6, r3)
com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : r7 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionReaderUtils: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)>($r6, r3) >>>>>>>> com.alibaba.dubbo.config.spring.context.annotation.DubboConfigBindingRegistrar.resolveSingleBeanName : return r7
