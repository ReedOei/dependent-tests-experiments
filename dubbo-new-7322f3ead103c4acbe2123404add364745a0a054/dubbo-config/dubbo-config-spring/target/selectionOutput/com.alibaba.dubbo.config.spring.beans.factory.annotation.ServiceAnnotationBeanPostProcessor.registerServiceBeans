com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r9 = new com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r11 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: org.springframework.core.env.Environment environment>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r11 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: org.springframework.core.env.Environment environment> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r10 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: org.springframework.core.io.ResourceLoader resourceLoader>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r10 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: org.springframework.core.io.ResourceLoader resourceLoader> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : specialinvoke $r9.<com.alibaba.dubbo.config.spring.context.'annotation'.DubboClassPathBeanDefinitionScanner: void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.core.env.Environment,org.springframework.core.io.ResourceLoader)>(r2, $r11, $r10)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : specialinvoke $r9.<com.alibaba.dubbo.config.spring.context.'annotation'.DubboClassPathBeanDefinitionScanner: void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.core.env.Environment,org.springframework.core.io.ResourceLoader)>(r2, $r11, $r10) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r4 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: org.springframework.beans.factory.support.BeanNameGenerator resolveBeanNameGenerator(org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r2)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r4 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: org.springframework.beans.factory.support.BeanNameGenerator resolveBeanNameGenerator(org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r2) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : virtualinvoke $r9.<com.alibaba.dubbo.config.spring.context.'annotation'.DubboClassPathBeanDefinitionScanner: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)>(r4)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : virtualinvoke $r9.<com.alibaba.dubbo.config.spring.context.'annotation'.DubboClassPathBeanDefinitionScanner: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)>(r4) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r12 = new org.springframework.core.type.filter.AnnotationTypeFilter
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r12 = new org.springframework.core.type.filter.AnnotationTypeFilter >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : specialinvoke $r12.<org.springframework.core.type.filter.AnnotationTypeFilter: void <init>(java.lang.Class)>(class "Lcom/alibaba/dubbo/config/annotation/Service;")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : specialinvoke $r12.<org.springframework.core.type.filter.AnnotationTypeFilter: void <init>(java.lang.Class)>(class "Lcom/alibaba/dubbo/config/annotation/Service;") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : virtualinvoke $r9.<com.alibaba.dubbo.config.spring.context.'annotation'.DubboClassPathBeanDefinitionScanner: void addIncludeFilter(org.springframework.core.type.filter.TypeFilter)>($r12)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : virtualinvoke $r9.<com.alibaba.dubbo.config.spring.context.'annotation'.DubboClassPathBeanDefinitionScanner: void addIncludeFilter(org.springframework.core.type.filter.TypeFilter)>($r12) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z0 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : return
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r6 = (java.lang.String) $r13
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r6 = (java.lang.String) $r13 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r14 = newarray (java.lang.String)[1]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r14 = newarray (java.lang.String)[1] >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r14[0] = r6
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r14[0] = r6 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r31 = virtualinvoke $r9.<com.alibaba.dubbo.config.spring.context.'annotation'.DubboClassPathBeanDefinitionScanner: java.util.Set doScan(java.lang.String[])>($r14)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r31 = virtualinvoke $r9.<com.alibaba.dubbo.config.spring.context.'annotation'.DubboClassPathBeanDefinitionScanner: java.util.Set doScan(java.lang.String[])>($r14) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z1 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r31)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z1 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r31) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z1 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r28 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z6 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r31)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z6 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r31) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z6 != 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z6 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r7 = interfaceinvoke r31.<java.util.Set: java.util.Iterator iterator()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z6 != 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r15 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r15 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z2 = interfaceinvoke $r15.<com.alibaba.dubbo.common.logger.Logger: boolean isWarnEnabled()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z2 = interfaceinvoke $r15.<com.alibaba.dubbo.common.logger.Logger: boolean isWarnEnabled()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z2 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z2 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r16 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z2 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r16 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : interfaceinvoke $r16.<com.alibaba.dubbo.common.logger.Logger: void warn(java.lang.String)>("No Spring Bean annotating Dubbo\'s @Service was found in Spring BeanFactory")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : interfaceinvoke $r16.<com.alibaba.dubbo.common.logger.Logger: void warn(java.lang.String)>("No Spring Bean annotating Dubbo\'s @Service was found in Spring BeanFactory") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r7 = interfaceinvoke r31.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z3 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z3 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r27 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z3 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r17 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r17 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z4 = interfaceinvoke $r17.<com.alibaba.dubbo.common.logger.Logger: boolean isInfoEnabled()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z4 = interfaceinvoke $r17.<com.alibaba.dubbo.common.logger.Logger: boolean isInfoEnabled()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z4 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z4 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r19 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z4 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r19 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r18 = new java.lang.StringBuilder
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r18 = new java.lang.StringBuilder >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $i0 = interfaceinvoke r31.<java.util.Set: int size()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $i0 = interfaceinvoke r31.<java.util.Set: int size()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" annotated Dubbo\'s @Service Components { ")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" annotated Dubbo\'s @Service Components { ") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" } were scanned under package[")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" } were scanned under package[") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : interfaceinvoke $r19.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>($r26)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : interfaceinvoke $r19.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>($r26) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : goto [?= (branch)]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : goto [?= (branch)] >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r27 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r8 = (org.springframework.beans.factory.config.BeanDefinitionHolder) $r27
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r8 = (org.springframework.beans.factory.config.BeanDefinitionHolder) $r27 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: void registerServiceBean(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r8, r2)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: void registerServiceBean(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r8, r2) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r28 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z5 = interfaceinvoke $r28.<com.alibaba.dubbo.common.logger.Logger: boolean isInfoEnabled()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z5 = interfaceinvoke $r28.<com.alibaba.dubbo.common.logger.Logger: boolean isInfoEnabled()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z5 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z5 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r29 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : if $z5 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r31 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: java.util.Set findServiceBeanDefinitionHolders(org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner,java.lang.String,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)>($r9, r6, r2, r4)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r31 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: java.util.Set findServiceBeanDefinitionHolders(org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner,java.lang.String,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)>($r9, r6, r2, r4) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $z6 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r31)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r29 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : interfaceinvoke $r29.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>("No Spring Bean annotating Dubbo\'s @Service was found in Spring BeanFactory , it maybe that some bean was also annotated @Component .")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : interfaceinvoke $r29.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>("No Spring Bean annotating Dubbo\'s @Service was found in Spring BeanFactory , it maybe that some bean was also annotated @Component .") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r30 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : $r30 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : interfaceinvoke $r30.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>("It will try to find all Bean types annotating Dubbo\'s @Service from all Bean Definitions")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : interfaceinvoke $r30.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>("It will try to find all Bean types annotating Dubbo\'s @Service from all Bean Definitions") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans : r31 = specialinvoke r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: java.util.Set findServiceBeanDefinitionHolders(org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner,java.lang.String,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)>($r9, r6, r2, r4)
