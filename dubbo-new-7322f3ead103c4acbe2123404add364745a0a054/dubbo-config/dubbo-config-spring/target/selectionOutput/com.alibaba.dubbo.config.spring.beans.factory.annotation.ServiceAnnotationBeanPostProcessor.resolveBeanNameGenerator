com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : r17 = null >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $z0 = r1 instanceof org.springframework.beans.factory.config.SingletonBeanRegistry
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $z0 = r1 instanceof org.springframework.beans.factory.config.SingletonBeanRegistry >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if $z0 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r14 = class "Lorg/springframework/beans/factory/config/SingletonBeanRegistry;"
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if $z0 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if r17 != null
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if r17 != null >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r3 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if r17 != null >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : return r17
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r3 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $z1 = interfaceinvoke $r3.<com.alibaba.dubbo.common.logger.Logger: boolean isInfoEnabled()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $z1 = interfaceinvoke $r3.<com.alibaba.dubbo.common.logger.Logger: boolean isInfoEnabled()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if $z1 == 0
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r5 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if $z1 == 0 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r4 = new org.springframework.context.annotation.AnnotationBeanNameGenerator
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r4 = new org.springframework.context.annotation.AnnotationBeanNameGenerator >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : specialinvoke $r4.<org.springframework.context.'annotation'.AnnotationBeanNameGenerator: void <init>()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : specialinvoke $r4.<org.springframework.context.'annotation'.AnnotationBeanNameGenerator: void <init>()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : r17 = $r4
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : r17 = $r4 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : return r17
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r5 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : interfaceinvoke $r5.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>("BeanNameGenerator bean can\'t be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator]")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : interfaceinvoke $r5.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>("BeanNameGenerator bean can\'t be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator]") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r7 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger>
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r7 = r0.<com.alibaba.dubbo.config.spring.beans.factory.'annotation'.ServiceAnnotationBeanPostProcessor: com.alibaba.dubbo.common.logger.Logger logger> >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r6 = new java.lang.StringBuilder
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r6 = new java.lang.StringBuilder >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BeanNameGenerator will be a instance of ")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BeanNameGenerator will be a instance of ") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r9 = class "Lorg/springframework/context/annotation/AnnotationBeanNameGenerator;"
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r9 = class "Lorg/springframework/context/annotation/AnnotationBeanNameGenerator;" >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , it maybe a potential problem on bean name generation.")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , it maybe a potential problem on bean name generation.") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : interfaceinvoke $r7.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>($r13)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : interfaceinvoke $r7.<com.alibaba.dubbo.common.logger.Logger: void info(java.lang.String)>($r13) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r4 = new org.springframework.context.annotation.AnnotationBeanNameGenerator
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r14 = class "Lorg/springframework/beans/factory/config/SingletonBeanRegistry;" >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r1)
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r1) >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : r2 = (org.springframework.beans.factory.config.SingletonBeanRegistry) $r15
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : r2 = (org.springframework.beans.factory.config.SingletonBeanRegistry) $r15 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r16 = interfaceinvoke r2.<org.springframework.beans.factory.config.SingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String)>("org.springframework.context.annotation.internalConfigurationBeanNameGenerator")
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : $r16 = interfaceinvoke r2.<org.springframework.beans.factory.config.SingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String)>("org.springframework.context.annotation.internalConfigurationBeanNameGenerator") >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : r17 = (org.springframework.beans.factory.support.BeanNameGenerator) $r16
com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : r17 = (org.springframework.beans.factory.support.BeanNameGenerator) $r16 >>>>>>>> com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.resolveBeanNameGenerator : if r17 != null
