org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r2 = r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r2 = r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : entermonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : entermonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionKey>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : entermonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r9 = $r22 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r2
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r9 = $r22 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : throw r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionKey> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r12 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>($r11)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r11 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionKey> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r12 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r3 = (java.util.List) $r12
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r12 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r3 = (java.util.List) $r12 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r3 = (java.util.List) $r12 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean initialized>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r4 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean initialized> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z0 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean initialized> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r13 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String userName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r15 = new java.util.ArrayList
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r15 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r15.<java.util.ArrayList: void <init>(java.util.Collection)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r15 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r15.<java.util.ArrayList: void <init>(java.util.Collection)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r5 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : specialinvoke $r15.<java.util.ArrayList: void <init>(java.util.Collection)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r5 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r5 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r2
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r6 = (org.apache.zeppelin.interpreter.Interpreter) $r16
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r6 = (org.apache.zeppelin.interpreter.Interpreter) $r16 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r7 = r6
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r6 = (org.apache.zeppelin.interpreter.Interpreter) $r16 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r7 = r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z2 = r7 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r7 = r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z2 = r7 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z2 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z2 = r7 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r17 = (org.apache.zeppelin.interpreter.WrappedInterpreter) r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r18 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r7
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r8 = $r19 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r20 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r8 = $r19 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r20 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r21 = virtualinvoke r7.<org.apache.zeppelin.interpreter.Interpreter: java.lang.String getClassName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r20 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r21 = virtualinvoke r7.<org.apache.zeppelin.interpreter.Interpreter: java.lang.String getClassName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to initialize interpreter: {}. Remove it from interpreterGroup", $r21)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r21 = virtualinvoke r7.<org.apache.zeppelin.interpreter.Interpreter: java.lang.String getClassName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to initialize interpreter: {}. Remove it from interpreterGroup", $r21) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r7)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to initialize interpreter: {}. Remove it from interpreterGroup", $r21) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r7) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r18 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r18 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r18 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void init()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void init()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r19 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void init()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke $r18.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void init()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= (branch)]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r17 = (org.apache.zeppelin.interpreter.WrappedInterpreter) r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r7 = interfaceinvoke $r17.<org.apache.zeppelin.interpreter.WrappedInterpreter: org.apache.zeppelin.interpreter.Interpreter getInnerInterpreter()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r17 = (org.apache.zeppelin.interpreter.WrappedInterpreter) r7 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r7 = interfaceinvoke $r17.<org.apache.zeppelin.interpreter.WrappedInterpreter: org.apache.zeppelin.interpreter.Interpreter getInnerInterpreter()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z2 = r7 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : r7 = interfaceinvoke $r17.<org.apache.zeppelin.interpreter.WrappedInterpreter: org.apache.zeppelin.interpreter.Interpreter getInnerInterpreter()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z2 = r7 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $z2 = r7 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : goto [?= $z2 = r7 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r13 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String userName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.Boolean isUserImpersonate>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r13 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String userName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.Boolean isUserImpersonate> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int reference(org.apache.zeppelin.interpreter.InterpreterGroup,java.lang.String,java.lang.Boolean)>(r1, $r13, $r14)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r14 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.Boolean isUserImpersonate> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int reference(org.apache.zeppelin.interpreter.InterpreterGroup,java.lang.String,java.lang.Boolean)>(r1, $r13, $r14) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r15 = new java.util.ArrayList
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : virtualinvoke r4.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int reference(org.apache.zeppelin.interpreter.InterpreterGroup,java.lang.String,java.lang.Boolean)>(r1, $r13, $r14) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open : $r22 := @caughtexception
