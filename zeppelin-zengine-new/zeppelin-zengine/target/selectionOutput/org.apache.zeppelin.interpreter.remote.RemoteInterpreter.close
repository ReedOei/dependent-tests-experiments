org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r1 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r2 = r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r2 = r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : entermonitor r1
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : entermonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionKey>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : entermonitor r1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r8 = $r20 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : exitmonitor r2
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r8 = $r20 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : throw r8
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionKey> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r11 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>($r10)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: java.lang.String sessionKey> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r11 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r3 = (java.util.List) $r11
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r11 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.Object get(java.lang.Object)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r3 = (java.util.List) $r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean initialized>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r3 = (java.util.List) $r11 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean initialized> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z0 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: boolean initialized> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r12 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getInterpreterProcess()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r13 = new java.util.ArrayList
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r13 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : specialinvoke $r13.<java.util.ArrayList: void <init>(java.util.Collection)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r13 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : specialinvoke $r13.<java.util.ArrayList: void <init>(java.util.Collection)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r4 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : specialinvoke $r13.<java.util.ArrayList: void <init>(java.util.Collection)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r4 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r4 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z1 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : exitmonitor r2
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= return]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : exitmonitor r2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r5 = (org.apache.zeppelin.interpreter.Interpreter) $r14
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r5 = (org.apache.zeppelin.interpreter.Interpreter) $r14 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r6 = r5
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r5 = (org.apache.zeppelin.interpreter.Interpreter) $r14 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r6 = r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z2 = r6 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r6 = r5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z2 = r6 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z2 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z2 = r6 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r15 = (org.apache.zeppelin.interpreter.WrappedInterpreter) r6
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r16 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r6
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : if $z2 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r7 = $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r18 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r7 = $r17 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r18 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r19 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: java.lang.String getClassName()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r18 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r19 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: java.lang.String getClassName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to initialize interpreter: {}. Remove it from interpreterGroup", $r19)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r19 = virtualinvoke r6.<org.apache.zeppelin.interpreter.Interpreter: java.lang.String getClassName()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to initialize interpreter: {}. Remove it from interpreterGroup", $r19) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r6)
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Failed to initialize interpreter: {}. Remove it from interpreterGroup", $r19) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r6) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r16 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r16 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r16 = (org.apache.zeppelin.interpreter.remote.RemoteInterpreter) r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : virtualinvoke $r16.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void closeInterpreter()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : virtualinvoke $r16.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void closeInterpreter()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r17 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : virtualinvoke $r16.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void closeInterpreter()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : virtualinvoke $r16.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: void closeInterpreter()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= (branch)]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r15 = (org.apache.zeppelin.interpreter.WrappedInterpreter) r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r6 = interfaceinvoke $r15.<org.apache.zeppelin.interpreter.WrappedInterpreter: org.apache.zeppelin.interpreter.Interpreter getInnerInterpreter()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r15 = (org.apache.zeppelin.interpreter.WrappedInterpreter) r6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r6 = interfaceinvoke $r15.<org.apache.zeppelin.interpreter.WrappedInterpreter: org.apache.zeppelin.interpreter.Interpreter getInnerInterpreter()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= $z2 = r6 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter]
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : r6 = interfaceinvoke $r15.<org.apache.zeppelin.interpreter.WrappedInterpreter: org.apache.zeppelin.interpreter.Interpreter getInnerInterpreter()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= $z2 = r6 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $z2 = r6 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : goto [?= $z2 = r6 instanceof org.apache.zeppelin.interpreter.WrappedInterpreter] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r12 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int dereference()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r12 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreter: org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess getInterpreterProcess()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int dereference()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r13 = new java.util.ArrayList
org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : virtualinvoke $r12.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess: int dereference()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreter.close : $r20 := @caughtexception
