org.apache.zeppelin.helium.Helium.getSinglePackageInfo : r2 = virtualinvoke r0.<org.apache.zeppelin.helium.Helium: java.util.Map getAllPackageInfo(boolean,java.lang.String)>(0, r1) >>>>>>>> org.apache.zeppelin.helium.Helium.getSinglePackageInfo : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.zeppelin.helium.Helium.getSinglePackageInfo : $z0 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.helium.Helium.getSinglePackageInfo : if $z0 != 0
org.apache.zeppelin.helium.Helium.getSinglePackageInfo : if $z0 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getSinglePackageInfo : $r3 = new java.util.ArrayList
org.apache.zeppelin.helium.Helium.getSinglePackageInfo : if $z0 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getSinglePackageInfo : $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.helium.Helium.getSinglePackageInfo : $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.helium.Helium.getSinglePackageInfo : $r5 = (java.util.List) $r4
org.apache.zeppelin.helium.Helium.getSinglePackageInfo : $r5 = (java.util.List) $r4 >>>>>>>> org.apache.zeppelin.helium.Helium.getSinglePackageInfo : return $r5
org.apache.zeppelin.helium.Helium.getSinglePackageInfo : $r3 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.helium.Helium.getSinglePackageInfo : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.apache.zeppelin.helium.Helium.getSinglePackageInfo : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getSinglePackageInfo : return $r3
