org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r2 = "cron" >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z0 == 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: void reloadAllNotes(org.apache.zeppelin.user.AuthenticationInfo)>(r1)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r15 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r13 := @caughtexception
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r3 = $r13 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r14 = <org.apache.zeppelin.notebook.Notebook: org.slf4j.Logger logger>
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r14 = <org.apache.zeppelin.notebook.Notebook: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>("Fail to reload notes from repository")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>("Fail to reload notes from repository") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r15 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r15 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r16 = new java.util.LinkedList
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r16 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r16.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r16.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r4 = $r16
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r4 = $r16 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r5 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r5 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z3 == 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r17 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : return r4
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r17 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r6 = (org.apache.zeppelin.notebook.Note) $r17
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r6 = (org.apache.zeppelin.notebook.Note) $r17 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z1 = 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z2 = 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z2 = 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : l1 = 0L
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : l1 = 0L >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r18 = new java.util.HashMap
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r18 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r18.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r18.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r7 = $r18
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r7 = $r18 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r19 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r19 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteId", $r19)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteId", $r19) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r8 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r8 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if r8 == null
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if r8 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z4 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if r8 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r23 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Note ")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Note ") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r25 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r25 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteName", $r27)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteName", $r27) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r29 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r29 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z5 = interfaceinvoke $r29.<java.util.Map: boolean containsKey(java.lang.Object)>("cron")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z5 = interfaceinvoke $r29.<java.util.Map: boolean containsKey(java.lang.Object)>("cron") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z5 == 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z5 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r30 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z5 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "normal")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "normal") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r34 = new java.util.LinkedList
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r34 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r34.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : specialinvoke $r34.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r9 = $r34
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r9 = $r34 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r35 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r35 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r10 = interfaceinvoke $r35.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r10 = interfaceinvoke $r35.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z7 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z7 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z7 == 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z7 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r36 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z7 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r38 = null
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r38 = null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r39 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r39 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r40 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r40 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r41 = virtualinvoke $r39.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r40)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r41 = virtualinvoke $r39.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r40) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $r41 == null
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $r41 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r42 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $r41 == null >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z2 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z2 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z1 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z2 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("interpreter", r38)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("interpreter", r38) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("isRunningJob", $r51)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("isRunningJob", $r51) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unixTimeLastRun", $r53)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unixTimeLastRun", $r53) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("paragraphs", r9)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("paragraphs", r9) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r7)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("interpreter", r38)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r42 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r43 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r43 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r44 = virtualinvoke $r42.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r43)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r44 = virtualinvoke $r42.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r43) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $i3 = interfaceinvoke $r44.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $i3 = interfaceinvoke $r44.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $i3 < 1
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $i3 < 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r45 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $i3 < 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z2 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r45 = r0.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r46 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r46 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r47 = virtualinvoke $r45.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r46)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r47 = virtualinvoke $r45.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r46) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r48 = interfaceinvoke $r47.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r48 = interfaceinvoke $r47.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r49 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r48
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r49 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r48 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r38 = virtualinvoke $r49.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r38 = virtualinvoke $r49.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if z2 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r36 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r11 = (org.apache.zeppelin.notebook.Paragraph) $r36
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r11 = (org.apache.zeppelin.notebook.Paragraph) $r36 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r37 = virtualinvoke r11.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r37 = virtualinvoke r11.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z8 = virtualinvoke $r37.<org.apache.zeppelin.scheduler.Job$Status: boolean isRunning()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z8 = virtualinvoke $r37.<org.apache.zeppelin.scheduler.Job$Status: boolean isRunning()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z8 == 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z8 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z1 = 1
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z8 == 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r12 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.Map getParagraphForJobManagerItem(org.apache.zeppelin.notebook.Paragraph)>(r11)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r12 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.Map getParagraphForJobManagerItem(org.apache.zeppelin.notebook.Paragraph)>(r11) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : l1 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: long getUnixTimeLastRunParagraph(org.apache.zeppelin.notebook.Paragraph)>(r11)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : l1 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: long getUnixTimeLastRunParagraph(org.apache.zeppelin.notebook.Paragraph)>(r11) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $b2 = l1 cmp l0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $b2 = l1 cmp l0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $b2 <= 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $b2 <= 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z2 = 1
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $b2 <= 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r12)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r12) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z7 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $z7 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z7 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z2 = 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r12)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z1 = 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z2 = 1
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : z2 = 1 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r12 = specialinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.Map getParagraphForJobManagerItem(org.apache.zeppelin.notebook.Paragraph)>(r11)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r30 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("cron")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("cron") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z6 = virtualinvoke $r31.<java.lang.Object: boolean equals(java.lang.Object)>("")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z6 = virtualinvoke $r31.<java.lang.Object: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z6 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z6 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "cron")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z6 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "normal")
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteType", "cron") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $r34 = new java.util.LinkedList]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $r34 = new java.util.LinkedList] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r34 = new java.util.LinkedList
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $z4 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z4 != 0
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z4 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r21 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : if $z4 != 0 >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r23 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r21 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteName", $r21)
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("noteName", $r21) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $r29 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= $r29 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r29 = virtualinvoke r6.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: void reloadAllNotes(org.apache.zeppelin.user.AuthenticationInfo)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= r15 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()]
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: void reloadAllNotes(org.apache.zeppelin.user.AuthenticationInfo)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : $r13 := @caughtexception
org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : goto [?= r15 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()] >>>>>>>> org.apache.zeppelin.notebook.Notebook.getJobListByUnixTime : r15 = virtualinvoke r0.<org.apache.zeppelin.notebook.Notebook: java.util.List getAllNotes()>()
