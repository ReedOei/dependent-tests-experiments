org.apache.zeppelin.notebook.Note.isTerminated : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : r1 = $r5
org.apache.zeppelin.notebook.Note.isTerminated : r1 = $r5 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : entermonitor $r5
org.apache.zeppelin.notebook.Note.isTerminated : entermonitor $r5 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r6 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.isTerminated : entermonitor $r5 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : r4 = $r8 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : exitmonitor r1
org.apache.zeppelin.notebook.Note.isTerminated : r4 = $r8 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : exitmonitor r1 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : throw r4
org.apache.zeppelin.notebook.Note.isTerminated : exitmonitor r1 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : $r6 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Note.isTerminated : $r6 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Note.isTerminated : r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : if $z0 == 0
org.apache.zeppelin.notebook.Note.isTerminated : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Note.isTerminated : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : exitmonitor r1
org.apache.zeppelin.notebook.Note.isTerminated : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : exitmonitor r1 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : goto [?= return 1]
org.apache.zeppelin.notebook.Note.isTerminated : exitmonitor r1 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : goto [?= return 1] >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : return 1
org.apache.zeppelin.notebook.Note.isTerminated : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : r3 = (org.apache.zeppelin.notebook.Paragraph) $r7
org.apache.zeppelin.notebook.Note.isTerminated : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : r3 = (org.apache.zeppelin.notebook.Paragraph) $r7 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $z1 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: boolean isTerminated()>()
org.apache.zeppelin.notebook.Note.isTerminated : r3 = (org.apache.zeppelin.notebook.Paragraph) $r7 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : $z1 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: boolean isTerminated()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : if $z1 != 0
org.apache.zeppelin.notebook.Note.isTerminated : $z1 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: boolean isTerminated()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $z2 = 0
org.apache.zeppelin.notebook.Note.isTerminated : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Note.isTerminated : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Note.isTerminated : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : $z2 = 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : exitmonitor r1
org.apache.zeppelin.notebook.Note.isTerminated : $z2 = 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
org.apache.zeppelin.notebook.Note.isTerminated : exitmonitor r1 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : return $z2
org.apache.zeppelin.notebook.Note.isTerminated : exitmonitor r1 >>>>>>>> org.apache.zeppelin.notebook.Note.isTerminated : $r8 := @caughtexception
