org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r3 = $r8 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r9 = new org.apache.zeppelin.interpreter.InterpreterException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r9 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>(r3)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r9.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r9
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i0 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: int findRandomAvailablePortOnAllLocalInterfaces()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> = $i0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i0 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: int findRandomAvailablePortOnAllLocalInterfaces()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> = $i0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> = $i0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r8 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r10 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterRunner> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r11 = staticinvoke <org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine parse(java.lang.String)>($r10)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r11 = staticinvoke <org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine parse(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-d", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-d", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r13 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterDir>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r13 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterDir> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r13, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r13, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-p", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-p", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i1 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r16, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r16, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z0 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String localRepoDir>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r21 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String localRepoDir> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r21, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r21, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-g", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-g", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterGroupName>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r24 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.lang.String interpreterGroupName> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r24, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>($r24, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r26 = new org.apache.commons.exec.DefaultExecutor
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r26 = new org.apache.commons.exec.DefaultExecutor >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r26.<org.apache.commons.exec.DefaultExecutor: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r26.<org.apache.commons.exec.DefaultExecutor: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> = $r26
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> = $r26 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r27 = new java.io.ByteArrayOutputStream
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r27 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r27.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r27.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r4 = $r27
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r4 = $r27 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r28 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r28 = new org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r29 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r29 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r28.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void <init>(org.slf4j.Logger)>($r29)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r28.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void <init>(org.slf4j.Logger)>($r29) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r5 = $r28
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r5 = $r28 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(r4)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(r4) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r30 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r30 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r31 = new org.apache.commons.exec.PumpStreamHandler
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r31 = new org.apache.commons.exec.PumpStreamHandler >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r31.<org.apache.commons.exec.PumpStreamHandler: void <init>(java.io.OutputStream)>(r5)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r31.<org.apache.commons.exec.PumpStreamHandler: void <init>(java.io.OutputStream)>(r5) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r30.<org.apache.commons.exec.DefaultExecutor: void setStreamHandler(org.apache.commons.exec.ExecuteStreamHandler)>($r31)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r30.<org.apache.commons.exec.DefaultExecutor: void setStreamHandler(org.apache.commons.exec.ExecuteStreamHandler)>($r31) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r32 = new org.apache.commons.exec.ExecuteWatchdog
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r32 = new org.apache.commons.exec.ExecuteWatchdog >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r32.<org.apache.commons.exec.ExecuteWatchdog: void <init>(long)>(-1L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r32.<org.apache.commons.exec.ExecuteWatchdog: void <init>(long)>(-1L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> = $r32
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> = $r32 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r33 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r33 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r34 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r34 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.ExecuteWatchdog watchdog> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r33.<org.apache.commons.exec.DefaultExecutor: void setWatchdog(org.apache.commons.exec.ExecuteWatchdog)>($r34)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r33.<org.apache.commons.exec.DefaultExecutor: void setWatchdog(org.apache.commons.exec.ExecuteWatchdog)>($r34) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r6 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r33.<org.apache.commons.exec.DefaultExecutor: void setWatchdog(org.apache.commons.exec.ExecuteWatchdog)>($r34) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r39 = $r38 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running> = 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running> = 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 = new org.apache.zeppelin.interpreter.InterpreterException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r40 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r40.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>(r39)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r40.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.Throwable)>(r39) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r40
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r6 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r35 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r6 = staticinvoke <org.apache.commons.exec.environment.EnvironmentUtils: java.util.Map getProcEnvironment()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r35 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke r6.<java.util.Map: void putAll(java.util.Map)>($r35)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r35 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: java.util.Map env> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke r6.<java.util.Map: void putAll(java.util.Map)>($r35) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke r6.<java.util.Map: void putAll(java.util.Map)>($r35) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Run interpreter process {}", r11)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r36 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Run interpreter process {}", r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Run interpreter process {}", r11) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r37.<org.apache.commons.exec.DefaultExecutor: void execute(org.apache.commons.exec.CommandLine,java.util.Map,org.apache.commons.exec.ExecuteResultHandler)>(r11, r6, r0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r37 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.apache.commons.exec.DefaultExecutor executor> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r37.<org.apache.commons.exec.DefaultExecutor: void execute(org.apache.commons.exec.CommandLine,java.util.Map,org.apache.commons.exec.ExecuteResultHandler)>(r11, r6, r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running> = 1
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke $r37.<org.apache.commons.exec.DefaultExecutor: void execute(org.apache.commons.exec.CommandLine,java.util.Map,org.apache.commons.exec.ExecuteResultHandler)>(r11, r6, r0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running> = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running> = 1 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r38 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l4 = $l3 - l2
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l4 = $l3 - l2 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i5 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int getConnectTimeout()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i5 = virtualinvoke r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int getConnectTimeout()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l6 = (long) $i5
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l6 = (long) $i5 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $b7 = $l4 cmp $l6
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $b7 = $l4 cmp $l6 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $b7 >= 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $b7 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $b7 >= 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : return
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z2 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: boolean running> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r4.<java.io.ByteArrayOutputStream: void flush()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r41 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z2 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r49 = $r48 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r50 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z4 = interfaceinvoke $r50.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z4 = interfaceinvoke $r50.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z4 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z4 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r51 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z4 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r51 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r52 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote interpreter not yet accessible at localhost:")
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote interpreter not yet accessible at localhost:") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i9 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r51.<org.slf4j.Logger: void debug(java.lang.String)>($r55)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r51.<org.slf4j.Logger: void debug(java.lang.String)>($r55) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r7 = $r41 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 = new org.apache.zeppelin.interpreter.InterpreterException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 = new org.apache.zeppelin.interpreter.InterpreterException >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r43 = new java.lang.String
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r43 = new java.lang.String >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r44 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r43.<java.lang.String: void <init>(byte[])>($r44)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r43.<java.lang.String: void <init>(byte[])>($r44) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r42.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.String)>($r43)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : specialinvoke $r42.<org.apache.zeppelin.interpreter.InterpreterException: void <init>(java.lang.String)>($r43) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : throw $r42
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z3 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: boolean checkIfRemoteEndpointAccessible(java.lang.String,int)>("localhost", $i8)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $i8 = r0.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: int port> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z3 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: boolean checkIfRemoteEndpointAccessible(java.lang.String,int)>("localhost", $i8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 == 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z3 = staticinvoke <org.apache.zeppelin.interpreter.remote.RemoteInterpreterUtils: boolean checkIfRemoteEndpointAccessible(java.lang.String,int)>("localhost", $i8) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= virtualinvoke r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r45 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r46 = $r45 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger>
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : r46 = $r45 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterProcess while synchronized reference Thread.sleep", r46)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r47 = <org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterProcess while synchronized reference Thread.sleep", r46) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in RemoteInterpreterProcess while synchronized reference Thread.sleep", r46) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r45 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= (branch)]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r48 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= virtualinvoke r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r5.<org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess$ProcessLogOutputStream: void setOutputStream(java.io.OutputStream)>(null)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r4.<java.io.ByteArrayOutputStream: void flush()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r42 = new org.apache.zeppelin.interpreter.InterpreterException]
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r4.<java.io.ByteArrayOutputStream: void flush()>() >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r41 := @caughtexception
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : goto [?= $r42 = new org.apache.zeppelin.interpreter.InterpreterException] >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $r42 = new org.apache.zeppelin.interpreter.InterpreterException
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous") >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 != 0
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-u", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : if $z1 != 0 >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-u", 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r1, 0)
org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>(r1, 0) >>>>>>>> org.apache.zeppelin.interpreter.remote.RemoteInterpreterManagedProcess.start : virtualinvoke r11.<org.apache.commons.exec.CommandLine: org.apache.commons.exec.CommandLine addArgument(java.lang.String,boolean)>("-l", 0)
