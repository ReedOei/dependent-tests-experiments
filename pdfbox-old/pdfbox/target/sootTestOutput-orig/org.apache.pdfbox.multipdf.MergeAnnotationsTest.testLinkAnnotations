org.apache.pdfbox.pdfwriter.COSWriter.close : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.close : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.close : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.io.OutputStream getOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.close : $r3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.io.OutputStream incrementalOutput>
org.apache.pdfbox.pdfwriter.COSWriter.close : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.io.OutputStream getOutput()>()
org.apache.pdfbox.pdmodel.PDDocument.setEncryptionDictionary : r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryption encryption> = r1
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.length : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileLength>
org.apache.pdfbox.pdmodel.PDDocument.getNumberOfPages : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.pdfparser.RandomAccessSource.peek : $r1 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader>
org.apache.pdfbox.io.ScratchFileBuffer.isClosed : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.pdfwriter.COSWriter.getStandardOutput : $r1 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream standardOutput>
org.apache.pdfbox.cos.COSString.getForceHexForm : $z0 = r0.<org.apache.pdfbox.cos.COSString: boolean forceHexForm>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1 goto return
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37 goto $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0)
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefEntry : $r4 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.text.NumberFormat formatXrefOffset>
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefEntry : $r15 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefEntry : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefEntry : $r18 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefEntry : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefEntry : $r17 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefEntry : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefEntry : $r19 = <org.apache.pdfbox.pdfwriter.COSWriter: byte[] XREF_FREE>
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefEntry : $r5 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.text.NumberFormat formatXrefGeneration>
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefRange : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefRange : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefRange : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeXrefRange : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfparser.COSParser.checkXRefOffset : $r3 = <org.apache.pdfbox.pdfparser.COSParser: char[] XREF_TABLE>
org.apache.pdfbox.pdfparser.COSParser.checkXRefOffset : $r1 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.checkXRefOffset : return l0
org.apache.pdfbox.pdfparser.COSParser.checkXRefOffset : $z0 = r0.<org.apache.pdfbox.pdfparser.COSParser: boolean isLenient>
org.apache.pdfbox.pdfparser.COSParser.checkXRefOffset : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.COSParser.checkXRefOffset : $r2 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.BaseParser.readLong : r1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: java.lang.StringBuilder readStringNumber()>()
org.apache.pdfbox.pdfparser.BaseParser.readLong : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.BaseParser.readLong : goto [?= return l2]
org.apache.pdfbox.pdfparser.BaseParser.readLong : return l2
org.apache.pdfbox.pdfparser.BaseParser.readLong : $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r19 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r26 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r2 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Set writtenObjects>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r3 = specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.cos.COSObjectKey getObjectKey(org.apache.pdfbox.cos.COSBase)>(r1)
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r23 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r25 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : virtualinvoke r1.<org.apache.pdfbox.cos.COSBase: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>(r0)
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r28 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r4 = new org.apache.pdfbox.pdfwriter.COSWriterXRefEntry
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject : $r21 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.cos.COSArray.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)>(r0)
org.apache.pdfbox.pdmodel.PDPageTree.access$300 : staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: void sanitizeType(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.cos.COSObjectKey.getNumber : $l0 = r0.<org.apache.pdfbox.cos.COSObjectKey: long number>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.init : entermonitor r0
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.init : $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: java.awt.color.ColorSpace awtColorSpace>
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.init : $r6 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000)
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.init : $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: java.awt.color.ColorSpace awtColorSpace>
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.init : exitmonitor r0
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.init : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: java.awt.color.ColorSpace awtColorSpace>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getAcroForm : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm cachedAcroForm>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getAcroForm : $r8 = null
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getAcroForm : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getAcroForm : if r1 != null goto $r8 = new org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm
org.apache.pdfbox.pdfparser.COSParser.parseTrailer : return 1
org.apache.pdfbox.pdfparser.COSParser.parseTrailer : $r3 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseTrailer : $r4 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
org.apache.pdfbox.pdfparser.COSParser.parseTrailer : $r5 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdfparser.XrefTrailerResolver xrefTrailerResolver>
org.apache.pdfbox.pdfparser.COSParser.parseTrailer : r1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>()
org.apache.pdfbox.pdfparser.COSParser.parseTrailer : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.COSParser.parseTrailer : $r2 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseTrailer : r8 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()>()
org.apache.pdfbox.pdmodel.PDPageTree.getCount : $r2 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdfparser.BaseParser.checkForMissingCloseParen : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.checkForMissingCloseParen : $b2 = r1[0]
org.apache.pdfbox.pdfparser.BaseParser.checkForMissingCloseParen : r1 = newarray (byte)[3]
org.apache.pdfbox.pdfparser.BaseParser.checkForMissingCloseParen : $r3 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.checkForMissingCloseParen : if i1 != 3 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.checkForMissingCloseParen : i6 = i0
org.apache.pdfbox.pdfwriter.COSWriter.setStandardOutput : r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream standardOutput> = r1
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.compareTo : return 1
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.compareTo : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: org.apache.pdfbox.cos.COSObjectKey getKey()>()
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.compareTo : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: org.apache.pdfbox.cos.COSObjectKey getKey()>()
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.compareTo : if r1 == null goto return -1
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.compareTo : return -1
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.compareTo : $r2 = (org.apache.pdfbox.pdfwriter.COSWriterXRefEntry) r1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46)
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("0")
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0")
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $r3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Set objectsToWriteSet>
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $r6 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Map objectKeys>
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $r2 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Set writtenObjects>
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $r5 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Set actualsAdded>
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $r4 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Set actualsAdded>
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : r16 = null
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : if r14 == null goto $r17 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Deque objectsToWrite>
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $r18 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Set objectsToWriteSet>
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $r13 = (org.apache.pdfbox.cos.COSObject) r1
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : r15 = null
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $r17 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Deque objectsToWrite>
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : if r16 == null goto (branch)
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $z0 = r1 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : $r11 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Map objectKeys>
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : r14 = r1
org.apache.pdfbox.pdfwriter.COSWriter.addObjectToWrite : if r14 == null goto (branch)
org.apache.pdfbox.util.Hex.getLowNibble : $b1 = b0 & 15
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.cos.COSBoolean.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromBoolean(org.apache.pdfbox.cos.COSBoolean)>(r0)
org.apache.pdfbox.pdmodel.PDPage.getRotation : $i2 = i0 % 360
org.apache.pdfbox.pdmodel.PDPage.getRotation : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getRotation : $z0 = r1 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.PDPage.getRotation : $i1 = i0 % 90
org.apache.pdfbox.pdmodel.PDPage.getRotation : $r4 = (org.apache.pdfbox.cos.COSNumber) r1
org.apache.pdfbox.cos.COSInteger.longValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.cos.COSArray.set : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.setOnNewLine : r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: boolean onNewLine> = z0
org.apache.pdfbox.pdmodel.PDDocument.load : $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)>(r0, "", null, null, r1)
org.apache.pdfbox.pdmodel.PDDocument.load : virtualinvoke $r8.<org.apache.pdfbox.pdfparser.PDFParser: void parse()>()
org.apache.pdfbox.pdmodel.PDDocument.load : r11 = virtualinvoke $r7.<org.apache.pdfbox.io.ScratchFile: org.apache.pdfbox.io.RandomAccess createBuffer(java.io.InputStream)>(r0)
org.apache.pdfbox.pdmodel.PDDocument.load : $r9 = virtualinvoke $r8.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.pdmodel.PDDocument getPDDocument()>()
org.apache.pdfbox.pdmodel.PDDocument.load : $r1 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.pdmodel.PDDocument.load : $r7 = new org.apache.pdfbox.io.ScratchFile
org.apache.pdfbox.pdmodel.PDDocument.load : $r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)>(r0, r1, null, null, r2)
org.apache.pdfbox.pdmodel.PDDocument.load : $r6 = new org.apache.pdfbox.io.RandomAccessBufferedFileInputStream
org.apache.pdfbox.pdmodel.PDDocument.load : $r8 = new org.apache.pdfbox.pdfparser.PDFParser
org.apache.pdfbox.io.RandomAccessOutputStream.write : $r2 = r0.<org.apache.pdfbox.io.RandomAccessOutputStream: org.apache.pdfbox.io.RandomAccessWrite writer>
org.apache.pdfbox.cos.COSStream.createRawInputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createRawInputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void ensureRandomAccessExists(boolean)>(1)
org.apache.pdfbox.cos.COSStream.createRawInputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.cos.COSStream.createRawInputStream : $r1 = new org.apache.pdfbox.io.RandomAccessInputStream
org.apache.pdfbox.cos.COSNull.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromNull(org.apache.pdfbox.cos.COSNull)>(r0)
org.apache.pdfbox.cos.COSDocument.getVersion : $f0 = r0.<org.apache.pdfbox.cos.COSDocument: float version>
org.apache.pdfbox.pdfparser.RandomAccessSource.getPosition : $r1 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader>
org.apache.pdfbox.pdmodel.PDPageTree.access$400 : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PREV>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $r8 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.List getXRefEntries()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SIZE>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.List getXRefEntries()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XREF_STM>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DOC_CHECKSUM>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $z0 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean incrementalUpdate>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $z1 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDocument: boolean isXRefStream()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteTrailer : virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>(r0)
org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary: org.apache.pdfbox.cos.COSDictionary nameDictionary>
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.writeCRLF : $r1 = <org.apache.pdfbox.pdfwriter.COSStandardOutputStream: byte[] CRLF>
org.apache.pdfbox.cos.COSInteger.writePDF : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $z0 = r2 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r7 = new org.apache.pdfbox.pdmodel.PDDocumentCatalog
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>
org.apache.pdfbox.cos.COSFloat.hashCode : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if i6 == -1 goto (branch)", "org.apache.pdfbox.pdfparser.BaseParser.parseCOSName")]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEndOfName(int)>(i6)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r14 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 != 35 goto $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEndOfName(int)>(i6)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>(i6)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r10 = new java.lang.String
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i7 = i6
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedChar(char)>(47)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z0 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isValidUTF8(byte[])>(r31)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r13 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r31 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r9 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r32)
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromNull : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromNull : return null
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.deleteTempFile : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: java.io.File tempFile>
org.apache.pdfbox.cos.COSObject.setObjectNumber : r0.<org.apache.pdfbox.cos.COSObject: long objectNumber> = l0
org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream$1.removeEldestEntry : $i0 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream$1: int size()>()
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream$1.removeEldestEntry : if $z1 == 0 goto return z0
org.apache.pdfbox.io.ScratchFileBuffer.readFully : if i1 >= 0 goto i3 = i3 + i1
org.apache.pdfbox.io.ScratchFileBuffer.readFully : i3 = i3 + i1
org.apache.pdfbox.io.ScratchFileBuffer.readFully : r1 = newarray (byte)[i0]
org.apache.pdfbox.io.ScratchFileBuffer.readFully : $i2 = i0 - i3
org.apache.pdfbox.io.ScratchFileBuffer.readFully : if i3 < i0 goto staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$i2 = i0 - i3", "org.apache.pdfbox.io.ScratchFileBuffer.readFully")
org.apache.pdfbox.io.ScratchFileBuffer.readFully : i3 = 0
org.apache.pdfbox.io.ScratchFileBuffer.readFully : return r1
org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj.access$200 : $r1 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj: java.util.Map xrefTable>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0 goto i5 = i5 + 1
org.apache.pdfbox.pdfparser.XrefTrailerResolver.getCurrentTrailer : $r1 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj curXrefTrailerObj>
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.setFree : r0.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: boolean free> = z0
org.apache.pdfbox.io.ScratchFile.createBuffer : $r4 = new org.apache.pdfbox.io.ScratchFileBuffer
org.apache.pdfbox.io.ScratchFile.createBuffer : virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFileBuffer: void write(byte[],int,int)>(r3, 0, $i0)
org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer
org.apache.pdfbox.io.ScratchFile.createBuffer : r3 = newarray (byte)[8192]
org.apache.pdfbox.io.ScratchFile.createBuffer : virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFileBuffer: void seek(long)>(0L)
org.apache.pdfbox.io.ScratchFile.createBuffer : return $r4
org.apache.pdfbox.io.ScratchFile.createBuffer : $i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r3)
org.apache.pdfbox.pdfparser.COSParser.isLenient : $z0 = r0.<org.apache.pdfbox.pdfparser.COSParser: boolean isLenient>
org.apache.pdfbox.cos.COSDictionary.getLong : return l1
org.apache.pdfbox.cos.COSDictionary.getLong : $l0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: long getLong(org.apache.pdfbox.cos.COSName,long)>(r1, -1L)
org.apache.pdfbox.cos.COSDictionary.getLong : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getLong : $z0 = r2 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getLong : l1 = l0
org.apache.pdfbox.util.Hex.writeHexBytes : b1 = r0[i2]
org.apache.pdfbox.util.Hex.writeHexBytes : staticinvoke <org.apache.pdfbox.util.Hex: void writeHexByte(byte,java.io.OutputStream)>(b1, r1)
org.apache.pdfbox.util.Hex.writeHexBytes : i0 = lengthof r0
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0>
org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList
org.apache.pdfbox.cos.COSBase.isDirect : $z0 = r0.<org.apache.pdfbox.cos.COSBase: boolean direct>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString : if i5 != 62 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString : goto [?= $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString : $c6 = (char) i5
org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString : $r9 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r9 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>", "org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString")]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString : $c4 = (char) i5
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.cos.COSOutputStream.write : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer>
org.apache.pdfbox.io.RandomAccessInputStream.read : $r2 = r0.<org.apache.pdfbox.io.RandomAccessInputStream: org.apache.pdfbox.io.RandomAccessRead input>
org.apache.pdfbox.io.RandomAccessInputStream.read : $r3 = r0.<org.apache.pdfbox.io.RandomAccessInputStream: org.apache.pdfbox.io.RandomAccessRead input>
org.apache.pdfbox.io.RandomAccessInputStream.read : virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessInputStream: void restorePosition()>()
org.apache.pdfbox.io.RandomAccessInputStream.read : return -1
org.apache.pdfbox.io.RandomAccessInputStream.read : return i2
org.apache.pdfbox.io.RandomAccessInputStream.read : $l4 = r0.<org.apache.pdfbox.io.RandomAccessInputStream: long position>
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r6 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r25 = new org.apache.pdfbox.cos.COSObjectKey
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : r2 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readString()>()
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : goto [?= l12 = l12 + 1L]
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r12 = r41[1]
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : l12 = l12 + 1L
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : r40 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>()
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r8 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : goto [?= return 1]
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : i13 = 0
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r14 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("trailer")
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : r42 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>()
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r15 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r5 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r10 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdfparser.XrefTrailerResolver xrefTrailerResolver>
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $i9 = lengthof r43
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : r1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readString()>()
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r23 = r43[0]
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r26 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdfparser.XrefTrailerResolver xrefTrailerResolver>
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r13 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $i5 = lengthof r41
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : r41 = virtualinvoke r40.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s")
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r7 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset ISO_8859_1>
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r24 = r43[1]
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : return 1
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r17 = r43[2]
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $i10 = lengthof r43
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : $r11 = r41[0]
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.COSParser.parseXrefTable : r43 = virtualinvoke r42.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s")
org.apache.pdfbox.cos.COSStream$1.close : specialinvoke r0.<java.io.FilterOutputStream: void close()>()
org.apache.pdfbox.cos.COSStream$1.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0>
org.apache.pdfbox.cos.COSStream$1.close : $r5 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0>
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.setObject : r0.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: org.apache.pdfbox.cos.COSBase object> = r1
org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.getObject : $r3 = (org.apache.pdfbox.cos.COSObject) r4
org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4
org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSString.setValue : $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1
org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null goto $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream
org.apache.pdfbox.pdfparser.COSParser.getObjectId : $l0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSObject: long getObjectNumber()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : $r7 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjectByType : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>
org.apache.pdfbox.cos.COSDocument.getObjectByType : $z1 = r4 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.cos.COSDocument.getObjectByType : return r3
org.apache.pdfbox.cos.COSDocument.getObjectByType : r19 = (org.apache.pdfbox.cos.COSDictionary) r4
org.apache.pdfbox.cos.COSDocument.getObjectByType : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : r4 = virtualinvoke r3.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : r6 = (org.apache.pdfbox.cos.COSName) r5
org.apache.pdfbox.cos.COSDocument.getObjectByType : $z2 = r5 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDocument.getObjectByType : $z3 = virtualinvoke r6.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdfparser.COSParser.validateStreamLength : l2 = l1 + l0
org.apache.pdfbox.pdfparser.COSParser.validateStreamLength : z1 = 1
org.apache.pdfbox.pdfparser.COSParser.validateStreamLength : $r4 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.validateStreamLength : return z1
org.apache.pdfbox.pdfparser.COSParser.validateStreamLength : $r1 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.validateStreamLength : $r3 = <org.apache.pdfbox.pdfparser.COSParser: byte[] ENDSTREAM>
org.apache.pdfbox.pdfparser.COSParser.validateStreamLength : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.COSParser.validateStreamLength : $r2 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.validateStreamLength : $l3 = r0.<org.apache.pdfbox.pdfparser.COSParser: long fileLen>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $z7 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean incrementalUpdate>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : if r44 != null goto virtualinvoke r44.<org.apache.pdfbox.cos.COSBase: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>(r0)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r30 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r38 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void addObjectToWrite(org.apache.pdfbox.cos.COSBase)>(r3)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : if r42 == null goto $r31 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r27 = (org.apache.pdfbox.cos.COSObject) r3
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void writeReference(org.apache.pdfbox.cos.COSBase)>(r41)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r45 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $z2 = r3 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $z0 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean reachedSignature>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $z3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean reachedSignature>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $z1 = r3 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r34 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DOC_TIME_STAMP>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r33 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SIG>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r9 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $z4 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean reachedSignature>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $z8 = r44 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : virtualinvoke r3.<org.apache.pdfbox.cos.COSBase: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>(r0)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r36 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : r41 = (org.apache.pdfbox.cos.COSDictionary) r3
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $z9 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean incrementalUpdate>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $z13 = virtualinvoke r41.<org.apache.pdfbox.cos.COSDictionary: boolean isDirect()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : virtualinvoke r44.<org.apache.pdfbox.cos.COSBase: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>(r0)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : if r3 == null goto (branch)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : if r43 == null goto $z13 = virtualinvoke r41.<org.apache.pdfbox.cos.COSDictionary: boolean isDirect()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)>(r41)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r32 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void addObjectToWrite(org.apache.pdfbox.cos.COSBase)>(r41)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r7 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r31 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : goto [?= $r45 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()]
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.cos.COSNull.writePDF : $r2 = <org.apache.pdfbox.cos.COSNull: byte[] NULL_BYTES>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.rewind : $l1 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long getPosition()>()
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.access$000 : $i0 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int maxCachedPages>
org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : $r25 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : if i17 >= 0 goto return l18
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : r1 = newarray (byte)[$i13]
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : $l4 = r0.<org.apache.pdfbox.pdfparser.COSParser: long fileLen>
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : i15 = i15 + i1
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : if i16 >= 0 goto $r6 = <org.apache.pdfbox.pdfparser.COSParser: char[] STARTXREF>
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : $r3 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : $r5 = <org.apache.pdfbox.pdfparser.COSParser: char[] EOF_MARKER>
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : if i15 >= i14 goto $r4 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : $r4 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : goto [?= $r5 = <org.apache.pdfbox.pdfparser.COSParser: char[] EOF_MARKER>]
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : $l7 = r0.<org.apache.pdfbox.pdfparser.COSParser: long fileLen>
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : $l9 = (long) i17
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : i15 = 0
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : $r6 = <org.apache.pdfbox.pdfparser.COSParser: char[] STARTXREF>
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : if i1 >= 1 goto i15 = i15 + i1
org.apache.pdfbox.pdfparser.COSParser.getStartxrefOffset : return l18
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.setKey : r0.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: org.apache.pdfbox.cos.COSObjectKey key> = r1
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $r6 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary resources>
org.apache.pdfbox.io.ScratchFileBuffer.length : $l0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size>
org.apache.pdfbox.pdmodel.PDDocument.getPages : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteHeader : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteHeader : $r15 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteHeader : $r17 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteHeader : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteHeader : $r2 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdmodel.fdf.FDFDocument fdfDocument>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteHeader : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.pdfwriter.COSWriter.doWriteHeader : $r13 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.cos.COSDocument.close : virtualinvoke r13.<org.apache.pdfbox.cos.COSStream: void close()>()
org.apache.pdfbox.cos.COSDocument.close : $r8 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>()
org.apache.pdfbox.cos.COSDocument.close : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.close : $r9 = (org.apache.pdfbox.cos.COSStream) r2
org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDocument.close : if r1 == null goto $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : r2 = virtualinvoke r11.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1
org.apache.pdfbox.cos.COSDocument.close : $z3 = r2 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.cos.COSDocument.close : $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.io.ScratchFileBuffer.rewind : $l3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.pdfparser.BaseParser.isLF : if 10 != i0 goto $z0 = 0
org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0 goto $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.util.Hex.getHighNibble : $s1 = b0 & 240
org.apache.pdfbox.pdfwriter.COSWriter.visitFromString : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromString : return null
org.apache.pdfbox.pdfwriter.COSWriter.visitFromString : $z0 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean willEncrypt>
org.apache.pdfbox.pdfparser.RandomAccessSource.isEOF : $r1 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader>
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSArray : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.createAnnotation : $r10 = "Line"
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.createAnnotation : $r11 = "Link"
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.createAnnotation : $r9 = "FileAttachment"
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.createAnnotation : $r41 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.createAnnotation : $z0 = r0 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.createAnnotation : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.createAnnotation : goto [?= return r44]
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.createAnnotation : r1 = (org.apache.pdfbox.cos.COSDictionary) r0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.createAnnotation : return r44
org.apache.pdfbox.cos.COSName.getPDFName : $r5 = new org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null goto return r6
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null goto return r6
org.apache.pdfbox.pdfparser.XrefTrailerResolver.nextXrefObj : $r2 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: java.util.Map bytePosToXrefMap>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.nextXrefObj : $r6 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj curXrefTrailerObj>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPageMode : $r4 = <org.apache.pdfbox.pdmodel.PageMode: org.apache.pdfbox.pdmodel.PageMode USE_NONE>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPageMode : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPageMode : $r5 = staticinvoke <org.apache.pdfbox.pdmodel.PageMode: org.apache.pdfbox.pdmodel.PageMode fromString(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPageMode : if r1 == null goto $r4 = <org.apache.pdfbox.pdmodel.PageMode: org.apache.pdfbox.pdmodel.PageMode USE_NONE>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null goto return r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r4 = (org.apache.pdfbox.cos.COSObject) r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null goto return r3
org.apache.pdfbox.cos.COSFloat.writePDF : $r2 = r0.<org.apache.pdfbox.cos.COSFloat: java.lang.String valueAsString>
org.apache.pdfbox.pdmodel.PDDocument.addPage : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPageTree getPages()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeString : virtualinvoke r1.<java.io.OutputStream: void write(int)>(b5)
org.apache.pdfbox.pdfwriter.COSWriter.writeString : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeString : virtualinvoke r1.<java.io.OutputStream: void write(int)>(40)
org.apache.pdfbox.pdfwriter.COSWriter.writeString : virtualinvoke r1.<java.io.OutputStream: void write(int)>(62)
org.apache.pdfbox.pdfwriter.COSWriter.writeString : virtualinvoke r1.<java.io.OutputStream: void write(int)>(41)
org.apache.pdfbox.pdfwriter.COSWriter.writeString : goto [?= (branch)]
org.apache.pdfbox.pdfwriter.COSWriter.writeString : virtualinvoke r1.<java.io.OutputStream: void write(int)>(60)
org.apache.pdfbox.pdfwriter.COSWriter.writeString : if b2 == 13 goto z1 = 0
org.apache.pdfbox.pdfwriter.COSWriter.writeString : i0 = lengthof r0
org.apache.pdfbox.pdfwriter.COSWriter.writeString : lookupswitch(b5) {     case 40: goto virtualinvoke r1.<java.io.OutputStream: void write(int)>(92);     case 41: goto virtualinvoke r1.<java.io.OutputStream: void write(int)>(92);     case 92: goto virtualinvoke r1.<java.io.OutputStream: void write(int)>(92);     default: goto virtualinvoke r1.<java.io.OutputStream: void write(int)>(b5); }
org.apache.pdfbox.pdfwriter.COSWriter.writeString : b2 = r0[i1]
org.apache.pdfbox.pdfwriter.COSWriter.writeString : staticinvoke <org.apache.pdfbox.util.Hex: void writeHexBytes(byte[],java.io.OutputStream)>(r0, r1)
org.apache.pdfbox.pdfwriter.COSWriter.writeString : z1 = 1
org.apache.pdfbox.pdfwriter.COSWriter.writeString : i3 = lengthof r0
org.apache.pdfbox.pdfwriter.COSWriter.writeString : z1 = 0
org.apache.pdfbox.pdfwriter.COSWriter.writeString : if z0 != 0 goto virtualinvoke r1.<java.io.OutputStream: void write(int)>(60)
org.apache.pdfbox.pdfwriter.COSWriter.writeString : if z0 != 0 goto (branch)
org.apache.pdfbox.pdfwriter.COSWriter.writeString : if b2 >= 0 goto (branch)
org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6
org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : r21 = null
org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : if r21 == null goto return
org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf>
org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file>
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0
org.apache.pdfbox.cos.PDFDocEncoding.set : $r1 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.set : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.getXrefTable : $r1 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj resolvedXrefTrailer>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.cos.COSString.parseHex : $r5 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSString.parseHex : $i3 = i5 + 2
org.apache.pdfbox.cos.COSString.parseHex : $r7 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSString.parseHex : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.cos.COSString.parseHex : $i1 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>()
org.apache.pdfbox.cos.COSString.parseHex : goto [?= i5 = i5 + 2]
org.apache.pdfbox.cos.COSString.parseHex : i0 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>()
org.apache.pdfbox.cos.COSString.parseHex : i5 = 0
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.getOffset : $l0 = r0.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: long offset>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.getPosition : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileOffset>
org.apache.pdfbox.cos.COSInteger.floatValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightX : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightY : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.cos.COSStream.access$000 : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSObjectKey.equals : $i3 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSObjectKey: int getGeneration()>()
org.apache.pdfbox.cos.COSObjectKey.equals : $r3 = (org.apache.pdfbox.cos.COSObjectKey) r1
org.apache.pdfbox.cos.COSObjectKey.equals : $l0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSObjectKey: long getNumber()>()
org.apache.pdfbox.cos.COSObjectKey.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSObjectKey
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.pdmodel.PDDocument.getDocument : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.getPage : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.util.SmallMap.values : i3 = 1
org.apache.pdfbox.util.SmallMap.values : $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2)
org.apache.pdfbox.util.SmallMap.values : $r2 = new java.util.ArrayList
org.apache.pdfbox.util.SmallMap.values : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.values : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.cos.COSBoolean.writePDF : $z0 = r0.<org.apache.pdfbox.cos.COSBoolean: boolean value>
org.apache.pdfbox.cos.COSBoolean.writePDF : $r2 = <org.apache.pdfbox.cos.COSBoolean: byte[] FALSE_BYTES>
org.apache.pdfbox.cos.COSBoolean.writePDF : $r3 = <org.apache.pdfbox.cos.COSBoolean: byte[] TRUE_BYTES>
org.apache.pdfbox.cos.COSDocument.isEncrypted : z0 = 0
org.apache.pdfbox.cos.COSDocument.isEncrypted : $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>
org.apache.pdfbox.cos.COSDocument.isEncrypted : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>
org.apache.pdfbox.pdmodel.PDPage.getCropBox : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getCropBox : $r6 = new org.apache.pdfbox.pdmodel.common.PDRectangle
org.apache.pdfbox.pdmodel.PDPage.getCropBox : if r1 == null goto $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()>()
org.apache.pdfbox.io.ScratchFile.writePage : if i0 < 0 goto virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()
org.apache.pdfbox.io.ScratchFile.writePage : $i4 = lengthof r1
org.apache.pdfbox.io.ScratchFile.writePage : $i5 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.writePage : exitmonitor $r14
org.apache.pdfbox.io.ScratchFile.writePage : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean maxMainMemoryIsRestricted>
org.apache.pdfbox.io.ScratchFile.writePage : $r15 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.writePage : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.writePage : $r14 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.writePage : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromInt : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromInt : return null
org.apache.pdfbox.pdmodel.PDPage.clipToMediaBox : $f0 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>()
org.apache.pdfbox.pdmodel.PDPage.clipToMediaBox : $f6 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightX()>()
org.apache.pdfbox.pdmodel.PDPage.clipToMediaBox : $f3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>()
org.apache.pdfbox.pdmodel.PDPage.clipToMediaBox : $r4 = new org.apache.pdfbox.pdmodel.common.PDRectangle
org.apache.pdfbox.pdmodel.PDPage.clipToMediaBox : $f9 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>()
org.apache.pdfbox.pdmodel.PDPage.clipToMediaBox : return $r4
org.apache.pdfbox.pdmodel.PDPage.clipToMediaBox : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()>()
org.apache.pdfbox.pdmodel.PDDocument.getEncryption : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean isEncrypted()>()
org.apache.pdfbox.pdmodel.PDDocument.getEncryption : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryption encryption>
org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>
org.apache.pdfbox.cos.COSString.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromString(org.apache.pdfbox.cos.COSString)>(r0)
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null goto i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.cos.COSArray.iterator : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSStream.access$102 : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = z0
org.apache.pdfbox.cos.COSStream.createRawOutputStream : $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createRawOutputStream : $r4 = new org.apache.pdfbox.io.RandomAccessOutputStream
org.apache.pdfbox.cos.COSStream.createRawOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createRawOutputStream : $r6 = new org.apache.pdfbox.cos.COSStream$2
org.apache.pdfbox.cos.COSStream.createRawOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1
org.apache.pdfbox.cos.COSStream.createRawOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.pdfwriter.COSWriter.getNumber : $l0 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long number>
org.apache.pdfbox.pdfparser.COSParser.parseStartXref : l0 = -1L
org.apache.pdfbox.pdfparser.COSParser.parseStartXref : return l0
org.apache.pdfbox.pdfparser.COSParser.parseStartXref : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readString()>()
org.apache.pdfbox.pdfparser.COSParser.parseStartXref : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.COSParser.parseStartXref : l0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: long readLong()>()
org.apache.pdfbox.pdfparser.COSParser.parseStartXref : $r1 = <org.apache.pdfbox.pdfparser.COSParser: char[] STARTXREF>
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : if r2 == null goto $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : return r2
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.util.SmallMap.entrySet : $r5 = new org.apache.pdfbox.util.SmallMap$SmallMapEntry
org.apache.pdfbox.util.SmallMap.entrySet : $r2 = new java.util.LinkedHashSet
org.apache.pdfbox.util.SmallMap.entrySet : i1 = 0
org.apache.pdfbox.util.SmallMap.entrySet : $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2)
org.apache.pdfbox.util.SmallMap.entrySet : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.cos.COSFloat.floatValue : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination: org.apache.pdfbox.cos.COSArray getCOSObject()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromName : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromName : return null
org.apache.pdfbox.pdfparser.BaseParser.isDigit : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.isDigit : if i0 < 48 goto $z0 = 0
org.apache.pdfbox.pdfwriter.COSWriter.write : r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5")
org.apache.pdfbox.pdfwriter.COSWriter.write : $r21 = virtualinvoke r42.<org.apache.pdfbox.cos.COSDictionary: java.util.Collection getValues()>()
org.apache.pdfbox.pdfwriter.COSWriter.write : $r8 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdmodel.PDDocument pdDocument>
org.apache.pdfbox.pdfwriter.COSWriter.write : r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface signatureInterface> = r2
org.apache.pdfbox.pdfwriter.COSWriter.write : $r40 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ID>
org.apache.pdfbox.pdfwriter.COSWriter.write : $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.pdfbox.pdfwriter.COSWriter.write : if z6 != 0 goto r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5")
org.apache.pdfbox.pdfwriter.COSWriter.write : r38 = virtualinvoke r37.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>()
org.apache.pdfbox.pdfwriter.COSWriter.write : $l0 = virtualinvoke r3.<java.lang.Long: long longValue()>()
org.apache.pdfbox.pdfwriter.COSWriter.write : $r17 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdfwriter.COSWriter.write : $r36 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdmodel.PDDocument pdDocument>
org.apache.pdfbox.pdfwriter.COSWriter.write : $z7 = r4 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdfwriter.COSWriter.write : $z0 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean incrementalUpdate>
org.apache.pdfbox.pdfwriter.COSWriter.write : r39 = null
org.apache.pdfbox.pdfwriter.COSWriter.write : z6 = 1
org.apache.pdfbox.pdfwriter.COSWriter.write : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ID>
org.apache.pdfbox.pdfwriter.COSWriter.write : $r6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: java.lang.Long getDocumentId()>()
org.apache.pdfbox.pdfwriter.COSWriter.write : r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean willEncrypt> = 0
org.apache.pdfbox.pdfwriter.COSWriter.write : virtualinvoke $r17.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r46)
org.apache.pdfbox.pdfwriter.COSWriter.write : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)>(r1, null)
org.apache.pdfbox.pdfwriter.COSWriter.write : if z6 == 0 goto $r47 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdfwriter.COSWriter.write : $r23 = virtualinvoke r44.<java.lang.Object: java.lang.String toString()>()
org.apache.pdfbox.pdfwriter.COSWriter.write : $r45 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdfwriter.COSWriter.write : r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdmodel.PDDocument pdDocument> = r1
org.apache.pdfbox.pdfwriter.COSWriter.write : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName INFO>
org.apache.pdfbox.pdfwriter.COSWriter.write : if r42 == null goto (branch)
org.apache.pdfbox.pdfwriter.COSWriter.write : virtualinvoke r37.<org.apache.pdfbox.cos.COSDocument: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>(r0)
org.apache.pdfbox.pdfwriter.COSWriter.write : virtualinvoke $r17.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r47)
org.apache.pdfbox.pdfwriter.COSWriter.write : if r39 == null goto (branch)
org.apache.pdfbox.pdfwriter.COSWriter.write : $r22 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if z0 == 0 goto return 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void addPage()>()
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $z1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.cos.COSStream$2.write : $r2 = r0.<org.apache.pdfbox.cos.COSStream$2: java.io.OutputStream out>
org.apache.pdfbox.multipdf.PDFMergerUtility.isDynamicXfa : if r1 == null goto $z1 = 0
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : $r27 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : $r3 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : if z13 == 0 goto return
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : $r29 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : $l12 = virtualinvoke r34.<java.lang.Long: long longValue()>()
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : if r1 == null goto return
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : $r28 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : $l14 = virtualinvoke r34.<java.lang.Long: long longValue()>()
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : z13 = 0
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : $z0 = r0.<org.apache.pdfbox.pdfparser.COSParser: boolean isLenient>
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : $r2 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdfparser.XrefTrailerResolver xrefTrailerResolver>
org.apache.pdfbox.pdfparser.COSParser.checkXrefOffsets : if r34 == null goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isDigit()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : $z1 = r1 instanceof org.apache.pdfbox.cos.COSInteger
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : $r6 = new org.apache.pdfbox.cos.COSObjectKey
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : return r1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : $r9 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSBase getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)>($r6)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : r2 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSBase parseDirObject()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : $r4 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedChar(char)>(82)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : r1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSBase parseDirObject()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : $r8 = (org.apache.pdfbox.cos.COSInteger) r2
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue : $z2 = r2 instanceof org.apache.pdfbox.cos.COSInteger
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdfwriter.COSWriter.setNumber : r0.<org.apache.pdfbox.pdfwriter.COSWriter: long number> = l0
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.getPos : $l0 = r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: long position>
org.apache.pdfbox.multipdf.PDFMergerUtility.setDestinationFileName : r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.lang.String destinationFileName> = r1
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.cos.COSDocument.isClosed : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDictionary.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, null, i0)
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0
org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.getInt : return i1
org.apache.pdfbox.cos.COSDictionary.getInt : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>(r1, -1)
org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getInt : $r4 = (org.apache.pdfbox.cos.COSNumber) r3
org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readLine : $z3 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEOL(int)>($i1)
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r4 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readLine : $c4 = (char) $i1
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r6 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readLine : goto [?= $z1 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isCR(int)>($i1)]
org.apache.pdfbox.pdfparser.BaseParser.readLine : $z1 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isCR(int)>($i1)
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.PDPageTree.access$100 : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseXref : $b4 = l25 cmp l26
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r3 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r6 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r20 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r2 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $b2 = l24 cmp -1L
org.apache.pdfbox.pdfparser.COSParser.parseXref : specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void checkXrefOffsets()>()
org.apache.pdfbox.pdfparser.COSParser.parseXref : l24 = specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: long checkXRefOffset(long)>(l23)
org.apache.pdfbox.pdfparser.COSParser.parseXref : l25 = l23
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r4 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdfparser.XrefTrailerResolver xrefTrailerResolver>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r5 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdfparser.XrefTrailerResolver xrefTrailerResolver>
org.apache.pdfbox.pdfparser.COSParser.parseXref : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: boolean parseXrefTable(long)>(l25)
org.apache.pdfbox.pdfparser.COSParser.parseXref : if i28 == 116 goto $z6 = specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: boolean parseTrailer()>()
org.apache.pdfbox.pdfparser.COSParser.parseXref : $z1 = r0.<org.apache.pdfbox.pdfparser.COSParser: boolean isLenient>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $l1 = specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: long parseStartXref()>()
org.apache.pdfbox.pdfparser.COSParser.parseXref : l26 = -1L
org.apache.pdfbox.pdfparser.COSParser.parseXref : l23 = l24
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r8 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $b3 = l25 cmp l26
org.apache.pdfbox.pdfparser.COSParser.parseXref : l26 = l25
org.apache.pdfbox.pdfparser.COSParser.parseXref : $b27 = l25 cmp 0L
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r70 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PREV>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r53 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r25 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XREF_STM>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r23 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r19 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r24 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdfparser.XrefTrailerResolver xrefTrailerResolver>
org.apache.pdfbox.pdfparser.COSParser.parseXref : $r12 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.parseXref : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void skipSpaces()>()
org.apache.pdfbox.pdmodel.PDPage.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.cos.COSDictionary.removeItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftX : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : $r10 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : l1 = virtualinvoke r1.<org.apache.pdfbox.cos.COSObjectKey: long getNumber()>()
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : return 1
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : $r4 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : r2 = specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String createObjectString(long,int)>(l1, i2)
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : $r9 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : $b4 = l0 cmp 6L
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : i2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSObjectKey: int getGeneration()>()
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : $r5 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.checkObjectKeys : $r6 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset ISO_8859_1>
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftY : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.cos.COSStream$1.write : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: java.io.OutputStream out>
org.apache.pdfbox.cos.COSObjectKey.hashCode : $l2 = r0.<org.apache.pdfbox.cos.COSObjectKey: long number>
org.apache.pdfbox.pdmodel.PageMode.fromString : $r7 = <org.apache.pdfbox.pdmodel.PageMode: org.apache.pdfbox.pdmodel.PageMode USE_NONE>
org.apache.pdfbox.pdmodel.PageMode.fromString : $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("UseNone")
org.apache.pdfbox.pdfwriter.COSWriter.getOutput : $r1 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.io.OutputStream output>
org.apache.pdfbox.cos.COSName.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromName(org.apache.pdfbox.cos.COSName)>(r0)
org.apache.pdfbox.cos.COSDocument.setStartXref : r0.<org.apache.pdfbox.cos.COSDocument: long startXref> = l0
org.apache.pdfbox.cos.COSInteger.hashCode : $l2 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 goto $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSObject.getObjectNumber : $l0 = r0.<org.apache.pdfbox.cos.COSObject: long objectNumber>
org.apache.pdfbox.cos.COSDictionary.mergeInto : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.cos.COSDictionary.mergeInto : $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.cos.COSDictionary.mergeInto : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDictionary.mergeInto : $r4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>()
org.apache.pdfbox.cos.COSDictionary.mergeInto : $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOpenAction : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.cos.COSDocument.getCatalog : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CATALOG>
org.apache.pdfbox.cos.COSDocument.getCatalog : if r1 != null goto return r1
org.apache.pdfbox.cos.COSDocument.getCatalog : return r1
org.apache.pdfbox.cos.COSDocument.getTrailer : $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("false")
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSArray parseCOSArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : if c10 != 60 goto r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSString parseCOSString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : r60 = <org.apache.pdfbox.cos.COSBoolean: org.apache.pdfbox.cos.COSBoolean TRUE>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r36 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r38 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : r60 = <org.apache.pdfbox.cos.COSNull: org.apache.pdfbox.cos.COSNull NULL>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : r60 = null
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : lookupswitch(c8) {     case 40: goto r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSString parseCOSString()>();     case 47: goto r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSName parseCOSName()>();     case 60: goto $r34 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>;     case 82: goto $r32 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>;     case 91: goto r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSArray parseCOSArray()>();     case 102: goto $r17 = new java.lang.String;     case 110: goto virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedString(java.lang.String)>("null");     case 116: goto $r2 = new java.lang.String;     case 65535: goto return null;     default: goto $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c8); }
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : c8 = (char) i0
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()>()
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : goto [?= return r60]
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedString(java.lang.String)>("null")
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSName parseCOSName()>()
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r33 = new org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r34 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r65 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r32 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("true")
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c8)
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r63 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r39 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r17 = new java.lang.String
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : if i11 == -1 goto $r38 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r35 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c12)
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r66 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : if c8 == 45 goto $r63 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSString parseCOSString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : c12 = (char) i11
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : r60 = <org.apache.pdfbox.cos.COSBoolean: org.apache.pdfbox.cos.COSBoolean FALSE>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseDirObject : $r2 = new java.lang.String
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r133 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PageMode getPageMode()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r52 = virtualinvoke r166.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r12 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline getDocumentOutline()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r149 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : f1 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $b0 = f0 cmpg f1
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r115 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.common.PDDestinationOrAction getOpenAction()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r26 = new org.apache.pdfbox.multipdf.PDFCloneUtility
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r122 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r78 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r168 = virtualinvoke r166.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources getResources()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r121 != null goto (branch)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r10 != null goto virtualinvoke $r26.<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>(r11, r10)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r140 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r8 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocumentNameDictionary getNames()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r132 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PageMode getPageMode()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r16 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot getStructureTreeRoot()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r11 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary getDests()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : i20 = -1
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r21 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r103 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r18 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot getStructureTreeRoot()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r34 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r158 = null
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r46 = interfaceinvoke r165.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r38 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGE_LABELS>
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r15 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo getMarkInfo()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r6 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : specialinvoke r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)>($r26, r4, r3)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r152 != null goto specialinvoke r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)>($r26, r4, r3)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r162 = new java.util.HashMap
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $i9 = virtualinvoke r166.<org.apache.pdfbox.pdmodel.PDPage: int getRotation()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r109 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r156 == null goto specialinvoke r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)>($r26, r4, r3)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r11 == null goto r12 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline getDocumentOutline()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r30 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r25 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.common.PDDestinationOrAction getOpenAction()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo getMarkInfo()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r37 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r9 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocumentNameDictionary getNames()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r74 = new org.apache.pdfbox.pdmodel.common.PDStream
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r144 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r135 == null goto $r140 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r13 == null goto r132 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PageMode getPageMode()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r64 = new org.apache.pdfbox.pdmodel.PDResources
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r4 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r153 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r10 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary getDests()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r147 == null goto $r149 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: void addPage(org.apache.pdfbox.pdmodel.PDPage)>($r47)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r9 == null goto r10 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary getDests()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r47 = new org.apache.pdfbox.pdmodel.PDPage
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : z6 = 0
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : virtualinvoke $r26.<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>(r11, r10)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r124 != null goto virtualinvoke r124.<org.apache.pdfbox.cos.COSArray: void addAll(org.apache.pdfbox.cos.COSArray)>(r125)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r13 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline getDocumentOutline()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : goto [?= $z7 = interfaceinvoke r165.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r77 = virtualinvoke $r74.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.PDDocumentInformation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if z6 == 0 goto return
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r122 == null goto (branch)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r157 = null
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r159 = null
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r51 = virtualinvoke r166.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle getCropBox()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r143 != null goto $r149 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if z6 == 0 goto virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: void addPage(org.apache.pdfbox.pdmodel.PDPage)>($r47)
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r20 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : r121 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r22 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : f0 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : if r168 == null goto $r53 = new org.apache.pdfbox.pdmodel.PDResources
org.apache.pdfbox.multipdf.PDFMergerUtility.appendDocument : $r27 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.cos.COSDictionary.getCOSName : return null
org.apache.pdfbox.cos.COSDictionary.getCOSName : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getCOSName : $r3 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getCOSName : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSObject.setGenerationNumber : r0.<org.apache.pdfbox.cos.COSObject: int generationNumber> = i0
org.apache.pdfbox.pdmodel.PDDocument.isAllSecurityToBeRemoved : $z0 = r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean allSecurityToBeRemoved>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.cos.COSString.getBytes : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.pdmodel.PDPageTree.access$200 : $r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: java.util.List getKids(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.io.ScratchFileBuffer.getPosition : $l2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.getPosition : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : z0 = 0
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $b3 = f3 cmpl #InfinityF
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $b4 = f3 cmpl 0.0F
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $b0 = f3 cmpl #-InfinityF
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $r2 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.cos.COSObject.accept : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.io.IOUtils.closeQuietly : if r0 == null goto (branch)
org.apache.pdfbox.io.IOUtils.closeQuietly : goto [?= return]
org.apache.pdfbox.util.SmallMap.remove : if i0 >= 0 goto $r4 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : return null
org.apache.pdfbox.util.SmallMap.remove : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.PDDocument.getResourceCache : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.ResourceCache resourceCache>
org.apache.pdfbox.pdmodel.PDPageTree.iterator : $r1 = new org.apache.pdfbox.pdmodel.PDPageTree$PageIterator
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : if r2 != null goto $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : if r1 == null goto $r4 = new java.lang.NullPointerException
org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 goto $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r52, r51)
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : goto [?= $r56 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>]
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r23 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : r46 = (org.apache.pdfbox.cos.COSObject) r1
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r33 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $z0 = r1 instanceof java.util.List
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r21 = virtualinvoke r49.<org.apache.pdfbox.cos.COSStream: java.util.Set entrySet()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : if r41 == null goto $z0 = r1 instanceof java.util.List
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $z3 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $z1 = r1 instanceof org.apache.pdfbox.pdmodel.common.COSObjectable
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : r41 = $r27
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r4 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : r51 = virtualinvoke r50.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createRawOutputStream()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r10 = virtualinvoke r53.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r28 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r17 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: org.apache.pdfbox.pdmodel.PDDocument destination>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $z4 = r1 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r14 = (org.apache.pdfbox.cos.COSName) $r13
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : return null
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r16)
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r27 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : r49 = (org.apache.pdfbox.cos.COSStream) r1
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r12 = (org.apache.pdfbox.cos.COSDictionary) $r7
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : goto [?= $z6 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : goto [?= $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : if r1 != null goto $r4 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r7 = new org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : i2 = 0
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r30 = virtualinvoke r48.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i2)
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : r52 = virtualinvoke r49.<org.apache.pdfbox.cos.COSStream: java.io.InputStream createRawInputStream()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : virtualinvoke r51.<java.io.OutputStream: void close()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r32 = virtualinvoke r46.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r37 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r8 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r35 = (org.apache.pdfbox.pdmodel.common.COSObjectable) r1
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : virtualinvoke r52.<java.io.InputStream: void close()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r56 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $z2 = r1 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : r53 = (org.apache.pdfbox.cos.COSDictionary) r1
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : r41 = (org.apache.pdfbox.cos.COSBase) r1
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $z5 = r1 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : r48 = (org.apache.pdfbox.cos.COSArray) r1
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : r41 = r50
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneForNewDocument : $r19 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.io.ScratchFileBuffer.write : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : if i19 <= 0 goto $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i20 + i2
org.apache.pdfbox.io.ScratchFileBuffer.write : $i0 = lengthof r1
org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i1
org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 1
org.apache.pdfbox.io.ScratchFileBuffer.write : $l11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i14 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean ensureAvailableBytesInPage(boolean)>(1)
org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.io.ScratchFileBuffer.write : $i17 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i0
org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i19 - i2
org.apache.pdfbox.io.ScratchFileBuffer.write : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if i19 <= 0 goto $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>", "org.apache.pdfbox.io.ScratchFileBuffer.write")]
org.apache.pdfbox.io.ScratchFileBuffer.write : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.cos.COSStream.close : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r23)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : if r23 == null goto $r8 = <org.apache.pdfbox.pdfparser.BaseParser: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $i7 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $i9 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedChar(char)>(91)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $i5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $r6 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $i11 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : r23 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSBase getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey)>($r22)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $z0 = r23 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $r22 = new org.apache.pdfbox.cos.COSObjectKey
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : $c3 = (char) $i1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray : r23 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSBase parseDirObject()>()
org.apache.pdfbox.cos.COSStream.ensureRandomAccessExists : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : i5 = i1
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : if i5 >= i1 goto staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("i4 = i4 + -1", "org.apache.pdfbox.pdfparser.COSParser.lastIndexOf")
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : i4 = i4 + -1
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : c6 = r1[i5]
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : i4 = i0
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : $i2 = lengthof r1
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : c6 = r1[i1]
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : i5 = i5 + -1
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : return i4
org.apache.pdfbox.pdfparser.COSParser.lastIndexOf : $b3 = r2[i4]
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : goto [?= i1 = i1 + 1]
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $z4 = r4 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : virtualinvoke r3.<org.apache.pdfbox.cos.COSBase: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>(r0)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void addObjectToWrite(org.apache.pdfbox.cos.COSBase)>(r3)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void writeReference(org.apache.pdfbox.cos.COSBase)>(r3)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : if r3 != null goto virtualinvoke r3.<org.apache.pdfbox.cos.COSBase: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>(r0)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $z2 = r3 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $z5 = virtualinvoke r3.<org.apache.pdfbox.cos.COSBase: boolean isDirect()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $r17 = (org.apache.pdfbox.cos.COSObject) r3
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $z3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean incrementalUpdate>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $i0 = i1 % 10
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : i1 = i1 + 1
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : return null
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $z1 = r3 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : i1 = 0
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromArray : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfparser.COSParser.parsePDFHeader : $z0 = specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: boolean parseHeader(java.lang.String,java.lang.String)>("%PDF-", "1.4")
org.apache.pdfbox.pdmodel.PDPageTree.getKids : if r3 != null goto i1 = 0
org.apache.pdfbox.pdmodel.PDPageTree.getKids : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>
org.apache.pdfbox.pdmodel.PDPageTree.getKids : $r7 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1)
org.apache.pdfbox.pdmodel.PDPageTree.getKids : i1 = 0
org.apache.pdfbox.pdmodel.PDPageTree.getKids : $r4 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.PDPageTree.getKids : return $r4
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r6 = new org.apache.pdfbox.pdmodel.PDResources
org.apache.pdfbox.pdmodel.PDPage.getResources : $r8 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r4 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getResources : if r1 == null goto $r8 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r2 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources>
org.apache.pdfbox.pdfparser.BaseParser.isCR : if 13 != i0 goto $z0 = 0
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readString()>()
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : i1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: int readGenerationNumber()>()
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $r47 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : l0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: long readObjectNumber()>()
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $z0 = virtualinvoke r60.<java.lang.String: boolean equals(java.lang.Object)>("stream")
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : goto [?= virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void skipSpaces()>()]
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $r55 = (org.apache.pdfbox.cos.COSDictionary) r59
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $r56 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler>
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $r20 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler>
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $l3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSObjectKey: long getNumber()>()
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : r60 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>()
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : r59 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSBase parseDirObject()>()
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : r59 = r4
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $r6 = <org.apache.pdfbox.pdfparser.COSParser: char[] OBJ_MARKER>
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : virtualinvoke r3.<org.apache.pdfbox.cos.COSObject: void setObject(org.apache.pdfbox.cos.COSBase)>(r59)
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $z3 = virtualinvoke r60.<java.lang.String: boolean startsWith(java.lang.String)>("endobj")
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $r5 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $i7 = virtualinvoke r2.<org.apache.pdfbox.cos.COSObjectKey: int getGeneration()>()
org.apache.pdfbox.pdfparser.COSParser.parseFileObject : $z2 = r59 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.cos.COSName.writePDF : $i3 = b1 + 256
org.apache.pdfbox.cos.COSName.writePDF : if i2 <= 90 goto virtualinvoke r1.<java.io.OutputStream: void write(int)>(i2)
org.apache.pdfbox.cos.COSName.writePDF : virtualinvoke r1.<java.io.OutputStream: void write(int)>(47)
org.apache.pdfbox.cos.COSName.writePDF : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.cos.COSName.writePDF : b1 = r2[i4]
org.apache.pdfbox.cos.COSName.writePDF : if i2 < 65 goto (branch)
org.apache.pdfbox.cos.COSName.writePDF : i0 = lengthof r2
org.apache.pdfbox.cos.COSDocument.addXRefTable : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map xrefTable>
org.apache.pdfbox.pdmodel.PDDocument.getVersion : goto [?= $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)]
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = -1.0F
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if r1 == null goto $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $b0 = f0 cmpl 1.4F
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.enqueueKids : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.enqueueKids : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.enqueueKids : $r5 = r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: org.apache.pdfbox.pdmodel.PDPageTree this$0>
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.enqueueKids : specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: void enqueueKids(org.apache.pdfbox.cos.COSDictionary)>(r4)
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.enqueueKids : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: java.util.Queue queue>
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.enqueueKids : goto [?= return]
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.enqueueKids : $r7 = r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: org.apache.pdfbox.pdmodel.PDPageTree this$0>
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.enqueueKids : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r7 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>()
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r5 = new org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r2 = new org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.cos.COSDocument.createCOSStream : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDocument.createCOSStream : return $r2
org.apache.pdfbox.util.SmallMap.containsKey : $i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSStream.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)>(r0)
org.apache.pdfbox.pdfparser.COSParser.isString : i1 = lengthof r1
org.apache.pdfbox.pdfparser.COSParser.isString : return z1
org.apache.pdfbox.pdfparser.COSParser.isString : c2 = r1[i4]
org.apache.pdfbox.pdfparser.COSParser.isString : z0 = 1
org.apache.pdfbox.pdfparser.COSParser.isString : if i5 >= i0 goto $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r1, r2)
org.apache.pdfbox.pdfparser.COSParser.isString : i0 = lengthof r1
org.apache.pdfbox.pdfparser.COSParser.isString : $r3 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.isString : z1 = 1
org.apache.pdfbox.pdfparser.COSParser.isString : $r4 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.isString : z1 = 0
org.apache.pdfbox.pdfparser.COSParser.isString : $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r1, r2)
org.apache.pdfbox.pdfparser.COSParser.isString : r2 = newarray (byte)[i0]
org.apache.pdfbox.pdfparser.COSParser.isString : $r5 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdmodel.PDPage.setResources : if r1 == null goto $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.setResources : $r5 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.setResources : r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources> = r1
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : return $r9
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : if r4 != null goto $r10 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)>(r4)
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r8 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r10 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation createAnnotation(org.apache.pdfbox.cos.COSBase)>(r4)
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : r4 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1)
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : if r2 != null goto $r8 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r9 = new org.apache.pdfbox.pdmodel.common.COSArrayList
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : i1 = 0
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentId : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: java.lang.Long documentId>
org.apache.pdfbox.cos.COSDictionary.addAll : $r13 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.addAll : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.cos.COSDictionary.addAll : $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.cos.COSDictionary.addAll : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDictionary.addAll : $r4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>()
org.apache.pdfbox.cos.COSDictionary.addAll : $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromFloat : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromFloat : return null
org.apache.pdfbox.pdfparser.PDFParser.parse : $r2 = r0.<org.apache.pdfbox.pdfparser.PDFParser: java.io.InputStream keyStoreInputStream>
org.apache.pdfbox.pdfparser.PDFParser.parse : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: boolean parsePDFHeader()>()
org.apache.pdfbox.pdfparser.PDFParser.parse : $z1 = r0.<org.apache.pdfbox.pdfparser.PDFParser: boolean initialParseDone>
org.apache.pdfbox.pdfparser.PDFParser.parse : virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: void initialParse()>()
org.apache.pdfbox.cos.COSInteger.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromInt(org.apache.pdfbox.cos.COSInteger)>(r0)
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.setOffset : r0.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: long offset> = l0
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getOpenAction : $r9 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination: org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination create(org.apache.pdfbox.cos.COSBase)>(r1)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getOpenAction : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getOpenAction : if r1 != null goto $z0 = r1 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getOpenAction : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getOpenAction : return null
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getOpenAction : $z0 = r1 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.peek : if i0 == -1 goto return i0
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.peek : return i0
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.peek : i0 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int read()>()
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.peek : virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: void rewind(int)>(1)
org.apache.pdfbox.cos.COSFloat.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromFloat(org.apache.pdfbox.cos.COSFloat)>(r0)
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.close : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: void deleteTempFile()>()
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.close : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: java.io.RandomAccessFile raFile>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.close : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: java.util.Map pageCache>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.close : r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: boolean isClosed> = 1
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : goto [?= $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : $r9 = new java.lang.StringBuilder
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : $r6 = virtualinvoke r25.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : $r15 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : r24 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : r21 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : $r16 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : goto [?= $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : $r19 = virtualinvoke r23.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : $r4 = new java.util.HashMap
org.apache.pdfbox.multipdf.MergeAnnotationsTest.testAnnotationsMatch : $r5 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7]
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeOutputIntents : r5 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getOutputIntents()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeOutputIntents : r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeOutputIntents : r4 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getOutputIntents()>()
org.apache.pdfbox.cos.COSStream$2.close : $r5 = r0.<org.apache.pdfbox.cos.COSStream$2: org.apache.pdfbox.cos.COSStream this$0>
org.apache.pdfbox.cos.COSStream$2.close : specialinvoke r0.<java.io.FilterOutputStream: void close()>()
org.apache.pdfbox.cos.COSStream$2.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream$2: org.apache.pdfbox.cos.COSStream this$0>
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.next : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: org.apache.pdfbox.pdmodel.PDPage next()>()
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.next : $r5 = r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: org.apache.pdfbox.pdmodel.PDPageTree this$0>
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.next : $r8 = r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: org.apache.pdfbox.pdmodel.PDPageTree this$0>
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.next : staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: void access$300(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.next : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: java.util.Queue queue>
org.apache.pdfbox.pdfwriter.COSWriter.setOutput : r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.io.OutputStream output> = r1
org.apache.pdfbox.pdfparser.COSParser.getLength : $r12 = virtualinvoke r3.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.pdfparser.COSParser.getLength : if r1 != null goto $z1 = r1 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdfparser.COSParser.getLength : r3 = (org.apache.pdfbox.cos.COSObject) r1
org.apache.pdfbox.pdfparser.COSParser.getLength : $r26 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.getLength : $r24 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.getLength : $r27 = virtualinvoke r3.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.pdfparser.COSParser.getLength : $r13 = virtualinvoke r3.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.pdfparser.COSParser.getLength : $z1 = r1 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdfparser.COSParser.getLength : $z2 = r1 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfparser.COSParser.getLength : return r29
org.apache.pdfbox.pdfparser.COSParser.getLength : $r25 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OBJ_STM>
org.apache.pdfbox.pdfparser.COSParser.getLength : r29 = (org.apache.pdfbox.cos.COSNumber) r1
org.apache.pdfbox.pdfparser.COSParser.getLength : goto [?= return r29]
org.apache.pdfbox.pdfparser.COSParser.getLength : $r11 = virtualinvoke r3.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.pdfparser.COSParser.getLength : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSBase parseObjectDynamically(org.apache.pdfbox.cos.COSObject,boolean)>(r3, z0)
org.apache.pdfbox.pdfparser.BaseParser.isHexDigit : $z0 = staticinvoke <org.apache.pdfbox.pdfparser.BaseParser: boolean isDigit(int)>(c0)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getDests : $r5 = new org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getDests : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getDests : if r1 == null goto return r6
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getDests : return r6
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getDests : r6 = null
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z6 = virtualinvoke r34.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : f0 = -1.0F
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r3 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r36 = virtualinvoke r34.<java.lang.String: java.lang.String[] split(java.lang.String)>("-")
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r10 = r36[1]
org.apache.pdfbox.pdfparser.COSParser.parseHeader : if i0 <= 0 goto $z1 = virtualinvoke r34.<java.lang.String: boolean startsWith(java.lang.String)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $i14 = lengthof r36
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $b1 = f0 cmpg 0.0F
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z0 = virtualinvoke r34.<java.lang.String: boolean contains(java.lang.CharSequence)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : return 1
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r4 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r34 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $r11 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.COSParser.parseHeader : i0 = virtualinvoke r34.<java.lang.String: int indexOf(java.lang.String)>(r1)
org.apache.pdfbox.pdfparser.COSParser.parseHeader : $z1 = virtualinvoke r34.<java.lang.String: boolean startsWith(java.lang.String)>(r1)
org.apache.pdfbox.pdfparser.COSParser.addExcludedToList : if r1 == null goto return
org.apache.pdfbox.pdfparser.BaseParser.isValidUTF8 : return 1
org.apache.pdfbox.pdfparser.BaseParser.isValidUTF8 : $r4 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset UTF_8>
org.apache.pdfbox.pdfparser.BaseParser.isValidUTF8 : $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1)
org.apache.pdfbox.pdfparser.COSParser.addNewToList : specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void addNewToList(java.util.Queue,org.apache.pdfbox.cos.COSBase,java.util.Set)>(r1, r5, r3)
org.apache.pdfbox.pdfparser.COSParser.addNewToList : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfparser.COSParser.addNewToList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfparser.COSParser.addNewToList : r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.pdfbox.pdfparser.COSParser.addNewToList : interfaceinvoke r1.<java.util.Queue: boolean add(java.lang.Object)>(r2)
org.apache.pdfbox.pdfparser.COSParser.addNewToList : $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.pdfbox.pdfparser.COSParser.addNewToList : $r4 = (org.apache.pdfbox.cos.COSObject) r2
org.apache.pdfbox.pdfparser.COSParser.addNewToList : $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $z1 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean incrementalUpdate>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : l5 = -1L
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void doWriteXRefTable()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)>(r1)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XREF_STM>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $z3 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDocument: boolean isXRefStream()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : if r2 == null goto $z1 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean incrementalUpdate>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void doWriteBody(org.apache.pdfbox.cos.COSDocument)>(r1)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $z2 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean incrementalUpdate>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $z0 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean incrementalUpdate>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void doWriteHeader(org.apache.pdfbox.cos.COSDocument)>(r1)
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.isOnNewLine : $z0 = r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: boolean onNewLine>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getOutputIntents : $r5 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getOutputIntents : $r7 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getOutputIntents : if r2 == null goto return $r5
org.apache.pdfbox.pdfparser.BaseParser.isEOL : $z0 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isLF(int)>(i0)
org.apache.pdfbox.cos.COSDictionary.getValues : $r1 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSNumber.get : $i0 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.cos.COSNumber.get : c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)
org.apache.pdfbox.cos.COSNumber.get : if 48 > c8 goto (branch)
org.apache.pdfbox.cos.COSNumber.get : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.pdfbox.cos.COSNumber.get : $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0)
org.apache.pdfbox.cos.COSNumber.get : $i6 = c8 - 48
org.apache.pdfbox.cos.COSNumber.get : if c8 > 57 goto (branch)
org.apache.pdfbox.cos.COSNumber.get : $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46)
org.apache.pdfbox.cos.COSNumber.get : $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)
org.apache.pdfbox.cos.COSDocument.isXRefStream : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean isXRefStream>
org.apache.pdfbox.pdfparser.BaseParser.readExpectedChar : if c1 == c0 goto return
org.apache.pdfbox.pdfparser.BaseParser.readExpectedChar : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r5 = new java.util.ArrayList
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l12 = -2L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l13)
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $i1 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l13 = 1L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l7 = l12 + 1L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l13 = l13 + 1L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $l3 = l12 - l13
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $r11 = (org.apache.pdfbox.pdfwriter.COSWriterXRefEntry) r4
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : $b9 = l12 cmp -2L
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : l12 = l0
org.apache.pdfbox.pdfwriter.COSWriter.getXRefRanges : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void removeItem(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null goto virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null goto $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDocument.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)>(r0)
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : return r28
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : r1 = (org.apache.pdfbox.cos.COSArray) r0
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : if r0 != null goto $z0 = r0 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : $z0 = r0 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : $r16 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(1)
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : $r13 = (org.apache.pdfbox.cos.COSArray) r0
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : goto [?= return r28]
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : r28 = null
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("Fit")
org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination.create : $r14 = (org.apache.pdfbox.cos.COSArray) r0
org.apache.pdfbox.io.RandomAccessInputStream.restorePosition : $r1 = r0.<org.apache.pdfbox.io.RandomAccessInputStream: org.apache.pdfbox.io.RandomAccessRead input>
org.apache.pdfbox.pdfwriter.COSWriter.writeReference : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeReference : $r15 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeReference : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeReference : r2 = specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.cos.COSObjectKey getObjectKey(org.apache.pdfbox.cos.COSBase)>(r1)
org.apache.pdfbox.pdfwriter.COSWriter.writeReference : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.writeReference : $r13 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName INFO>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void addObjectToWrite(org.apache.pdfbox.cos.COSBase)>(r3)
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean willEncrypt> = 0
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void doWriteObjects()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void addObjectToWrite(org.apache.pdfbox.cos.COSBase)>(r4)
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : if r5 == null goto specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void doWriteObjects()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ENCRYPT>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : if r4 == null goto specialinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void doWriteObjects()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody : if r3 == null goto (branch)
org.apache.pdfbox.cos.COSArray.remove : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSInteger.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSInteger
org.apache.pdfbox.cos.COSDocument.setVersion : r0.<org.apache.pdfbox.cos.COSDocument: float version> = f0
org.apache.pdfbox.io.ScratchFileBuffer.read : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage>
org.apache.pdfbox.io.ScratchFileBuffer.read : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage>
org.apache.pdfbox.io.ScratchFileBuffer.read : i23 = i23 - i2
org.apache.pdfbox.io.ScratchFileBuffer.read : $l2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.read : i24 = i24 + i2
org.apache.pdfbox.io.ScratchFileBuffer.read : return i24
org.apache.pdfbox.io.ScratchFileBuffer.read : $i0 = lengthof r1
org.apache.pdfbox.io.ScratchFileBuffer.read : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.read : $l15 = (long) i1
org.apache.pdfbox.io.ScratchFileBuffer.read : $z0 = specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean ensureAvailableBytesInPage(boolean)>(0)
org.apache.pdfbox.io.ScratchFileBuffer.read : i24 = 0
org.apache.pdfbox.io.ScratchFileBuffer.read : $i21 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.io.ScratchFileBuffer.read : if i23 <= 0 goto return i24
org.apache.pdfbox.io.ScratchFileBuffer.read : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.read : i25 = i25 + i2
org.apache.pdfbox.io.ScratchFileBuffer.read : i25 = i0
org.apache.pdfbox.io.ScratchFileBuffer.read : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if i23 <= 0 goto return i24", "org.apache.pdfbox.io.ScratchFileBuffer.read")]
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getMarkInfo : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getMarkInfo : if r1 != null goto $r5 = new org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo
org.apache.pdfbox.pdfparser.BaseParser.readString : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readString : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.BaseParser.readString : $r7 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readString : if i2 == -1 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.readString : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.readString : $r3 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readString : $c0 = (char) i2
org.apache.pdfbox.pdfparser.BaseParser.readString : if i2 == -1 goto $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readString : $c1 = (char) i2
org.apache.pdfbox.pdmodel.PDDocument.isEncrypted : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.getKey : $r1 = r0.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: org.apache.pdfbox.cos.COSObjectKey key>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : $r15 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if i7 <= 0 goto (branch)", "org.apache.pdfbox.pdfparser.BaseParser.parseCOSString")]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if c3 != 92 goto virtualinvoke $r14.<java.io.ByteArrayOutputStream: void write(int)>(c3)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if i7 <= 0 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if c3 != 40 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if c0 != 60 goto $r5 = new java.io.IOException
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : i9 = -2
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if i9 == -2 goto $r19 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : $r13 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSString parseCOSHexString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if i8 == -1 goto $r16 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : $r14 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : virtualinvoke $r14.<java.io.ByteArrayOutputStream: void write(int)>(c3)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if i7 == 0 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : $r18 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : i10 = i7 + -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if c0 != 40 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : $r4 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if c3 != 41 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : goto [?= $r14 = new java.io.ByteArrayOutputStream]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : if i8 == -1 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : $r19 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : i7 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: int checkForMissingCloseParen(int)>(i10)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : i7 = 1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSString : c3 = (char) i8
org.apache.pdfbox.pdmodel.common.COSArrayList.iterator : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.cos.COSObject.setObject : r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase baseObject> = r1
org.apache.pdfbox.cos.COSObject.getGenerationNumber : $i0 = r0.<org.apache.pdfbox.cos.COSObject: int generationNumber>
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGB : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: java.awt.color.ColorSpace awtColorSpace>
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGB : specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: void init()>()
org.apache.pdfbox.io.ScratchFileBuffer.isEOF : $l2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.isEOF : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getNames : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getNames : if r1 != null goto $r5 = new org.apache.pdfbox.pdmodel.PDDocumentNameDictionary
org.apache.pdfbox.pdfparser.COSParser.readValidStream : if i1 > 0 goto $r5 = r0.<org.apache.pdfbox.pdfparser.COSParser: byte[] streamCopyBuf>
org.apache.pdfbox.pdfparser.COSParser.readValidStream : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$b2 = l6 cmp 0L", "org.apache.pdfbox.pdfparser.COSParser.readValidStream")]
org.apache.pdfbox.pdfparser.COSParser.readValidStream : $r4 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.io.RandomAccessRead source>
org.apache.pdfbox.pdfparser.COSParser.readValidStream : $r5 = r0.<org.apache.pdfbox.pdfparser.COSParser: byte[] streamCopyBuf>
org.apache.pdfbox.pdfparser.COSParser.readValidStream : l6 = virtualinvoke r2.<org.apache.pdfbox.cos.COSNumber: long longValue()>()
org.apache.pdfbox.pdfparser.COSParser.readValidStream : $b2 = l6 cmp 0L
org.apache.pdfbox.pdfparser.COSParser.readValidStream : $l4 = (long) i1
org.apache.pdfbox.pdfparser.COSParser.readValidStream : $b3 = l6 cmp 8192L
org.apache.pdfbox.io.ScratchFileBuffer.peek : if i0 == -1 goto return i0
org.apache.pdfbox.io.ScratchFileBuffer.peek : return i0
org.apache.pdfbox.io.ScratchFileBuffer.peek : i0 = virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: int read()>()
org.apache.pdfbox.io.ScratchFileBuffer.peek : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void rewind(int)>(1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z1 = r2 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.pdfwriter.COSWriter.visitFromBoolean : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromBoolean : return null
org.apache.pdfbox.pdfparser.BaseParser.getObjectFromPool : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.BaseParser.getObjectFromPool : $r3 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDPage.setRotation : $r2 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setTrailer : $r2 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj curXrefTrailerObj>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setTrailer : $r3 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj curXrefTrailerObj>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getStructureTreeRoot : if r1 != null goto $r5 = new org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getStructureTreeRoot : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setXRef : $r2 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj curXrefTrailerObj>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setXRef : $r5 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj curXrefTrailerObj>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setXRef : $r3 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj curXrefTrailerObj>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r13)
org.apache.pdfbox.pdmodel.PDPageTree.add : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 != null goto staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>", "org.apache.pdfbox.pdmodel.PDPageTree.add")
org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 == null goto (branch)
org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.cos.COSDictionary.containsKey : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.pdfparser.BaseParser.readGenerationNumber : $l1 = (long) i0
org.apache.pdfbox.pdfparser.BaseParser.readGenerationNumber : if i0 < 0 goto $r1 = new java.io.IOException
org.apache.pdfbox.pdfparser.BaseParser.readGenerationNumber : return i0
org.apache.pdfbox.pdfparser.BaseParser.readGenerationNumber : i0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: int readInt()>()
org.apache.pdfbox.pdfparser.BaseParser.readExpectedString : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.BaseParser.readExpectedString : c1 = r1[i4]
org.apache.pdfbox.pdfparser.BaseParser.readExpectedString : $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()
org.apache.pdfbox.pdfparser.BaseParser.readExpectedString : $r3 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readExpectedString : i0 = lengthof r1
org.apache.pdfbox.pdfwriter.COSWriter.setStartxref : r0.<org.apache.pdfbox.pdfwriter.COSWriter: long startxref> = l0
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : $r5 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Map objectKeys>
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : if r13 != null goto (branch)
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : r12 = r1
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : $r3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Map objectKeys>
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : r13 = null
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : $r9 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Map objectKeys>
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : if r13 != null goto return r13
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : if r12 == null goto (branch)
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : if r12 == null goto return r13
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : $r11 = (org.apache.pdfbox.cos.COSObject) r1
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : return r13
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : $l0 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: long getNumber()>()
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : $z0 = r1 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : $r7 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Map objectKeys>
org.apache.pdfbox.pdfwriter.COSWriter.getObjectKey : $r2 = new org.apache.pdfbox.cos.COSObjectKey
org.apache.pdfbox.util.SmallMap.access$000 : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObjects : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: void doWriteObject(org.apache.pdfbox.cos.COSBase)>(r1)
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObjects : $r2 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Deque objectsToWrite>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObjects : $r3 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Deque objectsToWrite>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObjects : $r5 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Set objectsToWriteSet>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteObjects : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$r2 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.Deque objectsToWrite>", "org.apache.pdfbox.pdfwriter.COSWriter.doWriteObjects")]
org.apache.pdfbox.pdfparser.BaseParser.skipWhiteSpaces : if 10 == i1 goto return
org.apache.pdfbox.pdfparser.BaseParser.skipWhiteSpaces : if 13 != i0 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.skipWhiteSpaces : if 10 == i0 goto return
org.apache.pdfbox.pdfparser.BaseParser.skipWhiteSpaces : if 32 != i0 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.skipWhiteSpaces : $r3 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipWhiteSpaces : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.writeEOL : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: void setOnNewLine(boolean)>(1)
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.writeEOL : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: boolean isOnNewLine()>()
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.writeEOL : $r1 = <org.apache.pdfbox.pdfwriter.COSStandardOutputStream: byte[] EOL>
org.apache.pdfbox.cos.COSInputStream.create : r16 = r2
org.apache.pdfbox.cos.COSInputStream.create : $r5 = new java.util.ArrayList
org.apache.pdfbox.cos.COSInputStream.create : $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.cos.COSInputStream.create : $r6 = new org.apache.pdfbox.cos.COSInputStream
org.apache.pdfbox.pdfparser.BaseParser.readInt : r1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: java.lang.StringBuilder readStringNumber()>()
org.apache.pdfbox.pdfparser.BaseParser.readInt : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.BaseParser.readInt : goto [?= return i1]
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readInt : return i1
org.apache.pdfbox.pdmodel.common.COSArrayList.size : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdfwriter.COSWriter.getStartxref : $l0 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: long startxref>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$i5 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int pageSize>", "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage")]
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : i4 = 0
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: byte[] lastRemovedCachePage>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : return r3
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int pageSize>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : if i0 >= 0 goto i4 = i4 + i0
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: java.io.RandomAccessFile raFile>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int pageSize>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : i4 = i4 + i0
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readPage : goto [?= return r3]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : if c0 != 47 goto $r5 = <org.apache.pdfbox.pdfparser.BaseParser: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : $r3 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : return $r2
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedChar(char)>(62)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedChar(char)>(60)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : $r2 = new org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : z1 = 1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : z1 = 0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : if c0 != 62 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)>($r2)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : if z1 != 0 goto virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedChar(char)>(62)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if z1 != 0 goto virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedChar(char)>(62)", "org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary")]
org.apache.pdfbox.pdfparser.PDFParser.init : r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.pdfbox.pdfparser.nonSequentialPDFParser.eofLookupRange")
org.apache.pdfbox.pdfparser.PDFParser.init : $r11 = new org.apache.pdfbox.cos.COSDocument
org.apache.pdfbox.pdfparser.PDFParser.init : if r2 == null goto $r11 = new org.apache.pdfbox.cos.COSDocument
org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $r11 = (org.apache.pdfbox.cos.COSDictionary) r3
org.apache.pdfbox.pdfparser.PDFParser.initialParse : l0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: long getStartxrefOffset()>()
org.apache.pdfbox.pdfparser.PDFParser.initialParse : r23 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)>(r21)
org.apache.pdfbox.pdfparser.PDFParser.initialParse : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: void prepareDecryption()>()
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $r24 = r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.PDFParser.initialParse : if z7 == 0 goto specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: void prepareDecryption()>()
org.apache.pdfbox.pdfparser.PDFParser.initialParse : goto [?= (branch)]
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $z1 = r23 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $r9 = r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.PDFParser.initialParse : r1 = (org.apache.pdfbox.cos.COSDictionary) r23
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $z4 = r3 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdfparser.PDFParser.initialParse : r0.<org.apache.pdfbox.pdfparser.PDFParser: boolean initialParseDone> = 1
org.apache.pdfbox.pdfparser.PDFParser.initialParse : z7 = 0
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $r5 = virtualinvoke r2.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.pdfparser.PDFParser.initialParse : if r2 == null goto r0.<org.apache.pdfbox.pdfparser.PDFParser: boolean initialParseDone> = 1
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName INFO>
org.apache.pdfbox.pdfparser.PDFParser.initialParse : r21 = null
org.apache.pdfbox.pdfparser.PDFParser.initialParse : r21 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDictionary parseXref(long)>(l0)
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $b1 = l0 cmp -1L
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>
org.apache.pdfbox.pdfparser.PDFParser.initialParse : $z2 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: boolean isLenient()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : if r17 == null goto return null
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : $r8 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : $z0 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: boolean willEncrypt>
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : r17 = null
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : return null
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : r17 = virtualinvoke r1.<org.apache.pdfbox.cos.COSStream: java.io.InputStream createRawInputStream()>()
org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream : virtualinvoke r17.<java.io.InputStream: void close()>()
org.apache.pdfbox.pdfparser.RandomAccessSource.unread : $r2 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader>
org.apache.pdfbox.pdfparser.RandomAccessSource.unread : $r1 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader>
org.apache.pdfbox.pdmodel.PDPageTree.get : $r4 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdmodel.PDPageTree.get : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 != i5 goto (branch)
org.apache.pdfbox.pdmodel.PDPageTree.get : $i3 = i5 + i1
org.apache.pdfbox.pdmodel.PDPageTree.get : return r1
org.apache.pdfbox.pdmodel.PDPageTree.get : $i1 = i0 + 1
org.apache.pdfbox.pdmodel.PDPageTree.get : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.get : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdmodel.PDPageTree.get : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.PDPageTree.get : $r11 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: java.util.List getKids(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.PDPageTree.get : $r13 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.PDPageTree.get : staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: void sanitizeType(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.PDPageTree.get : $r14 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)>(i0, r3, i5)
org.apache.pdfbox.pdmodel.PDPageTree.get : $z2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)>(r3)
org.apache.pdfbox.pdmodel.PDPageTree.get : if i0 >= 0 goto $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageTree: boolean isPageTreeNode(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.PDPageTree.get : i5 = i5 + 1
org.apache.pdfbox.pdmodel.PDPageTree.get : if i5 != i0 goto $r4 = new java.lang.IllegalStateException
org.apache.pdfbox.pdfparser.XrefTrailerResolver.getXrefType : $r1 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj resolvedXrefTrailer>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : if r46 != null goto $r11 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj resolvedXrefTrailer>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : goto [?= staticinvoke <java.util.Collections: void reverse(java.util.List)>($r10)]
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r16 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r27 = r46.<org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj: org.apache.pdfbox.cos.COSDictionary trailer>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r17 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: java.util.Map bytePosToXrefMap>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r7 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: java.util.Map bytePosToXrefMap>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r19 = r48.<org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj: org.apache.pdfbox.cos.COSDictionary trailer>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $b1 = l4 cmp -1L
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r20 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj resolvedXrefTrailer>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r10 = new java.util.ArrayList
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r11 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj resolvedXrefTrailer>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : goto [?= $z3 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : staticinvoke <java.util.Collections: void reverse(java.util.List)>($r10)
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r3 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj resolvedXrefTrailer>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : r47 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r4 = new org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r6 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj resolvedXrefTrailer>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r15 = r46.<org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj: org.apache.pdfbox.cos.COSDictionary trailer>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.setStartxref : $r23 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj resolvedXrefTrailer>
org.apache.pdfbox.pdmodel.PDPage.getMediaBox : $r7 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getMediaBox : $r10 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle mediaBox>
org.apache.pdfbox.pdmodel.PDPage.getMediaBox : if r1 == null goto $r10 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle mediaBox>
org.apache.pdfbox.pdmodel.PDPage.getMediaBox : $r9 = new org.apache.pdfbox.pdmodel.common.PDRectangle
org.apache.pdfbox.pdmodel.PDPage.getMediaBox : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle mediaBox>
org.apache.pdfbox.pdmodel.PDPage.getMediaBox : $r2 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle mediaBox>
org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj.access$102 : r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType xrefType> = r1
org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically : goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSBase parseObjectDynamically(org.apache.pdfbox.cos.COSObject,boolean)>(r3, 0)
org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically : $z1 = r2 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>
org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically : $r9 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically : if r12 != null goto $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSBase parseObjectDynamically(org.apache.pdfbox.cos.COSObject,boolean)>(r12, 0)
org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically : r3 = (org.apache.pdfbox.cos.COSObject) r2
org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically : $r4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: java.util.Collection getValues()>()
org.apache.pdfbox.pdfparser.COSParser.parseTrailerValuesDynamically : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSBase parseObjectDynamically(org.apache.pdfbox.cos.COSObject,boolean)>(r12, 0)
org.apache.pdfbox.cos.COSDictionary.setLong : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setLong : r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(l0)
org.apache.pdfbox.pdmodel.PDDocument.getDocumentInformation : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentInformation : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName INFO>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentInformation : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName INFO>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentInformation : $r6 = new org.apache.pdfbox.pdmodel.PDDocumentInformation
org.apache.pdfbox.pdmodel.PDDocument.getDocumentInformation : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation documentInformation>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentInformation : $r10 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation documentInformation>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentInformation : $r7 = new org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.PDDocument.getDocumentInformation : if r9 != null goto $r6 = new org.apache.pdfbox.pdmodel.PDDocumentInformation
org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj.access$100 : $r1 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType xrefType>
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.getNullEntry : $r0 = <org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: org.apache.pdfbox.pdfwriter.COSWriterXRefEntry NULLENTRY>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long curPageOffset>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long pageOffsetMask>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: byte[] curPage> = r8
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long curPageOffset> = l1
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: java.util.Map pageCache>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : $l5 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long curPageOffset>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileOffset> = l0
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : r8 = specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: byte[] readPage()>()
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : if r8 != null goto r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long curPageOffset> = l1
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : $r4 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: java.io.RandomAccessFile raFile>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.seek : $r5 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: java.util.Map pageCache>
org.apache.pdfbox.cos.COSObjectKey.getGeneration : $i0 = r0.<org.apache.pdfbox.cos.COSObjectKey: int generation>
org.apache.pdfbox.cos.COSArray.get : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.toFloatArray : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.cos.COSArray.toFloatArray : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i2)
org.apache.pdfbox.cos.COSArray.toFloatArray : i2 = 0
org.apache.pdfbox.cos.COSArray.toFloatArray : return r1
org.apache.pdfbox.pdmodel.PDPage.setCropBox : $r2 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.setCropBox : if r1 != null goto $r2 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList
org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.cos.COSStream.getFilterList : return $r5
org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>()
org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readFully : if i3 >= i0 goto return r1
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readFully : r1 = newarray (byte)[i0]
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readFully : i3 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int read(byte[])>(r1)
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.readFully : return r1
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : r50 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readString()>()
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readString()>()
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : if r3 != null goto r4 = virtualinvoke r2.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createRawOutputStream()>()
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : r4 = virtualinvoke r2.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createRawOutputStream()>()
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : if r3 == null goto $r11 = new org.apache.pdfbox.pdfparser.EndstreamOutputStream
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : $z0 = virtualinvoke r50.<java.lang.String: boolean equals(java.lang.Object)>("endobj")
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : $l6 = virtualinvoke r3.<org.apache.pdfbox.cos.COSNumber: long longValue()>()
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : virtualinvoke r4.<java.io.OutputStream: void close()>()
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : $i0 = virtualinvoke r50.<java.lang.String: int length()>()
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)>(r4, r3)
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : goto [?= r50 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readString()>()]
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : $r5 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LENGTH>
org.apache.pdfbox.pdfparser.COSParser.parseCOSStream : virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void skipWhiteSpaces()>()
org.apache.pdfbox.pdfparser.COSParser.getDocument : $r1 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.getDocument : $r2 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.util.Hex.writeHexByte : $r1 = <org.apache.pdfbox.util.Hex: byte[] HEX_BYTES>
org.apache.pdfbox.util.Hex.writeHexByte : $r2 = <org.apache.pdfbox.util.Hex: byte[] HEX_BYTES>
org.apache.pdfbox.pdfwriter.COSWriter.getXRefEntries : $r1 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.List xRefEntries>
org.apache.pdfbox.multipdf.PDFMergerUtility.addSource : $r2 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources>
org.apache.pdfbox.pdmodel.PDDocument.close : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.close : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource>
org.apache.pdfbox.pdmodel.PDDocument.close : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource>
org.apache.pdfbox.pdmodel.PDDocument.close : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport signingSupport>
org.apache.pdfbox.pdmodel.PDDocument.close : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $r1 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getDocumentOutline : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getDocumentOutline : if r1 != null goto $r5 = new org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline
org.apache.pdfbox.pdfwriter.COSWriterXRefEntry.isFree : $z0 = r0.<org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: boolean free>
org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : $r9 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : $r11 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdfparser.XrefTrailerResolver xrefTrailerResolver>
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : $l2 = virtualinvoke r33.<java.lang.Long: long longValue()>()
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)>(r33, $r8, r2)
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : $l0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSObject: long getObjectNumber()>()
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : if z0 == 0 goto (branch)
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : if r33 != null goto (branch)
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : $i1 = virtualinvoke r1.<org.apache.pdfbox.cos.COSObject: int getGenerationNumber()>()
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : $r8 = new org.apache.pdfbox.cos.COSObjectKey
org.apache.pdfbox.pdfparser.COSParser.parseObjectDynamically : $r10 = virtualinvoke r2.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>()
org.apache.pdfbox.pdfparser.COSParser.createObjectString : $r1 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.pdmodel.PDPage.setMediaBox : r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle mediaBox> = r1
org.apache.pdfbox.pdmodel.PDPage.setMediaBox : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.setMediaBox : if r1 != null goto $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.isEOF : if i0 != -1 goto $z0 = 0
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.isEOF : i0 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int peek()>()
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r1 = new org.apache.pdfbox.pdmodel.PDPageTree
org.apache.pdfbox.pdmodel.PDDocumentInformation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocumentInformation: org.apache.pdfbox.cos.COSDictionary info>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $i7 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $b4 = l0 cmp 0L
org.apache.pdfbox.io.ScratchFileBuffer.seek : $l23 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.seek : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = i1
org.apache.pdfbox.io.ScratchFileBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $l16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.seek : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 0
org.apache.pdfbox.io.ScratchFileBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.io.ScratchFileBuffer.seek : $l26 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $r6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $z0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged>
org.apache.pdfbox.cos.COSObject.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase baseObject>
org.apache.pdfbox.pdfparser.PDFParser.prepareDecryption : $r3 = r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.PDFParser.prepareDecryption : if r1 == null goto return
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r1 == null goto (branch)
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $l0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSObjectKey: long getNumber()>()
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $i1 = virtualinvoke r1.<org.apache.pdfbox.cos.COSObjectKey: int getGeneration()>()
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r7 != null goto return r7
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $r2 = new org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r1 == null goto return r7
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : return r7
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.hasNext : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: java.util.Queue queue>
org.apache.pdfbox.cos.COSName.hashCode : $i0 = r0.<org.apache.pdfbox.cos.COSName: int hashCode>
org.apache.pdfbox.pdfparser.PDFParser.getPDDocument : $r6 = r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.pdmodel.encryption.PDEncryption encryption>
org.apache.pdfbox.pdfparser.PDFParser.getPDDocument : $r2 = new org.apache.pdfbox.pdmodel.PDDocument
org.apache.pdfbox.pdfparser.PDFParser.getPDDocument : return $r2
org.apache.pdfbox.cos.COSDictionary.entrySet : $r1 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.pdmodel.PDPageTree.isPageTreeNode : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>
org.apache.pdfbox.pdmodel.PDPageTree.isPageTreeNode : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>
org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.write : virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: void setOnNewLine(boolean)>(0)
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.write : $l3 = r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: long position>
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.write : $r2 = r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: java.io.OutputStream out>
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.write : $l1 = r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: long position>
org.apache.pdfbox.pdfwriter.COSStandardOutputStream.write : $r1 = r0.<org.apache.pdfbox.pdfwriter.COSStandardOutputStream: java.io.OutputStream out>
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 0 goto $z0 = 1
org.apache.pdfbox.cos.COSString.toString : $r1 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSStream.createInputStream : $r4 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>()
org.apache.pdfbox.cos.COSStream.createInputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createInputStream : $r2 = new org.apache.pdfbox.io.RandomAccessInputStream
org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void ensureRandomAccessExists(boolean)>(1)
org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : return i27
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $i0 = lengthof r1
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $l1 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileOffset>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $l20 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileOffset>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $l23 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileLength>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $l26 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileOffset>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $l11 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileLength>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int offsetWithinPage>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: byte[] curPage>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $l11 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileOffset>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $i8 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int pageSize>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $i17 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int offsetWithinPage>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $l5 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileOffset>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: long fileOffset>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: byte[] curPage>
org.apache.pdfbox.io.RandomAccessBufferedFileInputStream.read : $i4 = r0.<org.apache.pdfbox.io.RandomAccessBufferedFileInputStream: int offsetWithinPage>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0>
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : l0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: long readLong()>()
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $b2 = l0 cmp 10000000000L
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : return l0
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $b1 = l0 cmp 0L
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : $i2 = i0 % 2
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.List getXRefEntries()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : i0 = lengthof r1
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : i12 = 0
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : $r2 = staticinvoke <org.apache.pdfbox.pdfwriter.COSWriterXRefEntry: org.apache.pdfbox.pdfwriter.COSWriterXRefEntry getNullEntry()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : if i11 >= i0 goto return
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : i13 = 0
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : $r12 = r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.List xRefEntries>
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : $r8 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.List getXRefEntries()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : $r9 = r1[i11]
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : i11 = i11 + 2
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : i11 = 0
org.apache.pdfbox.pdfwriter.COSWriter.doWriteXRefTable : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: org.apache.pdfbox.pdfwriter.COSStandardOutputStream getStandardOutput()>()
org.apache.pdfbox.pdfparser.BaseParser.readStringNumber : $r4 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readStringNumber : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.readStringNumber : if $i0 == 10 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.readStringNumber : if $i0 == 13 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.readStringNumber : $c1 = (char) $i0
org.apache.pdfbox.pdfparser.BaseParser.readStringNumber : $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>()
org.apache.pdfbox.pdfparser.BaseParser.readStringNumber : $r3 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.RandomAccessSource.readFully : $r1 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader>
org.apache.pdfbox.pdfwriter.COSWriter.addXRefEntry : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfwriter.COSWriter: java.util.List getXRefEntries()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r13 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.io.OutputStream destinationStream>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r10 == null goto r32 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r17 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r10 = new org.apache.pdfbox.pdmodel.PDDocument
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r32 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r11 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.PDDocumentInformation destinationDocumentInformation>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r18 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.lang.String destinationFileName>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.MemoryUsageSetting)>(r2, r30)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r8 = new java.util.ArrayList
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if r1 == null goto $r29 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r22 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r28 = null
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r9 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z4 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= return]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r29 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)>($r10, r3)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r15 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List fileInputStreams>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r7 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void close()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r12 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.common.PDMetadata destinationMetadata>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r6 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r33.<org.apache.pdfbox.pdmodel.PDDocument: void close()>()
org.apache.pdfbox.pdfparser.RandomAccessSource.read : $r2 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader>
org.apache.pdfbox.pdfparser.RandomAccessSource.read : $r1 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader>
org.apache.pdfbox.cos.COSOutputStream.close : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.util.List filters>
org.apache.pdfbox.cos.COSOutputStream.close : specialinvoke r0.<java.io.FilterOutputStream: void close()>()
org.apache.pdfbox.cos.COSOutputStream.close : $r4 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.OutputStream out>
org.apache.pdfbox.io.IOUtils.copy : return l2
org.apache.pdfbox.io.IOUtils.copy : $l1 = (long) $i0
org.apache.pdfbox.io.IOUtils.copy : l2 = 0L
org.apache.pdfbox.io.IOUtils.copy : $i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)
org.apache.pdfbox.io.IOUtils.copy : virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0)
org.apache.pdfbox.io.IOUtils.copy : r2 = newarray (byte)[4096]
org.apache.pdfbox.cos.COSBase.setDirect : r0.<org.apache.pdfbox.cos.COSBase: boolean direct> = z0
org.apache.pdfbox.cos.COSDocument.setIsXRefStream : r0.<org.apache.pdfbox.cos.COSDocument: boolean isXRefStream> = z0
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.pdfparser.XrefTrailerResolver.getTrailer : $r1 = r0.<org.apache.pdfbox.pdfparser.XrefTrailerResolver: org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj resolvedXrefTrailer>
org.apache.pdfbox.cos.COSString.hashCode : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.hashCode : $z0 = r0.<org.apache.pdfbox.cos.COSString: boolean forceHexForm>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.pdmodel.PDDocument.save : $r2 = new java.io.BufferedOutputStream
org.apache.pdfbox.pdmodel.PDDocument.save : virtualinvoke $r7.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>()
org.apache.pdfbox.pdmodel.PDDocument.save : $r6 = r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Set fontsToSubset>
org.apache.pdfbox.pdmodel.PDDocument.save : $r7 = new org.apache.pdfbox.pdfwriter.COSWriter
org.apache.pdfbox.pdmodel.PDDocument.save : $r2 = new java.io.File
org.apache.pdfbox.pdmodel.PDDocument.save : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.save : virtualinvoke $r7.<org.apache.pdfbox.pdfwriter.COSWriter: void write(org.apache.pdfbox.pdmodel.PDDocument)>(r0)
org.apache.pdfbox.pdmodel.PDDocument.save : goto [?= return]
org.apache.pdfbox.pdmodel.PDDocument.save : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Set fontsToSubset>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryNameValuePair : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryNameValuePair : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryNameValuePair : if r3 != null goto virtualinvoke r3.<org.apache.pdfbox.cos.COSBase: void setDirect(boolean)>(1)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryNameValuePair : virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r2, r3)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryNameValuePair : r3 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSBase parseCOSDictionaryValue()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryNameValuePair : r2 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.cos.COSName parseCOSName()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryNameValuePair : virtualinvoke r3.<org.apache.pdfbox.cos.COSBase: void setDirect(boolean)>(1)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r12 = new java.util.HashSet
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $z6 = $r48 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r45 = (org.apache.pdfbox.cos.COSDictionary) $r48
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r10 = new java.util.LinkedList
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r22 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.pdfparser.XrefTrailerResolver xrefTrailerResolver>
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $l3 = virtualinvoke r52.<java.lang.Long: long longValue()>()
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : goto [?= $z2 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = interfaceinvoke $r10.<java.util.Queue: boolean isEmpty()>()", "org.apache.pdfbox.pdfparser.COSParser.parseDictObjects")]
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $z4 = $r48 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r41 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r51)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r14 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: java.util.Collection getValues()>()
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : r51 = (org.apache.pdfbox.cos.COSObject) $r48
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : r8 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSBase parseObjectDynamically(org.apache.pdfbox.cos.COSObject,boolean)>(r57, 0)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void addNewToList(java.util.Queue,org.apache.pdfbox.cos.COSBase,java.util.Set)>($r10, r8, $r13)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r15 = virtualinvoke $r11.<java.util.TreeMap: java.lang.Object firstKey()>()
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l13)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $z5 = $r48 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void addExcludedToList(org.apache.pdfbox.cos.COSName[],org.apache.pdfbox.cos.COSDictionary,java.util.Set)>(r2, r1, $r12)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r20 = new org.apache.pdfbox.cos.COSObjectKey
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $z1 = virtualinvoke $r11.<java.util.TreeMap: boolean isEmpty()>()
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : goto [?= return]
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : if r8 == null goto (branch)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: void addNewToList(java.util.Queue,org.apache.pdfbox.cos.COSBase,java.util.Set)>($r10, r50, $r13)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : virtualinvoke r57.<org.apache.pdfbox.cos.COSObject: void setObject(org.apache.pdfbox.cos.COSBase)>(r8)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $l0 = specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: long getObjectId(org.apache.pdfbox.cos.COSObject)>(r57)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : goto [?= $z9 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r43 = (org.apache.pdfbox.cos.COSArray) $r48
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r11 = new java.util.TreeMap
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $r13 = new java.util.HashSet
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $z0 = interfaceinvoke $r10.<java.util.Queue: boolean isEmpty()>()
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : $l5 = virtualinvoke r52.<java.lang.Long: long longValue()>()
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : l13 = specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: long getObjectId(org.apache.pdfbox.cos.COSObject)>(r51)
org.apache.pdfbox.pdfparser.COSParser.parseDictObjects : if r52 == null goto $r25 = r0.<org.apache.pdfbox.pdfparser.COSParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $z2 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r3 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $z4 = r1 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : goto [?= $r59 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>]
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : if r46 == null goto $z0 = r1 instanceof org.apache.pdfbox.cos.COSBase
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r6 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $z1 = r1 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r42 = interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : r54 = (org.apache.pdfbox.cos.COSDictionary) r1
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $z0 = r1 instanceof org.apache.pdfbox.cos.COSBase
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r12 = (org.apache.pdfbox.cos.COSDictionary) r2
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r8 = virtualinvoke r54.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r44 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r59 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $z3 = r1 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r11 = interfaceinvoke r56.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : goto [?= $z5 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r14 = (org.apache.pdfbox.cos.COSDictionary) r2
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : $r10 = interfaceinvoke r56.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge : if r1 != null goto $r3 = r0.<org.apache.pdfbox.multipdf.PDFCloneUtility: java.util.Map clonedVersion>
org.apache.pdfbox.io.ScratchFile.readPage : if i0 < 0 goto virtualinvoke r0.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()
org.apache.pdfbox.io.ScratchFile.readPage : return r28
org.apache.pdfbox.io.ScratchFile.readPage : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.readPage : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.readPage : $r20 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.readPage : if r28 != null goto return r28
org.apache.pdfbox.cos.COSDictionary.accept : $r2 = interfaceinvoke r1.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L)
org.apache.pdfbox.cos.COSFloat.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSFloat.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.pdfparser.BaseParser.isEndOfName : if i0 == 32 goto $z0 = 1
org.apache.pdfbox.pdmodel.PDPageTree.sanitizeType : if r1 != null goto $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGE>
org.apache.pdfbox.pdmodel.PDPageTree.sanitizeType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>
org.apache.pdfbox.pdmodel.PDPageTree.sanitizeType : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGE>
org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.checkClosed : $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSDocument.setDecrypted : r0.<org.apache.pdfbox.cos.COSDocument: boolean isDecrypted> = 1
