org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.pdmodel.common.PDIntegerNameTreeNode.convertCOSToPD : $r2 = (org.apache.pdfbox.cos.COSInteger) r1
org.apache.pdfbox.pdmodel.common.PDIntegerNameTreeNode.convertCOSToPD : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDIntegerNameTreeNode: org.apache.pdfbox.cos.COSInteger convertCOSToPD(org.apache.pdfbox.cos.COSBase)>(r1)
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = null
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r21 = (org.apache.pdfbox.pdmodel.common.COSArrayList) r0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z0 = r0 instanceof org.apache.pdfbox.pdmodel.common.COSArrayList
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if r0 == null goto return r22
org.apache.pdfbox.cos.COSArray.set : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.pdmodel.common.COSArrayList.get : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.PDIntegerNameTreeNode.createChildNode : $r2 = new org.apache.pdfbox.pdmodel.common.PDIntegerNameTreeNode
org.apache.pdfbox.pdmodel.common.PDIntegerNameTreeNode.createChildNode : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDIntegerNameTreeNode: org.apache.pdfbox.pdmodel.common.PDIntegerNameTreeNode createChildNode(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : staticinvoke <java.util.Collections: void sort(java.util.List)>($r7)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : $r10 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : $r7 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : $r12 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : $r13 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : $r6 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : if r1 != null goto $r6 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setNames : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void calculateLimits()>()
org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4
org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.isRootNode : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.pdmodel.common.PDNameTreeNode parent>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setParent : r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.pdmodel.common.PDNameTreeNode parent> = r1
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setParent : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void calculateLimits()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null goto $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSDictionary parentDict>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r3 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $z0 = r1 instanceof java.lang.String
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r5 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r13 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.cos.COSArray.setString : if r1 == null goto virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(i0, null)
org.apache.pdfbox.cos.COSArray.setString : $r2 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null goto i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setLowerLimit : $r5 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setLowerLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setString(int,java.lang.String)>(0, r1)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setLowerLimit : if r8 != null goto virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setString(int,java.lang.String)>(0, r1)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setLowerLimit : $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setLowerLimit : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setLowerLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getLowerLimit : return r5
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getLowerLimit : if r1 == null goto return r5
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getLowerLimit : r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: java.lang.String getString(int)>(0)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getLowerLimit : r5 = null
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getLowerLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getNames : $r8 = new java.util.LinkedHashMap
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getNames : $r10 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i2)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getNames : $r11 = virtualinvoke r3.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getNames : $r6 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getNames : if r1 == null goto return null
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getNames : i2 = 0
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getNames : $i1 = i2 + 1
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getNames : $r9 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r8)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.cos.COSDictionary.removeItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 goto $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSBase.getCOSObject : return r0
org.apache.pdfbox.util.SmallMap.remove : if i0 >= 0 goto $r4 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : return null
org.apache.pdfbox.util.SmallMap.remove : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : if r2 != null goto $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : if r1 == null goto $r4 = new java.lang.NullPointerException
org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 goto $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.cos.COSArray.getString : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.cos.COSArray.getString : $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: java.lang.String getString(int,java.lang.String)>(i0, null)
org.apache.pdfbox.cos.COSArray.getString : return r5
org.apache.pdfbox.cos.COSArray.getString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSArray.getString : r5 = r1
org.apache.pdfbox.cos.COSArray.getString : $r4 = (org.apache.pdfbox.cos.COSString) r2
org.apache.pdfbox.cos.COSArray.getString : $r3 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getKids : if r1 == null goto return r11
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getKids : r11 = null
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getKids : $r6 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getKids : $r7 = new org.apache.pdfbox.pdmodel.common.COSArrayList
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getKids : i1 = 0
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getKids : $r8 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getKids : $r4 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getKids : return r11
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setUpperLimit : if r8 != null goto virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setString(int,java.lang.String)>(1, r1)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setUpperLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setString(int,java.lang.String)>(1, r1)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setUpperLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7]
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setKids : virtualinvoke r3.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode)>(r0)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setKids : $i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setKids : if r1 == null goto $r5 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setKids : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: boolean isRootNode()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setKids : $r8 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setKids : $r12 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setKids : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setKids : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void calculateLimits()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.setKids : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void removeItem(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null goto $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.pdmodel.common.COSArrayList.iterator : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getUpperLimit : return r5
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getUpperLimit : if r1 == null goto return r5
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getUpperLimit : r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: java.lang.String getString(int)>(1)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getUpperLimit : r5 = null
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.getUpperLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.COSArrayList.size : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : $i5 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: boolean isRootNode()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : r18 = virtualinvoke r16.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.String getUpperLimit()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : goto [?= (branch)]
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setUpperLimit(java.lang.String)>(r18)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : goto [?= return]
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setLowerLimit(java.lang.String)>(r17)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : r20 = interfaceinvoke r19.<java.util.Map: java.util.Set keySet()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.util.List getKids()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setLowerLimit(java.lang.String)>(r22)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : $r10 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : r22 = r21[0]
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : $i1 = interfaceinvoke r20.<java.util.Set: int size()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : if r19 == null goto $r4 = r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : $i0 = interfaceinvoke r19.<java.util.Map: int size()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : $i4 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: void setUpperLimit(java.lang.String)>(r2)
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : $i2 = lengthof r21
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : r17 = virtualinvoke r15.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.lang.String getLowerLimit()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.util.Map getNames()>()
org.apache.pdfbox.pdmodel.common.PDNameTreeNode.calculateLimits : if r1 == null goto r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNameTreeNode: java.util.Map getNames()>()
org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
