org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.access$100 : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void tokenize()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanWhitespace : c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanWhitespace : $r4 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanWhitespace : goto [?= $r4 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>]
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanWhitespace : lookupswitch(c0) {     case 0: goto $r5 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;     case 9: goto $r5 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;     case 32: goto $r5 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;     default: goto goto [?= $r4 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>]; }
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanWhitespace : $z0 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean $assertionsDisabled>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanWhitespace : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.io.ScratchFileBuffer.isClosed : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : $r4 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : $r7 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : $z0 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean $assertionsDisabled>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>]
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : c2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : lookupswitch(c2) {     case 0: goto goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>];     case 4: goto goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>];     case 9: goto goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>];     case 10: goto goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>];     case 12: goto goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>];     case 13: goto goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>];     case 32: goto goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>];     case 123: goto goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>];     case 125: goto goto [?= $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>];     default: goto $r7 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>; }
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanToken : c1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>()
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46)
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0")
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : $r8 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : virtualinvoke r17.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence: void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)>(r1)
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : $z3 = r3 instanceof java.lang.String
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : r4 = (java.lang.String) r3
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : goto [?= (branch)]
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : $r7 = virtualinvoke r2.<java.util.Stack: java.lang.Object peek()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : interfaceinvoke r5.<org.apache.pdfbox.pdmodel.common.function.type4.Operator: void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)>(r1)
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : if r5 == null goto $r11 = new java.lang.UnsupportedOperationException
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence: java.util.List instructions>
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : r3 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : goto [?= $z1 = virtualinvoke r2.<java.util.Stack: boolean isEmpty()>()]
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : goto [?= $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.execute : $r10 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: org.apache.pdfbox.pdmodel.common.function.type4.Operators getOperators()>()
org.apache.pdfbox.io.RandomAccessOutputStream.write : $r2 = r0.<org.apache.pdfbox.io.RandomAccessOutputStream: org.apache.pdfbox.io.RandomAccessWrite writer>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.currentChar : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.CharSequence input>
org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.tokenize : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State nextState()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.tokenize : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void scanToken()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.tokenize : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void scanWhitespace()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.tokenize : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.tokenize : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean hasMore()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.tokenize : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("$z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean hasMore()>()", "org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.tokenize")]
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.tokenize : $r4 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$1: int[] $SwitchMap$org$apache$pdfbox$pdmodel$common$function$type4$Parser$State>
org.apache.pdfbox.pdmodel.common.function.PDFunction.getDomainForInput : $r2 = new org.apache.pdfbox.pdmodel.common.PDRange
org.apache.pdfbox.pdmodel.common.function.PDFunction.getDomainForInput : r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.cos.COSArray getDomainValues()>()
org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r1 = new org.apache.pdfbox.io.ScratchFile
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.function.PDFunction.getDomainValues : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.common.function.PDFunction.getDomainValues : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.cos.COSArray domain>
org.apache.pdfbox.pdmodel.common.function.PDFunction.getDomainValues : $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.cos.COSArray domain>
org.apache.pdfbox.cos.COSOutputStream.write : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer>
org.apache.pdfbox.io.RandomAccessInputStream.read : $r2 = r0.<org.apache.pdfbox.io.RandomAccessInputStream: org.apache.pdfbox.io.RandomAccessRead input>
org.apache.pdfbox.io.RandomAccessInputStream.read : $r3 = r0.<org.apache.pdfbox.io.RandomAccessInputStream: org.apache.pdfbox.io.RandomAccessRead input>
org.apache.pdfbox.io.RandomAccessInputStream.read : virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessInputStream: void restorePosition()>()
org.apache.pdfbox.io.RandomAccessInputStream.read : return -1
org.apache.pdfbox.io.RandomAccessInputStream.read : return i2
org.apache.pdfbox.io.RandomAccessInputStream.read : $l4 = r0.<org.apache.pdfbox.io.RandomAccessInputStream: long position>
org.apache.pdfbox.cos.COSStream$1.close : specialinvoke r0.<java.io.FilterOutputStream: void close()>()
org.apache.pdfbox.cos.COSStream$1.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0>
org.apache.pdfbox.cos.COSStream$1.close : $r5 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0>
org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4
org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1
org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null goto $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>(null)
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r6.<java.io.InputStream: void close()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r3 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = null
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r6, $r3)
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r6 == null goto $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.common.function.PDFunction.getNumberOfOutputParameters : $i2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.common.function.PDFunction.getNumberOfOutputParameters : $i0 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: int numberOfOutputValues>
org.apache.pdfbox.pdmodel.common.function.PDFunction.getNumberOfOutputParameters : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.cos.COSArray getRangeValues()>()
org.apache.pdfbox.pdmodel.common.function.PDFunction.getNumberOfOutputParameters : $i1 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: int numberOfOutputValues>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.io.ScratchFileBuffer.length : $l0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size>
org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0 goto $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.pdmodel.common.function.PDFunction.getPDStream : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.pdmodel.common.PDStream functionStream>
org.apache.pdfbox.pdmodel.common.function.PDFunction.getRangeForOutput : $r2 = new org.apache.pdfbox.pdmodel.common.PDRange
org.apache.pdfbox.pdmodel.common.function.PDFunction.getRangeForOutput : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.cos.COSArray getRangeValues()>()
org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext.popNumber : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack stack>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null goto return r6
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null goto return r6
org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $r3 = "}"
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $r5 = <org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: java.util.regex.Pattern REAL_PATTERN>
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $r13 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: java.util.Stack seqStack>
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $z3 = virtualinvoke r17.<java.util.regex.Matcher: boolean matches()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: void token(java.lang.String)>(r2)
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $r9 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: java.util.Stack seqStack>
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $r2 = "{"
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : goto [?= return]
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $r12 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence getCurrentSequence()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $z2 = virtualinvoke r16.<java.util.regex.Matcher: boolean matches()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $r4 = <org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: java.util.regex.Pattern INTEGER_PATTERN>
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $r6 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence getCurrentSequence()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.token : $r11 = new org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence
org.apache.pdfbox.cos.COSStream.access$000 : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.getInstructionSequence : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence mainSequence>
org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null goto i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.cos.COSStream.access$102 : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = z0
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextState : c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextState : lookupswitch(c0) {     case 0: goto $r3 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State WHITESPACE>;     case 9: goto $r3 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State WHITESPACE>;     case 10: goto $r2 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State NEWLINE>;     case 12: goto $r2 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State NEWLINE>;     case 13: goto $r2 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State NEWLINE>;     case 32: goto $r3 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State WHITESPACE>;     case 37: goto $r1 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State COMMENT>;     default: goto $r4 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State TOKEN>; }
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextState : goto [?= $r5 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state>]
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextState : $r3 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State WHITESPACE>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextState : $r5 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextState : $r4 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State TOKEN>
org.apache.pdfbox.cos.COSFloat.floatValue : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.pdmodel.common.PDRange.getMin : $f0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRange.getMin : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : if i3 >= i2 goto r20 = newarray (float)[i2]
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: int getNumberOfOutputParameters()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f0 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: float popReal()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r4 = new org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r7 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>()
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r20 = newarray (float)[i2]
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i4 = i2 - 1
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence instructions>
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.PDRange getRangeForOutput(int)>(i4)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f1 = r20[i4]
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $f5 = r1[i1]
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : i1 = 0
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType4: org.apache.pdfbox.pdmodel.common.PDRange getDomainForInput(int)>(i1)
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : return r20
org.apache.pdfbox.pdmodel.common.function.PDFunctionType4.eval : $r16 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>()
org.apache.pdfbox.cos.COSArray.clear : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0
org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSStream$1.write : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: java.io.OutputStream out>
org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext.getOperators : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: org.apache.pdfbox.pdmodel.common.function.type4.Operators operators>
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 goto $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.addProc : $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence: java.util.List instructions>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : if r2 != null goto $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : if r1 == null goto $r4 = new java.lang.NullPointerException
org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 goto $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.io.ScratchFileBuffer.write : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : if i19 <= 0 goto $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i0 = lengthof r1
org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i20 + i2
org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i1
org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 1
org.apache.pdfbox.io.ScratchFileBuffer.write : $l11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i14 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean ensureAvailableBytesInPage(boolean)>(1)
org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.io.ScratchFileBuffer.write : $i17 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i0
org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i19 - i2
org.apache.pdfbox.io.ScratchFileBuffer.write : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if i19 <= 0 goto $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>", "org.apache.pdfbox.io.ScratchFileBuffer.write")]
org.apache.pdfbox.io.ScratchFileBuffer.write : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.pdmodel.common.function.PDFunction.getCOSObject : $r3 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.pdmodel.common.PDStream functionStream>
org.apache.pdfbox.pdmodel.common.function.PDFunction.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.pdmodel.common.PDStream functionStream>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextChar : return 4
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextChar : $i0 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: int index>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextChar : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean hasMore()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.nextChar : $c2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>()
org.apache.pdfbox.cos.COSStream.ensureRandomAccessExists : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext.popReal : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack stack>
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parse : $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence getInstructionSequence()>()
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parse : $r2 = new org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parse : staticinvoke <org.apache.pdfbox.pdmodel.common.function.type4.Parser: void parse(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)>(r0, $r2)
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.hasMore : $i0 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: int index>
org.apache.pdfbox.pdmodel.common.PDRange.getMax : $f0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRange.getMax : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray>
org.apache.pdfbox.pdmodel.common.function.PDFunction.clipToRange : $b1 = f0 cmpl f2
org.apache.pdfbox.pdmodel.common.function.PDFunction.clipToRange : $b0 = f0 cmpg f1
org.apache.pdfbox.pdmodel.common.function.PDFunction.clipToRange : return f0
org.apache.pdfbox.pdmodel.common.function.PDFunction.clipToRange : return f2
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null goto $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.pdmodel.common.function.type4.Operators.getOperator : $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Operators: java.util.Map operators>
org.apache.pdfbox.io.RandomAccessInputStream.restorePosition : $r1 = r0.<org.apache.pdfbox.io.RandomAccessInputStream: org.apache.pdfbox.io.RandomAccessRead input>
org.apache.pdfbox.pdmodel.common.function.type4.Parser.parse : $r3 = new org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer
org.apache.pdfbox.pdmodel.common.function.type4.Parser.parse : staticinvoke <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void access$100(org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer)>($r3)
org.apache.pdfbox.io.ScratchFileBuffer.read : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage>
org.apache.pdfbox.io.ScratchFileBuffer.read : i23 = i23 - i2
org.apache.pdfbox.io.ScratchFileBuffer.read : i24 = i24 + i2
org.apache.pdfbox.io.ScratchFileBuffer.read : return i24
org.apache.pdfbox.io.ScratchFileBuffer.read : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.read : $l15 = (long) i1
org.apache.pdfbox.io.ScratchFileBuffer.read : $z0 = specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean ensureAvailableBytesInPage(boolean)>(0)
org.apache.pdfbox.io.ScratchFileBuffer.read : i24 = 0
org.apache.pdfbox.io.ScratchFileBuffer.read : $i21 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.io.ScratchFileBuffer.read : if i23 <= 0 goto return i24
org.apache.pdfbox.io.ScratchFileBuffer.read : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.read : i25 = i25 + i2
org.apache.pdfbox.io.ScratchFileBuffer.read : i25 = i0
org.apache.pdfbox.io.ScratchFileBuffer.read : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("if i23 <= 0 goto return i24", "org.apache.pdfbox.io.ScratchFileBuffer.read")]
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence.addName : $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence: java.util.List instructions>
org.apache.pdfbox.io.ScratchFileBuffer.isEOF : $l2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.isEOF : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.cos.COSInputStream.create : r16 = r2
org.apache.pdfbox.cos.COSInputStream.create : $r5 = new java.util.ArrayList
org.apache.pdfbox.cos.COSInputStream.create : $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.cos.COSInputStream.create : $r6 = new org.apache.pdfbox.cos.COSInputStream
org.apache.pdfbox.pdmodel.common.function.PDFunction.getRangeValues : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.cos.COSArray range>
org.apache.pdfbox.pdmodel.common.function.PDFunction.getRangeValues : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.common.function.PDFunction.getRangeValues : $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: org.apache.pdfbox.cos.COSArray range>
org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList
org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.cos.COSStream.getFilterList : return $r5
org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>()
org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.getCurrentSequence : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder: java.util.Stack seqStack>
org.apache.pdfbox.io.ScratchFileBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.io.ScratchFileBuffer.seek : $b4 = l0 cmp 0L
org.apache.pdfbox.io.ScratchFileBuffer.seek : $l23 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $l26 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size>
org.apache.pdfbox.io.ScratchFileBuffer.seek : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext.getStack : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack stack>
org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096
org.apache.pdfbox.cos.COSStream.createInputStream : $r4 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>()
org.apache.pdfbox.cos.COSStream.createInputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createInputStream : $r2 = new org.apache.pdfbox.io.RandomAccessInputStream
org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void ensureRandomAccessExists(boolean)>(1)
org.apache.pdfbox.cos.COSStream.createInputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add.execute : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.lang.Number popNumber()>()
org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add.execute : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>()
org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add.execute : $f0 = virtualinvoke r3.<java.lang.Number: float floatValue()>()
org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add.execute : $z0 = r3 instanceof java.lang.Integer
org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add.execute : r3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.lang.Number popNumber()>()
org.apache.pdfbox.cos.COSOutputStream.close : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.util.List filters>
org.apache.pdfbox.cos.COSOutputStream.close : specialinvoke r0.<java.io.FilterOutputStream: void close()>()
org.apache.pdfbox.cos.COSOutputStream.close : $r4 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.OutputStream out>
org.apache.pdfbox.io.IOUtils.copy : return l2
org.apache.pdfbox.io.IOUtils.copy : $l1 = (long) $i0
org.apache.pdfbox.io.IOUtils.copy : l2 = 0L
org.apache.pdfbox.io.IOUtils.copy : $i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)
org.apache.pdfbox.io.IOUtils.copy : virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0)
org.apache.pdfbox.io.IOUtils.copy : r2 = newarray (byte)[4096]
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void clear()>()
org.apache.pdfbox.cos.COSArray.setFloatArray : f0 = r1[i1]
org.apache.pdfbox.cos.COSArray.setFloatArray : i0 = lengthof r1
org.apache.pdfbox.cos.COSArray.setFloatArray : $r3 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L)
org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.checkClosed : $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
