org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37 goto (branch)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1 goto return
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37 goto $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0)
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $r1 = new org.apache.pdfbox.contentstream.operator.Operator
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("BI")
org.apache.pdfbox.contentstream.operator.Operator.getOperator : if r9 != null goto return r9
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $r5 = <org.apache.pdfbox.contentstream.operator.Operator: java.util.concurrent.ConcurrentMap operators>
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ID")
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $r7 = <org.apache.pdfbox.contentstream.operator.Operator: java.util.concurrent.ConcurrentMap operators>
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $r2 = <org.apache.pdfbox.contentstream.operator.Operator: java.util.concurrent.ConcurrentMap operators>
org.apache.pdfbox.pdmodel.PDDocument.load : $r1 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.pdmodel.PDDocument.load : $r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)>(r0, r1, null, null, r2)
org.apache.pdfbox.pdmodel.PDDocument.load : $r6 = new org.apache.pdfbox.io.RandomAccessBufferedFileInputStream
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if c0 != 100 goto (branch)
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 <= 57 goto $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: boolean isClosing(int)>(i4)
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r4 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == -1 goto $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 91 goto $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r5 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r3 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: boolean isWhitespace(int)>(i4)
org.apache.pdfbox.contentstream.operator.Operator.getName : $r1 = r0.<org.apache.pdfbox.contentstream.operator.Operator: java.lang.String theOperator>
org.apache.pdfbox.pdfparser.PDFStreamParser.parse : $r3 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List streamObjects>
org.apache.pdfbox.pdfparser.PDFStreamParser.parse : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.Object parseNextToken()>()
org.apache.pdfbox.pdfparser.BaseParser.isClosing : if i0 != 93 goto $z0 = 0
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : $r5 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: byte[] binCharTestArr>
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : if i3 == -1 goto (branch)
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : return z0
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : z0 = 1
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : if i4 == -1 goto $r5 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: byte[] binCharTestArr>
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : i3 = -1
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : if b1 < 9 goto z0 = 0
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : i4 = i5
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : if i0 <= 0 goto (branch)
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : i3 = i5
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : if i4 != -1 goto (branch)
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : $r4 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: byte[] binCharTestArr>
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : if b1 == 32 goto (branch)
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : i4 = -1
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : $r2 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: byte[] binCharTestArr>
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : if b1 <= 10 goto (branch)
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : i5 = 0
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNoFollowingBinData : i4 = 10
org.apache.pdfbox.text.PDFTextStripper.parseBidiFile : $r4 = new java.io.LineNumberReader
org.apache.pdfbox.pdfparser.InputStreamSource.peek : if i0 == -1 goto return i0
org.apache.pdfbox.pdfparser.InputStreamSource.peek : $r2 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input>
org.apache.pdfbox.pdfparser.InputStreamSource.peek : return i0
org.apache.pdfbox.pdfparser.InputStreamSource.peek : $r1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input>
org.apache.pdfbox.pdfparser.InputStreamSource.read : $i1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: int position>
org.apache.pdfbox.pdfparser.InputStreamSource.read : $r2 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input>
org.apache.pdfbox.pdfparser.InputStreamSource.read : $i3 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: int position>
org.apache.pdfbox.pdfparser.InputStreamSource.read : return i0
org.apache.pdfbox.pdfparser.InputStreamSource.read : $r1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input>
org.apache.pdfbox.pdfparser.InputStreamSource.read : return i2
org.apache.pdfbox.contentstream.operator.Operator.setImageData : r0.<org.apache.pdfbox.contentstream.operator.Operator: byte[] imageData> = r1
org.apache.pdfbox.contentstream.operator.Operator.getImageData : $r1 = r0.<org.apache.pdfbox.contentstream.operator.Operator: byte[] imageData>
org.apache.pdfbox.pdfparser.InputStreamSource.isEOF : $i0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.InputStreamSource: int peek()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.isSpaceOrReturn : if i0 == 10 goto $z0 = 1
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 0 goto $z0 = 1
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.InputStreamSource.unread : $i1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: int position>
org.apache.pdfbox.pdfparser.InputStreamSource.unread : $r2 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input>
org.apache.pdfbox.pdfparser.InputStreamSource.unread : $r1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r13 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : i15 = i16
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r7 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r20 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : tableswitch(c9) {     case 40: goto r39 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.cos.COSString parseCOSString()>();     case 41: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 42: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 43: goto $r32 = new java.lang.StringBuilder;     case 44: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 45: goto $r32 = new java.lang.StringBuilder;     case 46: goto $r32 = new java.lang.StringBuilder;     case 47: goto r39 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.cos.COSName parseCOSName()>();     case 48: goto $r32 = new java.lang.StringBuilder;     case 49: goto $r32 = new java.lang.StringBuilder;     case 50: goto $r32 = new java.lang.StringBuilder;     case 51: goto $r32 = new java.lang.StringBuilder;     case 52: goto $r32 = new java.lang.StringBuilder;     case 53: goto $r32 = new java.lang.StringBuilder;     case 54: goto $r32 = new java.lang.StringBuilder;     case 55: goto $r32 = new java.lang.StringBuilder;     case 56: goto $r32 = new java.lang.StringBuilder;     case 57: goto $r32 = new java.lang.StringBuilder;     case 58: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 59: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 60: goto $r2 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>;     case 61: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 62: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 63: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 64: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 65: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 66: goto r45 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readString()>();     case 67: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 68: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 69: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 70: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 71: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 72: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 73: goto $r7 = new java.lang.StringBuilder;     case 74: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 75: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 76: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 77: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 78: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 79: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 80: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 81: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 82: goto r42 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readString()>();     case 83: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 84: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 85: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 86: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 87: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 88: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 89: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 90: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 91: goto r39 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.cos.COSArray parseCOSArray()>();     case 92: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 93: goto $r5 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>;     case 94: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 95: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 96: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 97: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 98: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 99: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 100: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 101: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 102: goto r41 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readString()>();     case 103: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 104: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 105: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 106: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 107: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 108: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 109: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 110: goto r40 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readString()>();     case 111: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 112: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 113: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 114: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 115: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>();     case 116: goto r41 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readString()>();     default: goto r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>(); }
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $z4 = virtualinvoke r51.<java.lang.String: boolean equals(java.lang.Object)>("ID")
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $z5 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: boolean isWhitespace()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r15 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : virtualinvoke $r13.<java.io.ByteArrayOutputStream: void write(int)>(i15)
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : r39 = staticinvoke <org.apache.pdfbox.contentstream.operator.Operator: org.apache.pdfbox.contentstream.operator.Operator getOperator(java.lang.String)>(r54)
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : return null
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r18 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : r39 = staticinvoke <org.apache.pdfbox.contentstream.operator.Operator: org.apache.pdfbox.contentstream.operator.Operator getOperator(java.lang.String)>("ID")
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $b1 = (byte) i0
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r14 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r1 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : if i15 != 69 goto $r53 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r19 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : c9 = (char) i0
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r38 = virtualinvoke r54.<java.lang.String: java.lang.String trim()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $z6 = specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: boolean hasNextSpaceOrReturn()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r16 = (org.apache.pdfbox.contentstream.operator.Operator) r39
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : goto [?= return r39]
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r53 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : r54 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.String readOperator()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.getTokens : $r1 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List streamObjects>
org.apache.pdfbox.pdfparser.PDFStreamParser.hasNextSpaceOrReturn : $r1 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L)
