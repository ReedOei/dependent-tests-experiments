org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1
org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r4 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r4 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r7 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6)
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r7 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : r2 = (org.apache.pdfbox.cos.COSArray) $r7
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : r2 = (org.apache.pdfbox.cos.COSArray) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : if r2 != null
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : if r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r10 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r10 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : specialinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r11)
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : specialinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = null
org.apache.pdfbox.cos.COSDictionary.setName : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : goto [?= return $r4]
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : goto [?= return $r4] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : return $r4
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setLocked : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setLocked : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setLocked : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setLocked : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setLocked : virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setFlag(org.apache.pdfbox.cos.COSName,int,boolean)>($r2, 128, z0)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setLocked : virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setFlag(org.apache.pdfbox.cos.COSName,int,boolean)>($r2, 128, z0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFlag : i2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>(r1, 0)
org.apache.pdfbox.cos.COSDictionary.setFlag : i2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>(r1, 0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, null, i0)
org.apache.pdfbox.cos.COSDictionary.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, null, i0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return i1
org.apache.pdfbox.cos.COSDictionary.getInt : return i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return $i1
org.apache.pdfbox.cos.COSDictionary.getInt : return $i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFlag : if z0 == 0
org.apache.pdfbox.cos.COSDictionary.setFlag : if z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFlag : i3 = i2 | i0
org.apache.pdfbox.cos.COSDictionary.setFlag : i3 = i2 | i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFlag : goto [?= virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>(r1, i3)]
org.apache.pdfbox.cos.COSDictionary.setFlag : goto [?= virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>(r1, i3)] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFlag : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>(r1, i3)
org.apache.pdfbox.cos.COSDictionary.setFlag : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>(r1, i3) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0
org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1)
org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1) >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100
org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1]
org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $r2 != null
org.apache.pdfbox.cos.COSInteger.get : if $r2 != null >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1]
org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : return $r4
org.apache.pdfbox.cos.COSInteger.get : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2)
org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1]
org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2
org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setPrinted : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setPrinted : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setPrinted : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setPrinted : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setPrinted : virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setFlag(org.apache.pdfbox.cos.COSName,int,boolean)>($r2, 4, z0)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setPrinted : virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setFlag(org.apache.pdfbox.cos.COSName,int,boolean)>($r2, 4, z0) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $r4 = (org.apache.pdfbox.cos.COSNumber) r3
org.apache.pdfbox.cos.COSDictionary.getInt : $r4 = (org.apache.pdfbox.cos.COSNumber) r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : i1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value> >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0
org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : return $i1
org.apache.pdfbox.cos.COSInteger.intValue : return $i1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r4 = new java.util.HashSet
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r4 = new java.util.HashSet >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : specialinvoke $r4.<java.util.HashSet: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : specialinvoke $r4.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>()
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getAcroForm : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getAcroForm : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getAcroForm : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDField.getAcroForm : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: java.util.List getFields()>()
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: java.util.List getFields()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r6 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r6 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIELDS>
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIELDS> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : r1 = (org.apache.pdfbox.cos.COSArray) $r7
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : r1 = (org.apache.pdfbox.cos.COSArray) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : if r1 != null
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r8 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r8 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : i1 = 0
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : return $i0
org.apache.pdfbox.cos.COSArray.size : return $i0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : if i1 >= $i0
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r9 = new org.apache.pdfbox.pdmodel.common.COSArrayList
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r9 = new org.apache.pdfbox.pdmodel.common.COSArrayList >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : specialinvoke $r9.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>(java.util.List,org.apache.pdfbox.cos.COSArray)>($r8, r1)
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : specialinvoke $r9.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>(java.util.List,org.apache.pdfbox.cos.COSArray)>($r8, r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : return $r9
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : return $r9 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : r17 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : r17 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.iterator : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.COSArrayList.iterator : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.iterator : $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.iterator : $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.iterator : return $r2
org.apache.pdfbox.pdmodel.common.COSArrayList.iterator : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : i0 = 1
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : i0 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r7 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signature")
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signature") >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r10)
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $z1 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : if $z1 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r11 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signature")
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signature") >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : return $r14
org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField.generatePartialName : return $r14 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.setPartialName : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDField.setPartialName : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.setPartialName : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName T>
org.apache.pdfbox.pdmodel.interactive.form.PDField.setPartialName : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName T> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.setPartialName : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.form.PDField.setPartialName : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = null
org.apache.pdfbox.cos.COSDictionary.setString : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3
org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4)
org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FT>
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : r5 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : r5 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.getName : return $r1
org.apache.pdfbox.cos.COSName.getName : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5]
org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5
org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : if r5 != null
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : if r5 != null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : return r5
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getFieldType : return r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : return $r4
org.apache.pdfbox.cos.COSDictionary.getItem : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.setFields : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.setFields : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.setFields : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIELDS>
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.setFields : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIELDS> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.setFields : $r4 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.setFields : $r4 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = null
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if r0 == null
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if r0 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z0 = r0 instanceof org.apache.pdfbox.pdmodel.common.COSArrayList
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z0 = r0 instanceof org.apache.pdfbox.pdmodel.common.COSArrayList >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z0 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = $r4
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z1 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z2 = r2 instanceof java.lang.String
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z2 = r2 instanceof java.lang.String >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z2 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z3 = r2 instanceof java.lang.Integer
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z3 = r2 instanceof java.lang.Integer >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z3 != 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z4 = r2 instanceof java.lang.Long
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z4 = r2 instanceof java.lang.Long >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z4 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z5 = r2 instanceof java.lang.Float
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z5 = r2 instanceof java.lang.Float >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z5 != 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z6 = r2 instanceof java.lang.Double
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z6 = r2 instanceof java.lang.Double >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z6 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z7 = r2 instanceof org.apache.pdfbox.pdmodel.common.COSObjectable
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z7 = r2 instanceof org.apache.pdfbox.pdmodel.common.COSObjectable >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z7 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r3 = (org.apache.pdfbox.pdmodel.common.COSObjectable) r2
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r3 = (org.apache.pdfbox.pdmodel.common.COSObjectable) r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r18 = interfaceinvoke r3.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r18 = interfaceinvoke r3.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r18)
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r18) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= (branch)]
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : return r22
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : return r22 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.setFields : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4)
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.setFields : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $r4 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: java.util.Map fieldCache>
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $r4 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: java.util.Map fieldCache> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : if $r4 == null
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : if $r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree getFieldTree()>()
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree getFieldTree()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFieldTree : $r1 = new org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFieldTree : $r1 = new org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFieldTree : specialinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree: void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)>(r0)
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFieldTree : specialinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree: void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFieldTree : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFieldTree : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : r2 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : r2 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree.iterator : $r1 = new org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree.iterator : $r1 = new org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree.iterator : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm>
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree.iterator : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree.iterator : specialinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$1)>($r2, null)
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree.iterator : specialinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$1)>($r2, null) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r10 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1)
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : $r10 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4
org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : return $r2
org.apache.pdfbox.cos.COSArray.getObject : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : r3 = (org.apache.pdfbox.cos.COSDictionary) $r10
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : r3 = (org.apache.pdfbox.cos.COSDictionary) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : if r3 == null
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : r4 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDField fromDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)>(r0, r3, null)
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : r4 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDField fromDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)>(r0, r3, null) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.fromDictionary : $r3 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory: org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)>(r0, r1, r2)
org.apache.pdfbox.pdmodel.interactive.form.PDField.fromDictionary : $r3 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory: org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)>(r0, r1, r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : r3 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory: java.lang.String findFieldType(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : r3 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory: java.lang.String findFieldType(org.apache.pdfbox.cos.COSDictionary)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.findFieldType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FT>
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.findFieldType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.findFieldType : r6 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.findFieldType : r6 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.findFieldType : if r6 != null
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.findFieldType : if r6 != null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.findFieldType : return r6
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.findFieldType : return r6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $r4 = "Ch"
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $r4 = "Ch" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $r5 = "Tx"
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $r5 = "Tx" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : if $z1 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $r6 = "Sig"
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $r6 = "Sig" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : if $z2 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $r11 = new org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : $r11 = new org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : specialinvoke $r11.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)>(r0, r1, r2)
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : specialinvoke $r11.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)>(r0, r1, r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : return $r11
org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory.createField : return $r11 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.fromDictionary : return $r3
org.apache.pdfbox.pdmodel.interactive.form.PDField.fromDictionary : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : if r4 == null
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : i1 = i1 + 1
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : goto [?= $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>()]
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getFields : goto [?= $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>()] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.enqueueKids : $r5 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: java.util.Queue queue>
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.enqueueKids : $r5 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: java.util.Queue queue> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.enqueueKids : interfaceinvoke $r5.<java.util.Queue: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.enqueueKids : interfaceinvoke $r5.<java.util.Queue: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.enqueueKids : $z1 = r1 instanceof org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.enqueueKids : $z1 = r1 instanceof org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.enqueueKids : if $z1 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.enqueueKids : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree.iterator : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree.iterator : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: java.util.Queue queue>
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: java.util.Queue queue> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : $z0 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : $z0 = interfaceinvoke $r1.<java.util.Queue: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : if $z0 != 0
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : $z1 = 1
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : $z1 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : goto [?= return $z1]
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : goto [?= return $z1] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : return $z1
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.hasNext : return $z1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: org.apache.pdfbox.pdmodel.interactive.form.PDField next()>()
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: org.apache.pdfbox.pdmodel.interactive.form.PDField next()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : if $z0 != 0
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: java.util.Queue queue>
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator: java.util.Queue queue> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>()
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $r2 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $r3 = (org.apache.pdfbox.pdmodel.interactive.form.PDField) $r2
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : $r3 = (org.apache.pdfbox.pdmodel.interactive.form.PDField) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : return $r3
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator.next : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : r3 = (org.apache.pdfbox.pdmodel.interactive.form.PDField) $r6
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : r3 = (org.apache.pdfbox.pdmodel.interactive.form.PDField) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $r7 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PDField: java.lang.String getFullyQualifiedName()>()
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $r7 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PDField: java.lang.String getFullyQualifiedName()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : r8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: java.lang.String getPartialName()>()
org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : r8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: java.lang.String getPartialName()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getPartialName : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getPartialName : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getPartialName : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName T>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getPartialName : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName T> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getPartialName : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.interactive.form.PDField.getPartialName : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : r4 = null
org.apache.pdfbox.cos.COSDictionary.getString : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.getString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : $r3 = (org.apache.pdfbox.cos.COSString) r2
org.apache.pdfbox.cos.COSDictionary.getString : $r3 = (org.apache.pdfbox.cos.COSString) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>()
org.apache.pdfbox.cos.COSDictionary.getString : r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>() >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $i0 = lengthof $r1
org.apache.pdfbox.cos.COSString.getString : $i0 = lengthof $r1 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $i0 <= 2
org.apache.pdfbox.cos.COSString.getString : if $i0 <= 2 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $b1 = $r2[0]
org.apache.pdfbox.cos.COSString.getString : $b1 = $r2[0] >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $s2 = $b1 & 255
org.apache.pdfbox.cos.COSString.getString : $s2 = $b1 & 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $s2 != 254
org.apache.pdfbox.cos.COSString.getString : if $s2 != 254 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $b3 = $r3[0]
org.apache.pdfbox.cos.COSString.getString : $b3 = $r3[0] >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $s4 = $b3 & 255
org.apache.pdfbox.cos.COSString.getString : $s4 = $b3 & 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $s4 != 255
org.apache.pdfbox.cos.COSString.getString : if $s4 != 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r14 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r14 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r15 = staticinvoke <org.apache.pdfbox.cos.PDFDocEncoding: java.lang.String toString(byte[])>($r14)
org.apache.pdfbox.cos.COSString.getString : $r15 = staticinvoke <org.apache.pdfbox.cos.PDFDocEncoding: java.lang.String toString(byte[])>($r14) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0
org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = 0
org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : if i7 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.toString : if i7 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7]
org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r5 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r5 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $i2 = lengthof $r5
org.apache.pdfbox.cos.PDFDocEncoding.toString : $i2 = lengthof $r5 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : if $s3 < $i2
org.apache.pdfbox.cos.PDFDocEncoding.toString : if $s3 < $i2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $s4 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s4 = b1 & 255 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $i5 = $r6[$s4]
org.apache.pdfbox.cos.PDFDocEncoding.toString : $i5 = $r6[$s4] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $c6 = (char) $i5
org.apache.pdfbox.cos.PDFDocEncoding.toString : $c6 = (char) $i5 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)
org.apache.pdfbox.cos.PDFDocEncoding.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = i7 + 1
org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = i7 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.toString : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : return $r4
org.apache.pdfbox.cos.PDFDocEncoding.toString : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : return $r15
org.apache.pdfbox.cos.COSString.getString : return $r15 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : return r4
org.apache.pdfbox.cos.COSDictionary.getString : return r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getPartialName : return $r3
org.apache.pdfbox.pdmodel.interactive.form.PDField.getPartialName : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField parent>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField parent> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : if $r2 == null
org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : $r9 = null
org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : $r9 = null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : if $r9 == null
org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : if $r9 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : return r8
org.apache.pdfbox.pdmodel.interactive.form.PDField.getFullyQualifiedName : return r8 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : if $z1 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getField : return r3
