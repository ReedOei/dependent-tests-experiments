org.apache.pdfbox.pdmodel.PDDocument.close : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: boolean isClosed()>()
org.apache.pdfbox.pdmodel.PDDocument.close : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: boolean isClosed()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.isClosed : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.isClosed : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.isClosed : return $z0
org.apache.pdfbox.cos.COSDocument.isClosed : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $z0 != 0
org.apache.pdfbox.pdmodel.PDDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport signingSupport>
org.apache.pdfbox.pdmodel.PDDocument.close : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport signingSupport> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $r2 == null
org.apache.pdfbox.pdmodel.PDDocument.close : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.close : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void close()>()
org.apache.pdfbox.pdmodel.PDDocument.close : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>()
org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : return $r1
org.apache.pdfbox.cos.COSDocument.getObjects : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if r1 == null
org.apache.pdfbox.cos.COSDocument.close : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r3 == null
org.apache.pdfbox.cos.COSDocument.close : if $r3 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r4 == null
org.apache.pdfbox.cos.COSDocument.close : if $r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>()
org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r21 = null
org.apache.pdfbox.io.ScratchFile.close : r21 = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf>
org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r5 == null
org.apache.pdfbox.io.ScratchFile.close : if $r5 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file>
org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r23 == null
org.apache.pdfbox.io.ScratchFile.close : if $r23 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>]
org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>()
org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if r21 == null
org.apache.pdfbox.io.ScratchFile.close : if r21 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1
org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource>
org.apache.pdfbox.pdmodel.PDDocument.close : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $r4 == null
org.apache.pdfbox.pdmodel.PDDocument.close : if $r4 == null >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1
org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT>
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $z0 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $z0 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.containsKey : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.containsKey : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.containsKey : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.containsKey : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : $i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.containsKey : $i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : if $i0 < 0
org.apache.pdfbox.util.SmallMap.containsKey : if $i0 < 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : $z0 = 0
org.apache.pdfbox.util.SmallMap.containsKey : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : return $z0
org.apache.pdfbox.util.SmallMap.containsKey : return $z0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.containsKey : return $z0
org.apache.pdfbox.cos.COSDictionary.containsKey : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField parent>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField parent> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : if $r3 == null
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : if $r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r4 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r4 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm acroForm> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r5 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r5 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : return $r6
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : return $r6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $z0 = r1 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $z0 = r1 instanceof org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : if $z1 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : return $r4
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName V>
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName V> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : return ""
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getValue : return "" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if r1 == null
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if $z0 != 0
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : r2 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : r2 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : if $z0 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r3 = (java.lang.String) $r5
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r6 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r6 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : return $r4
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT>
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, r2)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : goto [?= return]
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : goto [?= return] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : return $r4
org.apache.pdfbox.cos.COSDictionary.getItem : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : return $i0
org.apache.pdfbox.cos.COSArray.size : return $i0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: java.lang.String getString(int,java.lang.String)>(i0, null)
org.apache.pdfbox.cos.COSArray.getString : $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: java.lang.String getString(int,java.lang.String)>(i0, null) >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : r5 = r1
org.apache.pdfbox.cos.COSArray.getString : r5 = r1 >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.cos.COSArray.getString : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : if i0 >= $i1
org.apache.pdfbox.cos.COSArray.getString : if i0 >= $i1 >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : $r3 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getString : $r3 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : r2 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.getString : r2 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSArray.getString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : if $z0 == 0
org.apache.pdfbox.cos.COSArray.getString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : $r4 = (org.apache.pdfbox.cos.COSString) r2
org.apache.pdfbox.cos.COSArray.getString : $r4 = (org.apache.pdfbox.cos.COSString) r2 >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>()
org.apache.pdfbox.cos.COSArray.getString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>() >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $i0 = lengthof $r1
org.apache.pdfbox.cos.COSString.getString : $i0 = lengthof $r1 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $i0 <= 2
org.apache.pdfbox.cos.COSString.getString : if $i0 <= 2 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $b1 = $r2[0]
org.apache.pdfbox.cos.COSString.getString : $b1 = $r2[0] >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $s2 = $b1 & 255
org.apache.pdfbox.cos.COSString.getString : $s2 = $b1 & 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $s2 != 254
org.apache.pdfbox.cos.COSString.getString : if $s2 != 254 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $b3 = $r3[0]
org.apache.pdfbox.cos.COSString.getString : $b3 = $r3[0] >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $s4 = $b3 & 255
org.apache.pdfbox.cos.COSString.getString : $s4 = $b3 & 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $s4 != 255
org.apache.pdfbox.cos.COSString.getString : if $s4 != 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r14 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r14 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r15 = staticinvoke <org.apache.pdfbox.cos.PDFDocEncoding: java.lang.String toString(byte[])>($r14)
org.apache.pdfbox.cos.COSString.getString : $r15 = staticinvoke <org.apache.pdfbox.cos.PDFDocEncoding: java.lang.String toString(byte[])>($r14) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0
org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = 0
org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : if i7 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.toString : if i7 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7]
org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r5 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r5 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $i2 = lengthof $r5
org.apache.pdfbox.cos.PDFDocEncoding.toString : $i2 = lengthof $r5 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : if $s3 < $i2
org.apache.pdfbox.cos.PDFDocEncoding.toString : if $s3 < $i2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $s4 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s4 = b1 & 255 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $i5 = $r6[$s4]
org.apache.pdfbox.cos.PDFDocEncoding.toString : $i5 = $r6[$s4] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $c6 = (char) $i5
org.apache.pdfbox.cos.PDFDocEncoding.toString : $c6 = (char) $i5 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)
org.apache.pdfbox.cos.PDFDocEncoding.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = i7 + 1
org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = i7 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.toString : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : return $r4
org.apache.pdfbox.cos.PDFDocEncoding.toString : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : return $r15
org.apache.pdfbox.cos.COSString.getString : return $r15 >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : return r5
org.apache.pdfbox.cos.COSArray.getString : return r5 >>>>>>>> org.apache.pdfbox.cos.COSArray.getString : return $r1
org.apache.pdfbox.cos.COSArray.getString : return $r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : $z0 = 1
org.apache.pdfbox.util.SmallMap.containsKey : $z0 = 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : goto [?= return $z0]
org.apache.pdfbox.util.SmallMap.containsKey : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r9 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r9 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r10 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : $r10 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : return $r10
org.apache.pdfbox.pdmodel.interactive.form.PDField.getInheritableAttribute : return $r10 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $r5 = (org.apache.pdfbox.cos.COSArray) r1
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $r5 = (org.apache.pdfbox.cos.COSArray) r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $r6 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List convertCOSStringCOSArrayToList(org.apache.pdfbox.cos.COSArray)>($r5)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : $r6 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List convertCOSStringCOSArrayToList(org.apache.pdfbox.cos.COSArray)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : r7 = null
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : r7 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : if r0 == null
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : if r0 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r2 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r2 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : i1 = 0
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : if i1 >= $i0
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4
org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : return $r2
org.apache.pdfbox.cos.COSArray.getObject : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r5 = (org.apache.pdfbox.cos.COSString) $r4
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r5 = (org.apache.pdfbox.cos.COSString) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : i1 = i1 + 1
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : goto [?= $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()]
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : goto [?= $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r3 = new org.apache.pdfbox.pdmodel.common.COSArrayList
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : $r3 = new org.apache.pdfbox.pdmodel.common.COSArrayList >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>(java.util.List,org.apache.pdfbox.cos.COSArray)>($r2, r0)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>(java.util.List,org.apache.pdfbox.cos.COSArray)>($r2, r0) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : r7 = $r3
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : r7 = $r3 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : return r7
org.apache.pdfbox.pdmodel.common.COSArrayList.convertCOSStringCOSArrayToList : return r7 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : return $r6
org.apache.pdfbox.pdmodel.interactive.form.PDButton.getExportValues : return $r6 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.size : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.COSArrayList.size : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.size : return $i0
org.apache.pdfbox.pdmodel.common.COSArrayList.size : return $i0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.equals : $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.COSArrayList.equals : $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.equals : $z0 = interfaceinvoke $r2.<java.util.List: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.common.COSArrayList.equals : $z0 = interfaceinvoke $r2.<java.util.List: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.equals : return $z0
org.apache.pdfbox.pdmodel.common.COSArrayList.equals : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT>
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void removeItem(org.apache.pdfbox.cos.COSName)>($r4)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void removeItem(org.apache.pdfbox.cos.COSName)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.removeItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.removeItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.removeItem : interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.removeItem : interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.remove : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : if i0 >= 0
org.apache.pdfbox.util.SmallMap.remove : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $r4 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : $r4 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.remove : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : r2 = $r4[$i2]
org.apache.pdfbox.util.SmallMap.remove : r2 = $r4[$i2] >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : i1 = lengthof $r5
org.apache.pdfbox.util.SmallMap.remove : i1 = lengthof $r5 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : if i1 != 2
org.apache.pdfbox.util.SmallMap.remove : if i1 != 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i3 = i1 - 2
org.apache.pdfbox.util.SmallMap.remove : $i3 = i1 - 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.remove : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r3, 0, i0)
org.apache.pdfbox.util.SmallMap.remove : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r3, 0, i0) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i6 = i0 + 2
org.apache.pdfbox.util.SmallMap.remove : $i6 = i0 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i4 = i1 - i0
org.apache.pdfbox.util.SmallMap.remove : $i4 = i1 - i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i5 = $i4 - 2
org.apache.pdfbox.util.SmallMap.remove : $i5 = $i4 - 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i6, r3, i0, $i5)
org.apache.pdfbox.util.SmallMap.remove : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i6, r3, i0, $i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.remove : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : return r2
