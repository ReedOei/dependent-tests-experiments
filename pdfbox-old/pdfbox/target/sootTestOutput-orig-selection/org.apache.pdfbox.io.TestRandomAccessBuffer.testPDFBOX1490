org.apache.pdfbox.io.RandomAccessBuffer.write : $i0 = lengthof r1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void write(byte[],int,int)>(r1, 0, $i0)
org.apache.pdfbox.io.RandomAccessBuffer.write : virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void write(byte[],int,int)>(r1, 0, $i0) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l5 = (long) i1
org.apache.pdfbox.io.RandomAccessBuffer.write : $l5 = (long) i1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : l2 = $l6 + $l5
org.apache.pdfbox.io.RandomAccessBuffer.write : l2 = $l6 + $l5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : i3 = $i8 - $i7
org.apache.pdfbox.io.RandomAccessBuffer.write : i3 = $i8 - $i7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if i1 < i3
org.apache.pdfbox.io.RandomAccessBuffer.write : if i1 < i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r2, $i9, i1)
org.apache.pdfbox.io.RandomAccessBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r2, $i9, i1) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i10 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i10 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i11 = $i10 + i1
org.apache.pdfbox.io.RandomAccessBuffer.write : $i11 = $i10 + i1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i11
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l12 = (long) i1
org.apache.pdfbox.io.RandomAccessBuffer.write : $l12 = (long) i1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l14 = $l13 + $l12
org.apache.pdfbox.io.RandomAccessBuffer.write : $l14 = $l13 + $l12 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l14
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l14 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l16 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l16 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b17 = $l16 cmp $l15
org.apache.pdfbox.io.RandomAccessBuffer.write : $b17 = $l16 cmp $l15 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $b17 <= 0
org.apache.pdfbox.io.RandomAccessBuffer.write : if $b17 <= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = $l18
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = $l18 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $i2 < $i1
org.apache.pdfbox.io.RandomAccessBuffer.write : if $i2 < $i1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i4 = $i3 + 1
org.apache.pdfbox.io.RandomAccessBuffer.write : $i4 = $i3 + 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i4
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i4 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b5 = (byte) i0
org.apache.pdfbox.io.RandomAccessBuffer.write : $b5 = (byte) i0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $r1[$i3] = $b5
org.apache.pdfbox.io.RandomAccessBuffer.write : $r1[$i3] = $b5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l7 = $l6 + 1L
org.apache.pdfbox.io.RandomAccessBuffer.write : $l7 = $l6 + 1L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l7
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b10 = $l9 cmp $l8
org.apache.pdfbox.io.RandomAccessBuffer.write : $b10 = $l9 cmp $l8 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $b10 <= 0
org.apache.pdfbox.io.RandomAccessBuffer.write : if $b10 <= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i11 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i11 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $i12 < $i11
org.apache.pdfbox.io.RandomAccessBuffer.write : if $i12 < $i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l14 = (long) $i13
org.apache.pdfbox.io.RandomAccessBuffer.write : $l14 = (long) $i13 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l16 = $l15 + $l14
org.apache.pdfbox.io.RandomAccessBuffer.write : $l16 = $l15 + $l14 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b17 = $l16 cmp 2147483647L
org.apache.pdfbox.io.RandomAccessBuffer.write : $b17 = $l16 cmp 2147483647L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $b17 < 0
org.apache.pdfbox.io.RandomAccessBuffer.write : if $b17 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void expandBuffer()>()
org.apache.pdfbox.io.RandomAccessBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void expandBuffer()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : if $i1 <= $i0
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : if $i1 <= $i0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r1 = newarray (byte)[$i2]
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r1 = newarray (byte)[$i2] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r1
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2)
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i4 = $i3 + 1
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i4 = $i3 + 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> = $i4
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> = $i4 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i6 = $i5 + 1
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i6 = $i5 + 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i6
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i6 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.getPosition : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.getPosition : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.getPosition : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.getPosition : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.getPosition : return $l0
org.apache.pdfbox.io.RandomAccessBuffer.getPosition : return $l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l3 cmp $l2
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l3 cmp $l2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i5
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i6)
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i6) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r3 = (byte[]) $r2
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r3 = (byte[]) $r2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l8 = (long) $i7
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l8 = (long) $i7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l10 = $l9 % $l8
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l10 = $l9 % $l8 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i11 = (int) $l10
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i11 = (int) $l10 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i11
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = null
org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.close : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : interfaceinvoke $r1.<java.util.List: void clear()>()
org.apache.pdfbox.io.RandomAccessBuffer.close : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = 0L
org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0
org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = 0L
org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = 0
