org.apache.pdfbox.cos.COSNumber.get : $i0 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.cos.COSNumber.get : if $i0 != 1
org.apache.pdfbox.cos.COSNumber.get : if $i0 != 1 >>>>>>>> org.apache.pdfbox.cos.COSNumber.get : $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46)
org.apache.pdfbox.cos.COSNumber.get : $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46) >>>>>>>> org.apache.pdfbox.cos.COSNumber.get : if $i1 != -1
org.apache.pdfbox.cos.COSNumber.get : if $i1 != -1 >>>>>>>> org.apache.pdfbox.cos.COSNumber.get : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSNumber.get : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.COSNumber.get : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(java.lang.String)>(r0)
org.apache.pdfbox.cos.COSNumber.get : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value> >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : f3 = virtualinvoke $r1.<java.math.BigDecimal: float floatValue()>()
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : f3 = virtualinvoke $r1.<java.math.BigDecimal: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $r2 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $r2 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value> >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : d0 = virtualinvoke $r2.<java.math.BigDecimal: double doubleValue()>()
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : d0 = virtualinvoke $r2.<java.math.BigDecimal: double doubleValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : z0 = 0
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : z0 = 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $b0 = f3 cmpl #-InfinityF
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $b0 = f3 cmpl #-InfinityF >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : if $b0 == 0
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : if $b0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $b3 = f3 cmpl #InfinityF
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $b3 = f3 cmpl #InfinityF >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : if $b3 != 0
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : if $b3 != 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $b4 = f3 cmpl 0.0F
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : $b4 = f3 cmpl 0.0F >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : if $b4 != 0
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : if $b4 != 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : if z0 == 0
org.apache.pdfbox.cos.COSFloat.checkMinMaxValues : if z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSNumber.get : return $r1
org.apache.pdfbox.cos.COSNumber.get : return $r1 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.runTests : specialinvoke r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: void loop(long)>(123456L)
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.runTests : specialinvoke r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: void loop(long)>(123456L) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r3 = new java.util.Random
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r3 = new java.util.Random >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : specialinvoke $r3.<java.util.Random: void <init>(long)>(l0)
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : specialinvoke $r3.<java.util.Random: void <init>(long)>(l0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : i3 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int low>
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : i3 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int low> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i1 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int high>
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i1 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int high> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : if i3 >= $i1
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : if i3 >= $i1 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $f1 = (float) i3
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $f1 = (float) i3 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $f2 = virtualinvoke $r3.<java.util.Random: float nextFloat()>()
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $f2 = virtualinvoke $r3.<java.util.Random: float nextFloat()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : f0 = $f1 * $f2
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : f0 = $f1 * $f2 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : virtualinvoke r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: void runTest(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : virtualinvoke r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: void runTest(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $r5 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $r5 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : specialinvoke $r5.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : specialinvoke $r5.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46)
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0")
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0") >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("0")
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("0") >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z1 == 0
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $r6 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $r6 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $r7 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $r7 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : specialinvoke $r7.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : specialinvoke $r7.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z0 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r5)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z0 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSFloat.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : if $z0 == 0
org.apache.pdfbox.cos.COSFloat.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $r2 = (org.apache.pdfbox.cos.COSFloat) r1
org.apache.pdfbox.cos.COSFloat.equals : $r2 = (org.apache.pdfbox.cos.COSFloat) r1 >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.cos.COSFloat.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value> >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $f0 = virtualinvoke $r3.<java.math.BigDecimal: float floatValue()>()
org.apache.pdfbox.cos.COSFloat.equals : $f0 = virtualinvoke $r3.<java.math.BigDecimal: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0)
org.apache.pdfbox.cos.COSFloat.equals : $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0) >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $r4 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.cos.COSFloat.equals : $r4 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value> >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $f1 = virtualinvoke $r4.<java.math.BigDecimal: float floatValue()>()
org.apache.pdfbox.cos.COSFloat.equals : $f1 = virtualinvoke $r4.<java.math.BigDecimal: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1)
org.apache.pdfbox.cos.COSFloat.equals : $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1) >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : if $i0 != $i1
org.apache.pdfbox.cos.COSFloat.equals : if $i0 != $i1 >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $z1 = 1
org.apache.pdfbox.cos.COSFloat.equals : $z1 = 1 >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : goto [?= return $z1]
org.apache.pdfbox.cos.COSFloat.equals : goto [?= return $z1] >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : return $z1
org.apache.pdfbox.cos.COSFloat.equals : return $z1 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z0)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z1 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r7)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z1 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z1)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z1) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z2 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r6)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z2 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z2)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z2) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z3 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r6)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z3 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z3)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z3) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z4 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r7)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z4 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z4)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z4) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z5 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r7)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z5 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z5)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z5) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $i1 = $i0 + 1
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $i1 = $i0 + 1 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : f1 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : f1 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $r8 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $r8 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : specialinvoke $r8.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f1)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : specialinvoke $r8.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f1) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z6 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r5)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : $z6 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSFloat: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $z1 = 0
org.apache.pdfbox.cos.COSFloat.equals : $z1 = 0 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertFalse(boolean)>($z6)
org.apache.pdfbox.cos.TestCOSFloat$1.runTest : staticinvoke <junit.framework.TestCase: void assertFalse(boolean)>($z6) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : goto [?= $i2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int step>]
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : goto [?= $i2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int step>] >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int step>
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int step> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : i3 = i3 + $i2
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : i3 = i3 + $i2 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : goto [?= $i1 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int high>]
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : goto [?= $i1 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int high>] >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.runTests : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.runTests : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.runTests : specialinvoke r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: void loop(long)>($l0)
