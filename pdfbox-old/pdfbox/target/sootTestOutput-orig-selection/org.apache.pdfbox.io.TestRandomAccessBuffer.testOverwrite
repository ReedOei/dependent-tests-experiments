org.apache.pdfbox.io.RandomAccessBuffer.write : $i0 = lengthof r1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void write(byte[],int,int)>(r1, 0, $i0)
org.apache.pdfbox.io.RandomAccessBuffer.write : virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void write(byte[],int,int)>(r1, 0, $i0) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l5 = (long) i1
org.apache.pdfbox.io.RandomAccessBuffer.write : $l5 = (long) i1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : l2 = $l6 + $l5
org.apache.pdfbox.io.RandomAccessBuffer.write : l2 = $l6 + $l5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : i3 = $i8 - $i7
org.apache.pdfbox.io.RandomAccessBuffer.write : i3 = $i8 - $i7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if i1 < i3
org.apache.pdfbox.io.RandomAccessBuffer.write : if i1 < i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b19 = l2 cmp 2147483647L
org.apache.pdfbox.io.RandomAccessBuffer.write : $b19 = l2 cmp 2147483647L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $b19 <= 0
org.apache.pdfbox.io.RandomAccessBuffer.write : if $b19 <= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i20 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i20 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, $i20, i3)
org.apache.pdfbox.io.RandomAccessBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, $i20, i3) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : i36 = i0 + i3
org.apache.pdfbox.io.RandomAccessBuffer.write : i36 = i0 + i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i21 = i1 - i3
org.apache.pdfbox.io.RandomAccessBuffer.write : $i21 = i1 - i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : l37 = (long) $i21
org.apache.pdfbox.io.RandomAccessBuffer.write : l37 = (long) $i21 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i23 = (int) l37
org.apache.pdfbox.io.RandomAccessBuffer.write : $i23 = (int) l37 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i22 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i22 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : i4 = $i23 / $i22
org.apache.pdfbox.io.RandomAccessBuffer.write : i4 = $i23 / $i22 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : i38 = 0
org.apache.pdfbox.io.RandomAccessBuffer.write : i38 = 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if i38 >= i4
org.apache.pdfbox.io.RandomAccessBuffer.write : if i38 >= i4 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l26 = (long) i4
org.apache.pdfbox.io.RandomAccessBuffer.write : $l26 = (long) i4 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i24 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i24 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l25 = (long) $i24
org.apache.pdfbox.io.RandomAccessBuffer.write : $l25 = (long) $i24 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l27 = $l26 * $l25
org.apache.pdfbox.io.RandomAccessBuffer.write : $l27 = $l26 * $l25 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : l39 = l37 - $l27
org.apache.pdfbox.io.RandomAccessBuffer.write : l39 = l37 - $l27 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b28 = l39 cmp 0L
org.apache.pdfbox.io.RandomAccessBuffer.write : $b28 = l39 cmp 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $b28 < 0
org.apache.pdfbox.io.RandomAccessBuffer.write : if $b28 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void expandBuffer()>()
org.apache.pdfbox.io.RandomAccessBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void expandBuffer()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : if $i1 <= $i0
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : if $i1 <= $i0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r1 = newarray (byte)[$i2]
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r1 = newarray (byte)[$i2] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r1
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2)
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i4 = $i3 + 1
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i4 = $i3 + 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> = $i4
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> = $i4 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i6 = $i5 + 1
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : $i6 = $i5 + 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i6
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i6 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b29 = l39 cmp 0L
org.apache.pdfbox.io.RandomAccessBuffer.write : $b29 = l39 cmp 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $b29 <= 0
org.apache.pdfbox.io.RandomAccessBuffer.write : if $b29 <= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $r5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $r5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i32 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i32 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i31 = (int) l39
org.apache.pdfbox.io.RandomAccessBuffer.write : $i31 = (int) l39 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i36, $r5, $i32, $i31)
org.apache.pdfbox.io.RandomAccessBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i36, $r5, $i32, $i31) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i30 = (int) l39
org.apache.pdfbox.io.RandomAccessBuffer.write : $i30 = (int) l39 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i30
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i30 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : goto [?= $l13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>]
org.apache.pdfbox.io.RandomAccessBuffer.write : goto [?= $l13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l12 = (long) i1
org.apache.pdfbox.io.RandomAccessBuffer.write : $l12 = (long) i1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l14 = $l13 + $l12
org.apache.pdfbox.io.RandomAccessBuffer.write : $l14 = $l13 + $l12 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l14
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l14 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l16 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l16 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b17 = $l16 cmp $l15
org.apache.pdfbox.io.RandomAccessBuffer.write : $b17 = $l16 cmp $l15 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $b17 <= 0
org.apache.pdfbox.io.RandomAccessBuffer.write : if $b17 <= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = $l18
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = $l18 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l3 cmp $l2
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l3 cmp $l2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l14 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l14 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l13 = (long) $i12
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l13 = (long) $i12 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l15 = $l14 / $l13
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l15 = $l14 / $l13 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i16 = (int) $l15
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i16 = (int) $l15 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i16
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i16 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l19 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l19 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i17 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i17 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l18 = (long) $i17
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l18 = (long) $i17 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l20 = $l19 % $l18
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l20 = $l19 % $l18 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i21 = (int) $l20
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i21 = (int) $l20 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i21
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i21 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i22 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i22 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i22)
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i22) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r6 = (byte[]) $r5
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r6 = (byte[]) $r5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r6
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r6 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : goto [?= return]
org.apache.pdfbox.io.RandomAccessBuffer.seek : goto [?= return] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.read : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.read : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $b4 = $l3 cmp $l2
org.apache.pdfbox.io.RandomAccessBuffer.read : $b4 = $l3 cmp $l2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : if $b4 < 0
org.apache.pdfbox.io.RandomAccessBuffer.read : if $b4 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : i11 = specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: int readRemainingBytes(byte[],int,int)>(r1, i0, i1)
org.apache.pdfbox.io.RandomAccessBuffer.read : i11 = specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: int readRemainingBytes(byte[],int,int)>(r1, i0, i1) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $b6 = $l5 cmp $l4
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $b6 = $l5 cmp $l4 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : if $b6 < 0
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : if $b6 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l10 = (long) i1
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l10 = (long) i1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l9 = $l8 - $l7
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l9 = $l8 - $l7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l11 = staticinvoke <java.lang.Math: long min(long,long)>($l10, $l9)
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l11 = staticinvoke <java.lang.Math: long min(long,long)>($l10, $l9) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : i2 = (int) $l11
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : i2 = (int) $l11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : i3 = $i13 - $i12
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : i3 = $i13 - $i12 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : if i3 != 0
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : if i3 != 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : if i2 < i3
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : if i2 < i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i20 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i20 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i20, r1, i0, i3)
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i20, r1, i0, i3) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i21 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i21 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i22 = $i21 + i3
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i22 = $i21 + i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i22
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i22 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l24 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l24 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l23 = (long) i3
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l23 = (long) i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l25 = $l24 + $l23
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l25 = $l24 + $l23 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l25
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l25 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : return i3
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : return i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : if i11 >= i1
org.apache.pdfbox.io.RandomAccessBuffer.read : if i11 >= i1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $i5 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: int available()>()
org.apache.pdfbox.io.RandomAccessBuffer.read : $i5 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: int available()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.available : $l0 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: long length()>()
org.apache.pdfbox.io.RandomAccessBuffer.available : $l0 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: long length()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.length : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.length : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.length : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.length : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.length : return $l0
org.apache.pdfbox.io.RandomAccessBuffer.length : return $l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.available : $l1 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: long getPosition()>()
org.apache.pdfbox.io.RandomAccessBuffer.available : $l1 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: long getPosition()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.getPosition : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.getPosition : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.getPosition : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.getPosition : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.getPosition : return $l0
org.apache.pdfbox.io.RandomAccessBuffer.getPosition : return $l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.available : $l2 = $l0 - $l1
org.apache.pdfbox.io.RandomAccessBuffer.available : $l2 = $l0 - $l1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.available : $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l2, 2147483647L)
org.apache.pdfbox.io.RandomAccessBuffer.available : $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l2, 2147483647L) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.available : $i4 = (int) $l3
org.apache.pdfbox.io.RandomAccessBuffer.available : $i4 = (int) $l3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.available : return $i4
org.apache.pdfbox.io.RandomAccessBuffer.available : return $i4 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : if $i5 <= 0
org.apache.pdfbox.io.RandomAccessBuffer.read : if $i5 <= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $i7 = i0 + i11
org.apache.pdfbox.io.RandomAccessBuffer.read : $i7 = i0 + i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $i6 = i1 - i11
org.apache.pdfbox.io.RandomAccessBuffer.read : $i6 = i1 - i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $i8 = specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: int readRemainingBytes(byte[],int,int)>(r1, $i7, $i6)
org.apache.pdfbox.io.RandomAccessBuffer.read : $i8 = specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: int readRemainingBytes(byte[],int,int)>(r1, $i7, $i6) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : return 0
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : return 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : i11 = i11 + $i8
org.apache.pdfbox.io.RandomAccessBuffer.read : i11 = i11 + $i8 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $i10 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.read : $i10 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $i9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.read : $i9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : if $i10 != $i9
org.apache.pdfbox.io.RandomAccessBuffer.read : if $i10 != $i9 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void nextBuffer()>()
org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void nextBuffer()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : if $i1 != $i0
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : if $i1 != $i0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $i3 = $i2 + 1
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $i3 = $i2 + 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i3
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i3)
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i3) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $r3 = (byte[]) $r2
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : $r3 = (byte[]) $r2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3
org.apache.pdfbox.io.RandomAccessBuffer.nextBuffer : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : goto [?= (branch)]
org.apache.pdfbox.io.RandomAccessBuffer.read : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i14 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i14 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i14, r1, i0, i2)
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i14, r1, i0, i2) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i16 = $i15 + i2
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $i16 = $i15 + i2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i16
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i16 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l17 = (long) i2
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l17 = (long) i2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l19 = $l18 + $l17
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : $l19 = $l18 + $l17 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l19
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l19 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : return i2
org.apache.pdfbox.io.RandomAccessBuffer.readRemainingBytes : return i2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : return i11
org.apache.pdfbox.io.RandomAccessBuffer.read : return i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $i2 < $i1
org.apache.pdfbox.io.RandomAccessBuffer.write : if $i2 < $i1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i4 = $i3 + 1
org.apache.pdfbox.io.RandomAccessBuffer.write : $i4 = $i3 + 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i4
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i4 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b5 = (byte) i0
org.apache.pdfbox.io.RandomAccessBuffer.write : $b5 = (byte) i0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $r1[$i3] = $b5
org.apache.pdfbox.io.RandomAccessBuffer.write : $r1[$i3] = $b5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l7 = $l6 + 1L
org.apache.pdfbox.io.RandomAccessBuffer.write : $l7 = $l6 + 1L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l7
org.apache.pdfbox.io.RandomAccessBuffer.write : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b10 = $l9 cmp $l8
org.apache.pdfbox.io.RandomAccessBuffer.write : $b10 = $l9 cmp $l8 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $b10 <= 0
org.apache.pdfbox.io.RandomAccessBuffer.write : if $b10 <= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i11 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i11 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $i12 < $i11
org.apache.pdfbox.io.RandomAccessBuffer.write : if $i12 < $i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.write : $l15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $i13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.write : $i13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l14 = (long) $i13
org.apache.pdfbox.io.RandomAccessBuffer.write : $l14 = (long) $i13 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $l16 = $l15 + $l14
org.apache.pdfbox.io.RandomAccessBuffer.write : $l16 = $l15 + $l14 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : $b17 = $l16 cmp 2147483647L
org.apache.pdfbox.io.RandomAccessBuffer.write : $b17 = $l16 cmp 2147483647L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.write : if $b17 < 0
org.apache.pdfbox.io.RandomAccessBuffer.write : if $b17 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void nextBuffer()>()
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void nextBuffer()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : goto [?= return]
org.apache.pdfbox.io.RandomAccessBuffer.expandBuffer : goto [?= return] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = null
org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.close : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : interfaceinvoke $r1.<java.util.List: void clear()>()
org.apache.pdfbox.io.RandomAccessBuffer.close : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = 0L
org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0
org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = 0L
org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.close : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = 0
