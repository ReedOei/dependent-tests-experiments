org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1
org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.addPage : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPageTree getPages()>()
org.apache.pdfbox.pdmodel.PDDocument.addPage : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPageTree getPages()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getPages : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.getPages : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $r3 != null
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $r3 != null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>()
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getTrailer : $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>
org.apache.pdfbox.cos.COSDocument.getTrailer : $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getTrailer : return $r1
org.apache.pdfbox.cos.COSDocument.getTrailer : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $z0 = r2 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $z0 = r2 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $z0 == 0
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r7 = new org.apache.pdfbox.pdmodel.PDDocumentCatalog
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r7 = new org.apache.pdfbox.pdmodel.PDDocumentCatalog >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r8 = (org.apache.pdfbox.cos.COSDictionary) r2
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r8 = (org.apache.pdfbox.cos.COSDictionary) r2 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : specialinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)>(r0, $r8)
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : specialinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)>(r0, $r8) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> = $r7
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> = $r7 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : goto [?= $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>]
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : goto [?= $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : return $r9
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : return $r9 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getPages : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageTree getPages()>()
org.apache.pdfbox.pdmodel.PDDocument.getPages : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageTree getPages()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r1 = new org.apache.pdfbox.pdmodel.PDPageTree
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r1 = new org.apache.pdfbox.pdmodel.PDPageTree >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r6 = (org.apache.pdfbox.cos.COSDictionary) $r4
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r6 = (org.apache.pdfbox.cos.COSDictionary) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageTree: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)>($r6, $r5)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageTree: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)>($r6, $r5) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getCOSName : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getCOSName : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getCOSName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : $r3 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getCOSName : $r3 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : return $r3
org.apache.pdfbox.cos.COSDictionary.getCOSName : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : return $r1
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getPages : return $r2
org.apache.pdfbox.pdmodel.PDDocument.getPages : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.addPage : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageTree: void add(org.apache.pdfbox.pdmodel.PDPage)>(r1)
org.apache.pdfbox.pdmodel.PDDocument.addPage : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageTree: void add(org.apache.pdfbox.pdmodel.PDPage)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.PDPage.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, $r3)
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.PDPageTree.add : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : r2 = (org.apache.pdfbox.cos.COSArray) $r7
org.apache.pdfbox.pdmodel.PDPageTree.add : r2 = (org.apache.pdfbox.cos.COSArray) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r13)
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r13) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r10 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r9, $r8)
org.apache.pdfbox.pdmodel.PDPageTree.add : $r10 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r9, $r8) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = (org.apache.pdfbox.cos.COSDictionary) $r10
org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = (org.apache.pdfbox.cos.COSDictionary) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 == null
org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $i0 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r11)
org.apache.pdfbox.pdmodel.PDPageTree.add : $i0 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r11) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>(r1, -1)
org.apache.pdfbox.cos.COSDictionary.getInt : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>(r1, -1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, null, i0)
org.apache.pdfbox.cos.COSDictionary.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, null, i0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $r4 = (org.apache.pdfbox.cos.COSNumber) r3
org.apache.pdfbox.cos.COSDictionary.getInt : $r4 = (org.apache.pdfbox.cos.COSNumber) r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : i1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value> >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0
org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : return $i1
org.apache.pdfbox.cos.COSInteger.intValue : return $i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return i1
org.apache.pdfbox.cos.COSDictionary.getInt : return i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return $i1
org.apache.pdfbox.cos.COSDictionary.getInt : return $i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return $i0
org.apache.pdfbox.cos.COSDictionary.getInt : return $i0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $i1 = $i0 + 1
org.apache.pdfbox.pdmodel.PDPageTree.add : $i1 = $i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r12, $i1)
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r12, $i1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0
org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1)
org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1) >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100
org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1]
org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $r2 != null
org.apache.pdfbox.cos.COSInteger.get : if $r2 != null >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1]
org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : return $r4
org.apache.pdfbox.cos.COSInteger.get : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2)
org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1]
org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2
org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 != null
org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r2 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r2 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : if $r2 != null
org.apache.pdfbox.pdmodel.PDPage.getResources : if $r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r4 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r4 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r5 = staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>($r4, $r3)
org.apache.pdfbox.pdmodel.PDPage.getResources : $r5 = staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>($r4, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : if r2 == null
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P>
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r6 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r5, $r4)
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r6 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r5, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : r3 = (org.apache.pdfbox.cos.COSDictionary) $r6
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : r3 = (org.apache.pdfbox.cos.COSDictionary) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : if r3 == null
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r7 = staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>(r3, r1)
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r7 = staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>(r3, r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : return null
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : return null >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : return $r7
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : return $r7 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : r1 = (org.apache.pdfbox.cos.COSDictionary) $r5
org.apache.pdfbox.pdmodel.PDPage.getResources : r1 = (org.apache.pdfbox.cos.COSDictionary) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : if r1 == null
org.apache.pdfbox.pdmodel.PDPage.getResources : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r8 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r8 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : return $r8
org.apache.pdfbox.pdmodel.PDPage.getResources : return $r8 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources> = r1
org.apache.pdfbox.pdmodel.PDPage.setResources : r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources> = r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : if r1 == null
org.apache.pdfbox.pdmodel.PDPage.setResources : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : $r5 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.setResources : $r5 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>
org.apache.pdfbox.pdmodel.PDPage.setResources : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r4, r1)
org.apache.pdfbox.pdmodel.PDPage.setResources : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r4, r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary resources>
org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary resources> >>>>>>>> org.apache.pdfbox.pdmodel.PDResources.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.PDResources.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : goto [?= return]
org.apache.pdfbox.pdmodel.PDPage.setResources : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OCPROPERTIES>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OCPROPERTIES> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : if r1 == null
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $f0 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $f0 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocument : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.getDocument : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocument : return $r1
org.apache.pdfbox.pdmodel.PDDocument.getDocument : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getVersion : $f0 = r0.<org.apache.pdfbox.cos.COSDocument: float version>
org.apache.pdfbox.cos.COSDocument.getVersion : $f0 = r0.<org.apache.pdfbox.cos.COSDocument: float version> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getVersion : return $f0
org.apache.pdfbox.cos.COSDocument.getVersion : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $b0 = f0 cmpl 1.4F
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $b0 = f0 cmpl 1.4F >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : if $b0 < 0
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if $b0 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : r1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.lang.String getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : r1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.lang.String getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VERSION>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VERSION> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.getName : return $r1
org.apache.pdfbox.cos.COSName.getName : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5]
org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5
org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : return $r3
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = -1.0F
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = -1.0F >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : if r1 == null
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : goto [?= $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)]
org.apache.pdfbox.pdmodel.PDDocument.getVersion : goto [?= $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : return $f2
org.apache.pdfbox.pdmodel.PDDocument.getVersion : return $f2 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $d0 = (double) $f0
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $d0 = (double) $f0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $b0 = $d0 cmpg 1.5
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $b0 = $d0 cmpg 1.5 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : if $b0 >= 0
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : if $b0 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : virtualinvoke $r5.<org.apache.pdfbox.pdmodel.PDDocument: void setVersion(float)>(1.5F)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : virtualinvoke $r5.<org.apache.pdfbox.pdmodel.PDDocument: void setVersion(float)>(1.5F) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b0 = f0 cmpl f1
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b0 = f0 cmpl f1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b0 != 0
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b1 = f0 cmpg f1
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b1 = f0 cmpg f1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b1 >= 0
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $f2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $f2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b2 = $f2 cmpl 1.4F
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b2 = $f2 cmpl 1.4F >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b2 < 0
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b2 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r4 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0)
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r4 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setVersion(java.lang.String)>($r4)
org.apache.pdfbox.pdmodel.PDDocument.setVersion : virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setVersion(java.lang.String)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VERSION>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VERSION> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = null
org.apache.pdfbox.cos.COSDictionary.setName : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : goto [?= return]
org.apache.pdfbox.pdmodel.PDDocument.setVersion : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = null
org.apache.pdfbox.cos.COSDictionary.setString : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3
org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4)
org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSArray getOCGs()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSArray getOCGs()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OCGS>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OCGS> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : return $r4
org.apache.pdfbox.cos.COSDictionary.getItem : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : r7 = (org.apache.pdfbox.cos.COSArray) $r3
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : r7 = (org.apache.pdfbox.cos.COSArray) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : if r7 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : return r7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : return r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName D>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName D> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : r7 = (org.apache.pdfbox.cos.COSDictionary) $r3
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : r7 = (org.apache.pdfbox.cos.COSDictionary) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : if r7 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : return r7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : return r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDER>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDER> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r6 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r6 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0]
org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r10 = (org.apache.pdfbox.cos.COSArray) $r6
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r10 = (org.apache.pdfbox.cos.COSArray) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : if r10 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : if r10 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r7 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r7 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : specialinvoke $r7.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : specialinvoke $r7.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r10 = $r7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r10 = $r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r8 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r8 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDER>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDER> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r9, $r7)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r9, $r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke r10.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke r10.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r3 = interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSArray.add : $r3 = interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r6 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r6 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r3 = (org.apache.pdfbox.cos.COSArray) $r6
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r3 = (org.apache.pdfbox.cos.COSArray) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if r3 == null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r8 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r7)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r8 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r7) >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose>
org.apache.pdfbox.cos.COSDocument.finalize : $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.cos.COSDocument.finalize : $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Warning: You did not close a PDF Document")
org.apache.pdfbox.cos.COSDocument.finalize : interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Warning: You did not close a PDF Document") >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: void close()>()
org.apache.pdfbox.cos.COSDocument.finalize : virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>()
org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : return $r1
org.apache.pdfbox.cos.COSDocument.getObjects : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if r1 == null
org.apache.pdfbox.cos.COSDocument.close : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r3 == null
org.apache.pdfbox.cos.COSDocument.close : if $r3 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r4 == null
org.apache.pdfbox.cos.COSDocument.close : if $r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>()
org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r21 = null
org.apache.pdfbox.io.ScratchFile.close : r21 = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf>
org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r5 == null
org.apache.pdfbox.io.ScratchFile.close : if $r5 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file>
org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r23 == null
org.apache.pdfbox.io.ScratchFile.close : if $r23 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>]
org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>()
org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if r21 == null
org.apache.pdfbox.io.ScratchFile.close : if r21 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1
org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r18 = (org.apache.pdfbox.cos.COSArray) $r8
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r18 = (org.apache.pdfbox.cos.COSArray) $r8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if r18 == null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if r18 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r22 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r22 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BASE_STATE>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BASE_STATE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : r2 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : r2 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r5 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState valueOf(org.apache.pdfbox.cos.COSName)>(r2)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r5 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState valueOf(org.apache.pdfbox.cos.COSName)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : if r0 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : if r0 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : $r4 = <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState ON>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : $r4 = <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState ON> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : return $r4
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : return $r5
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : return $r5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r9 = <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState OFF>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r9 = <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState OFF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z0 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: boolean equals(java.lang.Object)>($r9)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z0 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z0 != 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z5 = 1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z5 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : goto [?= return $z5]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : goto [?= return $z5] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return $z5
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return $z5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r4 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r4 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r17 = (org.apache.pdfbox.cos.COSArray) $r4
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r17 = (org.apache.pdfbox.cos.COSArray) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if r17 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if r17 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r15 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r15 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : specialinvoke $r15.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : specialinvoke $r15.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r17 = $r15
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r17 = $r15 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r16, $r15)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r16, $r15) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r6 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r6 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r18 = (org.apache.pdfbox.cos.COSArray) $r6
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r18 = (org.apache.pdfbox.cos.COSArray) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if r18 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if r18 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r13 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r13 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : specialinvoke $r13.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : specialinvoke $r13.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r18 = $r13
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r18 = $r13 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r13)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r13) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : z7 = 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : z7 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if z0 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r19 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r19 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.iterator : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.iterator : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.iterator : $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSArray.iterator : $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.iterator : return $r2
org.apache.pdfbox.cos.COSArray.iterator : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z4 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z4 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z4 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if z7 != 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if z7 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r27 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r27 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSArray getOCGs()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSArray getOCGs()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r4 = (org.apache.pdfbox.cos.COSBase) $r7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r4 = (org.apache.pdfbox.cos.COSBase) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r5 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r4)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r5 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : $z0 = r1 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : $z0 = r1 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : $r2 = (org.apache.pdfbox.cos.COSDictionary) r1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : $r2 = (org.apache.pdfbox.cos.COSDictionary) r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : return $r2
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r6 = virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r8)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r6 = virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r8) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : r4 = null
org.apache.pdfbox.cos.COSDictionary.getString : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.getString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : $r3 = (org.apache.pdfbox.cos.COSString) r2
org.apache.pdfbox.cos.COSDictionary.getString : $r3 = (org.apache.pdfbox.cos.COSString) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>()
org.apache.pdfbox.cos.COSDictionary.getString : r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>() >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $i0 = lengthof $r1
org.apache.pdfbox.cos.COSString.getString : $i0 = lengthof $r1 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $i0 <= 2
org.apache.pdfbox.cos.COSString.getString : if $i0 <= 2 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $b1 = $r2[0]
org.apache.pdfbox.cos.COSString.getString : $b1 = $r2[0] >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $s2 = $b1 & 255
org.apache.pdfbox.cos.COSString.getString : $s2 = $b1 & 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $s2 != 254
org.apache.pdfbox.cos.COSString.getString : if $s2 != 254 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $b3 = $r3[0]
org.apache.pdfbox.cos.COSString.getString : $b3 = $r3[0] >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $s4 = $b3 & 255
org.apache.pdfbox.cos.COSString.getString : $s4 = $b3 & 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $s4 != 255
org.apache.pdfbox.cos.COSString.getString : if $s4 != 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r14 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r14 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r15 = staticinvoke <org.apache.pdfbox.cos.PDFDocEncoding: java.lang.String toString(byte[])>($r14)
org.apache.pdfbox.cos.COSString.getString : $r15 = staticinvoke <org.apache.pdfbox.cos.PDFDocEncoding: java.lang.String toString(byte[])>($r14) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0
org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = 0
org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : if i7 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.toString : if i7 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7]
org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r5 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r5 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $i2 = lengthof $r5
org.apache.pdfbox.cos.PDFDocEncoding.toString : $i2 = lengthof $r5 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : if $s3 < $i2
org.apache.pdfbox.cos.PDFDocEncoding.toString : if $s3 < $i2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $s4 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s4 = b1 & 255 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $i5 = $r6[$s4]
org.apache.pdfbox.cos.PDFDocEncoding.toString : $i5 = $r6[$s4] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $c6 = (char) $i5
org.apache.pdfbox.cos.PDFDocEncoding.toString : $c6 = (char) $i5 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)
org.apache.pdfbox.cos.PDFDocEncoding.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = i7 + 1
org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = i7 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.toString : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : return $r4
org.apache.pdfbox.cos.PDFDocEncoding.toString : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : return $r15
org.apache.pdfbox.cos.COSString.getString : return $r15 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : return r4
org.apache.pdfbox.cos.COSDictionary.getString : return r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r9 = new org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r9 = new org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : specialinvoke $r9.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r5)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : specialinvoke $r9.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : return $r9
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : return $r9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r8 = virtualinvoke r27.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r8 = virtualinvoke r27.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= return z7]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= return z7] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : return z7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : return z7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r14 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r14 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z3 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r12 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r12 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r15 = (org.apache.pdfbox.cos.COSBase) $r12
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r15 = (org.apache.pdfbox.cos.COSBase) $r12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r16 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r15)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r16 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r15) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r17 = virtualinvoke r16.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r13)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r17 = virtualinvoke r16.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r13) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z4 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z4 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z4 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return 1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r23 = virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r23 = virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r9 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r9 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r24 = (org.apache.pdfbox.cos.COSBase) $r9
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r24 = (org.apache.pdfbox.cos.COSBase) $r9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r25 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r24)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r25 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r24) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r26 = virtualinvoke r25.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r10)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r26 = virtualinvoke r25.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z2 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z2 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z2 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: boolean remove(org.apache.pdfbox.cos.COSBase)>(r24)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: boolean remove(org.apache.pdfbox.cos.COSBase)>(r24) >>>>>>>> org.apache.pdfbox.cos.COSArray.remove : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.remove : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.remove : $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.remove : $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSArray.remove : return $z0
org.apache.pdfbox.cos.COSArray.remove : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r24)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r24) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : z7 = 1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : z7 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r19 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r19 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r10 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r10 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r20 = (org.apache.pdfbox.cos.COSBase) $r10
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r20 = (org.apache.pdfbox.cos.COSBase) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r21 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r20)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r21 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r20) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r4 = virtualinvoke r21.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r11)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r4 = virtualinvoke r21.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z2 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : $r1 = <org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode: org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode OVERWRITE>
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : $r1 = <org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode: org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode OVERWRITE> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : if r0 != $r1
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : if r0 != $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : $z0 = 1
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : $z0 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : goto [?= return $z0]
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : return $z0
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.hasContents : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>
org.apache.pdfbox.pdmodel.PDPage.hasContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : r1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.PDPage.hasContents : r1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : $z0 = r1 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.pdmodel.PDPage.hasContents : $z0 = r1 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : if $z0 == 0
org.apache.pdfbox.pdmodel.PDPage.hasContents : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.PDPage.hasContents : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : if $z1 == 0
org.apache.pdfbox.pdmodel.PDPage.hasContents : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : return 0
org.apache.pdfbox.pdmodel.PDPage.hasContents : return 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : $r2 = new org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r2 = new org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : specialinvoke $r2.<org.apache.pdfbox.cos.COSStream: void <init>(org.apache.pdfbox.io.ScratchFile)>($r3)
org.apache.pdfbox.cos.COSDocument.createCOSStream : specialinvoke $r2.<org.apache.pdfbox.cos.COSStream: void <init>(org.apache.pdfbox.io.ScratchFile)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2)
org.apache.pdfbox.cos.COSDocument.createCOSStream : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : return $r2
org.apache.pdfbox.cos.COSDocument.createCOSStream : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setContents : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.setContents : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>
org.apache.pdfbox.pdmodel.PDPage.setContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setContents : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1)
org.apache.pdfbox.pdmodel.PDPage.setContents : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>(r1)
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.checkClosed : if $r1 == null
org.apache.pdfbox.cos.COSStream.checkClosed : if $r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : if $z0 == 0
org.apache.pdfbox.cos.COSStream.createOutputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null
org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r5 = virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFile: org.apache.pdfbox.io.RandomAccess createBuffer()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r5 = virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFile: org.apache.pdfbox.io.RandomAccess createBuffer()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer
org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFileBuffer: void <init>(org.apache.pdfbox.io.ScratchFile)>(r0)
org.apache.pdfbox.io.ScratchFile.createBuffer : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFileBuffer: void <init>(org.apache.pdfbox.io.ScratchFile)>(r0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.checkClosed : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.checkClosed : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096
org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i2 = $i0 + 1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i2 = $i0 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i1 = lengthof $r2
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i1 = lengthof $r2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : if $i2 < $i1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : if $i2 < $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : i8 = virtualinvoke $r8.<org.apache.pdfbox.io.ScratchFile: int getNewPage()>()
org.apache.pdfbox.io.ScratchFileBuffer.addPage : i8 = virtualinvoke $r8.<org.apache.pdfbox.io.ScratchFile: int getNewPage()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : entermonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : entermonitor $r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : i3 = virtualinvoke $r4.<java.util.BitSet: int nextSetBit(int)>(0)
org.apache.pdfbox.io.ScratchFile.getNewPage : i3 = virtualinvoke $r4.<java.util.BitSet: int nextSetBit(int)>(0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : virtualinvoke $r5.<java.util.BitSet: void clear(int)>(i3)
org.apache.pdfbox.io.ScratchFile.getNewPage : virtualinvoke $r5.<java.util.BitSet: void clear(int)>(i3) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 < $i0
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 < $i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1
org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = $i1
org.apache.pdfbox.io.ScratchFile.getNewPage : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : return i3
org.apache.pdfbox.io.ScratchFile.getNewPage : return i3 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9[$i9] = i8
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9[$i9] = i8 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i10
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i10 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l12 = (long) $i11
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l12 = (long) $i11 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l14 = (long) $i13
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l14 = (long) $i13 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l15 = $l12 * $l14
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l15 = $l12 * $l14 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l15
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l15 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i17 = $i16 + 1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i17 = $i16 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> = $i17
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> = $i17 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r11 = newarray (byte)[$i18]
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r11 = newarray (byte)[$i18] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r11
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r11 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : return $r1
org.apache.pdfbox.io.ScratchFile.createBuffer : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> = $r5
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> = $r5 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r7 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r7 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r6.<org.apache.pdfbox.io.RandomAccessOutputStream: void <init>(org.apache.pdfbox.io.RandomAccessWrite)>($r7)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r6.<org.apache.pdfbox.io.RandomAccessOutputStream: void <init>(org.apache.pdfbox.io.RandomAccessWrite)>($r7) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r9 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r9 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList
org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.cos.COSStream.getFilterList : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>()
org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>
org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER> >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.cos.COSStream.getFilters : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : return $r2
org.apache.pdfbox.cos.COSStream.getFilters : return $r2 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : if $z0 == 0
org.apache.pdfbox.cos.COSStream.getFilterList : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : if $z1 == 0
org.apache.pdfbox.cos.COSStream.getFilterList : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : return $r5
org.apache.pdfbox.cos.COSStream.getFilterList : return $r5 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r10 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r10 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r8.<org.apache.pdfbox.cos.COSOutputStream: void <init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.ScratchFile)>($r9, r0, $r6, $r10)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r8.<org.apache.pdfbox.cos.COSOutputStream: void <init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.ScratchFile)>($r9, r0, $r6, $r10) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1
org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r11.<org.apache.pdfbox.cos.COSStream$1: void <init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)>(r0, $r8)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r11.<org.apache.pdfbox.cos.COSStream$1: void <init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)>(r0, $r8) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : return $r11
org.apache.pdfbox.cos.COSStream.createOutputStream : return $r11 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : return $r3
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : return $r3 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setOutput : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> = r1
org.apache.pdfbox.contentstream.PDAbstractContentStream.setOutput : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> = r1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setResources : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.pdmodel.PDResources resources> = r1
org.apache.pdfbox.contentstream.PDAbstractContentStream.setResources : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.pdmodel.PDResources resources> = r1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setMaximumFractionDigits : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.text.NumberFormat formatDecimal>
org.apache.pdfbox.contentstream.PDAbstractContentStream.setMaximumFractionDigits : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.text.NumberFormat formatDecimal> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setMaximumFractionDigits : virtualinvoke $r1.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(i0)
org.apache.pdfbox.contentstream.PDAbstractContentStream.setMaximumFractionDigits : virtualinvoke $r1.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.close : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: boolean isClosed()>()
org.apache.pdfbox.pdmodel.PDDocument.close : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: boolean isClosed()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.isClosed : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.isClosed : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.isClosed : return $z0
org.apache.pdfbox.cos.COSDocument.isClosed : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $z0 != 0
org.apache.pdfbox.pdmodel.PDDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport signingSupport>
org.apache.pdfbox.pdmodel.PDDocument.close : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport signingSupport> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $r2 == null
org.apache.pdfbox.pdmodel.PDDocument.close : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.close : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void close()>()
org.apache.pdfbox.pdmodel.PDDocument.close : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.cos.COSDocument.close : $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r13 = (org.apache.pdfbox.cos.COSStream) $r7
org.apache.pdfbox.cos.COSDocument.close : r13 = (org.apache.pdfbox.cos.COSStream) $r7 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : virtualinvoke r13.<org.apache.pdfbox.cos.COSStream: void close()>()
org.apache.pdfbox.cos.COSDocument.close : virtualinvoke r13.<org.apache.pdfbox.cos.COSStream: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.close : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.close : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.close : if $r1 == null
org.apache.pdfbox.cos.COSStream.close : if $r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.close : interfaceinvoke $r2.<org.apache.pdfbox.io.RandomAccess: void close()>()
org.apache.pdfbox.cos.COSStream.close : interfaceinvoke $r2.<org.apache.pdfbox.io.RandomAccess: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null
org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0)
org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDocument.close : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource>
org.apache.pdfbox.pdmodel.PDDocument.close : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $r4 == null
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1
org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.addPage : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPageTree getPages()>()
org.apache.pdfbox.pdmodel.PDDocument.addPage : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPageTree getPages()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getPages : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.getPages : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $r3 != null
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $r3 != null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>()
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getTrailer : $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>
org.apache.pdfbox.cos.COSDocument.getTrailer : $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getTrailer : return $r1
org.apache.pdfbox.cos.COSDocument.getTrailer : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $z0 = r2 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $z0 = r2 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $z0 == 0
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r7 = new org.apache.pdfbox.pdmodel.PDDocumentCatalog
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r7 = new org.apache.pdfbox.pdmodel.PDDocumentCatalog >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r8 = (org.apache.pdfbox.cos.COSDictionary) r2
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r8 = (org.apache.pdfbox.cos.COSDictionary) r2 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : specialinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)>(r0, $r8)
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : specialinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)>(r0, $r8) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> = $r7
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> = $r7 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : goto [?= $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>]
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : goto [?= $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : return $r9
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : return $r9 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getPages : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageTree getPages()>()
org.apache.pdfbox.pdmodel.PDDocument.getPages : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageTree getPages()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r1 = new org.apache.pdfbox.pdmodel.PDPageTree
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r1 = new org.apache.pdfbox.pdmodel.PDPageTree >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r6 = (org.apache.pdfbox.cos.COSDictionary) $r4
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r6 = (org.apache.pdfbox.cos.COSDictionary) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageTree: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)>($r6, $r5)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageTree: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)>($r6, $r5) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getCOSName : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getCOSName : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getCOSName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : $r3 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getCOSName : $r3 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : return $r3
org.apache.pdfbox.cos.COSDictionary.getCOSName : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : return $r1
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getPages : return $r2
org.apache.pdfbox.pdmodel.PDDocument.getPages : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.addPage : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageTree: void add(org.apache.pdfbox.pdmodel.PDPage)>(r1)
org.apache.pdfbox.pdmodel.PDDocument.addPage : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageTree: void add(org.apache.pdfbox.pdmodel.PDPage)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.PDPage.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, $r3)
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.PDPageTree.add : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : r2 = (org.apache.pdfbox.cos.COSArray) $r7
org.apache.pdfbox.pdmodel.PDPageTree.add : r2 = (org.apache.pdfbox.cos.COSArray) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r13)
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r13) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r10 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r9, $r8)
org.apache.pdfbox.pdmodel.PDPageTree.add : $r10 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r9, $r8) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = (org.apache.pdfbox.cos.COSDictionary) $r10
org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = (org.apache.pdfbox.cos.COSDictionary) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 == null
org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $i0 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r11)
org.apache.pdfbox.pdmodel.PDPageTree.add : $i0 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r11) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>(r1, -1)
org.apache.pdfbox.cos.COSDictionary.getInt : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>(r1, -1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, null, i0)
org.apache.pdfbox.cos.COSDictionary.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, null, i0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $r4 = (org.apache.pdfbox.cos.COSNumber) r3
org.apache.pdfbox.cos.COSDictionary.getInt : $r4 = (org.apache.pdfbox.cos.COSNumber) r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : i1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value> >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0
org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : return $i1
org.apache.pdfbox.cos.COSInteger.intValue : return $i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return i1
org.apache.pdfbox.cos.COSDictionary.getInt : return i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return $i1
org.apache.pdfbox.cos.COSDictionary.getInt : return $i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return $i0
org.apache.pdfbox.cos.COSDictionary.getInt : return $i0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $i1 = $i0 + 1
org.apache.pdfbox.pdmodel.PDPageTree.add : $i1 = $i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r12, $i1)
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r12, $i1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0
org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1)
org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1) >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100
org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1]
org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $r2 != null
org.apache.pdfbox.cos.COSInteger.get : if $r2 != null >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1]
org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : return $r4
org.apache.pdfbox.cos.COSInteger.get : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2)
org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1]
org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2
org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 != null
org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r2 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r2 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : if $r2 != null
org.apache.pdfbox.pdmodel.PDPage.getResources : if $r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r4 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r4 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r5 = staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>($r4, $r3)
org.apache.pdfbox.pdmodel.PDPage.getResources : $r5 = staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>($r4, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : if r2 == null
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P>
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r6 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r5, $r4)
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r6 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r5, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : r3 = (org.apache.pdfbox.cos.COSDictionary) $r6
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : r3 = (org.apache.pdfbox.cos.COSDictionary) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : if r3 == null
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r7 = staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>(r3, r1)
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : $r7 = staticinvoke <org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSBase getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>(r3, r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : return null
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : return null >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : return $r7
org.apache.pdfbox.pdmodel.PDPageTree.getInheritableAttribute : return $r7 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : r1 = (org.apache.pdfbox.cos.COSDictionary) $r5
org.apache.pdfbox.pdmodel.PDPage.getResources : r1 = (org.apache.pdfbox.cos.COSDictionary) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : if r1 == null
org.apache.pdfbox.pdmodel.PDPage.getResources : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : $r8 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources>
org.apache.pdfbox.pdmodel.PDPage.getResources : $r8 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getResources : return $r8
org.apache.pdfbox.pdmodel.PDPage.getResources : return $r8 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources> = r1
org.apache.pdfbox.pdmodel.PDPage.setResources : r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources pageResources> = r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : if r1 == null
org.apache.pdfbox.pdmodel.PDPage.setResources : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : $r5 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.setResources : $r5 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>
org.apache.pdfbox.pdmodel.PDPage.setResources : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r4, r1)
org.apache.pdfbox.pdmodel.PDPage.setResources : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r4, r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary resources>
org.apache.pdfbox.pdmodel.PDResources.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary resources> >>>>>>>> org.apache.pdfbox.pdmodel.PDResources.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.PDResources.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setResources : goto [?= return]
org.apache.pdfbox.pdmodel.PDPage.setResources : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OCPROPERTIES>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OCPROPERTIES> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : if r1 == null
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $f0 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $f0 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocument : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.getDocument : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocument : return $r1
org.apache.pdfbox.pdmodel.PDDocument.getDocument : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getVersion : $f0 = r0.<org.apache.pdfbox.cos.COSDocument: float version>
org.apache.pdfbox.cos.COSDocument.getVersion : $f0 = r0.<org.apache.pdfbox.cos.COSDocument: float version> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getVersion : return $f0
org.apache.pdfbox.cos.COSDocument.getVersion : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $b0 = f0 cmpl 1.4F
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $b0 = f0 cmpl 1.4F >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : if $b0 < 0
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if $b0 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : r1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.lang.String getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : r1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.lang.String getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VERSION>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VERSION> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.getName : return $r1
org.apache.pdfbox.cos.COSName.getName : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5]
org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5
org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : return $r3
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getVersion : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = -1.0F
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = -1.0F >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : if r1 == null
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : goto [?= $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)]
org.apache.pdfbox.pdmodel.PDDocument.getVersion : goto [?= $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : return $f2
org.apache.pdfbox.pdmodel.PDDocument.getVersion : return $f2 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $d0 = (double) $f0
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $d0 = (double) $f0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $b0 = $d0 cmpg 1.5
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $b0 = $d0 cmpg 1.5 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : if $b0 >= 0
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : if $b0 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : virtualinvoke $r5.<org.apache.pdfbox.pdmodel.PDDocument: void setVersion(float)>(1.5F)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setOCProperties : virtualinvoke $r5.<org.apache.pdfbox.pdmodel.PDDocument: void setVersion(float)>(1.5F) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b0 = f0 cmpl f1
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b0 = f0 cmpl f1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b0 != 0
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b1 = f0 cmpg f1
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b1 = f0 cmpg f1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b1 >= 0
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $f2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $f2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b2 = $f2 cmpl 1.4F
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $b2 = $f2 cmpl 1.4F >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b2 < 0
org.apache.pdfbox.pdmodel.PDDocument.setVersion : if $b2 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r4 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0)
org.apache.pdfbox.pdmodel.PDDocument.setVersion : $r4 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setVersion(java.lang.String)>($r4)
org.apache.pdfbox.pdmodel.PDDocument.setVersion : virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setVersion(java.lang.String)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VERSION>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VERSION> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.setVersion : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = null
org.apache.pdfbox.cos.COSDictionary.setName : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.setVersion : goto [?= return]
org.apache.pdfbox.pdmodel.PDDocument.setVersion : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup.setName : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = null
org.apache.pdfbox.cos.COSDictionary.setString : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3
org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4)
org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSArray getOCGs()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSArray getOCGs()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OCGS>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OCGS> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : return $r4
org.apache.pdfbox.cos.COSDictionary.getItem : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : r7 = (org.apache.pdfbox.cos.COSArray) $r3
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : r7 = (org.apache.pdfbox.cos.COSArray) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : if r7 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : return r7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getOCGs : return r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName D>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName D> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : r7 = (org.apache.pdfbox.cos.COSDictionary) $r3
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : r7 = (org.apache.pdfbox.cos.COSDictionary) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : if r7 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : return r7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getD : return r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDER>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDER> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r6 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r6 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0]
org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r10 = (org.apache.pdfbox.cos.COSArray) $r6
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r10 = (org.apache.pdfbox.cos.COSArray) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : if r10 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : if r10 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r7 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r7 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : specialinvoke $r7.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : specialinvoke $r7.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r10 = $r7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : r10 = $r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r8 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r8 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDER>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDER> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r9, $r7)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r9, $r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke r10.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.addGroup : virtualinvoke r10.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r3 = interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSArray.add : $r3 = interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r6 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r6 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r3 = (org.apache.pdfbox.cos.COSArray) $r6
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r3 = (org.apache.pdfbox.cos.COSArray) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if r3 == null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r8 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r7)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r8 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r18 = (org.apache.pdfbox.cos.COSArray) $r8
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r18 = (org.apache.pdfbox.cos.COSArray) $r8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if r18 == null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if r18 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r22 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r22 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState getBaseState()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BASE_STATE>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BASE_STATE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : r2 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : r2 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r5 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState valueOf(org.apache.pdfbox.cos.COSName)>(r2)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : $r5 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState valueOf(org.apache.pdfbox.cos.COSName)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : if r0 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : if r0 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : $r4 = <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState ON>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : $r4 = <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState ON> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : return $r4
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState.valueOf : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : return $r5
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getBaseState : return $r5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r9 = <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState OFF>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r9 = <org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState OFF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z0 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: boolean equals(java.lang.Object)>($r9)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z0 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z0 != 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z5 = 1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z5 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : goto [?= return $z5]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : goto [?= return $z5] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return $z5
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return $z5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary getD()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r4 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r4 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r17 = (org.apache.pdfbox.cos.COSArray) $r4
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r17 = (org.apache.pdfbox.cos.COSArray) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if r17 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if r17 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r15 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r15 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : specialinvoke $r15.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : specialinvoke $r15.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r17 = $r15
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r17 = $r15 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ON> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r16, $r15)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r16, $r15) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r6 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r6 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r18 = (org.apache.pdfbox.cos.COSArray) $r6
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r18 = (org.apache.pdfbox.cos.COSArray) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if r18 != null
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if r18 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r13 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r13 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : specialinvoke $r13.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : specialinvoke $r13.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r18 = $r13
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r18 = $r13 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OFF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r13)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r13) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : z7 = 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : z7 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if z0 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r19 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r19 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.iterator : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.iterator : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.iterator : $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSArray.iterator : $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.iterator : return $r2
org.apache.pdfbox.cos.COSArray.iterator : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z4 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z4 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z4 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if z7 != 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if z7 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r27 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r27 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup getGroup(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSArray getOCGs()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSArray getOCGs()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r4 = (org.apache.pdfbox.cos.COSBase) $r7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r4 = (org.apache.pdfbox.cos.COSBase) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r5 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r4)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r5 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : $z0 = r1 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : $z0 = r1 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : $r2 = (org.apache.pdfbox.cos.COSDictionary) r1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : $r2 = (org.apache.pdfbox.cos.COSDictionary) r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : return $r2
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.toDictionary : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r6 = virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r8)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : r6 = virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r8) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : r4 = null
org.apache.pdfbox.cos.COSDictionary.getString : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.getString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : $r3 = (org.apache.pdfbox.cos.COSString) r2
org.apache.pdfbox.cos.COSDictionary.getString : $r3 = (org.apache.pdfbox.cos.COSString) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>()
org.apache.pdfbox.cos.COSDictionary.getString : r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>() >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r1 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $i0 = lengthof $r1
org.apache.pdfbox.cos.COSString.getString : $i0 = lengthof $r1 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $i0 <= 2
org.apache.pdfbox.cos.COSString.getString : if $i0 <= 2 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r2 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $b1 = $r2[0]
org.apache.pdfbox.cos.COSString.getString : $b1 = $r2[0] >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $s2 = $b1 & 255
org.apache.pdfbox.cos.COSString.getString : $s2 = $b1 & 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $s2 != 254
org.apache.pdfbox.cos.COSString.getString : if $s2 != 254 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r3 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $b3 = $r3[0]
org.apache.pdfbox.cos.COSString.getString : $b3 = $r3[0] >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $s4 = $b3 & 255
org.apache.pdfbox.cos.COSString.getString : $s4 = $b3 & 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : if $s4 != 255
org.apache.pdfbox.cos.COSString.getString : if $s4 != 255 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r14 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes>
org.apache.pdfbox.cos.COSString.getString : $r14 = r0.<org.apache.pdfbox.cos.COSString: byte[] bytes> >>>>>>>> org.apache.pdfbox.cos.COSString.getString : $r15 = staticinvoke <org.apache.pdfbox.cos.PDFDocEncoding: java.lang.String toString(byte[])>($r14)
org.apache.pdfbox.cos.COSString.getString : $r15 = staticinvoke <org.apache.pdfbox.cos.PDFDocEncoding: java.lang.String toString(byte[])>($r14) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.toString : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0
org.apache.pdfbox.cos.PDFDocEncoding.toString : i0 = lengthof r0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = 0
org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : if i7 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.toString : if i7 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7]
org.apache.pdfbox.cos.PDFDocEncoding.toString : b1 = r0[i7] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s3 = b1 & 255 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r5 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r5 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $i2 = lengthof $r5
org.apache.pdfbox.cos.PDFDocEncoding.toString : $i2 = lengthof $r5 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : if $s3 < $i2
org.apache.pdfbox.cos.PDFDocEncoding.toString : if $s3 < $i2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI>
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: int[] CODE_TO_UNI> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $s4 = b1 & 255
org.apache.pdfbox.cos.PDFDocEncoding.toString : $s4 = b1 & 255 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $i5 = $r6[$s4]
org.apache.pdfbox.cos.PDFDocEncoding.toString : $i5 = $r6[$s4] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $c6 = (char) $i5
org.apache.pdfbox.cos.PDFDocEncoding.toString : $c6 = (char) $i5 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)
org.apache.pdfbox.cos.PDFDocEncoding.toString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = i7 + 1
org.apache.pdfbox.cos.PDFDocEncoding.toString : i7 = i7 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.toString : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.PDFDocEncoding.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.toString : return $r4
org.apache.pdfbox.cos.PDFDocEncoding.toString : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSString.getString : return $r15
org.apache.pdfbox.cos.COSString.getString : return $r15 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getString : return r4
org.apache.pdfbox.cos.COSDictionary.getString : return r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r9 = new org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : $r9 = new org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : specialinvoke $r9.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r5)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : specialinvoke $r9.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : return $r9
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.getGroup : return $r9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r8 = virtualinvoke r27.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r8 = virtualinvoke r27.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= return z7]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= return z7] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : return z7
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : return z7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r14 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r14 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z3 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r12 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r12 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r15 = (org.apache.pdfbox.cos.COSBase) $r12
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r15 = (org.apache.pdfbox.cos.COSBase) $r12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r16 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r15)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r16 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r15) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r17 = virtualinvoke r16.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r13)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r17 = virtualinvoke r16.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r13) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z4 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z4 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z4 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return 1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : goto [?= $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r23 = virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r23 = virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r9 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r9 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r24 = (org.apache.pdfbox.cos.COSBase) $r9
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r24 = (org.apache.pdfbox.cos.COSBase) $r9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r25 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r24)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r25 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r24) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r26 = virtualinvoke r25.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r10)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : r26 = virtualinvoke r25.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z2 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : $z2 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z2 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : goto [?= $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: boolean remove(org.apache.pdfbox.cos.COSBase)>(r24)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r17.<org.apache.pdfbox.cos.COSArray: boolean remove(org.apache.pdfbox.cos.COSBase)>(r24) >>>>>>>> org.apache.pdfbox.cos.COSArray.remove : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.remove : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.remove : $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.remove : $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSArray.remove : return $z0
org.apache.pdfbox.cos.COSArray.remove : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r24)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r24) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : z7 = 1
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.setGroupEnabled : z7 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r19 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r19 = virtualinvoke r18.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r10 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r10 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r20 = (org.apache.pdfbox.cos.COSBase) $r10
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r20 = (org.apache.pdfbox.cos.COSBase) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r21 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r20)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r21 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties: org.apache.pdfbox.cos.COSDictionary toDictionary(org.apache.pdfbox.cos.COSBase)>(r20) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME>
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAME> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r4 = virtualinvoke r21.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r11)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : r4 = virtualinvoke r21.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getString(org.apache.pdfbox.cos.COSName)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z2 == 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return 0
org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties.isGroupEnabled : return 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : $r1 = <org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode: org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode OVERWRITE>
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : $r1 = <org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode: org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode OVERWRITE> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : if r0 != $r1
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : if r0 != $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : $z0 = 1
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : $z0 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : goto [?= return $z0]
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : return $z0
org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode.isOverwrite : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.hasContents : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>
org.apache.pdfbox.pdmodel.PDPage.hasContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : r1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.PDPage.hasContents : r1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : $z0 = r1 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.pdmodel.PDPage.hasContents : $z0 = r1 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : if $z0 == 0
org.apache.pdfbox.pdmodel.PDPage.hasContents : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.PDPage.hasContents : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : if $z1 == 0
org.apache.pdfbox.pdmodel.PDPage.hasContents : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.hasContents : return 0
org.apache.pdfbox.pdmodel.PDPage.hasContents : return 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : $r2 = new org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r2 = new org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : specialinvoke $r2.<org.apache.pdfbox.cos.COSStream: void <init>(org.apache.pdfbox.io.ScratchFile)>($r3)
org.apache.pdfbox.cos.COSDocument.createCOSStream : specialinvoke $r2.<org.apache.pdfbox.cos.COSStream: void <init>(org.apache.pdfbox.io.ScratchFile)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.createCOSStream : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2)
org.apache.pdfbox.cos.COSDocument.createCOSStream : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDocument.createCOSStream : return $r2
org.apache.pdfbox.cos.COSDocument.createCOSStream : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setContents : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.setContents : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>
org.apache.pdfbox.pdmodel.PDPage.setContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.setContents : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1)
org.apache.pdfbox.pdmodel.PDPage.setContents : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>(r1)
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.checkClosed : if $r1 == null
org.apache.pdfbox.cos.COSStream.checkClosed : if $r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : if $z0 == 0
org.apache.pdfbox.cos.COSStream.createOutputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null
org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r5 = virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFile: org.apache.pdfbox.io.RandomAccess createBuffer()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r5 = virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFile: org.apache.pdfbox.io.RandomAccess createBuffer()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer
org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFileBuffer: void <init>(org.apache.pdfbox.io.ScratchFile)>(r0)
org.apache.pdfbox.io.ScratchFile.createBuffer : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFileBuffer: void <init>(org.apache.pdfbox.io.ScratchFile)>(r0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.checkClosed : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.checkClosed : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096
org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i2 = $i0 + 1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i2 = $i0 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i1 = lengthof $r2
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i1 = lengthof $r2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : if $i2 < $i1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : if $i2 < $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : i8 = virtualinvoke $r8.<org.apache.pdfbox.io.ScratchFile: int getNewPage()>()
org.apache.pdfbox.io.ScratchFileBuffer.addPage : i8 = virtualinvoke $r8.<org.apache.pdfbox.io.ScratchFile: int getNewPage()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : entermonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : entermonitor $r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : i3 = virtualinvoke $r4.<java.util.BitSet: int nextSetBit(int)>(0)
org.apache.pdfbox.io.ScratchFile.getNewPage : i3 = virtualinvoke $r4.<java.util.BitSet: int nextSetBit(int)>(0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : virtualinvoke $r5.<java.util.BitSet: void clear(int)>(i3)
org.apache.pdfbox.io.ScratchFile.getNewPage : virtualinvoke $r5.<java.util.BitSet: void clear(int)>(i3) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 < $i0
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 < $i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1
org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = $i1
org.apache.pdfbox.io.ScratchFile.getNewPage : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : return i3
org.apache.pdfbox.io.ScratchFile.getNewPage : return i3 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9[$i9] = i8
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9[$i9] = i8 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i10
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i10 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l12 = (long) $i11
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l12 = (long) $i11 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l14 = (long) $i13
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l14 = (long) $i13 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l15 = $l12 * $l14
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l15 = $l12 * $l14 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l15
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l15 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i17 = $i16 + 1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i17 = $i16 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> = $i17
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> = $i17 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r11 = newarray (byte)[$i18]
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r11 = newarray (byte)[$i18] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r11
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r11 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : return $r1
org.apache.pdfbox.io.ScratchFile.createBuffer : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> = $r5
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> = $r5 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r7 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r7 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r6.<org.apache.pdfbox.io.RandomAccessOutputStream: void <init>(org.apache.pdfbox.io.RandomAccessWrite)>($r7)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r6.<org.apache.pdfbox.io.RandomAccessOutputStream: void <init>(org.apache.pdfbox.io.RandomAccessWrite)>($r7) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r9 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r9 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList
org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.cos.COSStream.getFilterList : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>()
org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>
org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER> >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.cos.COSStream.getFilters : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : return $r2
org.apache.pdfbox.cos.COSStream.getFilters : return $r2 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : if $z0 == 0
org.apache.pdfbox.cos.COSStream.getFilterList : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : if $z1 == 0
org.apache.pdfbox.cos.COSStream.getFilterList : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : return $r5
org.apache.pdfbox.cos.COSStream.getFilterList : return $r5 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r10 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r10 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r8.<org.apache.pdfbox.cos.COSOutputStream: void <init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.ScratchFile)>($r9, r0, $r6, $r10)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r8.<org.apache.pdfbox.cos.COSOutputStream: void <init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.ScratchFile)>($r9, r0, $r6, $r10) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1
org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r11.<org.apache.pdfbox.cos.COSStream$1: void <init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)>(r0, $r8)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r11.<org.apache.pdfbox.cos.COSStream$1: void <init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)>(r0, $r8) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : return $r11
org.apache.pdfbox.cos.COSStream.createOutputStream : return $r11 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : return $r3
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : return $r3 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setOutput : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> = r1
org.apache.pdfbox.contentstream.PDAbstractContentStream.setOutput : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> = r1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setResources : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.pdmodel.PDResources resources> = r1
org.apache.pdfbox.contentstream.PDAbstractContentStream.setResources : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.pdmodel.PDResources resources> = r1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setMaximumFractionDigits : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.text.NumberFormat formatDecimal>
org.apache.pdfbox.contentstream.PDAbstractContentStream.setMaximumFractionDigits : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.text.NumberFormat formatDecimal> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setMaximumFractionDigits : virtualinvoke $r1.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(i0)
org.apache.pdfbox.contentstream.PDAbstractContentStream.setMaximumFractionDigits : virtualinvoke $r1.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.close : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: boolean isClosed()>()
org.apache.pdfbox.pdmodel.PDDocument.close : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: boolean isClosed()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.isClosed : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.isClosed : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.isClosed : return $z0
org.apache.pdfbox.cos.COSDocument.isClosed : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $z0 != 0
org.apache.pdfbox.pdmodel.PDDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport signingSupport>
org.apache.pdfbox.pdmodel.PDDocument.close : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport signingSupport> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $r2 == null
org.apache.pdfbox.pdmodel.PDDocument.close : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.close : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void close()>()
org.apache.pdfbox.pdmodel.PDDocument.close : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>()
org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : return $r1
org.apache.pdfbox.cos.COSDocument.getObjects : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if r1 == null
org.apache.pdfbox.cos.COSDocument.close : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r3 == null
org.apache.pdfbox.cos.COSDocument.close : if $r3 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.cos.COSDocument.close : $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r13 = (org.apache.pdfbox.cos.COSStream) $r7
org.apache.pdfbox.cos.COSDocument.close : r13 = (org.apache.pdfbox.cos.COSStream) $r7 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : virtualinvoke r13.<org.apache.pdfbox.cos.COSStream: void close()>()
org.apache.pdfbox.cos.COSDocument.close : virtualinvoke r13.<org.apache.pdfbox.cos.COSStream: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.close : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.close : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.close : if $r1 == null
org.apache.pdfbox.cos.COSStream.close : if $r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.close : interfaceinvoke $r2.<org.apache.pdfbox.io.RandomAccess: void close()>()
org.apache.pdfbox.cos.COSStream.close : interfaceinvoke $r2.<org.apache.pdfbox.io.RandomAccess: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null
org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0)
org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDocument.close : goto [?= $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r4 == null
org.apache.pdfbox.cos.COSDocument.close : if $r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>()
org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r21 = null
org.apache.pdfbox.io.ScratchFile.close : r21 = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf>
org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r5 == null
org.apache.pdfbox.io.ScratchFile.close : if $r5 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file>
org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r23 == null
org.apache.pdfbox.io.ScratchFile.close : if $r23 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>]
org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>()
org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if r21 == null
org.apache.pdfbox.io.ScratchFile.close : if r21 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1
org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource>
org.apache.pdfbox.pdmodel.PDDocument.close : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $r4 == null
