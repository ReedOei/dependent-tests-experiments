org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r7 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getContents : $r7 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>
org.apache.pdfbox.pdmodel.PDPage.getContents : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : r1 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6)
org.apache.pdfbox.pdmodel.PDPage.getContents : r1 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $z0 = r1 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.pdmodel.PDPage.getContents : $z0 = r1 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : if $z0 == 0
org.apache.pdfbox.pdmodel.PDPage.getContents : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.PDPage.getContents : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : if $z1 == 0
org.apache.pdfbox.pdmodel.PDPage.getContents : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r8 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.PDPage.getContents : $r8 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r9 = newarray (byte)[0]
org.apache.pdfbox.pdmodel.PDPage.getContents : $r9 = newarray (byte)[0] >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9)
org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : return $r8
org.apache.pdfbox.pdmodel.PDPage.getContents : return $r8 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.parse : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.Object parseNextToken()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.parse : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.lang.Object parseNextToken()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: void skipSpaces()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: void skipSpaces()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $r1 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r1.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : i0 = interfaceinvoke $r1.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.read : $r1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input>
org.apache.pdfbox.pdfparser.InputStreamSource.read : $r1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input> >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.read : i0 = virtualinvoke $r1.<java.io.PushbackInputStream: int read()>()
org.apache.pdfbox.pdfparser.InputStreamSource.read : i0 = virtualinvoke $r1.<java.io.PushbackInputStream: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.read : $i1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: int position>
org.apache.pdfbox.pdfparser.InputStreamSource.read : $i1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: int position> >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.read : $i2 = $i1 + 1
org.apache.pdfbox.pdfparser.InputStreamSource.read : $i2 = $i1 + 1 >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.read : r0.<org.apache.pdfbox.pdfparser.InputStreamSource: int position> = $i2
org.apache.pdfbox.pdfparser.InputStreamSource.read : r0.<org.apache.pdfbox.pdfparser.InputStreamSource: int position> = $i2 >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.read : return i0
org.apache.pdfbox.pdfparser.InputStreamSource.read : return i0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 0
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 9
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 9 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 12
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 12 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 10
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 10 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 13
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 == 13 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 != 32
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : if i0 != 32 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : $z0 = 0
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : $z0 = 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : return $z0
org.apache.pdfbox.pdfparser.BaseParser.isWhitespace : return $z0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if $z1 != 0
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 != 37 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.skipSpaces : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r1 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $r1 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : i0 = interfaceinvoke $r1.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : i0 = interfaceinvoke $r1.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>() >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.peek : $r1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input>
org.apache.pdfbox.pdfparser.InputStreamSource.peek : $r1 = r0.<org.apache.pdfbox.pdfparser.InputStreamSource: java.io.PushbackInputStream input> >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.peek : i0 = virtualinvoke $r1.<java.io.PushbackInputStream: int read()>()
org.apache.pdfbox.pdfparser.InputStreamSource.peek : i0 = virtualinvoke $r1.<java.io.PushbackInputStream: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.peek : if i0 == -1
org.apache.pdfbox.pdfparser.InputStreamSource.peek : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.InputStreamSource.peek : return i0
org.apache.pdfbox.pdfparser.InputStreamSource.peek : return i0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $b1 = (byte) i0
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : $b1 = (byte) i0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : if $b1 != -1
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : if $b1 != -1 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : return null
org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken : return null >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.parse : if $r2 == null
org.apache.pdfbox.pdfparser.PDFStreamParser.parse : if $r2 == null >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.getTokens : $r1 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List streamObjects>
org.apache.pdfbox.pdfparser.PDFStreamParser.getTokens : $r1 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List streamObjects> >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.getTokens : return $r1
