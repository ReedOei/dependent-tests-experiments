org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WHITE_POINT>
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WHITE_POINT> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0]
org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : r9 = (org.apache.pdfbox.cos.COSArray) $r3
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : r9 = (org.apache.pdfbox.cos.COSArray) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : if r9 != null
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : if r9 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r5 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r5 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : r9 = $r5
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : r9 = $r5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r6 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r6 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(1.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(1.0F) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46)
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0")
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0") >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r7 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r7 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r7.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(1.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r7.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(1.0F) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r7)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r8 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r8 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r8.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(1.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r8.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(1.0F) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r4 = new org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : $r4 = new org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r4.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: void <init>(org.apache.pdfbox.cos.COSArray)>(r9)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : specialinvoke $r4.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: void <init>(org.apache.pdfbox.cos.COSArray)>(r9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : return $r4
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getWhitepoint : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : $f0 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: float getX()>()
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : $f0 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: float getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values>
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0)
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0) >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.get : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r3 = (org.apache.pdfbox.cos.COSBase) $r2
org.apache.pdfbox.cos.COSArray.get : $r3 = (org.apache.pdfbox.cos.COSBase) $r2 >>>>>>>> org.apache.pdfbox.cos.COSArray.get : return $r3
org.apache.pdfbox.cos.COSArray.get : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.floatValue : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.cos.COSFloat.floatValue : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value> >>>>>>>> org.apache.pdfbox.cos.COSFloat.floatValue : $f0 = virtualinvoke $r1.<java.math.BigDecimal: float floatValue()>()
org.apache.pdfbox.cos.COSFloat.floatValue : $f0 = virtualinvoke $r1.<java.math.BigDecimal: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.floatValue : return $f0
org.apache.pdfbox.cos.COSFloat.floatValue : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : return $f0
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getX : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: float wpX> = $f0
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: float wpX> = $f0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: float getY()>()
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: float getY()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values>
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1)
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : return $f0
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getY : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: float wpY> = $f1
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: float wpY> = $f1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : $f2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: float getZ()>()
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : $f2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: float getZ()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values>
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(2)
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : return $f0
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getZ : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: float wpZ> = $f2
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.fillWhitepointCache : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: float wpZ> = $f2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: org.apache.pdfbox.cos.COSArray array> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4
org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : return $r2
org.apache.pdfbox.cos.COSArray.getObject : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getName : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAB>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getName : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAB> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getName : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getName : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.getName : return $r1
org.apache.pdfbox.cos.COSName.getName : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getName : return $r2
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getName : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getNumberOfComponents : return 3
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getNumberOfComponents : return 3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : if $r1 != null
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : if $r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r3 = new org.apache.pdfbox.pdmodel.graphics.color.PDColor
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r3 = new org.apache.pdfbox.pdmodel.graphics.color.PDColor >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r4 = newarray (float)[3]
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r4 = newarray (float)[3] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r4[0] = 0.0F
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r4[0] = 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.common.PDRange getARange()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.common.PDRange getARange()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : r5 = (org.apache.pdfbox.cos.COSArray) $r3
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : r5 = (org.apache.pdfbox.cos.COSArray) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : if r5 != null
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : if r5 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : r5 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSArray getDefaultRangeArray()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : r5 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSArray getDefaultRangeArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r2 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r2 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r3 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r3 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(-100.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(-100.0F) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r4 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r4 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(100.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(100.0F) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r4)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r5 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r5 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r5.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(-100.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r5.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(-100.0F) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r5)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r6 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : $r6 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(100.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(100.0F) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : return $r2
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getDefaultRangeArray : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : $r4 = new org.apache.pdfbox.pdmodel.common.PDRange
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : $r4 = new org.apache.pdfbox.pdmodel.common.PDRange >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : specialinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>(r5, 0)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : specialinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>(r5, 0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : return $r4
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getARange : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $f0 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $f0 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMin : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray>
org.apache.pdfbox.pdmodel.common.PDRange.getMin : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMin : $i0 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: int startingIndex>
org.apache.pdfbox.pdmodel.common.PDRange.getMin : $i0 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: int startingIndex> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMin : $i1 = $i0 * 2
org.apache.pdfbox.pdmodel.common.PDRange.getMin : $i1 = $i0 * 2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMin : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i1)
org.apache.pdfbox.pdmodel.common.PDRange.getMin : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMin : r1 = (org.apache.pdfbox.cos.COSNumber) $r3
org.apache.pdfbox.pdmodel.common.PDRange.getMin : r1 = (org.apache.pdfbox.cos.COSNumber) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMin : $f0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRange.getMin : $f0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMin : return $f0
org.apache.pdfbox.pdmodel.common.PDRange.getMin : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r4[1] = $f1
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r4[1] = $f1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.common.PDRange getBRange()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.common.PDRange getBRange()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : r5 = (org.apache.pdfbox.cos.COSArray) $r3
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : r5 = (org.apache.pdfbox.cos.COSArray) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : if r5 != null
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : if r5 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : r5 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSArray getDefaultRangeArray()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : r5 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSArray getDefaultRangeArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : $r4 = new org.apache.pdfbox.pdmodel.common.PDRange
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : $r4 = new org.apache.pdfbox.pdmodel.common.PDRange >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : specialinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>(r5, 1)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : specialinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>(r5, 1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : return $r4
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getBRange : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $f2 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $f2 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r4[2] = $f3
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r4[2] = $f3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : specialinvoke $r3.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: void <init>(float[],org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r4, r0)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : specialinvoke $r3.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: void <init>(float[],org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r4, r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor> = $r3
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor> = $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : return $r2
org.apache.pdfbox.pdmodel.graphics.color.PDLab.getInitialColor : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>()
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r3 = (float[]) $r2
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r3 = (float[]) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : return $r3
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BLACK_POINT>
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BLACK_POINT> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : r9 = (org.apache.pdfbox.cos.COSArray) $r3
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : r9 = (org.apache.pdfbox.cos.COSArray) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : if r9 != null
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : if r9 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r5 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r5 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : r9 = $r5
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : r9 = $r5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r6 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r6 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(0.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r7 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r7 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r7.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(0.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r7.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r7)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r8 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r8 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r8.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(0.0F)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r8.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r4 = new org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : $r4 = new org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r4.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: void <init>(org.apache.pdfbox.cos.COSArray)>(r9)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : specialinvoke $r4.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: void <init>(org.apache.pdfbox.cos.COSArray)>(r9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : return $r4
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.getBlackPoint : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMax : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray>
org.apache.pdfbox.pdmodel.common.PDRange.getMax : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMax : $i0 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: int startingIndex>
org.apache.pdfbox.pdmodel.common.PDRange.getMax : $i0 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: int startingIndex> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMax : $i1 = $i0 * 2
org.apache.pdfbox.pdmodel.common.PDRange.getMax : $i1 = $i0 * 2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMax : $i2 = $i1 + 1
org.apache.pdfbox.pdmodel.common.PDRange.getMax : $i2 = $i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMax : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i2)
org.apache.pdfbox.pdmodel.common.PDRange.getMax : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i2) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMax : r1 = (org.apache.pdfbox.cos.COSNumber) $r3
org.apache.pdfbox.pdmodel.common.PDRange.getMax : r1 = (org.apache.pdfbox.cos.COSNumber) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMax : $f0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRange.getMax : $f0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.getMax : return $f0
org.apache.pdfbox.pdmodel.common.PDRange.getMax : return $f0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.size : $r1 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.size : $r1 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.size : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>()
org.apache.pdfbox.cos.COSDictionary.size : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.size : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.size : if $r1 != null
org.apache.pdfbox.util.SmallMap.size : if $r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $i1 = 0
org.apache.pdfbox.util.SmallMap.size : $i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.size : goto [?= return $i1]
org.apache.pdfbox.util.SmallMap.size : goto [?= return $i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.size : return $i1
org.apache.pdfbox.util.SmallMap.size : return $i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.size : return $i0
org.apache.pdfbox.cos.COSDictionary.size : return $i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.toString : $r2 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDictionary.toString : $r2 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDictionary.toString : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.cos.COSDictionary.toString : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.toString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>(r0, $r2)
org.apache.pdfbox.cos.COSDictionary.toString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>(r0, $r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if r0 != null
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if r0 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z2 = r0 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z2 = r0 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z2 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r10 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSDictionary{")
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSDictionary{") >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r12 = (org.apache.pdfbox.cos.COSDictionary) r0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r12 = (org.apache.pdfbox.cos.COSDictionary) r0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r13 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r13 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.entrySet : $r1 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.entrySet : $r1 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.entrySet : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.cos.COSDictionary.entrySet : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.entrySet : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : if $z0 == 0
org.apache.pdfbox.util.SmallMap.entrySet : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.pdfbox.util.SmallMap.entrySet : $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : return $r6
org.apache.pdfbox.util.SmallMap.entrySet : return $r6 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.entrySet : return $r2
org.apache.pdfbox.cos.COSDictionary.entrySet : return $r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : r31 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : r31 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z4 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z4 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z4 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z4 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z5 = r0 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z5 = r0 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z5 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z5 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : return $r15
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : return $r15 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.toString : return $r3
org.apache.pdfbox.cos.COSDictionary.toString : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMin : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray>
org.apache.pdfbox.pdmodel.common.PDRange.setMin : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMin : $i0 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: int startingIndex>
org.apache.pdfbox.pdmodel.common.PDRange.setMin : $i0 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: int startingIndex> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMin : $i1 = $i0 * 2
org.apache.pdfbox.pdmodel.common.PDRange.setMin : $i1 = $i0 * 2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMin : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.common.PDRange.setMin : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMin : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.pdmodel.common.PDRange.setMin : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMin : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>($i1, $r1)
org.apache.pdfbox.pdmodel.common.PDRange.setMin : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>($i1, $r1) >>>>>>>> org.apache.pdfbox.cos.COSArray.set : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.set : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.set : interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1)
org.apache.pdfbox.cos.COSArray.set : interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMax : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray>
org.apache.pdfbox.pdmodel.common.PDRange.setMax : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: org.apache.pdfbox.cos.COSArray rangeArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMax : $i0 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: int startingIndex>
org.apache.pdfbox.pdmodel.common.PDRange.setMax : $i0 = r0.<org.apache.pdfbox.pdmodel.common.PDRange: int startingIndex> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMax : $i1 = $i0 * 2
org.apache.pdfbox.pdmodel.common.PDRange.setMax : $i1 = $i0 * 2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMax : $i2 = $i1 + 1
org.apache.pdfbox.pdmodel.common.PDRange.setMax : $i2 = $i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMax : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.common.PDRange.setMax : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMax : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.pdmodel.common.PDRange.setMax : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRange.setMax : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>($i2, $r1)
org.apache.pdfbox.pdmodel.common.PDRange.setMax : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>($i2, $r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setARange : specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)>(r1, 0)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setARange : specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)>(r1, 0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : r11 = (org.apache.pdfbox.cos.COSArray) $r4
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : r11 = (org.apache.pdfbox.cos.COSArray) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : if r11 != null
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : if r11 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : r11 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSArray getDefaultRangeArray()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : r11 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSArray getDefaultRangeArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : if r1 != null
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r5 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r5 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $f0 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $f0 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : specialinvoke $r5.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f0)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : specialinvoke $r5.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : virtualinvoke r11.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(i0, $r5)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : virtualinvoke r11.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(i0, $r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $i1 = i0 + 1
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r6 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r6 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>()
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f1)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : virtualinvoke r11.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>($i1, $r6)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : virtualinvoke r11.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>($i1, $r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE>
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r7, r11)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r7, r11) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor> = null
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setComponentRangeArray : r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor> = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDLab.setBRange : specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)>(r1, 2)
org.apache.pdfbox.pdmodel.graphics.color.PDLab.setBRange : specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDLab: void setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)>(r1, 2) >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1]
org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2
org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setX : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values>
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setX : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setX : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setX : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setX : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setX : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setX : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(0, $r1)
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setX : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(0, $r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setY : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values>
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setY : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setY : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setY : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setY : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setY : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $r2 == null
org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $r2 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void close()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null
org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : specialinvoke r0.<java.lang.Object: void finalize()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : specialinvoke r0.<java.lang.Object: void finalize()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : goto [?= return]
org.apache.pdfbox.io.ScratchFileBuffer.finalize : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setY : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(1, $r1)
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setY : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(1, $r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setZ : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values>
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setZ : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setZ : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setZ : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setZ : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setZ : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setZ : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(2, $r1)
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.setZ : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(2, $r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values>
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSArray values> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : if r2 == null
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WHITE_POINT>
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WHITE_POINT> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r2)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r2) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: void fillWhitepointCache(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus)>(r1)
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setWhitePoint : specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: void fillWhitepointCache(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : r4 = null
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : r4 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : if r1 == null
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BLACK_POINT>
org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BLACK_POINT> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace.setBlackPoint : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r2, r4)
