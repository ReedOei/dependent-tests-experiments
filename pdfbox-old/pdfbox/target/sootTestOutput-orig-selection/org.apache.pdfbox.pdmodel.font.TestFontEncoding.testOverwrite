org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100
org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1]
org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $r2 != null
org.apache.pdfbox.cos.COSInteger.get : if $r2 != null >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1]
org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : return $r4
org.apache.pdfbox.cos.COSInteger.get : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.containsKey : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.containsKey : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.containsKey : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.containsKey : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : $i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.containsKey : $i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : if $i0 < 0
org.apache.pdfbox.util.SmallMap.containsKey : if $i0 < 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : $z0 = 1
org.apache.pdfbox.util.SmallMap.containsKey : $z0 = 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : goto [?= return $z0]
org.apache.pdfbox.util.SmallMap.containsKey : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : return $z0
org.apache.pdfbox.util.SmallMap.containsKey : return $z0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.containsKey : return $z0
org.apache.pdfbox.cos.COSDictionary.containsKey : return $z0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getCOSName : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getCOSName : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getCOSName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : $r3 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getCOSName : $r3 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : return $r3
org.apache.pdfbox.cos.COSDictionary.getCOSName : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName STANDARD_ENCODING>
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName STANDARD_ENCODING> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r0)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : if $z0 == 0
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIN_ANSI_ENCODING>
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIN_ANSI_ENCODING> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $z1 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r0)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $z1 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : if $z1 == 0
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $r7 = <org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding: org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding INSTANCE>
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : $r7 = <org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding: org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : return $r7
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getInstance : return $r7 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r6 = r0.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: org.apache.pdfbox.cos.COSDictionary encoding>
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r6 = r0.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: org.apache.pdfbox.cos.COSDictionary encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DIFFERENCES>
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DIFFERENCES> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r1 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r1 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $z0 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $z0 = r1 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if $z0 != 0
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r2 = (org.apache.pdfbox.cos.COSArray) r1
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r2 = (org.apache.pdfbox.cos.COSArray) r1 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i1 = -1
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i1 = -1 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i2 = 0
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $i0 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $i0 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : return $i0
org.apache.pdfbox.cos.COSArray.size : return $i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if i2 >= $i0
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if i2 >= $i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i2)
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i2) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4
org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : return $r2
org.apache.pdfbox.cos.COSArray.getObject : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $z1 = r3 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $z1 = r3 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if $z1 == 0
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r12 = (org.apache.pdfbox.cos.COSNumber) r3
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r12 = (org.apache.pdfbox.cos.COSNumber) r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i1 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i1 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value> >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0
org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : return $i1
org.apache.pdfbox.cos.COSInteger.intValue : return $i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : goto [?= i2 = i2 + 1]
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : goto [?= i2 = i2 + 1] >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i2 = i2 + 1
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : goto [?= $i0 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>()]
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : goto [?= $i0 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $z2 = r3 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $z2 = r3 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if $z2 == 0
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r4 = (org.apache.pdfbox.cos.COSName) r3
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r4 = (org.apache.pdfbox.cos.COSName) r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r7 = virtualinvoke r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r7 = virtualinvoke r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.getName : return $r1
org.apache.pdfbox.cos.COSName.getName : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: void overwrite(int,java.lang.String)>(i1, $r7)
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: void overwrite(int,java.lang.String)>(i1, $r7) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r4 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map codeToName>
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r4 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map codeToName> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : r2 = (java.lang.String) $r6
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : r2 = (java.lang.String) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : if r2 == null
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r9 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map inverted>
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r9 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map inverted> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : r3 = (java.lang.Integer) $r10
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : r3 = (java.lang.Integer) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : if r3 == null
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : if $i1 != i0
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : if $i1 != i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r11 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map inverted>
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r11 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map inverted> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r13 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map inverted>
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r13 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map inverted> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r15 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map codeToName>
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r15 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map codeToName> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r1)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.overwrite : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r8 = r0.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: java.util.Map differences>
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r8 = r0.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: java.util.Map differences> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r10 = virtualinvoke r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r10 = virtualinvoke r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10)
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i1 = i1 + 1
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getNameToCodeMap : $r1 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map inverted>
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getNameToCodeMap : $r1 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map inverted> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getNameToCodeMap : $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getNameToCodeMap : $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getNameToCodeMap : return $r2
