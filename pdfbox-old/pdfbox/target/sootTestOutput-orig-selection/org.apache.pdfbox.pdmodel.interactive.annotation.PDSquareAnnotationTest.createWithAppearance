org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0")
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0") >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1 >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftX : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftX : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftX : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftX : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftX : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftX : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("0")
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("0") >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z1 == 0
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftX : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(0, $r1)
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftX : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(0, $r1) >>>>>>>> org.apache.pdfbox.cos.COSArray.set : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.set : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.set : interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1)
org.apache.pdfbox.cos.COSArray.set : interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftY : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftY : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftY : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftY : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftY : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftY : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftY : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(1, $r1)
org.apache.pdfbox.pdmodel.common.PDRectangle.setLowerLeftY : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(1, $r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightX : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightX : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightX : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightX : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightX : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightX : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightX : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(2, $r1)
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightX : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(2, $r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightY : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightY : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightY : $r1 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightY : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightY : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightY : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightY : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(3, $r1)
org.apache.pdfbox.pdmodel.common.PDRectangle.setUpperRightY : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(3, $r1) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1
org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.addPage : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPageTree getPages()>()
org.apache.pdfbox.pdmodel.PDDocument.addPage : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPageTree getPages()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getPages : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.getPages : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $r3 != null
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $r3 != null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>()
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getTrailer : $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer>
org.apache.pdfbox.cos.COSDocument.getTrailer : $r1 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getTrailer : return $r1
org.apache.pdfbox.cos.COSDocument.getTrailer : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $z0 = r2 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $z0 = r2 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $z0 == 0
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r7 = new org.apache.pdfbox.pdmodel.PDDocumentCatalog
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r7 = new org.apache.pdfbox.pdmodel.PDDocumentCatalog >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r8 = (org.apache.pdfbox.cos.COSDictionary) r2
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r8 = (org.apache.pdfbox.cos.COSDictionary) r2 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : specialinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)>(r0, $r8)
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : specialinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)>(r0, $r8) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> = $r7
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> = $r7 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : goto [?= $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>]
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : goto [?= $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : return $r9
org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog : return $r9 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getPages : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageTree getPages()>()
org.apache.pdfbox.pdmodel.PDDocument.getPages : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageTree getPages()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r1 = new org.apache.pdfbox.pdmodel.PDPageTree
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r1 = new org.apache.pdfbox.pdmodel.PDPageTree >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r6 = (org.apache.pdfbox.cos.COSDictionary) $r4
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r6 = (org.apache.pdfbox.cos.COSDictionary) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document>
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageTree: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)>($r6, $r5)
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageTree: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)>($r6, $r5) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getCOSName : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getCOSName : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getCOSName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : $r3 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getCOSName : $r3 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getCOSName : return $r3
org.apache.pdfbox.cos.COSDictionary.getCOSName : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : return $r1
org.apache.pdfbox.pdmodel.PDDocumentCatalog.getPages : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getPages : return $r2
org.apache.pdfbox.pdmodel.PDDocument.getPages : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.addPage : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageTree: void add(org.apache.pdfbox.pdmodel.PDPage)>(r1)
org.apache.pdfbox.pdmodel.PDDocument.addPage : virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageTree: void add(org.apache.pdfbox.pdmodel.PDPage)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.PDPage.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r3 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, $r3)
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.PDPageTree.add : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : r2 = (org.apache.pdfbox.cos.COSArray) $r7
org.apache.pdfbox.pdmodel.PDPageTree.add : r2 = (org.apache.pdfbox.cos.COSArray) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r13)
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r13) >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PARENT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r10 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r9, $r8)
org.apache.pdfbox.pdmodel.PDPageTree.add : $r10 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r9, $r8) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = (org.apache.pdfbox.cos.COSDictionary) $r10
org.apache.pdfbox.pdmodel.PDPageTree.add : r13 = (org.apache.pdfbox.cos.COSDictionary) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 == null
org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>
org.apache.pdfbox.pdmodel.PDPageTree.add : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT> >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $i0 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r11)
org.apache.pdfbox.pdmodel.PDPageTree.add : $i0 = virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r11) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>(r1, -1)
org.apache.pdfbox.cos.COSDictionary.getInt : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>(r1, -1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, null, i0)
org.apache.pdfbox.cos.COSDictionary.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, null, i0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $r4 = (org.apache.pdfbox.cos.COSNumber) r3
org.apache.pdfbox.cos.COSDictionary.getInt : $r4 = (org.apache.pdfbox.cos.COSNumber) r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : i1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value> >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0
org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : return $i1
org.apache.pdfbox.cos.COSInteger.intValue : return $i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return i1
org.apache.pdfbox.cos.COSDictionary.getInt : return i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return $i1
org.apache.pdfbox.cos.COSDictionary.getInt : return $i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return $i0
org.apache.pdfbox.cos.COSDictionary.getInt : return $i0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : $i1 = $i0 + 1
org.apache.pdfbox.pdmodel.PDPageTree.add : $i1 = $i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r12, $i1)
org.apache.pdfbox.pdmodel.PDPageTree.add : virtualinvoke r13.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r12, $i1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0
org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1)
org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1) >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100
org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1]
org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $r2 != null
org.apache.pdfbox.cos.COSInteger.get : if $r2 != null >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1]
org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : return $r4
org.apache.pdfbox.cos.COSInteger.get : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2)
org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1]
org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2
org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 != null
org.apache.pdfbox.pdmodel.PDPageTree.add : if r13 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r6 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ANNOTS>
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ANNOTS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : r2 = (org.apache.pdfbox.cos.COSArray) $r7
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : r2 = (org.apache.pdfbox.cos.COSArray) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : if r2 != null
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : if r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r11 = new org.apache.pdfbox.pdmodel.common.COSArrayList
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r11 = new org.apache.pdfbox.pdmodel.common.COSArrayList >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r13 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page>
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r13 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ANNOTS>
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ANNOTS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : specialinvoke $r11.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>($r13, $r12)
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : specialinvoke $r11.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)>($r13, $r12) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getAnnotations : return $r11
org.apache.pdfbox.pdmodel.PDPage.getAnnotations : return $r11 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setSubtype : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setSubtype : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setSubtype : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setSubtype : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setSubtype : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setSubtype : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = null
org.apache.pdfbox.cos.COSDictionary.setName : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.setWidth : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.setWidth : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.setWidth : virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setFloat(java.lang.String,float)>("W", f0)
org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.setWidth : virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setFloat(java.lang.String,float)>("W", f0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.setFloat : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setFloat(org.apache.pdfbox.cos.COSName,float)>($r2, f0)
org.apache.pdfbox.cos.COSDictionary.setFloat : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setFloat(org.apache.pdfbox.cos.COSName,float)>($r2, f0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : $r3 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSDictionary.setFloat : $r3 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.COSDictionary.setFloat : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r3)
org.apache.pdfbox.cos.COSDictionary.setFloat : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setContents : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setContents : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setContents : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setContents : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setContents : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = null
org.apache.pdfbox.cos.COSDictionary.setString : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3
org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4)
org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setColor : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setColor : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setColor : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setColor : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setColor : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSArray toCOSArray()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setColor : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSArray toCOSArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r2 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r2 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void setFloatArray(float[])>($r3)
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void setFloatArray(float[])>($r3) >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void clear()>()
org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void clear()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.clear : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.clear : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.apache.pdfbox.cos.COSArray.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : i0 = lengthof r1
org.apache.pdfbox.cos.COSArray.setFloatArray : i0 = lengthof r1 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = 0
org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : if i1 >= i0
org.apache.pdfbox.cos.COSArray.setFloatArray : if i1 >= i0 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : f0 = r1[i1]
org.apache.pdfbox.cos.COSArray.setFloatArray : f0 = r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : $r3 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSArray.setFloatArray : $r3 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.COSArray.setFloatArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3)
org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = i1 + 1
org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : goto [?= (branch)]
org.apache.pdfbox.cos.COSArray.setFloatArray : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : if $r4 == null
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : if $r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : return $r2
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setColor : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setColor : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setBorderStyle : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setBorderStyle : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setBorderStyle : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BS>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setBorderStyle : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BS> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setBorderStyle : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r3, r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setBorderStyle : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r3, r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RECT>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RECT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray getCOSArray()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray getCOSArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSArray : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSArray : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSArray : return $r1
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSArray : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $r1 = "Square"
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $r1 = "Square" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: java.lang.String getSubtype()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: java.lang.String getSubtype()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getSubtype : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getSubtype : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getSubtype : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getSubtype : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getSubtype : $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getSubtype : $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.getName : return $r1
org.apache.pdfbox.cos.COSName.getName : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5]
org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5
org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getSubtype : return $r3
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getSubtype : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $r8 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAppearanceHandler squareAppearanceHandler>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $r8 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAppearanceHandler squareAppearanceHandler> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : if $r8 != null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : if $r8 != null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $r10 = new org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : $r10 = new org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : specialinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)>(r0)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : specialinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void generateAppearanceStreams()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void generateAppearanceStreams()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateAppearanceStreams : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void generateNormalAppearance()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateAppearanceStreams : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void generateNormalAppearance()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: float getLineWidth()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: float getLineWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getAnnotation()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getAnnotation()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAnnotation : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'>
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAnnotation : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAnnotation : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAnnotation : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : r1 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r4
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : r1 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BS>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BS> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : r1 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : r1 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $z0 = r1 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $z0 = r1 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $r4 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $r4 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $r5 = (org.apache.pdfbox.cos.COSDictionary) r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : $r5 = (org.apache.pdfbox.cos.COSDictionary) r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : specialinvoke $r4.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r5)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : specialinvoke $r4.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : return $r4
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getBorderStyle : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : if r2 == null
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : $f1 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: float getWidth()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : $f1 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: float getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getWidth : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getWidth : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getWidth : $f0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: float getFloat(java.lang.String,float)>("W", 1.0F)
org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getWidth : $f0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: float getFloat(java.lang.String,float)>("W", 1.0F) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getFloat : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : $f1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: float getFloat(org.apache.pdfbox.cos.COSName,float)>($r2, f0)
org.apache.pdfbox.cos.COSDictionary.getFloat : $f1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: float getFloat(org.apache.pdfbox.cos.COSName,float)>($r2, f0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : f1 = f0
org.apache.pdfbox.cos.COSDictionary.getFloat : f1 = f0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getFloat : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : $z0 = r2 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getFloat : $z0 = r2 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getFloat : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : $r3 = (org.apache.pdfbox.cos.COSNumber) r2
org.apache.pdfbox.cos.COSDictionary.getFloat : $r3 = (org.apache.pdfbox.cos.COSNumber) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : f1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.cos.COSDictionary.getFloat : f1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.floatValue : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.cos.COSFloat.floatValue : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value> >>>>>>>> org.apache.pdfbox.cos.COSFloat.floatValue : $f0 = virtualinvoke $r1.<java.math.BigDecimal: float floatValue()>()
org.apache.pdfbox.cos.COSFloat.floatValue : $f0 = virtualinvoke $r1.<java.math.BigDecimal: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.floatValue : return $f0
org.apache.pdfbox.cos.COSFloat.floatValue : return $f0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : return f1
org.apache.pdfbox.cos.COSDictionary.getFloat : return f1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getFloat : return $f1
org.apache.pdfbox.cos.COSDictionary.getFloat : return $f1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getWidth : return $f0
org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary.getWidth : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : return $f1
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.getLineWidth : return $f1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : r13 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream getNormalAppearanceAsContentStream()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : r13 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream getNormalAppearanceAsContentStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : $r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : $r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'>
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : r4 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : r4 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary getAppearance()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AP>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AP> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : if r1 == null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : return null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getAppearance : return null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : if r4 != null
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : if r4 != null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : $r2 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : $r2 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : specialinvoke $r2.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : specialinvoke $r2.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : r4 = $r2
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : r4 = $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'>
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : virtualinvoke $r3.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: void setAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)>($r2)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : virtualinvoke $r3.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: void setAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : r4 = null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : r4 = null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : if r1 == null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AP>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AP> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r2, r4)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setAppearance : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r2, r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : return r4
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearance : return r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry getNormalAppearance()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName N>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName N> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : r1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : r1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : if r1 != null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : $r4 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : $r4 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : specialinvoke $r4.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: void <init>(org.apache.pdfbox.cos.COSBase)>(r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : specialinvoke $r4.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: void <init>(org.apache.pdfbox.cos.COSBase)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : return $r4
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : $z0 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: boolean isSubDictionary()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : $z0 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: boolean isSubDictionary()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.cos.COSBase entry>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.cos.COSBase entry> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : $z0 = $r1 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : $z0 = $r1 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : if $z0 != 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : $z1 = 1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : $z1 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : goto [?= return $z1]
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : goto [?= return $z1] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : return $z1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isSubDictionary : return $z1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : $r2 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : $r2 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : $r3 = new org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : $r3 = new org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : specialinvoke $r3.<org.apache.pdfbox.cos.COSStream: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : specialinvoke $r3.<org.apache.pdfbox.cos.COSStream: void <init>()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r1 = new org.apache.pdfbox.io.ScratchFile
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r1 = new org.apache.pdfbox.io.ScratchFile >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2)
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : specialinvoke $r2.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: void <init>(org.apache.pdfbox.cos.COSBase)>($r3)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : specialinvoke $r2.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: void <init>(org.apache.pdfbox.cos.COSBase)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : r4 = $r2
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : r4 = $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)>($r2)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName N>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName N> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.cos.COSBase entry>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.cos.COSBase entry> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : return r4
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearance : return r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry appearanceEntry> = $r1
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry appearanceEntry> = $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry appearanceEntry>
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry appearanceEntry> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)>($r2)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getAppearanceStream()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream getAppearanceStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: boolean isStream()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: boolean isStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isStream : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.cos.COSBase entry>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isStream : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.cos.COSBase entry> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isStream : $z0 = $r1 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isStream : $z0 = $r1 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isStream : return $z0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.isStream : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : if $z0 != 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : $r1 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : $r1 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.cos.COSBase entry>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceEntry: org.apache.pdfbox.cos.COSBase entry> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : $r3 = (org.apache.pdfbox.cos.COSStream) $r2
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : $r3 = (org.apache.pdfbox.cos.COSStream) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : specialinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void <init>(org.apache.pdfbox.cos.COSStream)>($r3)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : specialinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void <init>(org.apache.pdfbox.cos.COSStream)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry.getAppearanceStream : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: void setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>(r2)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : specialinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: void setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getRectangle : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'>
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getRectangle : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getRectangle : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getRectangle : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RECT>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RECT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : r1 = (org.apache.pdfbox.cos.COSArray) $r4
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : r1 = (org.apache.pdfbox.cos.COSArray) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : r10 = null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : r10 = null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if r1 == null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : return $i0
org.apache.pdfbox.cos.COSArray.size : return $i0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $i0 != 4
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $i0 != 4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(0)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4
org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : return $r2
org.apache.pdfbox.cos.COSArray.getObject : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $z0 = $r5 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $z0 = $r5 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r6 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r6 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $z1 = $r6 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $z1 = $r6 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $z1 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r7 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(2)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r7 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $z2 = $r7 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $z2 = $r7 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $z2 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r8 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(3)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r8 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $z3 = $r8 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $z3 = $r8 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $z3 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r9 = new org.apache.pdfbox.pdmodel.common.PDRectangle
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : $r9 = new org.apache.pdfbox.pdmodel.common.PDRectangle >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : specialinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(org.apache.pdfbox.cos.COSArray)>(r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : specialinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(org.apache.pdfbox.cos.COSArray)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.cos.COSArray.toFloatArray : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : r1 = newarray (float)[$i0]
org.apache.pdfbox.cos.COSArray.toFloatArray : r1 = newarray (float)[$i0] >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : i2 = 0
org.apache.pdfbox.cos.COSArray.toFloatArray : i2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.cos.COSArray.toFloatArray : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : if i2 >= $i1
org.apache.pdfbox.cos.COSArray.toFloatArray : if i2 >= $i1 >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i2)
org.apache.pdfbox.cos.COSArray.toFloatArray : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i2) >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.cos.COSArray.toFloatArray : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.cos.COSArray.toFloatArray : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : r1[i2] = $f0
org.apache.pdfbox.cos.COSArray.toFloatArray : r1[i2] = $f0 >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : i2 = i2 + 1
org.apache.pdfbox.cos.COSArray.toFloatArray : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : goto [?= $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()]
org.apache.pdfbox.cos.COSArray.toFloatArray : goto [?= $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()] >>>>>>>> org.apache.pdfbox.cos.COSArray.toFloatArray : return r1
org.apache.pdfbox.cos.COSArray.toFloatArray : return r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : r10 = $r9
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : r10 = $r9 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : goto [?= return r10]
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : goto [?= return r10] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : return r10
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getRectangle : return r10 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getRectangle : return $r2
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getRectangle : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)>(r2)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : if r1 != null
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.pdmodel.common.PDStream stream>
org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.pdmodel.common.PDStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : return $r2
org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BBOX>
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BBOX> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray getCOSArray()>()
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray getCOSArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4)
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setBBox : virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $f0 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $f0 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0)
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0) >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.get : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r3 = (org.apache.pdfbox.cos.COSBase) $r2
org.apache.pdfbox.cos.COSArray.get : $r3 = (org.apache.pdfbox.cos.COSBase) $r2 >>>>>>>> org.apache.pdfbox.cos.COSArray.get : return $r3
org.apache.pdfbox.cos.COSArray.get : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : return $f0
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $f1 = neg $f0
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $f1 = neg $f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $d0 = (double) $f1
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $d0 = (double) $f1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $f2 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $f2 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1)
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : return $f0
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $f3 = neg $f2
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $f3 = neg $f2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $d1 = (double) $f3
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : $d1 = (double) $f3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : r3 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, $d1)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : r3 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, $d1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void setMatrix(java.awt.geom.AffineTransform)>(r3)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setTransformationMatrix : virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void setMatrix(java.awt.geom.AffineTransform)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $r5 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $r5 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : r3 = newarray (double)[6]
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : r3 = newarray (double)[6] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : virtualinvoke r1.<java.awt.geom.AffineTransform: void getMatrix(double[])>(r3)
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : virtualinvoke r1.<java.awt.geom.AffineTransform: void getMatrix(double[])>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : i0 = lengthof r3
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : i0 = lengthof r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : i1 = 0
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : if i1 >= i0
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : if i1 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : d0 = r3[i1]
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : d0 = r3[i1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $r8 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $r8 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $f0 = (float) d0
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $f0 = (float) d0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : specialinvoke $r8.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f0)
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : specialinvoke $r8.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8)
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : i1 = i1 + 1
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MATRIX>
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MATRIX> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : virtualinvoke $r6.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r7, $r5)
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.setMatrix : virtualinvoke $r6.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r7, $r5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : $r3 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : $r3 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : specialinvoke $r3.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>(r2)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : specialinvoke $r3.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void <init>(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getStream : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.pdmodel.common.PDStream stream>
org.apache.pdfbox.pdmodel.graphics.PDXObject.getStream : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.pdmodel.common.PDStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getStream : return $r1
org.apache.pdfbox.pdmodel.graphics.PDXObject.getStream : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream()>()
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>(null)
org.apache.pdfbox.cos.COSStream.createOutputStream : $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>(null) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.checkClosed : if $r1 == null
org.apache.pdfbox.cos.COSStream.checkClosed : if $r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : if $z0 == 0
org.apache.pdfbox.cos.COSStream.createOutputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null
org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r5 = virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFile: org.apache.pdfbox.io.RandomAccess createBuffer()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r5 = virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFile: org.apache.pdfbox.io.RandomAccess createBuffer()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer
org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFileBuffer: void <init>(org.apache.pdfbox.io.ScratchFile)>(r0)
org.apache.pdfbox.io.ScratchFile.createBuffer : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFileBuffer: void <init>(org.apache.pdfbox.io.ScratchFile)>(r0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.checkClosed : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.checkClosed : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096
org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i2 = $i0 + 1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i2 = $i0 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i1 = lengthof $r2
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i1 = lengthof $r2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : if $i2 < $i1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : if $i2 < $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : i8 = virtualinvoke $r8.<org.apache.pdfbox.io.ScratchFile: int getNewPage()>()
org.apache.pdfbox.io.ScratchFileBuffer.addPage : i8 = virtualinvoke $r8.<org.apache.pdfbox.io.ScratchFile: int getNewPage()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : entermonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : entermonitor $r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : i3 = virtualinvoke $r4.<java.util.BitSet: int nextSetBit(int)>(0)
org.apache.pdfbox.io.ScratchFile.getNewPage : i3 = virtualinvoke $r4.<java.util.BitSet: int nextSetBit(int)>(0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : virtualinvoke $r5.<java.util.BitSet: void clear(int)>(i3)
org.apache.pdfbox.io.ScratchFile.getNewPage : virtualinvoke $r5.<java.util.BitSet: void clear(int)>(i3) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 < $i0
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 < $i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1
org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = $i1
org.apache.pdfbox.io.ScratchFile.getNewPage : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : return i3
org.apache.pdfbox.io.ScratchFile.getNewPage : return i3 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9[$i9] = i8
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9[$i9] = i8 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i10
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i10 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l12 = (long) $i11
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l12 = (long) $i11 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l14 = (long) $i13
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l14 = (long) $i13 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l15 = $l12 * $l14
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l15 = $l12 * $l14 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l15
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l15 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i17 = $i16 + 1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i17 = $i16 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> = $i17
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> = $i17 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r11 = newarray (byte)[$i18]
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r11 = newarray (byte)[$i18] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r11
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r11 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : return $r1
org.apache.pdfbox.io.ScratchFile.createBuffer : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> = $r5
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> = $r5 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r7 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r7 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r6.<org.apache.pdfbox.io.RandomAccessOutputStream: void <init>(org.apache.pdfbox.io.RandomAccessWrite)>($r7)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r6.<org.apache.pdfbox.io.RandomAccessOutputStream: void <init>(org.apache.pdfbox.io.RandomAccessWrite)>($r7) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r9 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r9 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList
org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.cos.COSStream.getFilterList : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>()
org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>
org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER> >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.cos.COSStream.getFilters : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : return $r2
org.apache.pdfbox.cos.COSStream.getFilters : return $r2 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : if $z0 == 0
org.apache.pdfbox.cos.COSStream.getFilterList : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : if $z1 == 0
org.apache.pdfbox.cos.COSStream.getFilterList : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : return $r5
org.apache.pdfbox.cos.COSStream.getFilterList : return $r5 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r10 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r10 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r8.<org.apache.pdfbox.cos.COSOutputStream: void <init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.ScratchFile)>($r9, r0, $r6, $r10)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r8.<org.apache.pdfbox.cos.COSOutputStream: void <init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.ScratchFile)>($r9, r0, $r6, $r10) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1
org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r11.<org.apache.pdfbox.cos.COSStream$1: void <init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)>(r0, $r8)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r11.<org.apache.pdfbox.cos.COSStream$1: void <init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)>(r0, $r8) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : return $r11
org.apache.pdfbox.cos.COSStream.createOutputStream : return $r11 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : return $r1
org.apache.pdfbox.cos.COSStream.createOutputStream : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : return $r2
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r4 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r4 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : if r1 == null
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : return null
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : return null >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setResources : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.pdmodel.PDResources resources> = r1
org.apache.pdfbox.contentstream.PDAbstractContentStream.setResources : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.pdmodel.PDResources resources> = r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : return $r3
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getAppearanceEntryAsContentStream : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream contentStream> = $r3
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream contentStream> = $r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : $r4 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream contentStream>
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : $r4 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream contentStream> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : return $r4
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getNormalAppearanceAsContentStream : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getColor : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'>
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getColor : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getColor : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getColor : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : r2 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : r2 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getItem : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getItem : $r4 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getItem : return $r4
org.apache.pdfbox.cos.COSDictionary.getItem : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $z0 = r2 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $z0 = r2 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : r5 = null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : r5 = null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r4 = (org.apache.pdfbox.cos.COSArray) r2
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r4 = (org.apache.pdfbox.cos.COSArray) r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $i0 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $i0 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : tableswitch($i0) {     case 1:
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : tableswitch($i0) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : goto [?= $r6 = new org.apache.pdfbox.pdmodel.graphics.color.PDColor]
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : goto [?= $r6 = new org.apache.pdfbox.pdmodel.graphics.color.PDColor] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r6 = new org.apache.pdfbox.pdmodel.graphics.color.PDColor
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r6 = new org.apache.pdfbox.pdmodel.graphics.color.PDColor >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r7 = (org.apache.pdfbox.cos.COSArray) r2
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : $r7 = (org.apache.pdfbox.cos.COSArray) r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : specialinvoke $r6.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r7, r5)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : specialinvoke $r6.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r7, r5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : return $r6
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : return $r6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : return $r2
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getColor : return $r2
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getColor : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: boolean setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)>($r2)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: boolean setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : if r1 == null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] getComponents()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] getComponents()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>()
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r3 = (float[]) $r2
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r3 = (float[]) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : return $r3
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : if r2 == null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : $i0 = lengthof r2
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : $i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : if $i0 <= 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : if $i0 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void setStrokingColor(float[])>(r2)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void setStrokingColor(float[])>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : i0 = lengthof r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : i0 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : i1 = 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : if i1 >= i0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : if i1 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : f0 = r1[i1]
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : f0 = r1[i1] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void writeOperand(float)>(f0)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void writeOperand(float)>(f0) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.text.NumberFormat formatDecimal>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.text.NumberFormat formatDecimal> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $i1 = virtualinvoke $r1.<java.text.NumberFormat: int getMaximumFractionDigits()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $i1 = virtualinvoke $r1.<java.text.NumberFormat: int getMaximumFractionDigits()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r2 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: byte[] formatBuffer>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r2 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: byte[] formatBuffer> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : i0 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatFloatFast(float,int,byte[])>(f0, $i1, $r2)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : i0 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatFloatFast(float,int,byte[])>(f0, $i1, $r2) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $z0 != 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $z1 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f0)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $z1 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f0) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $z1 != 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $z1 != 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b1 = f0 cmpl 9.223372E18F
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b1 = f0 cmpl 9.223372E18F >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b1 > 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b1 > 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b2 = f0 cmpg -9.223372E18F
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b2 = f0 cmpg -9.223372E18F >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b2 <= 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b2 <= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if i0 <= 5
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if i0 <= 5 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i12 = 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i12 = 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l13 = (long) f0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l13 = (long) f0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b3 = f0 cmpg 0.0F
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b3 = f0 cmpg 0.0F >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b3 >= 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b3 >= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d0 = (double) f0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d0 = (double) f0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d2 = (double) l13
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d2 = (double) l13 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d4 = $d1 - $d2
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d4 = $d1 - $d2 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $r1 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $r1 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $l4 = $r1[i0]
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $l4 = $r1[i0] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d3 = (double) $l4
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d3 = (double) $l4 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d5 = $d4 * $d3
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d5 = $d4 * $d3 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d6 = $d5 + 0.5
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d6 = $d5 + 0.5 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l14 = (long) $d6
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l14 = (long) $d6 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $l5 = $r2[i0]
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $l5 = $r2[i0] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b6 = l14 cmp $l5
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b6 = l14 cmp $l5 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b6 < 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b6 < 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $i7 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int getExponent(long)>(l13)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $i7 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int getExponent(long)>(l13) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : i8 = 0
org.apache.pdfbox.util.NumberFormatUtil.getExponent : i8 = 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $r0 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $r0 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i1 = lengthof $r0
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i1 = lengthof $r0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i2 = $i1 - 1
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i2 = $i1 - 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : if i8 >= $i2
org.apache.pdfbox.util.NumberFormatUtil.getExponent : if i8 >= $i2 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i5 = i8 + 1
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i5 = i8 + 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $l6 = $r2[$i5]
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $l6 = $r2[$i5] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $b7 = l0 cmp $l6
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $b7 = l0 cmp $l6 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : if $b7 >= 0
org.apache.pdfbox.util.NumberFormatUtil.getExponent : if $b7 >= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : return i8
org.apache.pdfbox.util.NumberFormatUtil.getExponent : return i8 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i15 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatPositiveNumber(long,int,boolean,byte[],int)>(l13, $i7, 0, r0, i12)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i15 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatPositiveNumber(long,int,boolean,byte[],int)>(l13, $i7, 0, r0, i12) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i19 = i1
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i19 = i1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : l20 = l0
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : l20 = l0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $b3 = l20 cmp 2147483647L
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $b3 = l20 cmp 2147483647L >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if $b3 <= 0
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if $b3 <= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i22 = (int) l20
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i22 = (int) l20 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if i18 < 0
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if i18 < 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if z0 == 0
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if z0 == 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $r1 = <org.apache.pdfbox.util.NumberFormatUtil: int[] POWER_OF_TENS_INT>
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $r1 = <org.apache.pdfbox.util.NumberFormatUtil: int[] POWER_OF_TENS_INT> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i4 = $r1[i18]
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i4 = $r1[i18] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i2 = i22 / $i4
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i2 = i22 / $i4 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: int[] POWER_OF_TENS_INT>
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: int[] POWER_OF_TENS_INT> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i5 = $r2[i18]
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i5 = $r2[i18] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i6 = i2 * $i5
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i6 = i2 * $i5 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i22 = i22 - $i6
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i22 = i22 - $i6 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i7 = i19
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i7 = i19 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i19 = i19 + 1
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i19 = i19 + 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i8 = 48 + i2
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i8 = 48 + i2 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $b9 = (byte) $i8
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $b9 = (byte) $i8 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : r0[$i7] = $b9
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : r0[$i7] = $b9 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i18 = i18 + -1
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i18 = i18 + -1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : goto [?= (branch)]
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : return i19
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : return i19 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b8 = l14 cmp 0L
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b8 = l14 cmp 0L >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b8 <= 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b8 <= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : return i15
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : return i15 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : if i0 != -1
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : if i0 != -1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r4 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r4 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: byte[] formatBuffer>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: byte[] formatBuffer> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, i0)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, i0) >>>>>>>> org.apache.pdfbox.cos.COSStream$1.write : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: java.io.OutputStream out>
org.apache.pdfbox.cos.COSStream$1.write : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.cos.COSStream$1.write : virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1)
org.apache.pdfbox.cos.COSStream$1.write : virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1) >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.write : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer>
org.apache.pdfbox.cos.COSOutputStream.write : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer> >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.write : virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1)
org.apache.pdfbox.cos.COSOutputStream.write : virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(32)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(32) >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.write : $r1 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer>
org.apache.pdfbox.cos.COSOutputStream.write : $r1 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer> >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.write : virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>(i0)
org.apache.pdfbox.cos.COSOutputStream.write : virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : i1 = i1 + 1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : goto [?= (branch)]
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : i2 = lengthof r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : i2 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : tableswitch(i2) {     case 1:
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : tableswitch(i2) {     case 1: >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void writeOperator(java.lang.String)>("RG")
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void writeOperator(java.lang.String)>("RG") >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r2 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r2 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r4)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r4) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(10)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(10) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : goto [?= return]
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColor : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : return 1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setStrokingColorOnDemand : return 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getAnnotation()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getAnnotation()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r4 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r3
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r4 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r5 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r5 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.graphics.color.PDColor getInteriorColor()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getInteriorColor : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IC>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getInteriorColor : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IC> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getInteriorColor : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getInteriorColor : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.graphics.color.PDColor getColor(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : return null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getColor : return null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getInteriorColor : return $r2
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.getInteriorColor : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : z0 = virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: boolean setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)>($r5)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : z0 = virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: boolean setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setNonStrokingColorOnDemand : if r1 == null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setNonStrokingColorOnDemand : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setNonStrokingColorOnDemand : return 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setNonStrokingColorOnDemand : return 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getAnnotation()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getAnnotation()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r7 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r6
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r7 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f1 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: float getConstantOpacity()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f1 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: float getConstantOpacity()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup.getConstantOpacity : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup.getConstantOpacity : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup.getConstantOpacity : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CA>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup.getConstantOpacity : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CA> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup.getConstantOpacity : $f0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: float getFloat(org.apache.pdfbox.cos.COSName,float)>($r2, 1.0F)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup.getConstantOpacity : $f0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: float getFloat(org.apache.pdfbox.cos.COSName,float)>($r2, 1.0F) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup.getConstantOpacity : return $f0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup.getConstantOpacity : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void handleOpacity(float)>($f1)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void handleOpacity(float)>($f1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.handleOpacity : $b0 = f0 cmpg 1.0F
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.handleOpacity : $b0 = f0 cmpg 1.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.handleOpacity : if $b0 >= 0
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.handleOpacity : if $b0 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getAnnotation()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation getAnnotation()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r9 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r8
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r9 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r8 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r10 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r10 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary getBorderStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)>(f0, $r10)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary)>(f0, $r10) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : if r1 == null
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : $r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : $r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDBorderStyleDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName D>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName D> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : $z0 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : $z0 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.containsKey : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.containsKey : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.containsKey : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.containsKey : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : $i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.containsKey : $i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : if $i0 < 0
org.apache.pdfbox.util.SmallMap.containsKey : if $i0 < 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : $z0 = 0
org.apache.pdfbox.util.SmallMap.containsKey : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.containsKey : return $z0
org.apache.pdfbox.util.SmallMap.containsKey : return $z0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.containsKey : return $z0
org.apache.pdfbox.cos.COSDictionary.containsKey : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void setLineWidthOnDemand(float)>(f0)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setBorderLine : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void setLineWidthOnDemand(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : $f1 = f0 - 1.0F
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : $f1 = f0 - 1.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : $f2 = staticinvoke <java.lang.Math: float abs(float)>($f1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : $f2 = staticinvoke <java.lang.Math: float abs(float)>($f1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : $d0 = (double) $f2
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : $d0 = (double) $f2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : $b0 = $d0 cmpg 1.0E-6
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : $b0 = $d0 cmpg 1.0E-6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : if $b0 < 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.setLineWidthOnDemand : if $b0 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void setRectDifference(float)>(f0)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void setRectDifference(float)>(f0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'>
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $z0 = $r2 instanceof org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $z0 = $r2 instanceof org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $b0 = f0 cmpl 0.0F
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $b0 = f0 cmpl 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : if $b0 <= 0
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : if $b0 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $r3 = new org.apache.pdfbox.pdmodel.common.PDRectangle
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $r3 = new org.apache.pdfbox.pdmodel.common.PDRectangle >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $f2 = f0 / 2.0F
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $f2 = f0 / 2.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $f1 = f0 / 2.0F
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $f1 = f0 / 2.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(float,float,float,float)>($f2, $f1, 0.0F, 0.0F)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : specialinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(float,float,float,float)>($f2, $f1, 0.0F, 0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $r4 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'>
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $r4 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDAbstractAppearanceHandler: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation 'annotation'> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $r5 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r4
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : $r5 = (org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : virtualinvoke $r5.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: void setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r3)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.setRectDifference : virtualinvoke $r5.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: void setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setRectDifference : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setRectDifference : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationSquareCircle: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setRectDifference : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RD>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setRectDifference : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RD> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setRectDifference : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r3, r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.setRectDifference : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r3, r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.common.PDRectangle getRectangle()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f2 = f0 / 2.0F
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f2 = f0 / 2.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.common.PDRectangle getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)>($r11, $f2)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: org.apache.pdfbox.pdmodel.common.PDRectangle getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)>($r11, $f2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $r2 = new org.apache.pdfbox.pdmodel.common.PDRectangle
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $r2 = new org.apache.pdfbox.pdmodel.common.PDRectangle >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f2 = $f1 + f0
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f2 = $f1 + f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f4 = $f3 + f0
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f4 = $f3 + f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getWidth : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightX()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getWidth : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightX()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(2)
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(2) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : return $f0
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getWidth : $f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getWidth : $f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getWidth : $f2 = $f0 - $f1
org.apache.pdfbox.pdmodel.common.PDRectangle.getWidth : $f2 = $f0 - $f1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getWidth : return $f2
org.apache.pdfbox.pdmodel.common.PDRectangle.getWidth : return $f2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f6 = 2.0F * f0
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f6 = 2.0F * f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f7 = $f5 - $f6
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f7 = $f5 - $f6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f8 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f8 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getHeight : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getHeight : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(3)
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : return $f0
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getHeight : $f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getHeight : $f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getHeight : $f2 = $f0 - $f1
org.apache.pdfbox.pdmodel.common.PDRectangle.getHeight : $f2 = $f0 - $f1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getHeight : return $f2
org.apache.pdfbox.pdmodel.common.PDRectangle.getHeight : return $f2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f9 = 2.0F * f0
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f9 = 2.0F * f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f10 = $f8 - $f9
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : $f10 = $f8 - $f9 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : specialinvoke $r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(float,float,float,float)>($f2, $f4, $f7, $f10)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : specialinvoke $r2.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(float,float,float,float)>($f2, $f4, $f7, $f10) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : return $r2
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler.getPaddedRectangle : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : $f6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void addRect(float,float,float,float)>($f3, $f4, $f5, $f6)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void addRect(float,float,float,float)>($f3, $f4, $f5, $f6) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : $z0 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: boolean inTextMode>
org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : $z0 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: boolean inTextMode> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : if $z0 == 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : if $z0 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f0)
org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f0) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : i8 = i8 + 1
org.apache.pdfbox.util.NumberFormatUtil.getExponent : i8 = i8 + 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : goto [?= $r0 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>]
org.apache.pdfbox.util.NumberFormatUtil.getExponent : goto [?= $r0 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if i0 <= 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if i0 <= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i16 = i15 + 1
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i16 = i15 + 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : r0[i15] = 46
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : r0[i15] = 46 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $i9 = i0 - 1
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $i9 = i0 - 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i15 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatPositiveNumber(long,int,boolean,byte[],int)>(l14, $i9, 1, r0, i16)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i15 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatPositiveNumber(long,int,boolean,byte[],int)>(l14, $i9, 1, r0, i16) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if i22 <= 0
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if i22 <= 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f1)
org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f1) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f2)
org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f2) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f3)
org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f3) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("re")
org.apache.pdfbox.contentstream.PDAbstractContentStream.addRect : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("re") >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void drawShape(float,boolean)>(f0, z0)
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void drawShape(float,boolean)>(f0, z0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : $d0 = (double) f0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : $d0 = (double) f0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : $b0 = $d0 cmpg 1.0E-6
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : $b0 = $d0 cmpg 1.0E-6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : if $b0 >= 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : if $b0 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : if z0 != 0
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : if z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void stroke()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void stroke()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.stroke : $z0 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: boolean inTextMode>
org.apache.pdfbox.contentstream.PDAbstractContentStream.stroke : $z0 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: boolean inTextMode> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.stroke : if $z0 == 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.stroke : if $z0 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.stroke : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("S")
org.apache.pdfbox.contentstream.PDAbstractContentStream.stroke : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("S") >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : goto [?= return]
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceContentStream.drawShape : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void close()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : virtualinvoke r13.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceContentStream: void close()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.close : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.close : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.close : virtualinvoke $r1.<java.io.OutputStream: void close()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.close : virtualinvoke $r1.<java.io.OutputStream: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : specialinvoke r0.<java.io.FilterOutputStream: void close()>()
org.apache.pdfbox.cos.COSStream$1.close : specialinvoke r0.<java.io.FilterOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.close : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.util.List filters>
org.apache.pdfbox.cos.COSOutputStream.close : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.util.List filters> >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.close : $i0 = interfaceinvoke $r2.<java.util.List: int size()>()
org.apache.pdfbox.cos.COSOutputStream.close : $i0 = interfaceinvoke $r2.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.close : i1 = $i0 - 1
org.apache.pdfbox.cos.COSOutputStream.close : i1 = $i0 - 1 >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.close : if i1 < 0
org.apache.pdfbox.cos.COSOutputStream.close : if i1 < 0 >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.close : $r4 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.OutputStream out>
org.apache.pdfbox.cos.COSOutputStream.close : $r4 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.close : $r3 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer>
org.apache.pdfbox.cos.COSOutputStream.close : $r3 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer> >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.close : $r5 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.COSOutputStream.close : $r5 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.close : virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r5)
org.apache.pdfbox.cos.COSOutputStream.close : virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r5) >>>>>>>> org.apache.pdfbox.io.RandomAccessOutputStream.write : $r2 = r0.<org.apache.pdfbox.io.RandomAccessOutputStream: org.apache.pdfbox.io.RandomAccessWrite writer>
org.apache.pdfbox.io.RandomAccessOutputStream.write : $r2 = r0.<org.apache.pdfbox.io.RandomAccessOutputStream: org.apache.pdfbox.io.RandomAccessWrite writer> >>>>>>>> org.apache.pdfbox.io.RandomAccessOutputStream.write : interfaceinvoke $r2.<org.apache.pdfbox.io.RandomAccessWrite: void write(byte[])>(r1)
org.apache.pdfbox.io.RandomAccessOutputStream.write : interfaceinvoke $r2.<org.apache.pdfbox.io.RandomAccessWrite: void write(byte[])>(r1) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i0 = lengthof r1
org.apache.pdfbox.io.ScratchFileBuffer.write : $i0 = lengthof r1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void write(byte[],int,int)>(r1, 0, $i0)
org.apache.pdfbox.io.ScratchFileBuffer.write : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void write(byte[],int,int)>(r1, 0, $i0) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>()
org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : if $r1 != null
org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : if $r1 != null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : virtualinvoke $r2.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>()
org.apache.pdfbox.io.ScratchFileBuffer.checkClosed : virtualinvoke $r2.<org.apache.pdfbox.io.ScratchFile: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i1
org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i0
org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : if i19 <= 0
org.apache.pdfbox.io.ScratchFileBuffer.write : if i19 <= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean ensureAvailableBytesInPage(boolean)>(1)
org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean ensureAvailableBytesInPage(boolean)>(1) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i1 < $i0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i1 < $i0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i14 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i14 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i15 = $i14 - $i13
org.apache.pdfbox.io.ScratchFileBuffer.write : $i15 = $i14 - $i13 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i2 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i15)
org.apache.pdfbox.io.ScratchFileBuffer.write : i2 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i15) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i20, $r2, $i16, i2)
org.apache.pdfbox.io.ScratchFileBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i20, $r2, $i16, i2) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i17 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i17 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i18 = $i17 + i2
org.apache.pdfbox.io.ScratchFileBuffer.write : $i18 = $i17 + i2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = $i18
org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = $i18 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 1
org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i20 + i2
org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i20 + i2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i19 - i2
org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i19 - i2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFileBuffer.write : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.write : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l4 = (long) $i3
org.apache.pdfbox.io.ScratchFileBuffer.write : $l4 = (long) $i3 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l7 = $l5 + $l4
org.apache.pdfbox.io.ScratchFileBuffer.write : $l7 = $l5 + $l4 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size>
org.apache.pdfbox.io.ScratchFileBuffer.write : $l6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $b8 = $l7 cmp $l6
org.apache.pdfbox.io.ScratchFileBuffer.write : $b8 = $l7 cmp $l6 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : if $b8 <= 0
org.apache.pdfbox.io.ScratchFileBuffer.write : if $b8 <= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.write : $l11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l10 = (long) $i9
org.apache.pdfbox.io.ScratchFileBuffer.write : $l10 = (long) $i9 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l12 = $l11 + $l10
org.apache.pdfbox.io.ScratchFileBuffer.write : $l12 = $l11 + $l10 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = $l12
org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = $l12 >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.close : specialinvoke r0.<java.io.FilterOutputStream: void close()>()
org.apache.pdfbox.cos.COSOutputStream.close : specialinvoke r0.<java.io.FilterOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0>
org.apache.pdfbox.cos.COSStream$1.close : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0> >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LENGTH>
org.apache.pdfbox.cos.COSStream$1.close : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LENGTH> >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : $r1 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0>
org.apache.pdfbox.cos.COSStream$1.close : $r1 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0> >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : $r4 = staticinvoke <org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess access$000(org.apache.pdfbox.cos.COSStream)>($r1)
org.apache.pdfbox.cos.COSStream$1.close : $r4 = staticinvoke <org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess access$000(org.apache.pdfbox.cos.COSStream)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSStream.access$000 : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.access$000 : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.access$000 : return $r1
org.apache.pdfbox.cos.COSStream.access$000 : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : $l0 = interfaceinvoke $r4.<org.apache.pdfbox.io.RandomAccess: long length()>()
org.apache.pdfbox.cos.COSStream$1.close : $l0 = interfaceinvoke $r4.<org.apache.pdfbox.io.RandomAccess: long length()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.length : $l0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size>
org.apache.pdfbox.io.ScratchFileBuffer.length : $l0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.length : return $l0
org.apache.pdfbox.io.ScratchFileBuffer.length : return $l0 >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : $i1 = (int) $l0
org.apache.pdfbox.cos.COSStream$1.close : $i1 = (int) $l0 >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: void setInt(org.apache.pdfbox.cos.COSName,int)>($r3, $i1)
org.apache.pdfbox.cos.COSStream$1.close : virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: void setInt(org.apache.pdfbox.cos.COSName,int)>($r3, $i1) >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : $r5 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0>
org.apache.pdfbox.cos.COSStream$1.close : $r5 = r0.<org.apache.pdfbox.cos.COSStream$1: org.apache.pdfbox.cos.COSStream this$0> >>>>>>>> org.apache.pdfbox.cos.COSStream$1.close : staticinvoke <org.apache.pdfbox.cos.COSStream: boolean access$102(org.apache.pdfbox.cos.COSStream,boolean)>($r5, 0)
org.apache.pdfbox.cos.COSStream$1.close : staticinvoke <org.apache.pdfbox.cos.COSStream: boolean access$102(org.apache.pdfbox.cos.COSStream,boolean)>($r5, 0) >>>>>>>> org.apache.pdfbox.cos.COSStream.access$102 : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = z0
org.apache.pdfbox.cos.COSStream.access$102 : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = z0 >>>>>>>> org.apache.pdfbox.cos.COSStream.access$102 : return z0
org.apache.pdfbox.cos.COSStream.access$102 : return z0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : goto [?= return]
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateNormalAppearance : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateAppearanceStreams : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void generateRolloverAppearance()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateAppearanceStreams : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void generateRolloverAppearance()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateAppearanceStreams : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void generateDownAppearance()>()
org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler.generateAppearanceStreams : virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.handlers.PDSquareAppearanceHandler: void generateDownAppearance()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : goto [?= return]
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle.constructAppearances : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSDictionary parentDict>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSDictionary parentDict> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $r2 == null
org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r12 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSDictionary parentDict>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r12 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSDictionary parentDict> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r11 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSName dictKey>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r11 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSName dictKey> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r10 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r10 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r11, $r10)
org.apache.pdfbox.pdmodel.common.COSArrayList.add : virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r11, $r10) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSDictionary parentDict> = null
org.apache.pdfbox.pdmodel.common.COSArrayList.add : r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSDictionary parentDict> = null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $z0 = r1 instanceof java.lang.String
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $z0 = r1 instanceof java.lang.String >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $z0 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r3 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r3 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $r3 == null
org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r5 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r5 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r4 = (org.apache.pdfbox.pdmodel.common.COSObjectable) r1
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r4 = (org.apache.pdfbox.pdmodel.common.COSObjectable) r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r6 = interfaceinvoke $r4.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r6 = interfaceinvoke $r4.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6)
org.apache.pdfbox.pdmodel.common.COSArrayList.add : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r13 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r13 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $z1 = interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $z1 = interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : return $z1
org.apache.pdfbox.pdmodel.common.COSArrayList.add : return $z1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.close : $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: boolean isClosed()>()
org.apache.pdfbox.pdmodel.PDDocument.close : $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: boolean isClosed()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.isClosed : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.isClosed : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.isClosed : return $z0
org.apache.pdfbox.cos.COSDocument.isClosed : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $z0 != 0
org.apache.pdfbox.pdmodel.PDDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport signingSupport>
org.apache.pdfbox.pdmodel.PDDocument.close : $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport signingSupport> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $r2 == null
org.apache.pdfbox.pdmodel.PDDocument.close : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdmodel.PDDocument.close : $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void close()>()
org.apache.pdfbox.pdmodel.PDDocument.close : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>()
org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : return $r1
org.apache.pdfbox.cos.COSDocument.getObjects : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if r1 == null
org.apache.pdfbox.cos.COSDocument.close : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r3 == null
org.apache.pdfbox.cos.COSDocument.close : if $r3 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r4 == null
org.apache.pdfbox.cos.COSDocument.close : if $r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>()
org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r21 = null
org.apache.pdfbox.io.ScratchFile.close : r21 = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf>
org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r5 == null
org.apache.pdfbox.io.ScratchFile.close : if $r5 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file>
org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r23 == null
org.apache.pdfbox.io.ScratchFile.close : if $r23 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>]
org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>()
org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if r21 == null
org.apache.pdfbox.io.ScratchFile.close : if r21 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1
org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource>
org.apache.pdfbox.pdmodel.PDDocument.close : $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.io.RandomAccessRead pdfSource> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.close : if $r4 == null
