org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r5 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r5 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : staticinvoke <java.util.Collections: void sort(java.util.List)>($r5)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : staticinvoke <java.util.Collections: void sort(java.util.List)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r7 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r7 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : specialinvoke $r7.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : specialinvoke $r7.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r21 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r21 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : if $z0 == 0
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r12 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r12 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r22 = (java.lang.Integer) $r12
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r22 = (java.lang.Integer) $r12 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $i2 = virtualinvoke r22.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $i2 = virtualinvoke r22.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $l3 = (long) $i2
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $l3 = (long) $i2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r13 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l3)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r13 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l3) >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100
org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1]
org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $r2 != null
org.apache.pdfbox.cos.COSInteger.get : if $r2 != null >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1]
org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : return $r4
org.apache.pdfbox.cos.COSInteger.get : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r13)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r13) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r4 = (org.apache.pdfbox.pdmodel.common.COSObjectable) $r14
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r4 = (org.apache.pdfbox.pdmodel.common.COSObjectable) $r14 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>(r4)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>(r4) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r3 = interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSArray.add : $r3 = interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest.getCOSObject : $i0 = r0.<org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest: int value>
org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest.getCOSObject : $i0 = r0.<org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest: int value> >>>>>>>> org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest.getCOSObject : $l1 = (long) $i0
org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest.getCOSObject : $l1 = (long) $i0 >>>>>>>> org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest.getCOSObject : $r1 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1)
org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest.getCOSObject : $r1 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1) >>>>>>>> org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.TestPDNumberTreeNode$PDTest.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : goto [?= $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : goto [?= $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r23 = null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r23 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r24 = null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r24 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : if $z1 != 0
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r23 = (java.lang.Integer) $r10
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r23 = (java.lang.Integer) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $i0 = interfaceinvoke $r5.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $i0 = interfaceinvoke $r5.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $i1 = $i0 - 1
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $i1 = $i0 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r11 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r11 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r24 = (java.lang.Integer) $r11
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : r24 = (java.lang.Integer) $r11 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setUpperLimit(java.lang.Integer)>(r24)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setUpperLimit(java.lang.Integer)>(r24) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0]
org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : r8 = (org.apache.pdfbox.cos.COSArray) $r4
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : r8 = (org.apache.pdfbox.cos.COSArray) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : if r8 != null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : if r8 != null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r5 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r5 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : r8 = $r5
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : r8 = $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r5)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r5) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : if r1 == null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setInt(int,int)>(1, $i0)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setInt(int,int)>(1, $i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.setInt : $l2 = (long) i1
org.apache.pdfbox.cos.COSArray.setInt : $l2 = (long) i1 >>>>>>>> org.apache.pdfbox.cos.COSArray.setInt : $r1 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l2)
org.apache.pdfbox.cos.COSArray.setInt : $r1 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l2) >>>>>>>> org.apache.pdfbox.cos.COSArray.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(i0, $r1)
org.apache.pdfbox.cos.COSArray.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(i0, $r1) >>>>>>>> org.apache.pdfbox.cos.COSArray.set : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.set : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.set : interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1)
org.apache.pdfbox.cos.COSArray.set : interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : goto [?= return]
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setLowerLimit(java.lang.Integer)>(r23)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setLowerLimit(java.lang.Integer)>(r23) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : r8 = (org.apache.pdfbox.cos.COSArray) $r4
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : r8 = (org.apache.pdfbox.cos.COSArray) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : if r8 != null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : if r8 != null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : if r1 == null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setInt(int,int)>(0, $i0)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setInt(int,int)>(0, $i0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : goto [?= return]
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r9 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r9 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r8, $r7)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r9.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r8, $r7) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : r11 = null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : r11 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : $r4 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : $r4 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : $r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : $r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : r1 = (org.apache.pdfbox.cos.COSArray) $r5
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : r1 = (org.apache.pdfbox.cos.COSArray) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : if r1 == null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : return r11
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getKids : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSDictionary parentDict>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r2 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSDictionary parentDict> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $r2 == null
org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $z0 = r1 instanceof java.lang.String
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $z0 = r1 instanceof java.lang.String >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $z0 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r3 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r3 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $r3 == null
org.apache.pdfbox.pdmodel.common.COSArrayList.add : if $r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r5 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r5 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r4 = (org.apache.pdfbox.pdmodel.common.COSObjectable) r1
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r4 = (org.apache.pdfbox.pdmodel.common.COSObjectable) r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r6 = interfaceinvoke $r4.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r6 = interfaceinvoke $r4.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6)
org.apache.pdfbox.pdmodel.common.COSArrayList.add : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r13 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $r13 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : $z1 = interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.common.COSArrayList.add : $z1 = interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.add : return $z1
org.apache.pdfbox.pdmodel.common.COSArrayList.add : return $z1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : if r1 == null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.isEmpty : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.COSArrayList.isEmpty : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.isEmpty : return $z0
org.apache.pdfbox.pdmodel.common.COSArrayList.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : if $z0 != 0
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.get : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.COSArrayList.get : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.pdmodel.common.COSArrayList.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.get : return $r2
org.apache.pdfbox.pdmodel.common.COSArrayList.get : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : r2 = (org.apache.pdfbox.pdmodel.common.PDNumberTreeNode) $r11
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : r2 = (org.apache.pdfbox.pdmodel.common.PDNumberTreeNode) $r11 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.size : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual>
org.apache.pdfbox.pdmodel.common.COSArrayList.size : $r1 = r0.<org.apache.pdfbox.pdmodel.common.COSArrayList: java.util.List actual> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.size : return $i0
org.apache.pdfbox.pdmodel.common.COSArrayList.size : return $i0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $i1 = $i0 - 1
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $i1 = $i0 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : r3 = (org.apache.pdfbox.pdmodel.common.PDNumberTreeNode) $r12
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : r3 = (org.apache.pdfbox.pdmodel.common.PDNumberTreeNode) $r12 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : r4 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Integer getLowerLimit()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : r4 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Integer getLowerLimit()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : r6 = null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : r6 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : r1 = (org.apache.pdfbox.cos.COSArray) $r4
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : r1 = (org.apache.pdfbox.cos.COSArray) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : if r1 == null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0) >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.get : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r3 = (org.apache.pdfbox.cos.COSBase) $r2
org.apache.pdfbox.cos.COSArray.get : $r3 = (org.apache.pdfbox.cos.COSBase) $r2 >>>>>>>> org.apache.pdfbox.cos.COSArray.get : return $r3
org.apache.pdfbox.cos.COSArray.get : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : if $r5 == null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : if $r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int getInt(int,int)>(i0, -1)
org.apache.pdfbox.cos.COSArray.getInt : $i1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int getInt(int,int)>(i0, -1) >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : i3 = i1
org.apache.pdfbox.cos.COSArray.getInt : i3 = i1 >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : $i2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.cos.COSArray.getInt : $i2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : return $i0
org.apache.pdfbox.cos.COSArray.size : return $i0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : if i0 >= $i2
org.apache.pdfbox.cos.COSArray.getInt : if i0 >= $i2 >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getInt : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.getInt : r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : $z0 = r1 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSArray.getInt : $z0 = r1 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : if $z0 == 0
org.apache.pdfbox.cos.COSArray.getInt : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : $r3 = (org.apache.pdfbox.cos.COSNumber) r1
org.apache.pdfbox.cos.COSArray.getInt : $r3 = (org.apache.pdfbox.cos.COSNumber) r1 >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : i3 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.cos.COSArray.getInt : i3 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.cos.COSInteger.intValue : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value> >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0
org.apache.pdfbox.cos.COSInteger.intValue : $i1 = (int) $l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.intValue : return $i1
org.apache.pdfbox.cos.COSInteger.intValue : return $i1 >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : return i3
org.apache.pdfbox.cos.COSArray.getInt : return i3 >>>>>>>> org.apache.pdfbox.cos.COSArray.getInt : return $i1
org.apache.pdfbox.cos.COSArray.getInt : return $i1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : return r6
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getLowerLimit : return r6 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setLowerLimit(java.lang.Integer)>(r4)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setLowerLimit(java.lang.Integer)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r5 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r5 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : r8 = $r5
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : r8 = $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r5)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r5) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : r5 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Integer getUpperLimit()>()
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : r5 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Integer getUpperLimit()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : r6 = null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : r6 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : r1 = (org.apache.pdfbox.cos.COSArray) $r4
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : r1 = (org.apache.pdfbox.cos.COSArray) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : if r1 == null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : if $r5 == null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : if $r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(1)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : $i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : return r6
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.getUpperLimit : return r6 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setUpperLimit(java.lang.Integer)>(r5)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setUpperLimit(java.lang.Integer)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : goto [?= $r13 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>]
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : goto [?= $r13 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r13 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r13 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r15 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r1)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r15 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = null
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if r0 == null
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if r0 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z0 = r0 instanceof org.apache.pdfbox.pdmodel.common.COSArrayList
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z0 = r0 instanceof org.apache.pdfbox.pdmodel.common.COSArrayList >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z0 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r21 = (org.apache.pdfbox.pdmodel.common.COSArrayList) r0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r21 = (org.apache.pdfbox.pdmodel.common.COSArrayList) r0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = $r21.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array>
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = $r21.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray array> >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= return r22]
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= return r22] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : return r22
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : return r22 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : virtualinvoke $r13.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r15)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : virtualinvoke $r13.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r15) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(1, null)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setUpperLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(1, null) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(0, null)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setLowerLimit : virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(0, null) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1]
org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2
org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r17 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r17 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r15 = (org.apache.pdfbox.pdmodel.common.COSObjectable) null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r15 = (org.apache.pdfbox.pdmodel.common.COSObjectable) null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r17.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r16, $r15)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r17.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r16, $r15) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void removeItem(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void removeItem(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.removeItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.removeItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.removeItem : interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.removeItem : interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.remove : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : if i0 >= 0
org.apache.pdfbox.util.SmallMap.remove : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $r4 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : $r4 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.remove : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : r2 = $r4[$i2]
org.apache.pdfbox.util.SmallMap.remove : r2 = $r4[$i2] >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : i1 = lengthof $r5
org.apache.pdfbox.util.SmallMap.remove : i1 = lengthof $r5 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : if i1 != 2
org.apache.pdfbox.util.SmallMap.remove : if i1 != 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i3 = i1 - 2
org.apache.pdfbox.util.SmallMap.remove : $i3 = i1 - 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.remove : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r3, 0, i0)
org.apache.pdfbox.util.SmallMap.remove : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r3, 0, i0) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.remove : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i6 = i0 + 2
org.apache.pdfbox.util.SmallMap.remove : $i6 = i0 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i4 = i1 - i0
org.apache.pdfbox.util.SmallMap.remove : $i4 = i1 - i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : $i5 = $i4 - 2
org.apache.pdfbox.util.SmallMap.remove : $i5 = $i4 - 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i6, r3, i0, $i5)
org.apache.pdfbox.util.SmallMap.remove : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i6, r3, i0, $i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.remove : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : return r2
org.apache.pdfbox.util.SmallMap.remove : return r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : goto [?= return]
org.apache.pdfbox.cos.COSDictionary.setItem : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r20 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r20 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r19 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r19 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r18 = (org.apache.pdfbox.pdmodel.common.COSObjectable) null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : $r18 = (org.apache.pdfbox.pdmodel.common.COSObjectable) null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r20.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r19, $r18)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : virtualinvoke $r20.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r19, $r18) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = null
org.apache.pdfbox.util.SmallMap.remove : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = null >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : goto [?= return r2]
org.apache.pdfbox.util.SmallMap.remove : goto [?= return r2] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : goto [?= return]
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setNumbers : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r8 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6)
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r8 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : if $r8 != null
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : if $r8 != null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r10 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r10 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>
org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDNumberTreeNode.setKids : virtualinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r9, null)
