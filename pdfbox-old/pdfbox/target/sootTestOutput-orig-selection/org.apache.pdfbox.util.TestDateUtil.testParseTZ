org.apache.pdfbox.util.DateConverter.newGreg : $r1 = new java.util.GregorianCalendar >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : $r2 = <java.util.Locale: java.util.Locale ENGLISH>
org.apache.pdfbox.util.DateConverter.newGreg : $r2 = <java.util.Locale: java.util.Locale ENGLISH> >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : specialinvoke $r1.<java.util.GregorianCalendar: void <init>(java.util.Locale)>($r2)
org.apache.pdfbox.util.DateConverter.newGreg : specialinvoke $r1.<java.util.GregorianCalendar: void <init>(java.util.Locale)>($r2) >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : $r3 = new java.util.SimpleTimeZone
org.apache.pdfbox.util.DateConverter.newGreg : $r3 = new java.util.SimpleTimeZone >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : specialinvoke $r3.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "UTC")
org.apache.pdfbox.util.DateConverter.newGreg : specialinvoke $r3.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "UTC") >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>($r3)
org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>($r3) >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void setLenient(boolean)>(0)
org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void setLenient(boolean)>(0) >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void set(int,int)>(14, 0)
org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void set(int,int)>(14, 0) >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : return $r1
org.apache.pdfbox.util.DateConverter.newGreg : return $r1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r4 = new java.text.ParsePosition
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r4 = new java.text.ParsePosition >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>($i2)
org.apache.pdfbox.util.DateConverter.parseTZoffset : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>($i2) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r5 = new java.util.SimpleTimeZone
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r5 = new java.util.SimpleTimeZone >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : specialinvoke $r5.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "GMT")
org.apache.pdfbox.util.DateConverter.parseTZoffset : specialinvoke $r5.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "GMT") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : r9 = $r5
org.apache.pdfbox.util.DateConverter.parseTZoffset : r9 = $r5 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : c15 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "Z+- ")
org.apache.pdfbox.util.DateConverter.parseTZoffset : c15 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "Z+- ") >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : c8 = 32
org.apache.pdfbox.util.DateConverter.skipOptionals : c8 = 32 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : if r0 == null
org.apache.pdfbox.util.DateConverter.skipOptionals : if r0 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i1 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipOptionals : $i1 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i2 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.skipOptionals : $i2 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : if $i1 >= $i2
org.apache.pdfbox.util.DateConverter.skipOptionals : if $i1 >= $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i3 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipOptionals : $i3 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)
org.apache.pdfbox.util.DateConverter.skipOptionals : $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i5 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($c4)
org.apache.pdfbox.util.DateConverter.skipOptionals : $i5 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($c4) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : if $i5 < 0
org.apache.pdfbox.util.DateConverter.skipOptionals : if $i5 < 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : if $c4 == 32
org.apache.pdfbox.util.DateConverter.skipOptionals : if $c4 == 32 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $c9 = $c4
org.apache.pdfbox.util.DateConverter.skipOptionals : $c9 = $c4 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : goto [?= c8 = $c9]
org.apache.pdfbox.util.DateConverter.skipOptionals : goto [?= c8 = $c9] >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : c8 = $c9
org.apache.pdfbox.util.DateConverter.skipOptionals : c8 = $c9 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i6 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipOptionals : $i6 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i7 = $i6 + 1
org.apache.pdfbox.util.DateConverter.skipOptionals : $i7 = $i6 + 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i7)
org.apache.pdfbox.util.DateConverter.skipOptionals : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i7) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : goto [?= (branch)]
org.apache.pdfbox.util.DateConverter.skipOptionals : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : return c8
org.apache.pdfbox.util.DateConverter.skipOptionals : return c8 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if c15 == 90
org.apache.pdfbox.util.DateConverter.parseTZoffset : if c15 == 90 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z2 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "GMT", $r4)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z2 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "GMT", $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipString : $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, $i0)
org.apache.pdfbox.util.DateConverter.skipString : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, $i0) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : if $z0 == 0
org.apache.pdfbox.util.DateConverter.skipString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : return 0
org.apache.pdfbox.util.DateConverter.skipString : return 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z2 != 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z2 != 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z3 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "UTC", $r4)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z3 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "UTC", $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z3 == 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z3 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z4 = 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z4 = 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : z0 = $z4
org.apache.pdfbox.util.DateConverter.parseTZoffset : z0 = $z4 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z4 != 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z4 != 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $c16 = c15
org.apache.pdfbox.util.DateConverter.parseTZoffset : $c16 = c15 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, -999)]
org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, -999)] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, -999)
org.apache.pdfbox.util.DateConverter.parseTZoffset : i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, -999) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if r0 != null
org.apache.pdfbox.util.DateConverter.parseTimeField : if r0 != null >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i9 = 0
org.apache.pdfbox.util.DateConverter.parseTimeField : i9 = 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i10 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTimeField : i10 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i4 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.parseTimeField : $i4 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i5 = $i4 - i10
org.apache.pdfbox.util.DateConverter.parseTimeField : $i5 = $i4 - i10 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i5)
org.apache.pdfbox.util.DateConverter.parseTimeField : $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i5) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i2 = i10 + $i6
org.apache.pdfbox.util.DateConverter.parseTimeField : i2 = i10 + $i6 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if i10 >= i2
org.apache.pdfbox.util.DateConverter.parseTimeField : if i10 >= i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10)
org.apache.pdfbox.util.DateConverter.parseTimeField : $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i3 = $c7 - 48
org.apache.pdfbox.util.DateConverter.parseTimeField : i3 = $c7 - 48 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if i3 < 0
org.apache.pdfbox.util.DateConverter.parseTimeField : if i3 < 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if i3 <= 9
org.apache.pdfbox.util.DateConverter.parseTimeField : if i3 <= 9 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i8 = i9 * 10
org.apache.pdfbox.util.DateConverter.parseTimeField : $i8 = i9 * 10 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i9 = $i8 + i3
org.apache.pdfbox.util.DateConverter.parseTimeField : i9 = $i8 + i3 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i10 = i10 + 1
org.apache.pdfbox.util.DateConverter.parseTimeField : i10 = i10 + 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : goto [?= (branch)]
org.apache.pdfbox.util.DateConverter.parseTimeField : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i11 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTimeField : $i11 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if i10 != $i11
org.apache.pdfbox.util.DateConverter.parseTimeField : if i10 != $i11 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i10)
org.apache.pdfbox.util.DateConverter.parseTimeField : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i10) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : return i9
org.apache.pdfbox.util.DateConverter.parseTimeField : return i9 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "\': ")
org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "\': ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : i1 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, 0)
org.apache.pdfbox.util.DateConverter.parseTZoffset : i1 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, 0) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "\' ")
org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "\' ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if i0 == -999
org.apache.pdfbox.util.DateConverter.parseTZoffset : if i0 == -999 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $c16 != 45
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $c16 != 45 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $b18 = 1
org.apache.pdfbox.util.DateConverter.parseTZoffset : $b18 = 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l12 = (long) $b18
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l12 = (long) $b18 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i7 = i0 * 3600000
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i7 = i0 * 3600000 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l10 = (long) $i7
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l10 = (long) $i7 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l8 = (long) i1
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l8 = (long) i1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l9 = $l8 * 60000L
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l9 = $l8 * 60000L >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l11 = $l10 + $l9
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l11 = $l10 + $l9 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l13 = $l12 * $l11
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l13 = $l12 * $l11 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i14 = staticinvoke <org.apache.pdfbox.util.DateConverter: int restrainTZoffset(long)>($l13)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i14 = staticinvoke <org.apache.pdfbox.util.DateConverter: int restrainTZoffset(long)>($l13) >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b0 = l9 cmp 50400000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b0 = l9 cmp 50400000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b0 > 0
org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b0 > 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b7 = l9 cmp -50400000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b7 = l9 cmp -50400000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b7 < 0
org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b7 < 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $i8 = (int) l9
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $i8 = (int) l9 >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : return $i8
org.apache.pdfbox.util.DateConverter.restrainTZoffset : return $i8 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke $r5.<java.util.TimeZone: void setRawOffset(int)>($i14)
org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke $r5.<java.util.TimeZone: void setRawOffset(int)>($i14) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: void updateZoneId(java.util.TimeZone)>($r5)
org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: void updateZoneId(java.util.TimeZone)>($r5) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : i3 = virtualinvoke r0.<java.util.TimeZone: int getRawOffset()>()
org.apache.pdfbox.util.DateConverter.updateZoneId : i3 = virtualinvoke r0.<java.util.TimeZone: int getRawOffset()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : b4 = 43
org.apache.pdfbox.util.DateConverter.updateZoneId : b4 = 43 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if i3 >= 0
org.apache.pdfbox.util.DateConverter.updateZoneId : if i3 >= 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : i0 = i3 / 3600000
org.apache.pdfbox.util.DateConverter.updateZoneId : i0 = i3 / 3600000 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $i2 = i3 % 3600000
org.apache.pdfbox.util.DateConverter.updateZoneId : $i2 = i3 % 3600000 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : i1 = $i2 / 60000
org.apache.pdfbox.util.DateConverter.updateZoneId : i1 = $i2 / 60000 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if i3 != 0
org.apache.pdfbox.util.DateConverter.updateZoneId : if i3 != 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>("GMT")
org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>("GMT") >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : goto [?= return]
org.apache.pdfbox.util.DateConverter.updateZoneId : goto [?= return] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= staticinvoke <org.apache.pdfbox.util.DateConverter: void adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)>(r1, r9)]
org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= staticinvoke <org.apache.pdfbox.util.DateConverter: void adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)>(r1, r9)] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: void adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)>(r1, r9)
org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: void adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)>(r1, r9) >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : virtualinvoke r0.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>(r1)
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : virtualinvoke r0.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>(r1) >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i1 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(15)
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i1 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(15) >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i2 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(16)
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i2 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(16) >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i3 = $i1 + $i2
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i3 = $i1 + $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : i0 = $i3 / 60000
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : i0 = $i3 / 60000 >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i4 = neg i0
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i4 = neg i0 >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : virtualinvoke r0.<java.util.GregorianCalendar: void add(int,int)>(12, $i4)
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : virtualinvoke r0.<java.util.GregorianCalendar: void add(int,int)>(12, $i4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i20 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i20 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i20)
org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i20) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : return 1
org.apache.pdfbox.util.DateConverter.parseTZoffset : return 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $b18 = -1
org.apache.pdfbox.util.DateConverter.parseTZoffset : $b18 = -1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= $l12 = (long) $b18]
org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= $l12 = (long) $b18] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : goto [?= $i11 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()]
org.apache.pdfbox.util.DateConverter.parseTimeField : goto [?= $i11 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()] >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if b4 != 43
org.apache.pdfbox.util.DateConverter.updateZoneId : if b4 != 43 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if i0 > 12
org.apache.pdfbox.util.DateConverter.updateZoneId : if i0 > 12 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r7 = <java.util.Locale: java.util.Locale US>
org.apache.pdfbox.util.DateConverter.updateZoneId : $r7 = <java.util.Locale: java.util.Locale US> >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r6 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.DateConverter.updateZoneId : $r6 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r6[0] = $r8
org.apache.pdfbox.util.DateConverter.updateZoneId : $r6[0] = $r8 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r6[1] = $r9
org.apache.pdfbox.util.DateConverter.updateZoneId : $r6[1] = $r9 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "GMT+%02d:%02d", $r6)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "GMT+%02d:%02d", $r6) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>($r10)
org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>($r10) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : b4 = 45
org.apache.pdfbox.util.DateConverter.updateZoneId : b4 = 45 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : i3 = neg i3
org.apache.pdfbox.util.DateConverter.updateZoneId : i3 = neg i3 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if b4 != 45
org.apache.pdfbox.util.DateConverter.updateZoneId : if b4 != 45 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if i0 > 14
org.apache.pdfbox.util.DateConverter.updateZoneId : if i0 > 14 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r2 = <java.util.Locale: java.util.Locale US>
org.apache.pdfbox.util.DateConverter.updateZoneId : $r2 = <java.util.Locale: java.util.Locale US> >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r1 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.DateConverter.updateZoneId : $r1 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r1[0] = $r3
org.apache.pdfbox.util.DateConverter.updateZoneId : $r1[0] = $r3 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r1[1] = $r4
org.apache.pdfbox.util.DateConverter.updateZoneId : $r1[1] = $r4 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "GMT-%02d:%02d", $r1)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "GMT-%02d:%02d", $r1) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>($r5)
org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>($r5) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z4 = 1
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z4 = 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= z0 = $z4]
org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= z0 = $z4] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $c16 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "+- ")
org.apache.pdfbox.util.DateConverter.parseTZoffset : $c16 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "+- ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : return i1
org.apache.pdfbox.util.DateConverter.parseTimeField : return i1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if z0 != 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if z0 != 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i5 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i5 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i5)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i5) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : r10 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : r10 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r10)
org.apache.pdfbox.util.DateConverter.parseTZoffset : r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r10) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r7 = "GMT"
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r7 = "GMT" >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r8 = virtualinvoke r9.<java.util.TimeZone: java.lang.String getID()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r8 = virtualinvoke r9.<java.util.TimeZone: java.lang.String getID()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z1 == 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i6 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i6 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke $r4.<java.text.ParsePosition: void setIndex(int)>($i6)
org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke $r4.<java.text.ParsePosition: void setIndex(int)>($i6) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : return 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : return 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipString : $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $i2 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.skipString : $i2 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $i3 = $i1 + $i2
org.apache.pdfbox.util.DateConverter.skipString : $i3 = $i1 + $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i3)
org.apache.pdfbox.util.DateConverter.skipString : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i3) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : return 1
org.apache.pdfbox.util.DateConverter.skipString : return 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>("unknown")
