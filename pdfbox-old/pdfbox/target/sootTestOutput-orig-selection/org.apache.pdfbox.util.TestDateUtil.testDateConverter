org.apache.pdfbox.util.DateConverter.toCalendar : if r0 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $r3 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.pdfbox.util.DateConverter.toCalendar : $r3 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>()
org.apache.pdfbox.util.DateConverter.toCalendar : $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : if $z0 == 0
org.apache.pdfbox.util.DateConverter.toCalendar : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $r4 = new java.text.ParsePosition
org.apache.pdfbox.util.DateConverter.toCalendar : $r4 = new java.text.ParsePosition >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0)
org.apache.pdfbox.util.DateConverter.toCalendar : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0) >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, " ")
org.apache.pdfbox.util.DateConverter.toCalendar : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, " ") >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : c8 = 32
org.apache.pdfbox.util.DateConverter.skipOptionals : c8 = 32 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : if r0 == null
org.apache.pdfbox.util.DateConverter.skipOptionals : if r0 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i1 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipOptionals : $i1 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i2 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.skipOptionals : $i2 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : if $i1 >= $i2
org.apache.pdfbox.util.DateConverter.skipOptionals : if $i1 >= $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i3 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipOptionals : $i3 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)
org.apache.pdfbox.util.DateConverter.skipOptionals : $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i5 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($c4)
org.apache.pdfbox.util.DateConverter.skipOptionals : $i5 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($c4) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : if $i5 < 0
org.apache.pdfbox.util.DateConverter.skipOptionals : if $i5 < 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : return c8
org.apache.pdfbox.util.DateConverter.skipOptionals : return c8 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "D:", $r4)
org.apache.pdfbox.util.DateConverter.toCalendar : staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "D:", $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipString : $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, $i0)
org.apache.pdfbox.util.DateConverter.skipString : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, $i0) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : if $z0 == 0
org.apache.pdfbox.util.DateConverter.skipString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipString : $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $i2 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.skipString : $i2 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : $i3 = $i1 + $i2
org.apache.pdfbox.util.DateConverter.skipString : $i3 = $i1 + $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i3)
org.apache.pdfbox.util.DateConverter.skipString : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i3) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : return 1
org.apache.pdfbox.util.DateConverter.skipString : return 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : r2 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.Calendar parseDate(java.lang.String,java.text.ParsePosition)>(r0, $r4)
org.apache.pdfbox.util.DateConverter.toCalendar : r2 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.Calendar parseDate(java.lang.String,java.text.ParsePosition)>(r0, $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if r0 == null
org.apache.pdfbox.util.DateConverter.parseDate : if r0 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()
org.apache.pdfbox.util.DateConverter.parseDate : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if $z0 == 0
org.apache.pdfbox.util.DateConverter.parseDate : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : i9 = -999999
org.apache.pdfbox.util.DateConverter.parseDate : i9 = -999999 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : r5 = null
org.apache.pdfbox.util.DateConverter.parseDate : r5 = null >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $r4 = new java.text.ParsePosition
org.apache.pdfbox.util.DateConverter.parseDate : $r4 = new java.text.ParsePosition >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $i1 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseDate : $i1 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>($i1)
org.apache.pdfbox.util.DateConverter.parseDate : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>($i1) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, " ")
org.apache.pdfbox.util.DateConverter.parseDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, " ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : i0 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseDate : i0 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : r6 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar parseBigEndianDate(java.lang.String,java.text.ParsePosition)>(r0, $r4)
org.apache.pdfbox.util.DateConverter.parseDate : r6 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar parseBigEndianDate(java.lang.String,java.text.ParsePosition)>(r0, $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $r5 = new java.text.ParsePosition
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $r5 = new java.text.ParsePosition >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i7 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i7 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : specialinvoke $r5.<java.text.ParsePosition: void <init>(int)>($i7)
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : specialinvoke $r5.<java.text.ParsePosition: void <init>(int)>($i7) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 4, 0)
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 4, 0) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if r0 != null
org.apache.pdfbox.util.DateConverter.parseTimeField : if r0 != null >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i9 = 0
org.apache.pdfbox.util.DateConverter.parseTimeField : i9 = 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i10 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTimeField : i10 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i4 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.parseTimeField : $i4 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i5 = $i4 - i10
org.apache.pdfbox.util.DateConverter.parseTimeField : $i5 = $i4 - i10 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i5)
org.apache.pdfbox.util.DateConverter.parseTimeField : $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i5) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i2 = i10 + $i6
org.apache.pdfbox.util.DateConverter.parseTimeField : i2 = i10 + $i6 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if i10 >= i2
org.apache.pdfbox.util.DateConverter.parseTimeField : if i10 >= i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10)
org.apache.pdfbox.util.DateConverter.parseTimeField : $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i3 = $c7 - 48
org.apache.pdfbox.util.DateConverter.parseTimeField : i3 = $c7 - 48 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if i3 < 0
org.apache.pdfbox.util.DateConverter.parseTimeField : if i3 < 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if i3 <= 9
org.apache.pdfbox.util.DateConverter.parseTimeField : if i3 <= 9 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i8 = i9 * 10
org.apache.pdfbox.util.DateConverter.parseTimeField : $i8 = i9 * 10 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i9 = $i8 + i3
org.apache.pdfbox.util.DateConverter.parseTimeField : i9 = $i8 + i3 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : i10 = i10 + 1
org.apache.pdfbox.util.DateConverter.parseTimeField : i10 = i10 + 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : goto [?= (branch)]
org.apache.pdfbox.util.DateConverter.parseTimeField : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : $i11 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTimeField : $i11 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : if i10 != $i11
org.apache.pdfbox.util.DateConverter.parseTimeField : if i10 != $i11 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i10)
org.apache.pdfbox.util.DateConverter.parseTimeField : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i10) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : return i9
org.apache.pdfbox.util.DateConverter.parseTimeField : return i9 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i8 = virtualinvoke $r5.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i8 = virtualinvoke $r5.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i9 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i9 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i10 = 4 + $i9
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i10 = 4 + $i9 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : if $i8 == $i10
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : if $i8 == $i10 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r5, "/- ")
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r5, "/- ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i12 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 1)
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i12 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 1) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i1 = $i12 - 1
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i1 = $i12 - 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i2 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 1)
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i2 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 1) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r5, " T")
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r5, " T") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i3 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 0)
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i3 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 0) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : return i1
org.apache.pdfbox.util.DateConverter.parseTimeField : return i1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r5, ": ")
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r5, ": ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i4 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 0)
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i4 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 0) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i5 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 0)
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : i5 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r5, 2, 0) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : c6 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r5, ".")
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : c6 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r5, ".") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : if c6 != 46
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : if c6 != 46 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : r3 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar newGreg()>()
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : r3 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar newGreg()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : $r1 = new java.util.GregorianCalendar
org.apache.pdfbox.util.DateConverter.newGreg : $r1 = new java.util.GregorianCalendar >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : $r2 = <java.util.Locale: java.util.Locale ENGLISH>
org.apache.pdfbox.util.DateConverter.newGreg : $r2 = <java.util.Locale: java.util.Locale ENGLISH> >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : specialinvoke $r1.<java.util.GregorianCalendar: void <init>(java.util.Locale)>($r2)
org.apache.pdfbox.util.DateConverter.newGreg : specialinvoke $r1.<java.util.GregorianCalendar: void <init>(java.util.Locale)>($r2) >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : $r3 = new java.util.SimpleTimeZone
org.apache.pdfbox.util.DateConverter.newGreg : $r3 = new java.util.SimpleTimeZone >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : specialinvoke $r3.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "UTC")
org.apache.pdfbox.util.DateConverter.newGreg : specialinvoke $r3.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "UTC") >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>($r3)
org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>($r3) >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void setLenient(boolean)>(0)
org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void setLenient(boolean)>(0) >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void set(int,int)>(14, 0)
org.apache.pdfbox.util.DateConverter.newGreg : virtualinvoke $r1.<java.util.GregorianCalendar: void set(int,int)>(14, 0) >>>>>>>> org.apache.pdfbox.util.DateConverter.newGreg : return $r1
org.apache.pdfbox.util.DateConverter.newGreg : return $r1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : virtualinvoke r3.<java.util.GregorianCalendar: void set(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5)
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : virtualinvoke r3.<java.util.GregorianCalendar: void set(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : virtualinvoke r3.<java.util.GregorianCalendar: long getTimeInMillis()>()
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : virtualinvoke r3.<java.util.GregorianCalendar: long getTimeInMillis()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : goto [?= $i18 = virtualinvoke $r5.<java.text.ParsePosition: int getIndex()>()]
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : goto [?= $i18 = virtualinvoke $r5.<java.text.ParsePosition: int getIndex()>()] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i18 = virtualinvoke $r5.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : $i18 = virtualinvoke $r5.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i18)
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i18) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, r1, " ")
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, r1, " ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : return r3
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : return r3 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if r6 == null
org.apache.pdfbox.util.DateConverter.parseDate : if r6 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $i6 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseDate : $i6 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $i7 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.parseDate : $i7 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if $i6 == $i7
org.apache.pdfbox.util.DateConverter.parseDate : if $i6 == $i7 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : i10 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseDate : i10 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $i8 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.parseDate : $i8 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if i10 != $i8
org.apache.pdfbox.util.DateConverter.parseDate : if i10 != $i8 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i10)
org.apache.pdfbox.util.DateConverter.parseDate : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i10) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : return r6
org.apache.pdfbox.util.DateConverter.parseDate : return r6 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : if r2 == null
org.apache.pdfbox.util.DateConverter.toCalendar : if r2 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $i1 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.toCalendar : $i1 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : $i2 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.toCalendar : $i2 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : if $i1 == $i2
org.apache.pdfbox.util.DateConverter.toCalendar : if $i1 == $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : return r2
org.apache.pdfbox.util.DateConverter.toCalendar : return r2 >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(15)
org.apache.pdfbox.util.DateConverter.toISO8601 : $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(15) >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16)
org.apache.pdfbox.util.DateConverter.toISO8601 : $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16) >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : $i2 = $i0 + $i1
org.apache.pdfbox.util.DateConverter.toISO8601 : $i2 = $i0 + $i1 >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : $l3 = (long) $i2
org.apache.pdfbox.util.DateConverter.toISO8601 : $l3 = (long) $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : r1 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.lang.String formatTZoffset(long,java.lang.String)>($l3, ":")
org.apache.pdfbox.util.DateConverter.toISO8601 : r1 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.lang.String formatTZoffset(long,java.lang.String)>($l3, ":") >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r3 = new java.text.SimpleDateFormat
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r3 = new java.text.SimpleDateFormat >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("Z")
org.apache.pdfbox.util.DateConverter.formatTZoffset : specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("Z") >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r4 = new java.util.SimpleTimeZone
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r4 = new java.util.SimpleTimeZone >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $i1 = staticinvoke <org.apache.pdfbox.util.DateConverter: int restrainTZoffset(long)>(l0)
org.apache.pdfbox.util.DateConverter.formatTZoffset : $i1 = staticinvoke <org.apache.pdfbox.util.DateConverter: int restrainTZoffset(long)>(l0) >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b0 = l9 cmp 50400000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b0 = l9 cmp 50400000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b0 > 0
org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b0 > 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b7 = l9 cmp -50400000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b7 = l9 cmp -50400000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b7 < 0
org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b7 < 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $i8 = (int) l9
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $i8 = (int) l9 >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : return $i8
org.apache.pdfbox.util.DateConverter.restrainTZoffset : return $i8 >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i1, "unknown")
org.apache.pdfbox.util.DateConverter.formatTZoffset : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i1, "unknown") >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : virtualinvoke $r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r4)
org.apache.pdfbox.util.DateConverter.formatTZoffset : virtualinvoke $r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r5 = new java.util.Date
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r5 = new java.util.Date >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : specialinvoke $r5.<java.util.Date: void <init>()>()
org.apache.pdfbox.util.DateConverter.formatTZoffset : specialinvoke $r5.<java.util.Date: void <init>()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : r2 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r5)
org.apache.pdfbox.util.DateConverter.formatTZoffset : r2 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r5) >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r6 = new java.lang.StringBuilder
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.util.DateConverter.formatTZoffset : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 3)
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 3) >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(3)
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(3) >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.util.DateConverter.formatTZoffset : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.formatTZoffset : return $r12
org.apache.pdfbox.util.DateConverter.formatTZoffset : return $r12 >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : $r3 = <java.util.Locale: java.util.Locale US>
org.apache.pdfbox.util.DateConverter.toISO8601 : $r3 = <java.util.Locale: java.util.Locale US> >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : $r2 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.DateConverter.toISO8601 : $r2 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : $r2[0] = r0
org.apache.pdfbox.util.DateConverter.toISO8601 : $r2[0] = r0 >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : $r2[1] = r1
org.apache.pdfbox.util.DateConverter.toISO8601 : $r2[1] = r1 >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "%1$4tY-%1$2tm-%1$2tdT%1$2tH:%1$2tM:%1$2tS%2$s", $r2)
org.apache.pdfbox.util.DateConverter.toISO8601 : $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "%1$4tY-%1$2tm-%1$2tdT%1$2tH:%1$2tM:%1$2tS%2$s", $r2) >>>>>>>> org.apache.pdfbox.util.DateConverter.toISO8601 : return $r4
org.apache.pdfbox.util.DateConverter.toISO8601 : return $r4 >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : if r0 != null
org.apache.pdfbox.util.DateConverter.toString : if r0 != null >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(15)
org.apache.pdfbox.util.DateConverter.toString : $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(15) >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16)
org.apache.pdfbox.util.DateConverter.toString : $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16) >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : $i2 = $i0 + $i1
org.apache.pdfbox.util.DateConverter.toString : $i2 = $i0 + $i1 >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : $l3 = (long) $i2
org.apache.pdfbox.util.DateConverter.toString : $l3 = (long) $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : r1 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.lang.String formatTZoffset(long,java.lang.String)>($l3, "\'")
org.apache.pdfbox.util.DateConverter.toString : r1 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.lang.String formatTZoffset(long,java.lang.String)>($l3, "\'") >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : $r3 = <java.util.Locale: java.util.Locale US>
org.apache.pdfbox.util.DateConverter.toString : $r3 = <java.util.Locale: java.util.Locale US> >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : $r2 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.DateConverter.toString : $r2 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : $r2[0] = r0
org.apache.pdfbox.util.DateConverter.toString : $r2[0] = r0 >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : $r2[1] = r1
org.apache.pdfbox.util.DateConverter.toString : $r2[1] = r1 >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "D:%1$4tY%1$2tm%1$2td%1$2tH%1$2tM%1$2tS%2$s\'", $r2)
org.apache.pdfbox.util.DateConverter.toString : $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "D:%1$4tY%1$2tm%1$2td%1$2tH%1$2tM%1$2tS%2$s\'", $r2) >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : return $r4
org.apache.pdfbox.util.DateConverter.toString : return $r4 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipString : return 0
org.apache.pdfbox.util.DateConverter.skipString : return 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : if $c4 == 32
org.apache.pdfbox.util.DateConverter.skipOptionals : if $c4 == 32 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $c9 = $c4
org.apache.pdfbox.util.DateConverter.skipOptionals : $c9 = $c4 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : goto [?= c8 = $c9]
org.apache.pdfbox.util.DateConverter.skipOptionals : goto [?= c8 = $c9] >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : c8 = $c9
org.apache.pdfbox.util.DateConverter.skipOptionals : c8 = $c9 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i6 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.skipOptionals : $i6 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $i7 = $i6 + 1
org.apache.pdfbox.util.DateConverter.skipOptionals : $i7 = $i6 + 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i7)
org.apache.pdfbox.util.DateConverter.skipOptionals : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>($i7) >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : goto [?= (branch)]
org.apache.pdfbox.util.DateConverter.skipOptionals : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $z2 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)>(r0, r6, $r4)
org.apache.pdfbox.util.DateConverter.parseDate : $z2 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)>(r0, r6, $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r4 = new java.text.ParsePosition
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r4 = new java.text.ParsePosition >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>($i2)
org.apache.pdfbox.util.DateConverter.parseTZoffset : specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>($i2) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r5 = new java.util.SimpleTimeZone
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r5 = new java.util.SimpleTimeZone >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : specialinvoke $r5.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "GMT")
org.apache.pdfbox.util.DateConverter.parseTZoffset : specialinvoke $r5.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "GMT") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : r9 = $r5
org.apache.pdfbox.util.DateConverter.parseTZoffset : r9 = $r5 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : c15 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "Z+- ")
org.apache.pdfbox.util.DateConverter.parseTZoffset : c15 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "Z+- ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if c15 == 90
org.apache.pdfbox.util.DateConverter.parseTZoffset : if c15 == 90 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z2 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "GMT", $r4)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z2 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "GMT", $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z2 != 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z2 != 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z3 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "UTC", $r4)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z3 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean skipString(java.lang.String,java.lang.String,java.text.ParsePosition)>(r0, "UTC", $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z3 == 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z3 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z4 = 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z4 = 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : z0 = $z4
org.apache.pdfbox.util.DateConverter.parseTZoffset : z0 = $z4 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z4 != 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z4 != 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $c16 = c15
org.apache.pdfbox.util.DateConverter.parseTZoffset : $c16 = c15 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, -999)]
org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, -999)] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, -999)
org.apache.pdfbox.util.DateConverter.parseTZoffset : i0 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, -999) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "\': ")
org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "\': ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : i1 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, 0)
org.apache.pdfbox.util.DateConverter.parseTZoffset : i1 = staticinvoke <org.apache.pdfbox.util.DateConverter: int parseTimeField(java.lang.String,java.text.ParsePosition,int,int)>(r0, $r4, 2, 0) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "\' ")
org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "\' ") >>>>>>>> org.apache.pdfbox.util.DateConverter.skipOptionals : $c9 = c8
org.apache.pdfbox.util.DateConverter.skipOptionals : $c9 = c8 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if i0 == -999
org.apache.pdfbox.util.DateConverter.parseTZoffset : if i0 == -999 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $c16 != 45
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $c16 != 45 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $b18 = 1
org.apache.pdfbox.util.DateConverter.parseTZoffset : $b18 = 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l12 = (long) $b18
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l12 = (long) $b18 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i7 = i0 * 3600000
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i7 = i0 * 3600000 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l10 = (long) $i7
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l10 = (long) $i7 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l8 = (long) i1
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l8 = (long) i1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l9 = $l8 * 60000L
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l9 = $l8 * 60000L >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l11 = $l10 + $l9
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l11 = $l10 + $l9 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $l13 = $l12 * $l11
org.apache.pdfbox.util.DateConverter.parseTZoffset : $l13 = $l12 * $l11 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i14 = staticinvoke <org.apache.pdfbox.util.DateConverter: int restrainTZoffset(long)>($l13)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i14 = staticinvoke <org.apache.pdfbox.util.DateConverter: int restrainTZoffset(long)>($l13) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke $r5.<java.util.TimeZone: void setRawOffset(int)>($i14)
org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke $r5.<java.util.TimeZone: void setRawOffset(int)>($i14) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: void updateZoneId(java.util.TimeZone)>($r5)
org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: void updateZoneId(java.util.TimeZone)>($r5) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : i3 = virtualinvoke r0.<java.util.TimeZone: int getRawOffset()>()
org.apache.pdfbox.util.DateConverter.updateZoneId : i3 = virtualinvoke r0.<java.util.TimeZone: int getRawOffset()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : b4 = 43
org.apache.pdfbox.util.DateConverter.updateZoneId : b4 = 43 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if i3 >= 0
org.apache.pdfbox.util.DateConverter.updateZoneId : if i3 >= 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : i0 = i3 / 3600000
org.apache.pdfbox.util.DateConverter.updateZoneId : i0 = i3 / 3600000 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $i2 = i3 % 3600000
org.apache.pdfbox.util.DateConverter.updateZoneId : $i2 = i3 % 3600000 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : i1 = $i2 / 60000
org.apache.pdfbox.util.DateConverter.updateZoneId : i1 = $i2 / 60000 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if i3 != 0
org.apache.pdfbox.util.DateConverter.updateZoneId : if i3 != 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if b4 != 43
org.apache.pdfbox.util.DateConverter.updateZoneId : if b4 != 43 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if i0 > 12
org.apache.pdfbox.util.DateConverter.updateZoneId : if i0 > 12 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r7 = <java.util.Locale: java.util.Locale US>
org.apache.pdfbox.util.DateConverter.updateZoneId : $r7 = <java.util.Locale: java.util.Locale US> >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r6 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.DateConverter.updateZoneId : $r6 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r6[0] = $r8
org.apache.pdfbox.util.DateConverter.updateZoneId : $r6[0] = $r8 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r6[1] = $r9
org.apache.pdfbox.util.DateConverter.updateZoneId : $r6[1] = $r9 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "GMT+%02d:%02d", $r6)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "GMT+%02d:%02d", $r6) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>($r10)
org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>($r10) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : goto [?= return]
org.apache.pdfbox.util.DateConverter.updateZoneId : goto [?= return] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= staticinvoke <org.apache.pdfbox.util.DateConverter: void adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)>(r1, r9)]
org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= staticinvoke <org.apache.pdfbox.util.DateConverter: void adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)>(r1, r9)] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: void adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)>(r1, r9)
org.apache.pdfbox.util.DateConverter.parseTZoffset : staticinvoke <org.apache.pdfbox.util.DateConverter: void adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)>(r1, r9) >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : virtualinvoke r0.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>(r1)
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : virtualinvoke r0.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>(r1) >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i1 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(15)
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i1 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(15) >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i2 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(16)
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i2 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(16) >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i3 = $i1 + $i2
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i3 = $i1 + $i2 >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : i0 = $i3 / 60000
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : i0 = $i3 / 60000 >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i4 = neg i0
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : $i4 = neg i0 >>>>>>>> org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : virtualinvoke r0.<java.util.GregorianCalendar: void add(int,int)>(12, $i4)
org.apache.pdfbox.util.DateConverter.adjustTimeZoneNicely : virtualinvoke r0.<java.util.GregorianCalendar: void add(int,int)>(12, $i4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i20 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i20 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i20)
org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i20) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : return 1
org.apache.pdfbox.util.DateConverter.parseTZoffset : return 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if $z2 == 0
org.apache.pdfbox.util.DateConverter.parseDate : if $z2 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTimeField : goto [?= $i11 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()]
org.apache.pdfbox.util.DateConverter.parseTimeField : goto [?= $i11 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>()] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseBigEndianDate : return null
org.apache.pdfbox.util.DateConverter.parseBigEndianDate : return null >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : virtualinvoke $r4.<java.text.ParsePosition: void setIndex(int)>(i0)
org.apache.pdfbox.util.DateConverter.parseDate : virtualinvoke $r4.<java.text.ParsePosition: void setIndex(int)>(i0) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0)
org.apache.pdfbox.util.DateConverter.parseDate : $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $z3 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c11)
org.apache.pdfbox.util.DateConverter.parseDate : $z3 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c11) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if $z3 == 0
org.apache.pdfbox.util.DateConverter.parseDate : if $z3 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $r7 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] DIGIT_START_FORMATS>
org.apache.pdfbox.util.DateConverter.parseDate : $r7 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] DIGIT_START_FORMATS> >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : goto [?= r8 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)>(r0, $r7, $r4)]
org.apache.pdfbox.util.DateConverter.parseDate : goto [?= r8 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)>(r0, $r7, $r4)] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : r8 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)>(r0, $r7, $r4)
org.apache.pdfbox.util.DateConverter.parseDate : r8 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)>(r0, $r7, $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : i0 = lengthof r1
org.apache.pdfbox.util.DateConverter.parseSimpleDate : i0 = lengthof r1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : i4 = 0
org.apache.pdfbox.util.DateConverter.parseSimpleDate : i4 = 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : if i4 >= i0
org.apache.pdfbox.util.DateConverter.parseSimpleDate : if i4 >= i0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : r4 = r1[i4]
org.apache.pdfbox.util.DateConverter.parseSimpleDate : r4 = r1[i4] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : $r8 = new java.text.ParsePosition
org.apache.pdfbox.util.DateConverter.parseSimpleDate : $r8 = new java.text.ParsePosition >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseSimpleDate : $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : specialinvoke $r8.<java.text.ParsePosition: void <init>(int)>($i1)
org.apache.pdfbox.util.DateConverter.parseSimpleDate : specialinvoke $r8.<java.text.ParsePosition: void <init>(int)>($i1) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : $r9 = new java.text.SimpleDateFormat
org.apache.pdfbox.util.DateConverter.parseSimpleDate : $r9 = new java.text.SimpleDateFormat >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : $r10 = <java.util.Locale: java.util.Locale ENGLISH>
org.apache.pdfbox.util.DateConverter.parseSimpleDate : $r10 = <java.util.Locale: java.util.Locale ENGLISH> >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : specialinvoke $r9.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r4, $r10)
org.apache.pdfbox.util.DateConverter.parseSimpleDate : specialinvoke $r9.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r4, $r10) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : r7 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar newGreg()>()
org.apache.pdfbox.util.DateConverter.parseSimpleDate : r7 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.GregorianCalendar newGreg()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : virtualinvoke $r9.<java.text.SimpleDateFormat: void setCalendar(java.util.Calendar)>(r7)
org.apache.pdfbox.util.DateConverter.parseSimpleDate : virtualinvoke $r9.<java.text.SimpleDateFormat: void setCalendar(java.util.Calendar)>(r7) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : $r11 = virtualinvoke $r9.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r0, $r8)
org.apache.pdfbox.util.DateConverter.parseSimpleDate : $r11 = virtualinvoke $r9.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r0, $r8) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : if $r11 == null
org.apache.pdfbox.util.DateConverter.parseSimpleDate : if $r11 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : i4 = i4 + 1
org.apache.pdfbox.util.DateConverter.parseSimpleDate : i4 = i4 + 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : goto [?= (branch)]
org.apache.pdfbox.util.DateConverter.parseSimpleDate : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : $i2 = virtualinvoke $r8.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseSimpleDate : $i2 = virtualinvoke $r8.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i2)
org.apache.pdfbox.util.DateConverter.parseSimpleDate : virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i2) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, r2, " ")
org.apache.pdfbox.util.DateConverter.parseSimpleDate : staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, r2, " ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : return r7
org.apache.pdfbox.util.DateConverter.parseSimpleDate : return r7 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if r8 == null
org.apache.pdfbox.util.DateConverter.parseDate : if r8 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $i3 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseDate : $i3 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $i4 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.parseDate : $i4 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if $i3 == $i4
org.apache.pdfbox.util.DateConverter.parseDate : if $i3 == $i4 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : i12 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseDate : i12 = virtualinvoke $r4.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $i5 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.parseDate : $i5 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if i12 != $i5
org.apache.pdfbox.util.DateConverter.parseDate : if i12 != $i5 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i12)
org.apache.pdfbox.util.DateConverter.parseDate : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i12) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : return r8
org.apache.pdfbox.util.DateConverter.parseDate : return r8 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $r7 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] ALPHA_START_FORMATS>
org.apache.pdfbox.util.DateConverter.parseDate : $r7 = <org.apache.pdfbox.util.DateConverter: java.lang.String[] ALPHA_START_FORMATS> >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $b18 = -1
org.apache.pdfbox.util.DateConverter.parseTZoffset : $b18 = -1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= $l12 = (long) $b18]
org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= $l12 = (long) $b18] >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : b4 = 45
org.apache.pdfbox.util.DateConverter.updateZoneId : b4 = 45 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : i3 = neg i3
org.apache.pdfbox.util.DateConverter.updateZoneId : i3 = neg i3 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if b4 != 45
org.apache.pdfbox.util.DateConverter.updateZoneId : if b4 != 45 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : if i0 > 14
org.apache.pdfbox.util.DateConverter.updateZoneId : if i0 > 14 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r2 = <java.util.Locale: java.util.Locale US>
org.apache.pdfbox.util.DateConverter.updateZoneId : $r2 = <java.util.Locale: java.util.Locale US> >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r1 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.DateConverter.updateZoneId : $r1 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r1[0] = $r3
org.apache.pdfbox.util.DateConverter.updateZoneId : $r1[0] = $r3 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r1[1] = $r4
org.apache.pdfbox.util.DateConverter.updateZoneId : $r1[1] = $r4 >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "GMT-%02d:%02d", $r1)
org.apache.pdfbox.util.DateConverter.updateZoneId : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "GMT-%02d:%02d", $r1) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>($r5)
org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>($r5) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if z0 != 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if z0 != 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i5 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i5 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i5)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i5) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : r10 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : r10 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r10)
org.apache.pdfbox.util.DateConverter.parseTZoffset : r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r10) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r7 = "GMT"
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r7 = "GMT" >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $r8 = virtualinvoke r9.<java.util.TimeZone: java.lang.String getID()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $r8 = virtualinvoke r9.<java.util.TimeZone: java.lang.String getID()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z1 == 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : return 0
org.apache.pdfbox.util.DateConverter.parseTZoffset : return 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : $z1 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)>(r0, r8, $r4)
org.apache.pdfbox.util.DateConverter.parseDate : $z1 = staticinvoke <org.apache.pdfbox.util.DateConverter: boolean parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)>(r0, r8, $r4) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $z4 = 1
org.apache.pdfbox.util.DateConverter.parseTZoffset : $z4 = 1 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= z0 = $z4]
org.apache.pdfbox.util.DateConverter.parseTZoffset : goto [?= z0 = $z4] >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $c16 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "+- ")
org.apache.pdfbox.util.DateConverter.parseTZoffset : $c16 = staticinvoke <org.apache.pdfbox.util.DateConverter: char skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)>(r0, $r4, "+- ") >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if $z1 == 0
org.apache.pdfbox.util.DateConverter.parseDate : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseSimpleDate : return null
org.apache.pdfbox.util.DateConverter.parseSimpleDate : return null >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : if r5 == null
org.apache.pdfbox.util.DateConverter.parseDate : if r5 == null >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : return null
org.apache.pdfbox.util.DateConverter.toCalendar : return null >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $l1 = l9 + 43200000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $l1 = l9 + 43200000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $l2 = $l1 % 86400000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $l2 = $l1 % 86400000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $l3 = $l2 + 86400000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $l3 = $l2 + 86400000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : l10 = $l3 % 86400000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : l10 = $l3 % 86400000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b4 = l10 cmp 0L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $b4 = l10 cmp 0L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b4 != 0
org.apache.pdfbox.util.DateConverter.restrainTZoffset : if $b4 != 0 >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $l5 = l10 - 43200000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $l5 = l10 - 43200000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : l11 = $l5 % 43200000L
org.apache.pdfbox.util.DateConverter.restrainTZoffset : l11 = $l5 % 43200000L >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : $i6 = (int) l11
org.apache.pdfbox.util.DateConverter.restrainTZoffset : $i6 = (int) l11 >>>>>>>> org.apache.pdfbox.util.DateConverter.restrainTZoffset : return $i6
org.apache.pdfbox.util.DateConverter.restrainTZoffset : return $i6 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : i9 = i10
org.apache.pdfbox.util.DateConverter.parseDate : i9 = i10 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : r5 = r6
org.apache.pdfbox.util.DateConverter.parseDate : r5 = r6 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i9)
org.apache.pdfbox.util.DateConverter.parseDate : virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i9) >>>>>>>> org.apache.pdfbox.util.DateConverter.parseDate : return r5
org.apache.pdfbox.util.DateConverter.parseDate : return r5 >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : $i6 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.pdfbox.util.DateConverter.parseTZoffset : $i6 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke $r4.<java.text.ParsePosition: void setIndex(int)>($i6)
org.apache.pdfbox.util.DateConverter.parseTZoffset : virtualinvoke $r4.<java.text.ParsePosition: void setIndex(int)>($i6) >>>>>>>> org.apache.pdfbox.util.DateConverter.updateZoneId : virtualinvoke r0.<java.util.TimeZone: void setID(java.lang.String)>("GMT")
