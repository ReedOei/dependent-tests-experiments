org.apache.pdfbox.io.RandomAccessBuffer.length : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.length : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.length : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.length : return $l0
org.apache.pdfbox.io.RandomAccessBuffer.length : return $l0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.pdfbox.pdfparser.nonSequentialPDFParser.eofLookupRange")
org.apache.pdfbox.pdfparser.PDFParser.init : r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.pdfbox.pdfparser.nonSequentialPDFParser.eofLookupRange") >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : if r2 == null
org.apache.pdfbox.pdfparser.PDFParser.init : if r2 == null >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : $r11 = new org.apache.pdfbox.cos.COSDocument
org.apache.pdfbox.pdfparser.PDFParser.init : $r11 = new org.apache.pdfbox.cos.COSDocument >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : specialinvoke $r11.<org.apache.pdfbox.cos.COSDocument: void <init>(org.apache.pdfbox.io.ScratchFile)>(r1)
org.apache.pdfbox.pdfparser.PDFParser.init : specialinvoke $r11.<org.apache.pdfbox.cos.COSDocument: void <init>(org.apache.pdfbox.io.ScratchFile)>(r1) >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document> = $r11
org.apache.pdfbox.pdfparser.PDFParser.init : r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document> = $r11 >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.parse : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: boolean parsePDFHeader()>()
org.apache.pdfbox.pdfparser.PDFParser.parse : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFParser: boolean parsePDFHeader()>() >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parsePDFHeader : $z0 = specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: boolean parseHeader(java.lang.String,java.lang.String)>("%PDF-", "1.4")
org.apache.pdfbox.pdfparser.COSParser.parsePDFHeader : $z0 = specialinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: boolean parseHeader(java.lang.String,java.lang.String)>("%PDF-", "1.4") >>>>>>>> org.apache.pdfbox.pdfparser.COSParser.parseHeader : r34 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>()
org.apache.pdfbox.pdfparser.COSParser.parseHeader : r34 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.COSParser: java.lang.String readLine()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $z0 = interfaceinvoke $r2.<org.apache.pdfbox.pdfparser.SequentialSource: boolean isEOF()>()
org.apache.pdfbox.pdfparser.BaseParser.readLine : $z0 = interfaceinvoke $r2.<org.apache.pdfbox.pdfparser.SequentialSource: boolean isEOF()>() >>>>>>>> org.apache.pdfbox.pdfparser.RandomAccessSource.isEOF : $r1 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader>
org.apache.pdfbox.pdfparser.RandomAccessSource.isEOF : $r1 = r0.<org.apache.pdfbox.pdfparser.RandomAccessSource: org.apache.pdfbox.io.RandomAccessRead reader> >>>>>>>> org.apache.pdfbox.pdfparser.RandomAccessSource.isEOF : $z0 = interfaceinvoke $r1.<org.apache.pdfbox.io.RandomAccessRead: boolean isEOF()>()
org.apache.pdfbox.pdfparser.RandomAccessSource.isEOF : $z0 = interfaceinvoke $r1.<org.apache.pdfbox.io.RandomAccessRead: boolean isEOF()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $l1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $l1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $b2 = $l1 cmp $l0
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $b2 = $l1 cmp $l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : if $b2 < 0
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : if $b2 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $z0 = 1
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $z0 = 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : goto [?= return $z0]
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : return $z0
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : return $z0 >>>>>>>> org.apache.pdfbox.pdfparser.RandomAccessSource.isEOF : return $z0
org.apache.pdfbox.pdfparser.RandomAccessSource.isEOF : return $z0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z0 == 0
org.apache.pdfbox.pdfparser.BaseParser.readLine : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : $r8 = new java.io.IOException
org.apache.pdfbox.pdfparser.BaseParser.readLine : $r8 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Error: End-of-File, expected line")
org.apache.pdfbox.pdfparser.BaseParser.readLine : specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Error: End-of-File, expected line") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readLine : throw $r8
org.apache.pdfbox.pdfparser.BaseParser.readLine : throw $r8 >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.parse : $r7 = r0.<org.apache.pdfbox.pdfparser.PDFParser: java.io.InputStream keyStoreInputStream>
org.apache.pdfbox.pdfparser.PDFParser.parse : $r7 = r0.<org.apache.pdfbox.pdfparser.PDFParser: java.io.InputStream keyStoreInputStream> >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.parse : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>($r7)
org.apache.pdfbox.pdfparser.PDFParser.parse : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>($r7) >>>>>>>> org.apache.pdfbox.io.IOUtils.closeQuietly : if r0 == null
org.apache.pdfbox.io.IOUtils.closeQuietly : if r0 == null >>>>>>>> org.apache.pdfbox.io.IOUtils.closeQuietly : goto [?= return]
org.apache.pdfbox.io.IOUtils.closeQuietly : goto [?= return] >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.parse : $r8 = r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.PDFParser.parse : $r8 = r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.parse : if $r8 == null
org.apache.pdfbox.pdfparser.PDFParser.parse : if $r8 == null >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.parse : $r9 = r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document>
org.apache.pdfbox.pdfparser.PDFParser.parse : $r9 = r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document> >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.parse : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>($r9)
org.apache.pdfbox.pdfparser.PDFParser.parse : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>($r9) >>>>>>>> org.apache.pdfbox.io.IOUtils.closeQuietly : interfaceinvoke r0.<java.io.Closeable: void close()>()
org.apache.pdfbox.io.IOUtils.closeQuietly : interfaceinvoke r0.<java.io.Closeable: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>()
org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : return $r1
org.apache.pdfbox.cos.COSDocument.getObjects : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if r1 == null
org.apache.pdfbox.cos.COSDocument.close : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r3 == null
org.apache.pdfbox.cos.COSDocument.close : if $r3 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r4 == null
org.apache.pdfbox.cos.COSDocument.close : if $r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1
org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1 >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.parse : r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document> = null
org.apache.pdfbox.pdfparser.PDFParser.parse : r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document> = null >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.parse : throw $r6
