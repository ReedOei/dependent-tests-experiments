org.apache.pdfbox.io.RandomAccessBuffer.length : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.length : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.length : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.length : return $l0
org.apache.pdfbox.io.RandomAccessBuffer.length : return $l0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.pdfbox.pdfparser.nonSequentialPDFParser.eofLookupRange")
org.apache.pdfbox.pdfparser.PDFParser.init : r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.pdfbox.pdfparser.nonSequentialPDFParser.eofLookupRange") >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : if r2 == null
org.apache.pdfbox.pdfparser.PDFParser.init : if r2 == null >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : $r11 = new org.apache.pdfbox.cos.COSDocument
org.apache.pdfbox.pdfparser.PDFParser.init : $r11 = new org.apache.pdfbox.cos.COSDocument >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : specialinvoke $r11.<org.apache.pdfbox.cos.COSDocument: void <init>(org.apache.pdfbox.io.ScratchFile)>(r1)
org.apache.pdfbox.pdfparser.PDFParser.init : specialinvoke $r11.<org.apache.pdfbox.cos.COSDocument: void <init>(org.apache.pdfbox.io.ScratchFile)>(r1) >>>>>>>> org.apache.pdfbox.pdfparser.PDFParser.init : r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document> = $r11
org.apache.pdfbox.pdfparser.PDFParser.init : r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.cos.COSDocument document> = $r11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l3 cmp $l2
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l3 cmp $l2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i5
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i6)
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i6) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r3 = (byte[]) $r2
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r3 = (byte[]) $r2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l8 = (long) $i7
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l8 = (long) $i7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l10 = $l9 % $l8
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l10 = $l9 % $l8 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i11 = (int) $l10
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i11 = (int) $l10 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i11
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $l1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.read : $l1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.read : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $b2 = $l1 cmp $l0
org.apache.pdfbox.io.RandomAccessBuffer.read : $b2 = $l1 cmp $l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : if $b2 < 0
org.apache.pdfbox.io.RandomAccessBuffer.read : if $b2 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : return -1
