org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.setOwner : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.setOwner : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName O>
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.setOwner : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName O> >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.setOwner : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r1)
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.setOwner : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = null
org.apache.pdfbox.cos.COSDictionary.setName : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1]
org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2
org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r1 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O=")
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O=") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: java.lang.String getOwner()>()
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: java.lang.String getOwner()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getOwner : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getOwner : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getOwner : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName O>
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getOwner : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName O> >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getOwner : $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getOwner : $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.getName : return $r1
org.apache.pdfbox.cos.COSName.getName : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5]
org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5
org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getOwner : return $r3
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getOwner : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : return $r5
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.toString : return $r5 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Placement")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Placement") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : if $r3 == null
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : if $r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : $z0 = 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : $z0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : return $z0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.isSpecified : return $z0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z0 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("WritingMode")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("WritingMode") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z1 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BackgroundColor")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BackgroundColor") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z2 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BorderColor")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BorderColor") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z3 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BorderStyle")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BorderStyle") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z4 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z33 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BorderThickness")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z33 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BorderThickness") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z33 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z33 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z34 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Padding")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z34 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Padding") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z34 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z34 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z35 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Color")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z35 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Color") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z35 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z35 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("SpaceBefore")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("SpaceBefore") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z5 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("SpaceAfter")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("SpaceAfter") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z6 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("StartIndent")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("StartIndent") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z7 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("EndIndent")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("EndIndent") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z8 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextIndent")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextIndent") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z9 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z9 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextAlign")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextAlign") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z10 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BBox")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BBox") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z11 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z11 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z12 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Width")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z12 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Width") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z12 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z12 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z36 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Height")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z36 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("Height") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z36 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z36 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z37 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BlockAlign")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z37 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BlockAlign") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z37 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z37 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z13 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("InlineAlign")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z13 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("InlineAlign") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z13 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z13 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TBorderStyle")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TBorderStyle") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z14 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z14 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z38 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TPadding")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z38 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TPadding") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z38 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z38 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z39 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BaselineShift")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z39 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("BaselineShift") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z39 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z39 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("LineHeight")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("LineHeight") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z15 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z15 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z40 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextDecorationColor")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z40 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextDecorationColor") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z40 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z40 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextDecorationThickness")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextDecorationThickness") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z16 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z16 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextDecorationType")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("TextDecorationType") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z17 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z17 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z18 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("RubyAlign")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z18 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("RubyAlign") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z18 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z18 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("RubyPosition")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("RubyPosition") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z19 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z19 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z20 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("GlyphOrientationVertical")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z20 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("GlyphOrientationVertical") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z20 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z20 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z21 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("ColumnCount")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z21 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("ColumnCount") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z21 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z21 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z22 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("ColumnGap")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z22 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("ColumnGap") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z22 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z22 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z41 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("ColumnWidths")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $z41 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: boolean isSpecified(java.lang.String)>("ColumnWidths") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z41 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : if $z41 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $r139 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : $r139 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : return $r139
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.toString : return $r139 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("ListNumbering")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("ListNumbering") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z0 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("RowSpan")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("RowSpan") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z1 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("ColSpan")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("ColSpan") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z2 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("Headers")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("Headers") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z3 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("Scope")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("Scope") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z4 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("Summary")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $z5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: boolean isSpecified(java.lang.String)>("Summary") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z5 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : return $r4
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.toString : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.setLineHeightAuto : virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("LineHeight", "Auto")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.setLineHeightAuto : virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: void setName(java.lang.String,java.lang.String)>("LineHeight", "Auto") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : r3 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : r3 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: void setName(java.lang.String,java.lang.String)>(r1, r2)
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: void setName(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.setName : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r2)
org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : $r7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : r4 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : r4 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: void potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)>(r3, r4)
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.setName : virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: void potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)>(r3, r4) >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.potentiallyNotifyChanged : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: boolean isValueChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)>(r1, r2)
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.potentiallyNotifyChanged : $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: boolean isValueChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)>(r1, r2) >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : if r1 != null
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : if r2 == null
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : $z1 = 1
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : $z1 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : goto [?= return $z1]
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : goto [?= return $z1] >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : return $z1
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.isValueChanged : return $z1 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.potentiallyNotifyChanged : if $z0 == 0
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.potentiallyNotifyChanged : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.potentiallyNotifyChanged : virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: void notifyChanged()>()
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.potentiallyNotifyChanged : virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: void notifyChanged()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.notifyChanged : $r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement getStructureElement()>()
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.notifyChanged : $r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement getStructureElement()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getStructureElement : $r1 = r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement structureElement>
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getStructureElement : $r1 = r0.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement structureElement> >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getStructureElement : return $r1
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.getStructureElement : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.notifyChanged : if $r1 == null
org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject.notifyChanged : if $r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.getTextAlign : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("TextAlign", "Start")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.getTextAlign : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject: java.lang.String getName(java.lang.String,java.lang.String)>("TextAlign", "Start") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getName : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getName : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getName : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(java.lang.String,java.lang.String)>(r1, r2)
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getName : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r2)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z1 = r2 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z1 = r2 instanceof org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : if r3 != null
org.apache.pdfbox.cos.COSDictionary.getNameAsString : if r3 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r3 = r2
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r3 = r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r3
org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : return $r4
org.apache.pdfbox.cos.COSDictionary.getNameAsString : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getName : return $r4
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getName : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.getTextAlign : return $r1
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject.getTextAlign : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.getHeaders : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: java.lang.String[] getArrayOfString(java.lang.String)>("Headers")
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.getHeaders : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject: java.lang.String[] getArrayOfString(java.lang.String)>("Headers") >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : r2 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : r2 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : if $z0 == 0
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : return null
org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject.getArrayOfString : return null >>>>>>>> org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject.getHeaders : return $r1
