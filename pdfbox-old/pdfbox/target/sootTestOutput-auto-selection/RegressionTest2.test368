org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.putAll : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $r3 == null
org.apache.pdfbox.util.SmallMap.putAll : if $r3 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $i1 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.pdfbox.util.SmallMap.putAll : $i1 = interfaceinvoke r1.<java.util.Map: int size()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.size : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.size : if $r1 != null
org.apache.pdfbox.util.SmallMap.size : if $r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.size : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.size : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $i1 = $i0 >> 1
org.apache.pdfbox.util.SmallMap.size : $i1 = $i0 >> 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.size : return $i1
org.apache.pdfbox.util.SmallMap.size : return $i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $i2 = $i1 << 1
org.apache.pdfbox.util.SmallMap.putAll : $i2 = $i1 << 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r4 = newarray (java.lang.Object)[$i2]
org.apache.pdfbox.util.SmallMap.putAll : $r4 = newarray (java.lang.Object)[$i2] >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r4
org.apache.pdfbox.util.SmallMap.putAll : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r4 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : i9 = 0
org.apache.pdfbox.util.SmallMap.putAll : i9 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.util.SmallMap.putAll : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.entrySet : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : if $z0 == 0
org.apache.pdfbox.util.SmallMap.entrySet : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r2 = new java.util.LinkedHashSet
org.apache.pdfbox.util.SmallMap.entrySet : $r2 = new java.util.LinkedHashSet >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>()
org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : i1 = 0
org.apache.pdfbox.util.SmallMap.entrySet : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.entrySet : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $i0 = lengthof $r3
org.apache.pdfbox.util.SmallMap.entrySet : $i0 = lengthof $r3 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.entrySet : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r5 = new org.apache.pdfbox.util.SmallMap$SmallMapEntry
org.apache.pdfbox.util.SmallMap.entrySet : $r5 = new org.apache.pdfbox.util.SmallMap$SmallMapEntry >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r5.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: void <init>(org.apache.pdfbox.util.SmallMap,int)>(r0, i1)
org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r5.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: void <init>(org.apache.pdfbox.util.SmallMap,int)>(r0, i1) >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5)
org.apache.pdfbox.util.SmallMap.entrySet : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $r1 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: java.lang.Object getKey()>()
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $r1 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1)
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.access$000 : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.access$000 : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.access$000 : return $r1
org.apache.pdfbox.util.SmallMap.access$000 : return $r1 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r3 = $r2[$i0]
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r3 = $r2[$i0] >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : return $r3
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : return $r3 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>()
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.pdfbox.cos.COSName.hashCode : $i0 = r0.<org.apache.pdfbox.cos.COSName: int hashCode>
org.apache.pdfbox.cos.COSName.hashCode : $i0 = r0.<org.apache.pdfbox.cos.COSName: int hashCode> >>>>>>>> org.apache.pdfbox.cos.COSName.hashCode : return $i0
org.apache.pdfbox.cos.COSName.hashCode : return $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : return $i0
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : return $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.entrySet : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : goto [?= $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.entrySet : goto [?= $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2)
org.apache.pdfbox.util.SmallMap.entrySet : $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : return $r4
org.apache.pdfbox.util.SmallMap.entrySet : return $r4 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : r26 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.util.SmallMap.putAll : r26 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.util.SmallMap.putAll : $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $z1 == 0
org.apache.pdfbox.util.SmallMap.putAll : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r6 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.util.SmallMap.putAll : $r6 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : r27 = (java.util.Map$Entry) $r6
org.apache.pdfbox.util.SmallMap.putAll : r27 = (java.util.Map$Entry) $r6 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r7 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.util.SmallMap.putAll : $r7 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $r7 == null
org.apache.pdfbox.util.SmallMap.putAll : if $r7 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r9 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.util.SmallMap.putAll : $r9 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1)
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1) >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i1 = $i0 + 1
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i1 = $i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : return $r3
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : return $r3 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $r9 != null
org.apache.pdfbox.util.SmallMap.putAll : if $r9 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r10 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.putAll : $r10 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : i10 = i9 + 1
org.apache.pdfbox.util.SmallMap.putAll : i10 = i9 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r11 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.util.SmallMap.putAll : $r11 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r10[i9] = $r11
org.apache.pdfbox.util.SmallMap.putAll : $r10[i9] = $r11 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r12 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.putAll : $r12 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : i9 = i10 + 1
org.apache.pdfbox.util.SmallMap.putAll : i9 = i10 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r13 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.util.SmallMap.putAll : $r13 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r12[i10] = $r13
org.apache.pdfbox.util.SmallMap.putAll : $r12[i10] = $r13 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : goto [?= $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.util.SmallMap.putAll : goto [?= $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : goto [?= return]
org.apache.pdfbox.util.SmallMap.putAll : goto [?= return] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r6 = r0.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: org.apache.pdfbox.cos.COSDictionary encoding>
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r6 = r0.<org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding: org.apache.pdfbox.cos.COSDictionary encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DIFFERENCES>
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DIFFERENCES> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r1 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : r1 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $z0 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : $z0 = r1 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if $z0 != 0
org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding.applyDifferences : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r2 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.util.Matrix.toCOSArray : $r2 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r3 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.util.Matrix.toCOSArray : $r3 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r4 = r0.<org.apache.pdfbox.util.Matrix: float[] single>
org.apache.pdfbox.util.Matrix.toCOSArray : $r4 = r0.<org.apache.pdfbox.util.Matrix: float[] single> >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $f0 = $r4[0]
org.apache.pdfbox.util.Matrix.toCOSArray : $f0 = $r4[0] >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f0)
org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f0) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46)
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0")
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0") >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1 >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3)
org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r5 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.util.Matrix.toCOSArray : $r5 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r6 = r0.<org.apache.pdfbox.util.Matrix: float[] single>
org.apache.pdfbox.util.Matrix.toCOSArray : $r6 = r0.<org.apache.pdfbox.util.Matrix: float[] single> >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $f1 = $r6[1]
org.apache.pdfbox.util.Matrix.toCOSArray : $f1 = $r6[1] >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r5.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f1)
org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r5.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f1) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r5)
org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r5) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r7 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.util.Matrix.toCOSArray : $r7 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r8 = r0.<org.apache.pdfbox.util.Matrix: float[] single>
org.apache.pdfbox.util.Matrix.toCOSArray : $r8 = r0.<org.apache.pdfbox.util.Matrix: float[] single> >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $f2 = $r8[3]
org.apache.pdfbox.util.Matrix.toCOSArray : $f2 = $r8[3] >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r7.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f2)
org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r7.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f2) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r7)
org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r7) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r9 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.util.Matrix.toCOSArray : $r9 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r10 = r0.<org.apache.pdfbox.util.Matrix: float[] single>
org.apache.pdfbox.util.Matrix.toCOSArray : $r10 = r0.<org.apache.pdfbox.util.Matrix: float[] single> >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $f3 = $r10[4]
org.apache.pdfbox.util.Matrix.toCOSArray : $f3 = $r10[4] >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r9.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f3)
org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r9.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f3) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r9)
org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r9) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r11 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.util.Matrix.toCOSArray : $r11 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r12 = r0.<org.apache.pdfbox.util.Matrix: float[] single>
org.apache.pdfbox.util.Matrix.toCOSArray : $r12 = r0.<org.apache.pdfbox.util.Matrix: float[] single> >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $f4 = $r12[6]
org.apache.pdfbox.util.Matrix.toCOSArray : $f4 = $r12[6] >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r11.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f4)
org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r11.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f4) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r11)
org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r11) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r13 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.util.Matrix.toCOSArray : $r13 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $r14 = r0.<org.apache.pdfbox.util.Matrix: float[] single>
org.apache.pdfbox.util.Matrix.toCOSArray : $r14 = r0.<org.apache.pdfbox.util.Matrix: float[] single> >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : $f5 = $r14[7]
org.apache.pdfbox.util.Matrix.toCOSArray : $f5 = $r14[7] >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r13.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f5)
org.apache.pdfbox.util.Matrix.toCOSArray : specialinvoke $r13.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>($f5) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r13)
org.apache.pdfbox.util.Matrix.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r13) >>>>>>>> org.apache.pdfbox.util.Matrix.toCOSArray : return $r2
org.apache.pdfbox.util.Matrix.toCOSArray : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2.setDomain : r0.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSArray domain> = r1
org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2.setDomain : r0.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSArray domain> = r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2.setDomain : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2.setDomain : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDShading.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.PDShading: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.graphics.shading.PDShading.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.PDShading: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDShading.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.graphics.shading.PDShading.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2.setDomain : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DOMAIN>
org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2.setDomain : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DOMAIN> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2.setDomain : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r1)
org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2.setDomain : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getNumberOfComponents : return 1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getNumberOfComponents : return 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r2 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r2 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void setFloatArray(float[])>($r3)
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void setFloatArray(float[])>($r3) >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void clear()>()
org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void clear()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.clear : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.clear : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.apache.pdfbox.cos.COSArray.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : i0 = lengthof r1
org.apache.pdfbox.cos.COSArray.setFloatArray : i0 = lengthof r1 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = 0
org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : if i1 >= i0
org.apache.pdfbox.cos.COSArray.setFloatArray : if i1 >= i0 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : f0 = r1[i1]
org.apache.pdfbox.cos.COSArray.setFloatArray : f0 = r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : $r3 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSArray.setFloatArray : $r3 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.COSArray.setFloatArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3)
org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = i1 + 1
org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : goto [?= (branch)]
org.apache.pdfbox.cos.COSArray.setFloatArray : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : if $r4 == null
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : if $r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r5)
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : return $r2
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : return $r2 >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r3 = interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSArray.add : $r3 = interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.cos.COSBase.getCOSObject : return r0
org.apache.pdfbox.cos.COSBase.getCOSObject : return r0 >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1]
org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2
org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setModifiedDate : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setModifiedDate : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setModifiedDate : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName M>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setModifiedDate : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName M> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setModifiedDate : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)>($r3, r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setModifiedDate : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)>($r3, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setDate : $r3 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.lang.String toString(java.util.Calendar)>(r2)
org.apache.pdfbox.cos.COSDictionary.setDate : $r3 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.lang.String toString(java.util.Calendar)>(r2) >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : if r0 != null
org.apache.pdfbox.util.DateConverter.toString : if r0 != null >>>>>>>> org.apache.pdfbox.util.DateConverter.toString : return null
org.apache.pdfbox.util.DateConverter.toString : return null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setDate : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>(r1, $r3)
org.apache.pdfbox.cos.COSDictionary.setDate : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>(r1, $r3) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = null
org.apache.pdfbox.cos.COSDictionary.setString : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4)
org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void removeItem(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void removeItem(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.removeItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.removeItem : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.removeItem : interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.removeItem : interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.remove : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : if i0 >= 0
org.apache.pdfbox.util.SmallMap.remove : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.remove : return null
org.apache.pdfbox.util.SmallMap.remove : return null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : goto [?= return]
org.apache.pdfbox.cos.COSDictionary.setItem : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RECT>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RECT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray getCOSArray()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray getCOSArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSArray : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSArray : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSArray : return $r1
org.apache.pdfbox.pdmodel.common.PDRectangle.getCOSArray : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.setRectangle : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getInitialColor : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor>
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getInitialColor : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDColor initialColor> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getInitialColor : return $r1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getInitialColor : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0)
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0) >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.get : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.get : $r3 = (org.apache.pdfbox.cos.COSBase) $r2
org.apache.pdfbox.cos.COSArray.get : $r3 = (org.apache.pdfbox.cos.COSBase) $r2 >>>>>>>> org.apache.pdfbox.cos.COSArray.get : return $r3
org.apache.pdfbox.cos.COSArray.get : return $r3 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.floatValue : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value>
org.apache.pdfbox.cos.COSFloat.floatValue : $r1 = r0.<org.apache.pdfbox.cos.COSFloat: java.math.BigDecimal value> >>>>>>>> org.apache.pdfbox.cos.COSFloat.floatValue : $f0 = virtualinvoke $r1.<java.math.BigDecimal: float floatValue()>()
org.apache.pdfbox.cos.COSFloat.floatValue : $f0 = virtualinvoke $r1.<java.math.BigDecimal: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.COSFloat.floatValue : return $f0
org.apache.pdfbox.cos.COSFloat.floatValue : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : return $f0
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftX : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : f1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1)
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : return $f0
org.apache.pdfbox.pdmodel.common.PDRectangle.getLowerLeftY : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : f2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightX()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : f2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightX()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(2)
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(2) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : return $f0
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightX : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : f3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : f3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getUpperRightY()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray>
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDRectangle: org.apache.pdfbox.cos.COSArray rectArray> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(3)
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $r3 = (org.apache.pdfbox.cos.COSNumber) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : $f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : return $f0
org.apache.pdfbox.pdmodel.common.PDRectangle.getUpperRightY : return $f0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : $r2 = new java.awt.geom.GeneralPath
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : $r2 = new java.awt.geom.GeneralPath >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : specialinvoke $r2.<java.awt.geom.GeneralPath: void <init>()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : specialinvoke $r2.<java.awt.geom.GeneralPath: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void moveTo(float,float)>(f0, f1)
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void moveTo(float,float)>(f0, f1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>(f2, f1)
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>(f2, f1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>(f2, f3)
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>(f2, f3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>(f0, f3)
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void lineTo(float,float)>(f0, f3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void closePath()>()
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : virtualinvoke $r2.<java.awt.geom.GeneralPath: void closePath()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : return $r2
org.apache.pdfbox.pdmodel.common.PDRectangle.toGeneralPath : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState.getStrokingColorSpace : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace strokingColorSpace>
org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState.getStrokingColorSpace : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace strokingColorSpace> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState.getStrokingColorSpace : return $r1
org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState.getStrokingColorSpace : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DEVICEGRAY>
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DEVICEGRAY> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.getName : return $r1
org.apache.pdfbox.cos.COSName.getName : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : return $r2
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace.getCOSObject : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r1)
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace.getCOSObject : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace.getCOSObject : return $r2
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace.getCOSObject : return $r2 >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : i1 = -1
org.apache.pdfbox.cos.COSArray.indexOfObject : i1 = -1 >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : i2 = 0
org.apache.pdfbox.cos.COSArray.indexOfObject : i2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.cos.COSArray.indexOfObject : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.size : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.apache.pdfbox.cos.COSArray.size : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.size : return $i0
org.apache.pdfbox.cos.COSArray.size : return $i0 >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : if i2 >= $i0
org.apache.pdfbox.cos.COSArray.indexOfObject : if i2 >= $i0 >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i2)
org.apache.pdfbox.cos.COSArray.indexOfObject : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i2) >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.indexOfObject : $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSFloat.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : if $z0 == 0
org.apache.pdfbox.cos.COSFloat.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : $z1 = 0
org.apache.pdfbox.cos.COSFloat.equals : $z1 = 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.equals : return $z1
org.apache.pdfbox.cos.COSFloat.equals : return $z1 >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : if $z0 == 0
org.apache.pdfbox.cos.COSArray.indexOfObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : $z1 = r2 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.indexOfObject : $z1 = r2 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : if $z1 == 0
org.apache.pdfbox.cos.COSArray.indexOfObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : i2 = i2 + 1
org.apache.pdfbox.cos.COSArray.indexOfObject : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : goto [?= $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()]
org.apache.pdfbox.cos.COSArray.indexOfObject : goto [?= $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>()] >>>>>>>> org.apache.pdfbox.cos.COSArray.indexOfObject : return i1
org.apache.pdfbox.cos.COSArray.indexOfObject : return i1 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.getObject : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.cos.COSArray.getObject : r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSArray.getObject : $z0 = r4 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSArray.getObject : $z1 = r4 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0
org.apache.pdfbox.cos.COSArray.getObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4
org.apache.pdfbox.cos.COSArray.getObject : $r2 = (org.apache.pdfbox.cos.COSBase) r4 >>>>>>>> org.apache.pdfbox.cos.COSArray.getObject : return $r2
