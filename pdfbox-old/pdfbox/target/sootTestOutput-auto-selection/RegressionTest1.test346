org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy.getOwnerPassword : $r1 = r0.<org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy: java.lang.String ownerPassword> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy.getOwnerPassword : return $r1
org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy.getOwnerPassword : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy.getEncryptionKeyLength : $i0 = r0.<org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy: int encryptionKeyLength>
org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy.getEncryptionKeyLength : $i0 = r0.<org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy: int encryptionKeyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy.getEncryptionKeyLength : return $i0
org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy.getEncryptionKeyLength : return $i0 >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getOperator : $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ID")
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ID") >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getOperator : if $z0 != 0
org.apache.pdfbox.contentstream.operator.Operator.getOperator : if $z0 != 0 >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getOperator : $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("BI")
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("BI") >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getOperator : if $z1 == 0
org.apache.pdfbox.contentstream.operator.Operator.getOperator : if $z1 == 0 >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getOperator : $r2 = <org.apache.pdfbox.contentstream.operator.Operator: java.util.concurrent.ConcurrentMap operators>
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $r2 = <org.apache.pdfbox.contentstream.operator.Operator: java.util.concurrent.ConcurrentMap operators> >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getOperator : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.contentstream.operator.Operator.getOperator : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getOperator : r9 = (org.apache.pdfbox.contentstream.operator.Operator) $r3
org.apache.pdfbox.contentstream.operator.Operator.getOperator : r9 = (org.apache.pdfbox.contentstream.operator.Operator) $r3 >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getOperator : if r9 != null
org.apache.pdfbox.contentstream.operator.Operator.getOperator : if r9 != null >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getOperator : return r9
org.apache.pdfbox.contentstream.operator.Operator.getOperator : return r9 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r4 = null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : i1 = 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : i1 = 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $i0 = lengthof r1
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $i0 = lengthof r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if i1 >= $i0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r4 != null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r4 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r1[i1]
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : i1 = i1 + 1
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : goto [?= $i0 = lengthof r1]
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : goto [?= $i0 = lengthof r1] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r4
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDate : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDate : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDate : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Calendar getDate(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.cos.COSDictionary.getDate : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Calendar getDate(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDate : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDate : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDate : r2 = (org.apache.pdfbox.cos.COSString) $r3
org.apache.pdfbox.cos.COSDictionary.getDate : r2 = (org.apache.pdfbox.cos.COSString) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDate : $r4 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.Calendar toCalendar(org.apache.pdfbox.cos.COSString)>(r2)
org.apache.pdfbox.cos.COSDictionary.getDate : $r4 = staticinvoke <org.apache.pdfbox.util.DateConverter: java.util.Calendar toCalendar(org.apache.pdfbox.cos.COSString)>(r2) >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : if r0 != null
org.apache.pdfbox.util.DateConverter.toCalendar : if r0 != null >>>>>>>> org.apache.pdfbox.util.DateConverter.toCalendar : return null
org.apache.pdfbox.util.DateConverter.toCalendar : return null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDate : return $r4
org.apache.pdfbox.cos.COSDictionary.getDate : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDate : return $r3
org.apache.pdfbox.cos.COSDictionary.getDate : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, r2, -1)
org.apache.pdfbox.cos.COSDictionary.getInt : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)>(r1, r2, -1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0
org.apache.pdfbox.cos.COSDictionary.getInt : i1 = i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.getInt : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>(r1, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getInt : $z0 = r3 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getInt : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return i1
org.apache.pdfbox.cos.COSDictionary.getInt : return i1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getInt : return $i0
org.apache.pdfbox.cos.COSDictionary.getInt : return $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.putAll : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $r3 == null
org.apache.pdfbox.util.SmallMap.putAll : if $r3 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $i1 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.pdfbox.util.SmallMap.putAll : $i1 = interfaceinvoke r1.<java.util.Map: int size()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.size : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.size : if $r1 != null
org.apache.pdfbox.util.SmallMap.size : if $r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.size : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.size : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $i1 = $i0 >> 1
org.apache.pdfbox.util.SmallMap.size : $i1 = $i0 >> 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.size : return $i1
org.apache.pdfbox.util.SmallMap.size : return $i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $i2 = $i1 << 1
org.apache.pdfbox.util.SmallMap.putAll : $i2 = $i1 << 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r4 = newarray (java.lang.Object)[$i2]
org.apache.pdfbox.util.SmallMap.putAll : $r4 = newarray (java.lang.Object)[$i2] >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r4
org.apache.pdfbox.util.SmallMap.putAll : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r4 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : i9 = 0
org.apache.pdfbox.util.SmallMap.putAll : i9 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.util.SmallMap.putAll : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.entrySet : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : if $z0 == 0
org.apache.pdfbox.util.SmallMap.entrySet : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r2 = new java.util.LinkedHashSet
org.apache.pdfbox.util.SmallMap.entrySet : $r2 = new java.util.LinkedHashSet >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>()
org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : i1 = 0
org.apache.pdfbox.util.SmallMap.entrySet : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.entrySet : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $i0 = lengthof $r3
org.apache.pdfbox.util.SmallMap.entrySet : $i0 = lengthof $r3 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.entrySet : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r5 = new org.apache.pdfbox.util.SmallMap$SmallMapEntry
org.apache.pdfbox.util.SmallMap.entrySet : $r5 = new org.apache.pdfbox.util.SmallMap$SmallMapEntry >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r5.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: void <init>(org.apache.pdfbox.util.SmallMap,int)>(r0, i1)
org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r5.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: void <init>(org.apache.pdfbox.util.SmallMap,int)>(r0, i1) >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5)
org.apache.pdfbox.util.SmallMap.entrySet : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $r1 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: java.lang.Object getKey()>()
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $r1 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1)
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.access$000 : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.access$000 : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.access$000 : return $r1
org.apache.pdfbox.util.SmallMap.access$000 : return $r1 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r3 = $r2[$i0]
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r3 = $r2[$i0] >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : return $r3
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : return $r3 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>()
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.pdfbox.cos.COSName.hashCode : $i0 = r0.<org.apache.pdfbox.cos.COSName: int hashCode>
org.apache.pdfbox.cos.COSName.hashCode : $i0 = r0.<org.apache.pdfbox.cos.COSName: int hashCode> >>>>>>>> org.apache.pdfbox.cos.COSName.hashCode : return $i0
org.apache.pdfbox.cos.COSName.hashCode : return $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : return $i0
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : return $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.entrySet : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : goto [?= $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.entrySet : goto [?= $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2)
org.apache.pdfbox.util.SmallMap.entrySet : $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : return $r4
org.apache.pdfbox.util.SmallMap.entrySet : return $r4 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : r26 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.util.SmallMap.putAll : r26 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.util.SmallMap.putAll : $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $z1 == 0
org.apache.pdfbox.util.SmallMap.putAll : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r6 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.util.SmallMap.putAll : $r6 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : r27 = (java.util.Map$Entry) $r6
org.apache.pdfbox.util.SmallMap.putAll : r27 = (java.util.Map$Entry) $r6 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r7 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.util.SmallMap.putAll : $r7 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $r7 == null
org.apache.pdfbox.util.SmallMap.putAll : if $r7 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r9 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.util.SmallMap.putAll : $r9 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1)
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1) >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i1 = $i0 + 1
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i1 = $i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : return $r3
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : return $r3 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $r9 != null
org.apache.pdfbox.util.SmallMap.putAll : if $r9 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r10 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.putAll : $r10 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : i10 = i9 + 1
org.apache.pdfbox.util.SmallMap.putAll : i10 = i9 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r11 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.util.SmallMap.putAll : $r11 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r10[i9] = $r11
org.apache.pdfbox.util.SmallMap.putAll : $r10[i9] = $r11 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r12 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.putAll : $r12 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : i9 = i10 + 1
org.apache.pdfbox.util.SmallMap.putAll : i9 = i10 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r13 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.util.SmallMap.putAll : $r13 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r12[i10] = $r13
org.apache.pdfbox.util.SmallMap.putAll : $r12[i10] = $r13 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : goto [?= $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.util.SmallMap.putAll : goto [?= $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : goto [?= return]
org.apache.pdfbox.util.SmallMap.putAll : goto [?= return] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r2, i0)
org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r2, i0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0
org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1)
org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1) >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100
org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1]
org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $r2 != null
org.apache.pdfbox.cos.COSInteger.get : if $r2 != null >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1]
org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : return $r4
org.apache.pdfbox.cos.COSInteger.get : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2)
org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r1 = new org.apache.pdfbox.io.ScratchFile
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r1 = new org.apache.pdfbox.io.ScratchFile >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>() >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2)
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = null >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r1 == null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r7 != null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r7 != null >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $r2 = new org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $r2 = new org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : specialinvoke $r2.<org.apache.pdfbox.cos.COSObject: void <init>(org.apache.pdfbox.cos.COSBase)>(null)
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : specialinvoke $r2.<org.apache.pdfbox.cos.COSObject: void <init>(org.apache.pdfbox.cos.COSBase)>(null) >>>>>>>> org.apache.pdfbox.cos.COSObject.setObject : r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase baseObject> = r1
org.apache.pdfbox.cos.COSObject.setObject : r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase baseObject> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = $r2
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = $r2 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : return r7
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : return r7 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : $r7 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjectByType : $r7 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : if $z0 == 0
org.apache.pdfbox.cos.COSDocument.getObjectByType : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : return null
org.apache.pdfbox.cos.COSDocument.getObjectByType : return null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getLong : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : $l0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: long getLong(org.apache.pdfbox.cos.COSName,long)>($r2, -1L)
org.apache.pdfbox.cos.COSDictionary.getLong : $l0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: long getLong(org.apache.pdfbox.cos.COSName,long)>($r2, -1L) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : l1 = l0
org.apache.pdfbox.cos.COSDictionary.getLong : l1 = l0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getLong : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : $z0 = r2 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getLong : $z0 = r2 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getLong : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : return l1
org.apache.pdfbox.cos.COSDictionary.getLong : return l1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : return $l0
org.apache.pdfbox.cos.COSDictionary.getLong : return $l0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)>(r1, $r3, null)
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)>(r1, $r3, null) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : r6 = r3
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : r6 = r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r5 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r5 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : r4 = (org.apache.pdfbox.cos.COSDictionary) $r5
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : r4 = (org.apache.pdfbox.cos.COSDictionary) $r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : if r4 == null
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : if r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : return r6
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : return r6 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : return $r4
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1
org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose>
org.apache.pdfbox.cos.COSDocument.finalize : $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.cos.COSDocument.finalize : $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Warning: You did not close a PDF Document")
org.apache.pdfbox.cos.COSDocument.finalize : interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Warning: You did not close a PDF Document") >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: void close()>()
org.apache.pdfbox.cos.COSDocument.finalize : virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>()
org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : return $r1
org.apache.pdfbox.cos.COSDocument.getObjects : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if r1 == null
org.apache.pdfbox.cos.COSDocument.close : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r3 == null
org.apache.pdfbox.cos.COSDocument.close : if $r3 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r4 == null
org.apache.pdfbox.cos.COSDocument.close : if $r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>()
org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r21 = null
org.apache.pdfbox.io.ScratchFile.close : r21 = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf>
org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r5 == null
org.apache.pdfbox.io.ScratchFile.close : if $r5 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file>
org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r23 == null
org.apache.pdfbox.io.ScratchFile.close : if $r23 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>]
org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>()
org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if r21 == null
org.apache.pdfbox.io.ScratchFile.close : if r21 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1
org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : r5 = (org.apache.pdfbox.cos.COSDictionary) $r3
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : r5 = (org.apache.pdfbox.cos.COSDictionary) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : if r5 != null
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : if r5 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : $r4 = new org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : $r4 = new org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : specialinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void <init>()>()
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : specialinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : r5 = $r4
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : r5 = $r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)>(r1, $r4)
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)>(r1, $r4) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>(r2, i0)
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>(r2, i0) >>>>>>>> org.apache.pdfbox.contentstream.operator.DrawObject.process : $i0 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.pdfbox.contentstream.operator.DrawObject.process : $i0 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.contentstream.operator.DrawObject.process : if $i0 >= 1
org.apache.pdfbox.contentstream.operator.DrawObject.process : if $i0 >= 1 >>>>>>>> org.apache.pdfbox.contentstream.operator.DrawObject.process : $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.apache.pdfbox.contentstream.operator.DrawObject.process : $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.pdfbox.contentstream.operator.DrawObject.process : r3 = (org.apache.pdfbox.cos.COSBase) $r7
org.apache.pdfbox.contentstream.operator.DrawObject.process : r3 = (org.apache.pdfbox.cos.COSBase) $r7 >>>>>>>> org.apache.pdfbox.contentstream.operator.DrawObject.process : $z0 = r3 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.contentstream.operator.DrawObject.process : $z0 = r3 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.contentstream.operator.DrawObject.process : if $z0 != 0
org.apache.pdfbox.contentstream.operator.DrawObject.process : if $z0 != 0 >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getName : $r1 = r0.<org.apache.pdfbox.contentstream.operator.Operator: java.lang.String theOperator>
org.apache.pdfbox.contentstream.operator.Operator.getName : $r1 = r0.<org.apache.pdfbox.contentstream.operator.Operator: java.lang.String theOperator> >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.getName : return $r1
org.apache.pdfbox.contentstream.operator.Operator.getName : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.toString : $r2 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDictionary.toString : $r2 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDictionary.toString : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.cos.COSDictionary.toString : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.toString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>(r0, $r2)
org.apache.pdfbox.cos.COSDictionary.toString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>(r0, $r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if r0 != null
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if r0 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z2 = r0 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z2 = r0 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z2 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r10 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSDictionary{")
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSDictionary{") >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r12 = (org.apache.pdfbox.cos.COSDictionary) r0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r12 = (org.apache.pdfbox.cos.COSDictionary) r0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r13 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r13 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.entrySet : $r1 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.entrySet : $r1 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.entrySet : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.cos.COSDictionary.entrySet : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.entrySet : return $r2
org.apache.pdfbox.cos.COSDictionary.entrySet : return $r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : r31 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : r31 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z4 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z4 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z4 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z4 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r20 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r20 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : r32 = (java.util.Map$Entry) $r20
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : r32 = (java.util.Map$Entry) $r20 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r21 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r21 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21)
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21) >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r1 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSName.toString : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.COSName.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.COSName.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSName{")
org.apache.pdfbox.cos.COSName.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSName{") >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r3 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.toString : $r3 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.pdfbox.cos.COSName.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.pdfbox.cos.COSName.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.COSName.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.COSName.toString : return $r6
org.apache.pdfbox.cos.COSName.toString : return $r6 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r24 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r24 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r25 = (org.apache.pdfbox.cos.COSBase) $r24
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r25 = (org.apache.pdfbox.cos.COSBase) $r24 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r26 = staticinvoke <org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>($r25, r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r26 = staticinvoke <org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>($r25, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z3 = r0 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z3 = r0 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z3 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z3 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : return $r2
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : return $r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";")
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";") >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : goto [?= $z4 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : goto [?= $z4 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z5 = r0 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $z5 = r0 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z5 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : if $z5 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryString : return $r15
org.apache.pdfbox.cos.COSDictionary.getDictionaryString : return $r15 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.toString : return $r3
org.apache.pdfbox.cos.COSDictionary.toString : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSInteger.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSInteger
org.apache.pdfbox.cos.COSInteger.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSInteger >>>>>>>> org.apache.pdfbox.cos.COSInteger.equals : if $z0 == 0
org.apache.pdfbox.cos.COSInteger.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.equals : $z1 = 0
org.apache.pdfbox.cos.COSInteger.equals : $z1 = 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.equals : return $z1
org.apache.pdfbox.cos.COSInteger.equals : return $z1 >>>>>>>> org.apache.pdfbox.cos.COSInteger.toString : $r1 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSInteger.toString : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.COSInteger.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.COSInteger.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSInteger.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSInt{")
org.apache.pdfbox.cos.COSInteger.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSInt{") >>>>>>>> org.apache.pdfbox.cos.COSInteger.toString : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value>
org.apache.pdfbox.cos.COSInteger.toString : $l0 = r0.<org.apache.pdfbox.cos.COSInteger: long value> >>>>>>>> org.apache.pdfbox.cos.COSInteger.toString : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.pdfbox.cos.COSInteger.toString : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.pdfbox.cos.COSInteger.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.pdfbox.cos.COSInteger.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.pdfbox.cos.COSInteger.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.COSInteger.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.COSInteger.toString : return $r5
org.apache.pdfbox.cos.COSInteger.toString : return $r5 >>>>>>>> org.apache.pdfbox.contentstream.operator.Operator.setImageData : r0.<org.apache.pdfbox.contentstream.operator.Operator: byte[] imageData> = r1
org.apache.pdfbox.contentstream.operator.Operator.setImageData : r0.<org.apache.pdfbox.contentstream.operator.Operator: byte[] imageData> = r1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.getUserPassword : $r6 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.getUserPassword : $r6 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.getUserPassword : specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.getUserPassword : specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.getUserPassword : r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeRC4key(byte[],int,int)>(r1, i0, i1)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.getUserPassword : r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeRC4key(byte[],int,int)>(r1, i0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r2 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getMD5()>()
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r2 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getMD5()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.MessageDigests.getMD5 : $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5")
org.apache.pdfbox.pdmodel.encryption.MessageDigests.getMD5 : $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.MessageDigests.getMD5 : return $r1
org.apache.pdfbox.pdmodel.encryption.MessageDigests.getMD5 : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] truncateOrPad(byte[])>(r1)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] truncateOrPad(byte[])>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $r3 = <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] ENCRYPT_PADDING>
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $r3 = <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] ENCRYPT_PADDING> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i1 = lengthof $r3
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i1 = lengthof $r3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : r2 = newarray (byte)[$i1]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : r2 = newarray (byte)[$i1] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i3 = lengthof r1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i3 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i2 = lengthof r2
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i2 = lengthof r2 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i0)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i0) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $r5 = <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] ENCRYPT_PADDING>
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $r5 = <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] ENCRYPT_PADDING> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $r4 = <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] ENCRYPT_PADDING>
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $r4 = <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] ENCRYPT_PADDING> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i4 = lengthof $r4
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i4 = lengthof $r4 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i5 = $i4 - i0
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : $i5 = $i4 - i0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r2, i0, $i5)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r2, i0, $i5) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : return r2
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.truncateOrPad : return r2 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r4 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r4 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 == 3
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 == 3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 != 4
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 != 4 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r5 = newarray (byte)[i1]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r5 = newarray (byte)[i1] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, 0, i1)
