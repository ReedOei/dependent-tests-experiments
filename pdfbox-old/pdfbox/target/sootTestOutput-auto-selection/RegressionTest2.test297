org.apache.pdfbox.io.RandomAccessBuffer.isClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isClosed : if $r1 != null
org.apache.pdfbox.io.RandomAccessBuffer.isClosed : if $r1 != null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isClosed : $z0 = 0
org.apache.pdfbox.io.RandomAccessBuffer.isClosed : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isClosed : return $z0
org.apache.pdfbox.io.RandomAccessBuffer.isClosed : return $z0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.read : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.read : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $b4 = $l3 cmp $l2
org.apache.pdfbox.io.RandomAccessBuffer.read : $b4 = $l3 cmp $l2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : if $b4 < 0
org.apache.pdfbox.io.RandomAccessBuffer.read : if $b4 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : return 0
org.apache.pdfbox.io.RandomAccessBuffer.read : return 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5 = new org.apache.pdfbox.io.RandomAccessBuffer
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5 = new org.apache.pdfbox.io.RandomAccessBuffer >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : specialinvoke $r5.<org.apache.pdfbox.io.RandomAccessBuffer: void <init>(int)>($i0)
org.apache.pdfbox.io.RandomAccessBuffer.clone : specialinvoke $r5.<org.apache.pdfbox.io.RandomAccessBuffer: void <init>(int)>($i0) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r6 = new java.util.ArrayList
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r6 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $i1 = interfaceinvoke $r7.<java.util.List: int size()>()
org.apache.pdfbox.io.RandomAccessBuffer.clone : $i1 = interfaceinvoke $r7.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1)
org.apache.pdfbox.io.RandomAccessBuffer.clone : specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> = $r6
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> = $r6 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r8 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.io.RandomAccessBuffer.clone : r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.io.RandomAccessBuffer.clone : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : if $z0 == 0
org.apache.pdfbox.io.RandomAccessBuffer.clone : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : r3 = (byte[]) $r14
org.apache.pdfbox.io.RandomAccessBuffer.clone : r3 = (byte[]) $r14 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $i9 = lengthof r3
org.apache.pdfbox.io.RandomAccessBuffer.clone : $i9 = lengthof r3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : r4 = newarray (byte)[$i9]
org.apache.pdfbox.io.RandomAccessBuffer.clone : r4 = newarray (byte)[$i9] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $i10 = lengthof r3
org.apache.pdfbox.io.RandomAccessBuffer.clone : $i10 = lengthof r3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, $i10)
org.apache.pdfbox.io.RandomAccessBuffer.clone : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, $i10) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r15 = $r5.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r15 = $r5.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.pdfbox.io.RandomAccessBuffer.clone : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.io.RandomAccessBuffer.clone : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : if $r9 == null
org.apache.pdfbox.io.RandomAccessBuffer.clone : if $r9 == null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r11 = $r5.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r11 = $r5.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r10 = $r5.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r10 = $r5.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $i7 = interfaceinvoke $r10.<java.util.List: int size()>()
org.apache.pdfbox.io.RandomAccessBuffer.clone : $i7 = interfaceinvoke $r10.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $i8 = $i7 - 1
org.apache.pdfbox.io.RandomAccessBuffer.clone : $i8 = $i7 - 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i8)
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i8) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r13 = (byte[]) $r12
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r13 = (byte[]) $r12 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r13
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r13 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : goto [?= $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>]
org.apache.pdfbox.io.RandomAccessBuffer.clone : goto [?= $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l2
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $i3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i3
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $l4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $l4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = $l4
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = $l4 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i5
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.clone : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> = $i6
org.apache.pdfbox.io.RandomAccessBuffer.clone : $r5.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> = $i6 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.clone : return $r5
org.apache.pdfbox.io.RandomAccessBuffer.clone : return $r5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $l1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $l1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $b2 = $l1 cmp $l0
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $b2 = $l1 cmp $l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : if $b2 < 0
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : if $b2 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $z0 = 1
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : $z0 = 1 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : goto [?= return $z0]
org.apache.pdfbox.io.RandomAccessBuffer.isEOF : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isEOF : return $z0
