org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if r1 == null
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if $z0 != 0
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : r2 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : r2 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : if $z0 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r3 = (java.lang.String) $r5
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r6 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r6 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : return $r4
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT>
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, r2)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : goto [?= return]
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r4 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r4 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r7 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6)
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r7 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : r2 = (org.apache.pdfbox.cos.COSArray) $r7
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : r2 = (org.apache.pdfbox.cos.COSArray) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : if r2 != null
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : if r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r10 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r10 = new org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : specialinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r11)
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : specialinvoke $r10.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = null
org.apache.pdfbox.cos.COSDictionary.setName : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : goto [?= return $r4]
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : goto [?= return $r4] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : return $r4
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.getWidgets : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName S>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName S> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $b0 = f0 cmpg -1.0F
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $b0 = f0 cmpg -1.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : if $b0 < 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : if $b0 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $b1 = f0 cmpl 1.0F
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $b1 = f0 cmpl 1.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : if $b1 <= 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDActionSound: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDActionSound: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VOLUME>
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VOLUME> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setFloat(org.apache.pdfbox.cos.COSName,float)>($r2, f0)
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setFloat(org.apache.pdfbox.cos.COSName,float)>($r2, f0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : $r3 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSDictionary.setFloat : $r3 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.COSDictionary.setFloat : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46)
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0")
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0") >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r3)
org.apache.pdfbox.cos.COSDictionary.setFloat : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDActionSound: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDActionSound: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VOLUME>
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VOLUME> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : r1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : r1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : $z0 = r1 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : $z0 = r1 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : return 1.0F
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.getVolume : return 1.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setF : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setF : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setF : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setF : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setF : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setF : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 1
org.apache.pdfbox.cos.COSName.equals : $z2 = 1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2]
org.apache.pdfbox.cos.COSName.equals : goto [?= return $z2] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return i1
org.apache.pdfbox.util.SmallMap.findKey : return i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.get : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.get : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap.get : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : r5 = null
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : r5 = null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : if r1 == null
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : r5 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory: org.apache.pdfbox.pdmodel.interactive.action.PDAction createAction(org.apache.pdfbox.cos.COSDictionary)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : r5 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory: org.apache.pdfbox.pdmodel.interactive.action.PDAction createAction(org.apache.pdfbox.cos.COSDictionary)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : r29 = null
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : r29 = null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if r0 == null
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if r0 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName S>
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName S> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getNameAsString(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $r4 = (org.apache.pdfbox.cos.COSName) r2 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.cos.COSDictionary.getNameAsString : r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.getName : $r1 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.getName : return $r1
org.apache.pdfbox.cos.COSName.getName : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5]
org.apache.pdfbox.cos.COSDictionary.getNameAsString : goto [?= return r5] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5
org.apache.pdfbox.cos.COSDictionary.getNameAsString : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r3 = "JavaScript"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r3 = "JavaScript" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r4 = "GoTo"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r4 = "GoTo" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z1 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r5 = "Launch"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r5 = "Launch" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z2 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r6 = "GoToR"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r6 = "GoToR" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z3 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r7 = "URI"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r7 = "URI" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z4 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r8 = "Named"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r8 = "Named" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z5 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r9 = "Sound"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r9 = "Sound" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z6 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r22 = new org.apache.pdfbox.pdmodel.interactive.action.PDActionSound
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r22 = new org.apache.pdfbox.pdmodel.interactive.action.PDActionSound >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : specialinvoke $r22.<org.apache.pdfbox.pdmodel.interactive.action.PDActionSound: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : specialinvoke $r22.<org.apache.pdfbox.pdmodel.interactive.action.PDActionSound: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : r29 = $r22
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : r29 = $r22 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : goto [?= return r29]
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : goto [?= return r29] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : return r29
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : return r29 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : return r5
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getC : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName K>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName K> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : r5 = null
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : r5 = null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : if r1 == null
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : return r5
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getK : return r5 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.setActions : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.setActions : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.setActions : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AA>
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.setActions : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AA> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.setActions : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r3, r1)
org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.setActions : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r3, r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r1 = new org.apache.pdfbox.io.ScratchFile
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r1 = new org.apache.pdfbox.io.ScratchFile >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>() >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2)
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0]
org.apache.pdfbox.util.SmallMap.isEmpty : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z1 = r2 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.getNameAsString : $z1 = r2 instanceof org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getNameAsString : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r10 = "Movie"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r10 = "Movie" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z7 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r11 = "ImportData"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r11 = "ImportData" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z8 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r12 = "ResetForm"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r12 = "ResetForm" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z9 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z9 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r13 = "Hide"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r13 = "Hide" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z10 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r14 = "SubmitForm"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r14 = "SubmitForm" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z11 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z11 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r15 = "Thread"
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $r15 = "Thread" >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z12 == 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory.createAction : if $z12 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose>
org.apache.pdfbox.cos.COSDocument.finalize : $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.cos.COSDocument.finalize : $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Warning: You did not close a PDF Document")
org.apache.pdfbox.cos.COSDocument.finalize : interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Warning: You did not close a PDF Document") >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: void close()>()
org.apache.pdfbox.cos.COSDocument.finalize : virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>()
org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : return $r1
org.apache.pdfbox.cos.COSDocument.getObjects : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if r1 == null
org.apache.pdfbox.cos.COSDocument.close : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r3 == null
org.apache.pdfbox.cos.COSDocument.close : if $r3 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r4 == null
org.apache.pdfbox.cos.COSDocument.close : if $r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1
org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $r2 == null
org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $r2 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r3 = <org.apache.pdfbox.io.ScratchFileBuffer: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r3 = <org.apache.pdfbox.io.ScratchFileBuffer: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $z0 == 0
org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void close()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null
org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0)
org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : specialinvoke r0.<java.lang.Object: void finalize()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : specialinvoke r0.<java.lang.Object: void finalize()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : goto [?= return]
org.apache.pdfbox.io.ScratchFileBuffer.finalize : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName N>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName N> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.setNormalAppearance : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.pdmodel.common.PDStream stream>
org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.pdmodel.common.PDStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.common.PDStream.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : return $r2
org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.graphics.PDXObject.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r6 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1]
org.apache.pdfbox.util.SmallMap.put : r11 = $r6[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r7 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1
org.apache.pdfbox.util.SmallMap.put : $i2 = i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2
org.apache.pdfbox.util.SmallMap.put : $r7[$i2] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return r11
org.apache.pdfbox.util.SmallMap.put : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getStream : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.pdmodel.common.PDStream stream>
org.apache.pdfbox.pdmodel.graphics.PDXObject.getStream : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.PDXObject: org.apache.pdfbox.pdmodel.common.PDStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.PDXObject.getStream : return $r1
org.apache.pdfbox.pdmodel.graphics.PDXObject.getStream : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream()>()
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>(null)
org.apache.pdfbox.cos.COSStream.createOutputStream : $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>(null) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void checkClosed()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.checkClosed : $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.checkClosed : if $r1 == null
org.apache.pdfbox.cos.COSStream.checkClosed : if $r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting>
org.apache.pdfbox.cos.COSStream.createOutputStream : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : if $z0 == 0
org.apache.pdfbox.cos.COSStream.createOutputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null
org.apache.pdfbox.cos.COSStream.createOutputStream : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r5 = virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFile: org.apache.pdfbox.io.RandomAccess createBuffer()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r5 = virtualinvoke $r4.<org.apache.pdfbox.io.ScratchFile: org.apache.pdfbox.io.RandomAccess createBuffer()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer
org.apache.pdfbox.io.ScratchFile.createBuffer : $r1 = new org.apache.pdfbox.io.ScratchFileBuffer >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFileBuffer: void <init>(org.apache.pdfbox.io.ScratchFile)>(r0)
org.apache.pdfbox.io.ScratchFile.createBuffer : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFileBuffer: void <init>(org.apache.pdfbox.io.ScratchFile)>(r0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.checkClosed : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.checkClosed : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.checkClosed : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096
org.apache.pdfbox.io.ScratchFile.getPageSize : return 4096 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i2 = $i0 + 1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i2 = $i0 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i1 = lengthof $r2
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i1 = lengthof $r2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : if $i2 < $i1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : if $i2 < $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : i8 = virtualinvoke $r8.<org.apache.pdfbox.io.ScratchFile: int getNewPage()>()
org.apache.pdfbox.io.ScratchFileBuffer.addPage : i8 = virtualinvoke $r8.<org.apache.pdfbox.io.ScratchFile: int getNewPage()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r3 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : entermonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : entermonitor $r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : i3 = virtualinvoke $r4.<java.util.BitSet: int nextSetBit(int)>(0)
org.apache.pdfbox.io.ScratchFile.getNewPage : i3 = virtualinvoke $r4.<java.util.BitSet: int nextSetBit(int)>(0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 >= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.getNewPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : virtualinvoke $r5.<java.util.BitSet: void clear(int)>(i3)
org.apache.pdfbox.io.ScratchFile.getNewPage : virtualinvoke $r5.<java.util.BitSet: void clear(int)>(i3) >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.getNewPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 < $i0
org.apache.pdfbox.io.ScratchFile.getNewPage : if i3 < $i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1
org.apache.pdfbox.io.ScratchFile.getNewPage : $i1 = i3 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = $i1
org.apache.pdfbox.io.ScratchFile.getNewPage : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = $i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3
org.apache.pdfbox.io.ScratchFile.getNewPage : exitmonitor $r3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getNewPage : return i3
org.apache.pdfbox.io.ScratchFile.getNewPage : return i3 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9[$i9] = i8
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r9[$i9] = i8 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i10 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i10
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i10 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l12 = (long) $i11
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l12 = (long) $i11 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l14 = (long) $i13
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l14 = (long) $i13 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l15 = $l12 * $l14
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $l15 = $l12 * $l14 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l15
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l15 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i17 = $i16 + 1
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i17 = $i16 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> = $i17
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> = $i17 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $i18 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r11 = newarray (byte)[$i18]
org.apache.pdfbox.io.ScratchFileBuffer.addPage : $r11 = newarray (byte)[$i18] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r11
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r11 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.addPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.createBuffer : return $r1
org.apache.pdfbox.io.ScratchFile.createBuffer : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> = $r5
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> = $r5 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r6 = new org.apache.pdfbox.io.RandomAccessOutputStream >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r7 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r7 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess randomAccess> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r6.<org.apache.pdfbox.io.RandomAccessOutputStream: void <init>(org.apache.pdfbox.io.RandomAccessWrite)>($r7)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r6.<org.apache.pdfbox.io.RandomAccessOutputStream: void <init>(org.apache.pdfbox.io.RandomAccessWrite)>($r7) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream
org.apache.pdfbox.cos.COSStream.createOutputStream : $r8 = new org.apache.pdfbox.cos.COSOutputStream >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r9 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>()
org.apache.pdfbox.cos.COSStream.createOutputStream : $r9 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: java.util.List getFilterList()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList
org.apache.pdfbox.cos.COSStream.getFilterList : $r5 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.cos.COSStream.getFilterList : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>()
org.apache.pdfbox.cos.COSStream.getFilterList : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>() >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>
org.apache.pdfbox.cos.COSStream.getFilters : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER> >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1)
org.apache.pdfbox.cos.COSStream.getFilters : $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1) >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilters : return $r2
org.apache.pdfbox.cos.COSStream.getFilters : return $r2 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSStream.getFilterList : $z0 = r2 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : if $z0 == 0
org.apache.pdfbox.cos.COSStream.getFilterList : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.cos.COSStream.getFilterList : $z1 = r2 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : if $z1 == 0
org.apache.pdfbox.cos.COSStream.getFilterList : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getFilterList : return $r5
org.apache.pdfbox.cos.COSStream.getFilterList : return $r5 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r10 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSStream.createOutputStream : $r10 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r8.<org.apache.pdfbox.cos.COSOutputStream: void <init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.ScratchFile)>($r9, r0, $r6, $r10)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r8.<org.apache.pdfbox.cos.COSOutputStream: void <init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.ScratchFile)>($r9, r0, $r6, $r10) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1
org.apache.pdfbox.cos.COSStream.createOutputStream : r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> = 1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1
org.apache.pdfbox.cos.COSStream.createOutputStream : $r11 = new org.apache.pdfbox.cos.COSStream$1 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r11.<org.apache.pdfbox.cos.COSStream$1: void <init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)>(r0, $r8)
org.apache.pdfbox.cos.COSStream.createOutputStream : specialinvoke $r11.<org.apache.pdfbox.cos.COSStream$1: void <init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)>(r0, $r8) >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : return $r11
org.apache.pdfbox.cos.COSStream.createOutputStream : return $r11 >>>>>>>> org.apache.pdfbox.cos.COSStream.createOutputStream : return $r1
org.apache.pdfbox.cos.COSStream.createOutputStream : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : return $r2
org.apache.pdfbox.pdmodel.common.PDStream.createOutputStream : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r4 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3)
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : $r4 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : r1 = (org.apache.pdfbox.cos.COSDictionary) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : if r1 == null
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : return null
org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject.getResources : return null >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setResources : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.pdmodel.PDResources resources> = r1
org.apache.pdfbox.contentstream.PDAbstractContentStream.setResources : r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.pdmodel.PDResources resources> = r1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getNumberOfComponents : return 1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getNumberOfComponents : return 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r1 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PDColor{components=")
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PDColor{components=") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r3)
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", patternName=")
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", patternName=") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r1 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSName.toString : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.COSName.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.COSName.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSName{")
org.apache.pdfbox.cos.COSName.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COSName{") >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r3 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.toString : $r3 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.pdfbox.cos.COSName.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.pdfbox.cos.COSName.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.pdfbox.cos.COSName.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.COSName.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.COSName.toString : return $r6
org.apache.pdfbox.cos.COSName.toString : return $r6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : return $r10
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toString : return $r10 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack strokingColorSpaceStack>
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack strokingColorSpaceStack> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z0 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z0 != 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z0 != 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getColorSpace : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getColorSpace : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace colorSpace> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getColorSpace : return $r1
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getColorSpace : return $r1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r5 = virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r4)
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r5 = virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r4) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : $z0 = r1 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray
org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : $z0 = r1 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : if $z0 != 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : if $z0 != 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: java.lang.String getName()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DEVICEGRAY>
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DEVICEGRAY> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : return $r2
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray.getName : return $r2 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : $r5 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r4)
org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : $r5 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r4) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : return $r5
org.apache.pdfbox.contentstream.PDAbstractContentStream.getName : return $r5 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r2 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r2 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke r1.<org.apache.pdfbox.cos.COSName: void writePDF(java.io.OutputStream)>($r2)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke r1.<org.apache.pdfbox.cos.COSName: void writePDF(java.io.OutputStream)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : virtualinvoke r1.<java.io.OutputStream: void write(int)>(47)
org.apache.pdfbox.cos.COSName.writePDF : virtualinvoke r1.<java.io.OutputStream: void write(int)>(47) >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.write : $r1 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer>
org.apache.pdfbox.cos.COSOutputStream.write : $r1 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer> >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.write : virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>(i0)
org.apache.pdfbox.cos.COSOutputStream.write : virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>(i0) >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.cos.COSName.writePDF : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : $r5 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII>
org.apache.pdfbox.cos.COSName.writePDF : $r5 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII> >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : r2 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5)
org.apache.pdfbox.cos.COSName.writePDF : r2 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5) >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : i0 = lengthof r2
org.apache.pdfbox.cos.COSName.writePDF : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : i4 = 0
org.apache.pdfbox.cos.COSName.writePDF : i4 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : if i4 >= i0
org.apache.pdfbox.cos.COSName.writePDF : if i4 >= i0 >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : b1 = r2[i4]
org.apache.pdfbox.cos.COSName.writePDF : b1 = r2[i4] >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : $i3 = b1 + 256
org.apache.pdfbox.cos.COSName.writePDF : $i3 = b1 + 256 >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : i2 = $i3 % 256
org.apache.pdfbox.cos.COSName.writePDF : i2 = $i3 % 256 >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : if i2 < 65
org.apache.pdfbox.cos.COSName.writePDF : if i2 < 65 >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : if i2 <= 90
org.apache.pdfbox.cos.COSName.writePDF : if i2 <= 90 >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : virtualinvoke r1.<java.io.OutputStream: void write(int)>(i2)
org.apache.pdfbox.cos.COSName.writePDF : virtualinvoke r1.<java.io.OutputStream: void write(int)>(i2) >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : goto [?= i4 = i4 + 1]
org.apache.pdfbox.cos.COSName.writePDF : goto [?= i4 = i4 + 1] >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : i4 = i4 + 1
org.apache.pdfbox.cos.COSName.writePDF : i4 = i4 + 1 >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : goto [?= (branch)]
org.apache.pdfbox.cos.COSName.writePDF : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : if i2 < 97
org.apache.pdfbox.cos.COSName.writePDF : if i2 < 97 >>>>>>>> org.apache.pdfbox.cos.COSName.writePDF : if i2 <= 122
org.apache.pdfbox.cos.COSName.writePDF : if i2 <= 122 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r3.<java.io.OutputStream: void write(int)>(32)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r3.<java.io.OutputStream: void write(int)>(32) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("CS")
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("CS") >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r2 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r2 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r4)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r4) >>>>>>>> org.apache.pdfbox.cos.COSStream$1.write : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: java.io.OutputStream out>
org.apache.pdfbox.cos.COSStream$1.write : $r2 = r0.<org.apache.pdfbox.cos.COSStream$1: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.cos.COSStream$1.write : virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1)
org.apache.pdfbox.cos.COSStream$1.write : virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1) >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.write : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer>
org.apache.pdfbox.cos.COSOutputStream.write : $r2 = r0.<org.apache.pdfbox.cos.COSOutputStream: java.io.ByteArrayOutputStream buffer> >>>>>>>> org.apache.pdfbox.cos.COSOutputStream.write : virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1)
org.apache.pdfbox.cos.COSOutputStream.write : virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(10)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperator : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(10) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r6 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void setStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r6)
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void setStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r6) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : $r2 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack strokingColorSpaceStack>
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : $r2 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack strokingColorSpaceStack> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : $z0 = virtualinvoke $r2.<java.util.Stack: boolean isEmpty()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : $z0 = virtualinvoke $r2.<java.util.Stack: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : if $z0 == 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : if $z0 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack strokingColorSpaceStack>
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack strokingColorSpaceStack> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : virtualinvoke $r5.<java.util.Stack: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : virtualinvoke $r5.<java.util.Stack: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : goto [?= return]
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColorSpaceStack : goto [?= return] >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] getComponents()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] getComponents()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>()
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r3 = (float[]) $r2
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : $r3 = (float[]) $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : return $r3
org.apache.pdfbox.pdmodel.graphics.color.PDColor.getComponents : return $r3 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : i0 = lengthof r2
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : i1 = 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : i1 = 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if i1 >= i0
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if i1 >= i0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : f0 = r2[i1]
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : f0 = r2[i1] >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f0)
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperand(float)>(f0) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.text.NumberFormat formatDecimal>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r1 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.text.NumberFormat formatDecimal> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $i1 = virtualinvoke $r1.<java.text.NumberFormat: int getMaximumFractionDigits()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $i1 = virtualinvoke $r1.<java.text.NumberFormat: int getMaximumFractionDigits()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r2 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: byte[] formatBuffer>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r2 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: byte[] formatBuffer> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : i0 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatFloatFast(float,int,byte[])>(f0, $i1, $r2)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : i0 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatFloatFast(float,int,byte[])>(f0, $i1, $r2) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $z0 != 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $z1 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f0)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $z1 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f0) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $z1 != 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $z1 != 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b1 = f0 cmpl 9.223372E18F
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b1 = f0 cmpl 9.223372E18F >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b1 > 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b1 > 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b2 = f0 cmpg -9.223372E18F
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b2 = f0 cmpg -9.223372E18F >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b2 <= 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b2 <= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if i0 <= 5
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if i0 <= 5 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i12 = 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i12 = 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l13 = (long) f0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l13 = (long) f0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b3 = f0 cmpg 0.0F
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b3 = f0 cmpg 0.0F >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b3 >= 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b3 >= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d0 = (double) f0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d0 = (double) f0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d2 = (double) l13
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d2 = (double) l13 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d4 = $d1 - $d2
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d4 = $d1 - $d2 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $r1 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $r1 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $l4 = $r1[i0]
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $l4 = $r1[i0] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d3 = (double) $l4
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d3 = (double) $l4 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d5 = $d4 * $d3
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d5 = $d4 * $d3 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d6 = $d5 + 0.5
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $d6 = $d5 + 0.5 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l14 = (long) $d6
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l14 = (long) $d6 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $l5 = $r2[i0]
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $l5 = $r2[i0] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b6 = l14 cmp $l5
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b6 = l14 cmp $l5 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b6 < 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b6 < 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $i7 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int getExponent(long)>(l13)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $i7 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int getExponent(long)>(l13) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : i8 = 0
org.apache.pdfbox.util.NumberFormatUtil.getExponent : i8 = 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $r0 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $r0 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i1 = lengthof $r0
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i1 = lengthof $r0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i2 = $i1 - 1
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i2 = $i1 - 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : if i8 >= $i2
org.apache.pdfbox.util.NumberFormatUtil.getExponent : if i8 >= $i2 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i5 = i8 + 1
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $i5 = i8 + 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $l6 = $r2[$i5]
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $l6 = $r2[$i5] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : $b7 = l0 cmp $l6
org.apache.pdfbox.util.NumberFormatUtil.getExponent : $b7 = l0 cmp $l6 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : if $b7 >= 0
org.apache.pdfbox.util.NumberFormatUtil.getExponent : if $b7 >= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : i8 = i8 + 1
org.apache.pdfbox.util.NumberFormatUtil.getExponent : i8 = i8 + 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : goto [?= $r0 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>]
org.apache.pdfbox.util.NumberFormatUtil.getExponent : goto [?= $r0 = <org.apache.pdfbox.util.NumberFormatUtil: long[] POWER_OF_TENS>] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.getExponent : return i8
org.apache.pdfbox.util.NumberFormatUtil.getExponent : return i8 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i15 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatPositiveNumber(long,int,boolean,byte[],int)>(l13, $i7, 0, r0, i12)
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i15 = staticinvoke <org.apache.pdfbox.util.NumberFormatUtil: int formatPositiveNumber(long,int,boolean,byte[],int)>(l13, $i7, 0, r0, i12) >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i19 = i1
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i19 = i1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : l20 = l0
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : l20 = l0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $b3 = l20 cmp 2147483647L
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $b3 = l20 cmp 2147483647L >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if $b3 <= 0
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if $b3 <= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i22 = (int) l20
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i22 = (int) l20 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if i18 < 0
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if i18 < 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if z0 == 0
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : if z0 == 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $r1 = <org.apache.pdfbox.util.NumberFormatUtil: int[] POWER_OF_TENS_INT>
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $r1 = <org.apache.pdfbox.util.NumberFormatUtil: int[] POWER_OF_TENS_INT> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i4 = $r1[i18]
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i4 = $r1[i18] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i2 = i22 / $i4
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i2 = i22 / $i4 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: int[] POWER_OF_TENS_INT>
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $r2 = <org.apache.pdfbox.util.NumberFormatUtil: int[] POWER_OF_TENS_INT> >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i5 = $r2[i18]
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i5 = $r2[i18] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i6 = i2 * $i5
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i6 = i2 * $i5 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i22 = i22 - $i6
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i22 = i22 - $i6 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i7 = i19
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i7 = i19 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i19 = i19 + 1
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i19 = i19 + 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i8 = 48 + i2
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $i8 = 48 + i2 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $b9 = (byte) $i8
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : $b9 = (byte) $i8 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : r0[$i7] = $b9
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : r0[$i7] = $b9 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i18 = i18 + -1
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : i18 = i18 + -1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : goto [?= (branch)]
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : return i19
org.apache.pdfbox.util.NumberFormatUtil.formatPositiveNumber : return i19 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b8 = l14 cmp 0L
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : $b8 = l14 cmp 0L >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b8 <= 0
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : if $b8 <= 0 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : return i15
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : return i15 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : if i0 != -1
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : if i0 != -1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r4 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r4 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: byte[] formatBuffer>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: byte[] formatBuffer> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, i0)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, i0) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(32)
org.apache.pdfbox.contentstream.PDAbstractContentStream.writeOperand : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(32) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : i1 = i1 + 1
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : goto [?= (branch)]
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i12 = 0 + 1
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : i12 = 0 + 1 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : r0[0] = 45
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : r0[0] = 45 >>>>>>>> org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l13 = neg l13
org.apache.pdfbox.util.NumberFormatUtil.formatFloatFast : l13 = neg l13 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r7 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r7 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z1 = $r7 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDPattern
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z1 = $r7 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDPattern >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z1 == 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z1 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r8 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r8 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z2 = $r8 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDPattern
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z2 = $r8 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDPattern >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z2 != 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z2 != 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z3 = $r9 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDSeparation
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z3 = $r9 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDSeparation >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z3 != 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z3 != 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r10 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r10 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z4 = $r10 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z4 = $r10 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z4 != 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z4 != 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r11 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $r11 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z5 = $r11 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDICCBased
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : $z5 = $r11 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDICCBased >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z5 == 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : if $z5 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("SC")
org.apache.pdfbox.contentstream.PDAbstractContentStream.setStrokingColor : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("SC") >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBorderColour : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBorderColour : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBorderColour : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BC>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBorderColour : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BC> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBorderColour : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSArray toCOSArray()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBorderColour : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSArray toCOSArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r2 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r2 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : specialinvoke $r2.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: float[] components> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void setFloatArray(float[])>($r3)
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void setFloatArray(float[])>($r3) >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void clear()>()
org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void clear()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.clear : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.clear : $r1 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.apache.pdfbox.cos.COSArray.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : i0 = lengthof r1
org.apache.pdfbox.cos.COSArray.setFloatArray : i0 = lengthof r1 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = 0
org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = 0 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : if i1 >= i0
org.apache.pdfbox.cos.COSArray.setFloatArray : if i1 >= i0 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : f0 = r1[i1]
org.apache.pdfbox.cos.COSArray.setFloatArray : f0 = r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : $r3 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSArray.setFloatArray : $r3 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.COSArray.setFloatArray : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3)
org.apache.pdfbox.cos.COSArray.setFloatArray : virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = i1 + 1
org.apache.pdfbox.cos.COSArray.setFloatArray : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.cos.COSArray.setFloatArray : goto [?= (branch)]
org.apache.pdfbox.cos.COSArray.setFloatArray : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : if $r4 == null
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : if $r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName>
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSName patternName> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r5)
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : return $r2
org.apache.pdfbox.pdmodel.graphics.color.PDColor.toCOSArray : return $r2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBorderColour : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBorderColour : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBackground : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBackground : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBackground : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BG>
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBackground : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BG> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBackground : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSArray toCOSArray()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBackground : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: org.apache.pdfbox.cos.COSArray toCOSArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBackground : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setBackground : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setRolloverCaption : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setRolloverCaption : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceCharacteristicsDictionary: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setRolloverCaption : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setString(java.lang.String,java.lang.String)>("RC", r1)
org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary.setRolloverCaption : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setString(java.lang.String,java.lang.String)>("RC", r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.setString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r2)
org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setString(org.apache.pdfbox.cos.COSName,java.lang.String)>($r3, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = null
org.apache.pdfbox.cos.COSDictionary.setString : r4 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setString : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSDictionary.setString : $r3 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setString : specialinvoke $r3.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3
org.apache.pdfbox.cos.COSDictionary.setString : r4 = $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setString : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r4)
