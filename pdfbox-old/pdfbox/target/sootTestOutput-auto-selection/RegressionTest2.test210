org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r1 = new org.apache.pdfbox.io.ScratchFile >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>() >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2)
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = null >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r1 == null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r7 != null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r7 != null >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $r2 = new org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $r2 = new org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : specialinvoke $r2.<org.apache.pdfbox.cos.COSObject: void <init>(org.apache.pdfbox.cos.COSBase)>(null)
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : specialinvoke $r2.<org.apache.pdfbox.cos.COSObject: void <init>(org.apache.pdfbox.cos.COSBase)>(null) >>>>>>>> org.apache.pdfbox.cos.COSObject.setObject : r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase baseObject> = r1
org.apache.pdfbox.cos.COSObject.setObject : r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase baseObject> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = $r2
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = $r2 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : return r7
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : return r7 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : $r7 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjectByType : $r7 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : if $z0 == 0
org.apache.pdfbox.cos.COSDocument.getObjectByType : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : return null
org.apache.pdfbox.cos.COSDocument.getObjectByType : return null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary>
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary dictionary> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.form.PDField.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r1 == null
org.apache.pdfbox.util.SmallMap.put : if r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if r2 != null
org.apache.pdfbox.util.SmallMap.put : if r2 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r5 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if $r5 != null
org.apache.pdfbox.util.SmallMap.put : if $r5 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2]
org.apache.pdfbox.util.SmallMap.put : $r10 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1
org.apache.pdfbox.util.SmallMap.put : $r10[0] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2
org.apache.pdfbox.util.SmallMap.put : $r10[1] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r10 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : return null
org.apache.pdfbox.util.SmallMap.put : return null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.putAll : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $r3 == null
org.apache.pdfbox.util.SmallMap.putAll : if $r3 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $i1 = interfaceinvoke r1.<java.util.Map: int size()>()
org.apache.pdfbox.util.SmallMap.putAll : $i1 = interfaceinvoke r1.<java.util.Map: int size()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.size : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.size : if $r1 != null
org.apache.pdfbox.util.SmallMap.size : if $r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.size : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.size : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.size : $i1 = $i0 >> 1
org.apache.pdfbox.util.SmallMap.size : $i1 = $i0 >> 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.size : return $i1
org.apache.pdfbox.util.SmallMap.size : return $i1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $i2 = $i1 << 1
org.apache.pdfbox.util.SmallMap.putAll : $i2 = $i1 << 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r4 = newarray (java.lang.Object)[$i2]
org.apache.pdfbox.util.SmallMap.putAll : $r4 = newarray (java.lang.Object)[$i2] >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r4
org.apache.pdfbox.util.SmallMap.putAll : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = $r4 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : i9 = 0
org.apache.pdfbox.util.SmallMap.putAll : i9 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.util.SmallMap.putAll : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.entrySet : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null
org.apache.pdfbox.util.SmallMap.isEmpty : if $r1 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.isEmpty : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.isEmpty : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0
org.apache.pdfbox.util.SmallMap.isEmpty : if $i0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0
org.apache.pdfbox.util.SmallMap.isEmpty : $z0 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.isEmpty : return $z0
org.apache.pdfbox.util.SmallMap.isEmpty : return $z0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : if $z0 == 0
org.apache.pdfbox.util.SmallMap.entrySet : if $z0 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r2 = new java.util.LinkedHashSet
org.apache.pdfbox.util.SmallMap.entrySet : $r2 = new java.util.LinkedHashSet >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>()
org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : i1 = 0
org.apache.pdfbox.util.SmallMap.entrySet : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.entrySet : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $i0 = lengthof $r3
org.apache.pdfbox.util.SmallMap.entrySet : $i0 = lengthof $r3 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.entrySet : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r5 = new org.apache.pdfbox.util.SmallMap$SmallMapEntry
org.apache.pdfbox.util.SmallMap.entrySet : $r5 = new org.apache.pdfbox.util.SmallMap$SmallMapEntry >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r5.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: void <init>(org.apache.pdfbox.util.SmallMap,int)>(r0, i1)
org.apache.pdfbox.util.SmallMap.entrySet : specialinvoke $r5.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: void <init>(org.apache.pdfbox.util.SmallMap,int)>(r0, i1) >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5)
org.apache.pdfbox.util.SmallMap.entrySet : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $r1 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: java.lang.Object getKey()>()
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $r1 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1)
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.access$000 : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.access$000 : $r1 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.access$000 : return $r1
org.apache.pdfbox.util.SmallMap.access$000 : return $r1 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r3 = $r2[$i0]
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : $r3 = $r2[$i0] >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : return $r3
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getKey : return $r3 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>()
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.pdfbox.cos.COSName.hashCode : $i0 = r0.<org.apache.pdfbox.cos.COSName: int hashCode>
org.apache.pdfbox.cos.COSName.hashCode : $i0 = r0.<org.apache.pdfbox.cos.COSName: int hashCode> >>>>>>>> org.apache.pdfbox.cos.COSName.hashCode : return $i0
org.apache.pdfbox.cos.COSName.hashCode : return $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : return $i0
org.apache.pdfbox.util.SmallMap$SmallMapEntry.hashCode : return $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.entrySet : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : goto [?= $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.entrySet : goto [?= $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2)
org.apache.pdfbox.util.SmallMap.entrySet : $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2) >>>>>>>> org.apache.pdfbox.util.SmallMap.entrySet : return $r4
org.apache.pdfbox.util.SmallMap.entrySet : return $r4 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : r26 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.util.SmallMap.putAll : r26 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.util.SmallMap.putAll : $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $z1 == 0
org.apache.pdfbox.util.SmallMap.putAll : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r6 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.util.SmallMap.putAll : $r6 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : r27 = (java.util.Map$Entry) $r6
org.apache.pdfbox.util.SmallMap.putAll : r27 = (java.util.Map$Entry) $r6 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r7 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.util.SmallMap.putAll : $r7 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $r7 == null
org.apache.pdfbox.util.SmallMap.putAll : if $r7 == null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r9 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.util.SmallMap.putAll : $r9 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r1 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: org.apache.pdfbox.util.SmallMap this$0> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1)
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r2 = staticinvoke <org.apache.pdfbox.util.SmallMap: java.lang.Object[] access$000(org.apache.pdfbox.util.SmallMap)>($r1) >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx>
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i0 = r0.<org.apache.pdfbox.util.SmallMap$SmallMapEntry: int keyIdx> >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i1 = $i0 + 1
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $i1 = $i0 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r3 = $r2[$i1]
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : $r3 = $r2[$i1] >>>>>>>> org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : return $r3
org.apache.pdfbox.util.SmallMap$SmallMapEntry.getValue : return $r3 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : if $r9 != null
org.apache.pdfbox.util.SmallMap.putAll : if $r9 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r10 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.putAll : $r10 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : i10 = i9 + 1
org.apache.pdfbox.util.SmallMap.putAll : i10 = i9 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r11 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.util.SmallMap.putAll : $r11 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r10[i9] = $r11
org.apache.pdfbox.util.SmallMap.putAll : $r10[i9] = $r11 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r12 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.putAll : $r12 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : i9 = i10 + 1
org.apache.pdfbox.util.SmallMap.putAll : i9 = i10 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r13 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.util.SmallMap.putAll : $r13 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : $r12[i10] = $r13
org.apache.pdfbox.util.SmallMap.putAll : $r12[i10] = $r13 >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : goto [?= $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.util.SmallMap.putAll : goto [?= $z1 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.util.SmallMap.putAll : goto [?= return]
org.apache.pdfbox.util.SmallMap.putAll : goto [?= return] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.put : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>()
org.apache.pdfbox.util.SmallMap.findKey : $z0 = virtualinvoke r0.<org.apache.pdfbox.util.SmallMap: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0
org.apache.pdfbox.util.SmallMap.findKey : if $z0 != 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if r1 != null
org.apache.pdfbox.util.SmallMap.findKey : if r1 != null >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = 0
org.apache.pdfbox.util.SmallMap.findKey : i1 = 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2
org.apache.pdfbox.util.SmallMap.findKey : $i0 = lengthof $r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0
org.apache.pdfbox.util.SmallMap.findKey : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.findKey : $r3 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1]
org.apache.pdfbox.util.SmallMap.findKey : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.util.SmallMap.findKey : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.cos.COSName.equals : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z0 == 0
org.apache.pdfbox.cos.COSName.equals : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r4 = r0.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1
org.apache.pdfbox.cos.COSName.equals : $r2 = (org.apache.pdfbox.cos.COSName) r1 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name>
org.apache.pdfbox.cos.COSName.equals : $r3 = $r2.<org.apache.pdfbox.cos.COSName: java.lang.String name> >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.pdfbox.cos.COSName.equals : $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSName.equals : if $z1 == 0
org.apache.pdfbox.cos.COSName.equals : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : $z2 = 0
org.apache.pdfbox.cos.COSName.equals : $z2 = 0 >>>>>>>> org.apache.pdfbox.cos.COSName.equals : return $z2
org.apache.pdfbox.cos.COSName.equals : return $z2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0
org.apache.pdfbox.util.SmallMap.findKey : if $z1 == 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2
org.apache.pdfbox.util.SmallMap.findKey : i1 = i1 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>]
org.apache.pdfbox.util.SmallMap.findKey : goto [?= $r2 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>] >>>>>>>> org.apache.pdfbox.util.SmallMap.findKey : return -1
org.apache.pdfbox.util.SmallMap.findKey : return -1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : if i0 >= 0
org.apache.pdfbox.util.SmallMap.put : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r8 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8
org.apache.pdfbox.util.SmallMap.put : i5 = lengthof $r8 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2
org.apache.pdfbox.util.SmallMap.put : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3]
org.apache.pdfbox.util.SmallMap.put : r3 = newarray (java.lang.Object)[$i3] >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr>
org.apache.pdfbox.util.SmallMap.put : $r9 = r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> >>>>>>>> org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5)
org.apache.pdfbox.util.SmallMap.put : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 0, i5) >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1
org.apache.pdfbox.util.SmallMap.put : r3[i5] = r1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1
org.apache.pdfbox.util.SmallMap.put : $i4 = i5 + 1 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2
org.apache.pdfbox.util.SmallMap.put : r3[$i4] = r2 >>>>>>>> org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3
org.apache.pdfbox.util.SmallMap.put : r0.<org.apache.pdfbox.util.SmallMap: java.lang.Object[] mapArr> = r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getLong : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = null
org.apache.pdfbox.cos.COSName.getPDFName : r6 = null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null
org.apache.pdfbox.cos.COSName.getPDFName : if r0 == null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r1 = <org.apache.pdfbox.cos.COSName: java.util.Map commonNameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r2 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null
org.apache.pdfbox.cos.COSName.getPDFName : if r6 != null >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap>
org.apache.pdfbox.cos.COSName.getPDFName : $r3 = <org.apache.pdfbox.cos.COSName: java.util.Map nameMap> >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.pdfbox.cos.COSName.getPDFName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4
org.apache.pdfbox.cos.COSName.getPDFName : r6 = (org.apache.pdfbox.cos.COSName) $r4 >>>>>>>> org.apache.pdfbox.cos.COSName.getPDFName : return r6
org.apache.pdfbox.cos.COSName.getPDFName : return r6 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : $l0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: long getLong(org.apache.pdfbox.cos.COSName,long)>($r2, -1L)
org.apache.pdfbox.cos.COSDictionary.getLong : $l0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: long getLong(org.apache.pdfbox.cos.COSName,long)>($r2, -1L) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : l1 = l0
org.apache.pdfbox.cos.COSDictionary.getLong : l1 = l0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getLong : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items>
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = r0.<org.apache.pdfbox.cos.COSDictionary: java.util.Map items> >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1)
org.apache.pdfbox.util.SmallMap.get : i0 = specialinvoke r0.<org.apache.pdfbox.util.SmallMap: int findKey(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.util.SmallMap.get : if i0 >= 0
org.apache.pdfbox.util.SmallMap.get : if i0 >= 0 >>>>>>>> org.apache.pdfbox.util.SmallMap.get : $r3 = null
org.apache.pdfbox.util.SmallMap.get : $r3 = null >>>>>>>> org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3]
org.apache.pdfbox.util.SmallMap.get : goto [?= return $r3] >>>>>>>> org.apache.pdfbox.util.SmallMap.get : return $r3
org.apache.pdfbox.util.SmallMap.get : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r5 = (org.apache.pdfbox.cos.COSBase) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z0 = r5 instanceof org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $z1 = r5 instanceof org.apache.pdfbox.cos.COSNull >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : $z0 = r2 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.cos.COSDictionary.getLong : $z0 = r2 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : if $z0 == 0
org.apache.pdfbox.cos.COSDictionary.getLong : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : return l1
org.apache.pdfbox.cos.COSDictionary.getLong : return l1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getLong : return $l0
org.apache.pdfbox.cos.COSDictionary.getLong : return $l0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)>(r1, $r3, null)
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: java.lang.String getEmbeddedString(java.lang.String,org.apache.pdfbox.cos.COSName,java.lang.String)>(r1, $r3, null) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : r6 = r3
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : r6 = r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r5 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : $r5 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r2 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return $r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : r4 = (org.apache.pdfbox.cos.COSDictionary) $r5
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : r4 = (org.apache.pdfbox.cos.COSDictionary) $r5 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : if r4 == null
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : if r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : return r6
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : return r6 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : return $r4
org.apache.pdfbox.cos.COSDictionary.getEmbeddedString : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1
org.apache.pdfbox.cos.COSDocument.setTrailer : r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary trailer> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : $r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : r5 = (org.apache.pdfbox.cos.COSDictionary) $r3
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : r5 = (org.apache.pdfbox.cos.COSDictionary) $r3 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : if r5 != null
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : if r5 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : $r4 = new org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : $r4 = new org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : specialinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void <init>()>()
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : specialinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : r5 = $r4
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : r5 = $r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)>(r1, $r4)
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)>(r1, $r4) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1)
org.apache.pdfbox.cos.COSDictionary.setItem : $r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r2)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>(r2, i0)
org.apache.pdfbox.cos.COSDictionary.setEmbeddedInt : virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>(r2, i0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0
org.apache.pdfbox.cos.COSDictionary.setInt : $l1 = (long) i0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1)
org.apache.pdfbox.cos.COSDictionary.setInt : $r2 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1) >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0
org.apache.pdfbox.cos.COSInteger.get : $b2 = -100L cmp l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b2 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L
org.apache.pdfbox.cos.COSInteger.get : $b3 = l0 cmp 256L >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0
org.apache.pdfbox.cos.COSInteger.get : if $b3 > 0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0
org.apache.pdfbox.cos.COSInteger.get : $i4 = (int) l0 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100
org.apache.pdfbox.cos.COSInteger.get : i1 = $i4 - -100 >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r1 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1]
org.apache.pdfbox.cos.COSInteger.get : $r2 = $r1[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : if $r2 != null
org.apache.pdfbox.cos.COSInteger.get : if $r2 != null >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC>
org.apache.pdfbox.cos.COSInteger.get : $r3 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger[] STATIC> >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1]
org.apache.pdfbox.cos.COSInteger.get : $r4 = $r3[i1] >>>>>>>> org.apache.pdfbox.cos.COSInteger.get : return $r4
org.apache.pdfbox.cos.COSInteger.get : return $r4 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2)
org.apache.pdfbox.cos.COSDictionary.setInt : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setBoolean : $r2 = staticinvoke <org.apache.pdfbox.cos.COSBoolean: org.apache.pdfbox.cos.COSBoolean getBoolean(boolean)>(z0)
org.apache.pdfbox.cos.COSDictionary.setBoolean : $r2 = staticinvoke <org.apache.pdfbox.cos.COSBoolean: org.apache.pdfbox.cos.COSBoolean getBoolean(boolean)>(z0) >>>>>>>> org.apache.pdfbox.cos.COSBoolean.getBoolean : if z0 == 0
org.apache.pdfbox.cos.COSBoolean.getBoolean : if z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSBoolean.getBoolean : $r0 = <org.apache.pdfbox.cos.COSBoolean: org.apache.pdfbox.cos.COSBoolean FALSE>
org.apache.pdfbox.cos.COSBoolean.getBoolean : $r0 = <org.apache.pdfbox.cos.COSBoolean: org.apache.pdfbox.cos.COSBoolean FALSE> >>>>>>>> org.apache.pdfbox.cos.COSBoolean.getBoolean : return $r0
org.apache.pdfbox.cos.COSBoolean.getBoolean : return $r0 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setBoolean : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2)
org.apache.pdfbox.cos.COSDictionary.setBoolean : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setNeedToBeUpdated : r0.<org.apache.pdfbox.cos.COSDictionary: boolean needToBeUpdated> = z0
org.apache.pdfbox.cos.COSDictionary.setNeedToBeUpdated : r0.<org.apache.pdfbox.cos.COSDictionary: boolean needToBeUpdated> = z0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.isClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isClosed : if $r1 != null
org.apache.pdfbox.io.RandomAccessBuffer.isClosed : if $r1 != null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isClosed : $z0 = 0
org.apache.pdfbox.io.RandomAccessBuffer.isClosed : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.isClosed : return $z0
org.apache.pdfbox.io.RandomAccessBuffer.isClosed : return $z0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>()
org.apache.pdfbox.io.RandomAccessBuffer.read : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null
org.apache.pdfbox.io.RandomAccessBuffer.checkClosed : if $r1 != null >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.read : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.read : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : $b4 = $l3 cmp $l2
org.apache.pdfbox.io.RandomAccessBuffer.read : $b4 = $l3 cmp $l2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : if $b4 < 0
org.apache.pdfbox.io.RandomAccessBuffer.read : if $b4 < 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.read : return 0
org.apache.pdfbox.io.RandomAccessBuffer.read : return 0 >>>>>>>> org.apache.pdfbox.util.Hex.getString : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.util.Hex.getString : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.util.Hex.getString : $i2 = lengthof r0
org.apache.pdfbox.util.Hex.getString : $i2 = lengthof r0 >>>>>>>> org.apache.pdfbox.util.Hex.getString : $i3 = $i2 * 2
org.apache.pdfbox.util.Hex.getString : $i3 = $i2 * 2 >>>>>>>> org.apache.pdfbox.util.Hex.getString : specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i3)
org.apache.pdfbox.util.Hex.getString : specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i3) >>>>>>>> org.apache.pdfbox.util.Hex.getString : i0 = lengthof r0
org.apache.pdfbox.util.Hex.getString : i0 = lengthof r0 >>>>>>>> org.apache.pdfbox.util.Hex.getString : i8 = 0
org.apache.pdfbox.util.Hex.getString : i8 = 0 >>>>>>>> org.apache.pdfbox.util.Hex.getString : if i8 >= i0
org.apache.pdfbox.util.Hex.getString : if i8 >= i0 >>>>>>>> org.apache.pdfbox.util.Hex.getString : b1 = r0[i8]
org.apache.pdfbox.util.Hex.getString : b1 = r0[i8] >>>>>>>> org.apache.pdfbox.util.Hex.getString : $r5 = <org.apache.pdfbox.util.Hex: char[] HEX_CHARS>
org.apache.pdfbox.util.Hex.getString : $r5 = <org.apache.pdfbox.util.Hex: char[] HEX_CHARS> >>>>>>>> org.apache.pdfbox.util.Hex.getString : $i4 = staticinvoke <org.apache.pdfbox.util.Hex: int getHighNibble(byte)>(b1)
org.apache.pdfbox.util.Hex.getString : $i4 = staticinvoke <org.apache.pdfbox.util.Hex: int getHighNibble(byte)>(b1) >>>>>>>> org.apache.pdfbox.util.Hex.getHighNibble : $s1 = b0 & 240
org.apache.pdfbox.util.Hex.getHighNibble : $s1 = b0 & 240 >>>>>>>> org.apache.pdfbox.util.Hex.getHighNibble : $s2 = $s1 >> 4
org.apache.pdfbox.util.Hex.getHighNibble : $s2 = $s1 >> 4 >>>>>>>> org.apache.pdfbox.util.Hex.getHighNibble : return $s2
org.apache.pdfbox.util.Hex.getHighNibble : return $s2 >>>>>>>> org.apache.pdfbox.util.Hex.getString : $c5 = $r5[$i4]
org.apache.pdfbox.util.Hex.getString : $c5 = $r5[$i4] >>>>>>>> org.apache.pdfbox.util.Hex.getString : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5)
org.apache.pdfbox.util.Hex.getString : $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5) >>>>>>>> org.apache.pdfbox.util.Hex.getString : $r7 = <org.apache.pdfbox.util.Hex: char[] HEX_CHARS>
org.apache.pdfbox.util.Hex.getString : $r7 = <org.apache.pdfbox.util.Hex: char[] HEX_CHARS> >>>>>>>> org.apache.pdfbox.util.Hex.getString : $i6 = staticinvoke <org.apache.pdfbox.util.Hex: int getLowNibble(byte)>(b1)
org.apache.pdfbox.util.Hex.getString : $i6 = staticinvoke <org.apache.pdfbox.util.Hex: int getLowNibble(byte)>(b1) >>>>>>>> org.apache.pdfbox.util.Hex.getLowNibble : $b1 = b0 & 15
org.apache.pdfbox.util.Hex.getLowNibble : $b1 = b0 & 15 >>>>>>>> org.apache.pdfbox.util.Hex.getLowNibble : return $b1
org.apache.pdfbox.util.Hex.getLowNibble : return $b1 >>>>>>>> org.apache.pdfbox.util.Hex.getString : $c7 = $r7[$i6]
org.apache.pdfbox.util.Hex.getString : $c7 = $r7[$i6] >>>>>>>> org.apache.pdfbox.util.Hex.getString : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7)
org.apache.pdfbox.util.Hex.getString : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7) >>>>>>>> org.apache.pdfbox.util.Hex.getString : i8 = i8 + 1
org.apache.pdfbox.util.Hex.getString : i8 = i8 + 1 >>>>>>>> org.apache.pdfbox.util.Hex.getString : goto [?= (branch)]
org.apache.pdfbox.util.Hex.getString : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.util.Hex.getString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.util.Hex.getString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.util.Hex.getString : return $r4
org.apache.pdfbox.util.Hex.getString : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : r11 = null
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : r11 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: org.apache.pdfbox.cos.COSDictionary parameters>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $r5 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: org.apache.pdfbox.cos.COSDictionary parameters> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : r1 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r4, $r3)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : r1 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r4, $r3) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1) >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.finalize : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose>
org.apache.pdfbox.cos.COSDocument.finalize : $z1 = r0.<org.apache.pdfbox.cos.COSDocument: boolean warnMissingClose> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.finalize : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.cos.COSDocument.finalize : $r1 = <org.apache.pdfbox.cos.COSDocument: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Warning: You did not close a PDF Document")
org.apache.pdfbox.cos.COSDocument.finalize : interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Warning: You did not close a PDF Document") >>>>>>>> org.apache.pdfbox.cos.COSDocument.finalize : virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: void close()>()
org.apache.pdfbox.cos.COSDocument.finalize : virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: void close()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed>
org.apache.pdfbox.cos.COSDocument.close : $z0 = r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0
org.apache.pdfbox.cos.COSDocument.close : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>()
org.apache.pdfbox.cos.COSDocument.close : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList
org.apache.pdfbox.cos.COSDocument.getObjects : $r1 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjects : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjects : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.pdfbox.cos.COSDocument.getObjects : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjects : return $r1
org.apache.pdfbox.cos.COSDocument.getObjects : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if r1 == null
org.apache.pdfbox.cos.COSDocument.close : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r10 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r3 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r3 == null
org.apache.pdfbox.cos.COSDocument.close : if $r3 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams>
org.apache.pdfbox.cos.COSDocument.close : $r6 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.List streams> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.close : r12 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.close : $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0
org.apache.pdfbox.cos.COSDocument.close : if $z1 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r4 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : if $r4 == null
org.apache.pdfbox.cos.COSDocument.close : if $r4 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile>
org.apache.pdfbox.cos.COSDocument.close : $r5 = r0.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.io.ScratchFile scratchFile> >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>()
org.apache.pdfbox.cos.COSDocument.close : virtualinvoke $r5.<org.apache.pdfbox.io.ScratchFile: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r21 = null
org.apache.pdfbox.io.ScratchFile.close : r21 = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock>
org.apache.pdfbox.io.ScratchFile.close : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.lang.Object ioLock> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed>
org.apache.pdfbox.io.ScratchFile.close : $z0 = r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0
org.apache.pdfbox.io.ScratchFile.close : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: boolean isClosed> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf>
org.apache.pdfbox.io.ScratchFile.close : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.RandomAccessFile raf> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r5 == null
org.apache.pdfbox.io.ScratchFile.close : if $r5 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file>
org.apache.pdfbox.io.ScratchFile.close : $r23 = r0.<org.apache.pdfbox.io.ScratchFile: java.io.File file> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if $r23 == null
org.apache.pdfbox.io.ScratchFile.close : if $r23 == null >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>]
org.apache.pdfbox.io.ScratchFile.close : goto [?= $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6
org.apache.pdfbox.io.ScratchFile.close : entermonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.close : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>()
org.apache.pdfbox.io.ScratchFile.close : virtualinvoke $r7.<java.util.BitSet: void clear()>() >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0
org.apache.pdfbox.io.ScratchFile.close : r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6
org.apache.pdfbox.io.ScratchFile.close : exitmonitor $r6 >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.close : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.close : if r21 == null
org.apache.pdfbox.io.ScratchFile.close : if r21 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1
org.apache.pdfbox.cos.COSDocument.close : r0.<org.apache.pdfbox.cos.COSDocument: boolean closed> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $r2 == null
org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $r2 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r3 = <org.apache.pdfbox.io.ScratchFileBuffer: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r3 = <org.apache.pdfbox.io.ScratchFileBuffer: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $z0 == 0
org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void close()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null
org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0)
org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : specialinvoke r0.<java.lang.Object: void finalize()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : specialinvoke r0.<java.lang.Object: void finalize()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : goto [?= return]
org.apache.pdfbox.io.ScratchFileBuffer.finalize : goto [?= return] >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r3 != null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2)
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : r3 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3
org.apache.pdfbox.cos.COSDictionary.getDictionaryObject : return r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $z0 = r1 instanceof org.apache.pdfbox.cos.COSName >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : return r11
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.getFilters : return r11 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setType : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = null
org.apache.pdfbox.cos.COSDictionary.setName : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setName : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2)
org.apache.pdfbox.cos.COSDictionary.setName : r3 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setName : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName S>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName S> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setSubType : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r2, r1) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $b0 = f0 cmpg -1.0F
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $b0 = f0 cmpg -1.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : if $b0 < 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : if $b0 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $b1 = f0 cmpl 1.0F
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $b1 = f0 cmpl 1.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : if $b1 <= 0
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDActionSound: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDActionSound: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VOLUME>
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VOLUME> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setFloat(org.apache.pdfbox.cos.COSName,float)>($r2, f0)
org.apache.pdfbox.pdmodel.interactive.action.PDActionSound.setVolume : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setFloat(org.apache.pdfbox.cos.COSName,float)>($r2, f0) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : $r3 = new org.apache.pdfbox.cos.COSFloat
org.apache.pdfbox.cos.COSDictionary.setFloat : $r3 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.COSDictionary.setFloat : specialinvoke $r3.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46)
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46) >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $i0 <= -1 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0")
org.apache.pdfbox.cos.COSFloat.removeNullDigits : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".0") >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0
org.apache.pdfbox.cos.COSFloat.removeNullDigits : if $z0 != 0 >>>>>>>> org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1
org.apache.pdfbox.cos.COSFloat.removeNullDigits : return r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setFloat : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r3)
org.apache.pdfbox.cos.COSDictionary.setFloat : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : $r3 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions: org.apache.pdfbox.cos.COSDictionary actions> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C>
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName C> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1)
org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions.setC : virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r2, r1) >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null
org.apache.pdfbox.cos.COSDictionary.setItem : if r2 == null >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>()
org.apache.pdfbox.cos.COSDictionary.setItem : r3 = interfaceinvoke r2.<org.apache.pdfbox.pdmodel.common.COSObjectable: org.apache.pdfbox.cos.COSBase getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : $r1 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : return $r1
org.apache.pdfbox.pdmodel.interactive.action.PDAction.getCOSObject : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3)
org.apache.pdfbox.cos.COSDictionary.setItem : virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if r1 == null
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if $z0 != 0
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : r2 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)>(r1)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : r2 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray convertStringListToCOSStringCOSArray(java.util.List)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : if $z0 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r3 = (java.lang.String) $r5
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r6 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : $r6 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : specialinvoke $r6.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r0 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c0) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1)
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0
org.apache.pdfbox.cos.PDFDocEncoding.containsChar : return $z0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i0 = lengthof r2 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = 0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if i3 >= i0 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : c1 = r2[i3] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE>
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r6 = <org.apache.pdfbox.cos.PDFDocEncoding: java.util.Map UNI_TO_CODE> >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : r3 = (java.lang.Integer) $r8 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : if r3 != null >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2)
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i2) >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)]
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5
org.apache.pdfbox.cos.PDFDocEncoding.getBytes : return $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6) >>>>>>>> org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects>
org.apache.pdfbox.cos.COSArray.add : $r2 = r0.<org.apache.pdfbox.cos.COSArray: java.util.List objects> >>>>>>>> org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.cos.COSArray.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : return $r4
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSStringCOSArray : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSDictionary getCOSObject()>()
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDButton: org.apache.pdfbox.cos.COSDictionary getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT>
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OPT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, r2)
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, r2) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : goto [?= return]
org.apache.pdfbox.pdmodel.interactive.form.PDButton.setExportValues : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setNext : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setNext : $r2 = r0.<org.apache.pdfbox.pdmodel.interactive.action.PDAction: org.apache.pdfbox.cos.COSDictionary action> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setNext : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NEXT>
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setNext : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NEXT> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setNext : $r4 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r1)
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setNext : $r4 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = null
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if r0 == null
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if r0 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z0 = r0 instanceof org.apache.pdfbox.pdmodel.common.COSArrayList
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z0 = r0 instanceof org.apache.pdfbox.pdmodel.common.COSArrayList >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z0 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = $r4
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r22 = $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z1 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z2 = r2 instanceof java.lang.String
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $z2 = r2 instanceof java.lang.String >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z2 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r19 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r19 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r20 = (java.lang.String) r2
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : $r20 = (java.lang.String) r2 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : specialinvoke $r19.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>($r20)
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : specialinvoke $r19.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r19)
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= (branch)]
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : return r22
org.apache.pdfbox.pdmodel.common.COSArrayList.converterToCOSArray : return r22 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.action.PDAction.setNext : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4)
org.apache.pdfbox.pdmodel.interactive.action.PDAction.setNext : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.setFilters : r2 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)>(r1)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.setFilters : r2 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray convertStringListToCOSNameCOSArray(java.util.List)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : $r4 = new org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : specialinvoke $r4.<org.apache.pdfbox.cos.COSArray: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : if $z0 == 0
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : r3 = (java.lang.String) $r5
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : $r6 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : $r6 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6)
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : virtualinvoke $r4.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : return $r4
org.apache.pdfbox.pdmodel.common.COSArrayList.convertStringListToCOSNameCOSArray : return $r4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.setFilters : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: org.apache.pdfbox.cos.COSDictionary parameters>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.setFilters : $r4 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: org.apache.pdfbox.cos.COSDictionary parameters> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.setFilters : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.setFilters : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName F> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.setFilters : virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r2)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.setFilters : virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r2) >>>>>>>> org.apache.pdfbox.util.QuickSort.sort : i0 = interfaceinvoke r0.<java.util.List: int size()>()
org.apache.pdfbox.util.QuickSort.sort : i0 = interfaceinvoke r0.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.util.QuickSort.sort : if i0 >= 2
