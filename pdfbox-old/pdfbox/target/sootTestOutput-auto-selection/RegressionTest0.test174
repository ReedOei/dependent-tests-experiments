org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r1 = new org.apache.pdfbox.io.ScratchFile >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : $r2 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>() >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly(long)>(-1L) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : $r0 = new org.apache.pdfbox.io.MemoryUsageSetting >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0)
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : specialinvoke $r0.<org.apache.pdfbox.io.MemoryUsageSetting: void <init>(boolean,boolean,long,long)>(1, 0, l0, l0) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0
org.apache.pdfbox.io.MemoryUsageSetting.setupMainMemoryOnly : return $r0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2)
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : specialinvoke $r1.<org.apache.pdfbox.io.ScratchFile: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r2) >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory>
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : $z0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: boolean useMainMemory> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.useMainMemory : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxMainMemoryBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : if $b1 < 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isMainMemoryRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes>
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $l0 = r0.<org.apache.pdfbox.io.MemoryUsageSetting: long maxStorageBytes> >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : $z0 = 0 >>>>>>>> org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0
org.apache.pdfbox.io.MemoryUsageSetting.isStorageRestricted : return $z0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1
org.apache.pdfbox.io.ScratchFile.getMainMemoryOnlyInstance : return $r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = null >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r1 == null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r1 == null >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r7 != null
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : if r7 != null >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $r2 = new org.apache.pdfbox.cos.COSObject
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : $r2 = new org.apache.pdfbox.cos.COSObject >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : specialinvoke $r2.<org.apache.pdfbox.cos.COSObject: void <init>(org.apache.pdfbox.cos.COSBase)>(null)
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : specialinvoke $r2.<org.apache.pdfbox.cos.COSObject: void <init>(org.apache.pdfbox.cos.COSBase)>(null) >>>>>>>> org.apache.pdfbox.cos.COSObject.setObject : r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase baseObject> = r1
org.apache.pdfbox.cos.COSObject.setObject : r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase baseObject> = r1 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = $r2
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : r7 = $r2 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectFromPool : return r7
org.apache.pdfbox.cos.COSDocument.getObjectFromPool : return r7 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : $r7 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool>
org.apache.pdfbox.cos.COSDocument.getObjectByType : $r7 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map objectPool> >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.cos.COSDocument.getObjectByType : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : if $z0 == 0
org.apache.pdfbox.cos.COSDocument.getObjectByType : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSDocument.getObjectByType : return null
org.apache.pdfbox.cos.COSDocument.getObjectByType : return null >>>>>>>> org.apache.pdfbox.cos.COSDocument.addXRefTable : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map xrefTable>
org.apache.pdfbox.cos.COSDocument.addXRefTable : $r2 = r0.<org.apache.pdfbox.cos.COSDocument: java.util.Map xrefTable> >>>>>>>> org.apache.pdfbox.cos.COSDocument.addXRefTable : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1)
