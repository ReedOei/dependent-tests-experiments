org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $r2 == null
org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $r2 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r3 = <org.apache.pdfbox.io.ScratchFileBuffer: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.io.ScratchFileBuffer.finalize : $r3 = <org.apache.pdfbox.io.ScratchFileBuffer: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $z0 == 0
org.apache.pdfbox.io.ScratchFileBuffer.finalize : if $z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void close()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : virtualinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void close()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null
org.apache.pdfbox.io.ScratchFileBuffer.close : if $r1 == null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.close : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.close : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0)
org.apache.pdfbox.io.ScratchFileBuffer.close : virtualinvoke $r3.<org.apache.pdfbox.io.ScratchFile: void markPagesAsFree(int[],int,int)>($r2, 0, $i0) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r4 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : entermonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i5 >= i1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i2 = r1[i5] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 < 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i3 = r0.<org.apache.pdfbox.io.ScratchFile: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i3 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r5 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if $z0 != 0 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r6 = r0.<org.apache.pdfbox.io.ScratchFile: java.util.BitSet freePages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2)
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : virtualinvoke $r6.<java.util.BitSet: void set(int)>(i2) >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $i4 = r0.<org.apache.pdfbox.io.ScratchFile: int inMemoryMaxPageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : if i2 >= $i4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages>
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7 = r0.<org.apache.pdfbox.io.ScratchFile: byte[][] inMemoryPages> >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : $r7[i2] = null >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : exitmonitor $r4 >>>>>>>> org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return]
org.apache.pdfbox.io.ScratchFile.markPagesAsFree : goto [?= return] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = null >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = 0L >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = -1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L
org.apache.pdfbox.io.ScratchFileBuffer.close : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = 0L >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : specialinvoke r0.<java.lang.Object: void finalize()>()
org.apache.pdfbox.io.ScratchFileBuffer.finalize : specialinvoke r0.<java.lang.Object: void finalize()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.finalize : goto [?= return]
org.apache.pdfbox.io.ScratchFileBuffer.finalize : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient.setX509 : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient: java.security.cert.X509Certificate x509> = r1
