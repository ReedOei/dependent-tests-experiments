org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: void logIfStrongEncryptionMissing()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r17 = new java.io.IOException
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r17 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r17.<java.io.IOException: void <init>(java.lang.Throwable)>($r16)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r17.<java.io.IOException: void <init>(java.lang.Throwable)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : throw $r17
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r18 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r19 = virtualinvoke r18.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r18 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r19 = virtualinvoke r18.<java.security.MessageDigest: byte[] digest(byte[])>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r20 = null
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r19 = virtualinvoke r18.<java.security.MessageDigest: byte[] digest(byte[])>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r20 = null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i22 = 0
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i22 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if i22 < 64
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if i22 < 64 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i16 = lengthof r20
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if i22 < 64 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if r2 == null
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i10 = lengthof r2
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i1 = lengthof r1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i1 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i0 = lengthof r19
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i0 = lengthof r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i2 = $i1 + $i0
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i2 = $i1 + $i0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i3 = 64 * $i2
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i3 = 64 * $i2 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r21 = newarray (byte)[$i3]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r21 = newarray (byte)[$i3] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i23 = 0
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i23 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i24 = 0
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i24 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if i24 >= 64
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if i24 >= 64 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i5 = lengthof r1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if i24 >= 64 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r22 = newarray (byte)[16]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r22 = newarray (byte)[16] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r3 = newarray (byte)[16]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r3 = newarray (byte)[16] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r22, 0, 16)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r3 = newarray (byte)[16] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r22, 0, 16) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 16, r3, 0, 16)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r22, 0, 16) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 16, r3, 0, 16) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/NoPadding")
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 16, r3, 0, 16) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/NoPadding") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r11 = new javax.crypto.spec.SecretKeySpec
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/NoPadding") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r11 = new javax.crypto.spec.SecretKeySpec >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r22, "AES")
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r11 = new javax.crypto.spec.SecretKeySpec >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r22, "AES") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r12 = new javax.crypto.spec.IvParameterSpec
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r22, "AES") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r12 = new javax.crypto.spec.IvParameterSpec >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r3)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r12 = new javax.crypto.spec.IvParameterSpec >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r11, $r12)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r11, $r12) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r20 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r21)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r11, $r12) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r20 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r21) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r7 = newarray (byte)[16]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r20 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r21) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r7 = newarray (byte)[16] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r20, 0, r7, 0, 16)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r7 = newarray (byte)[16] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r20, 0, r7, 0, 16) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r13 = new java.math.BigInteger
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r20, 0, r7, 0, 16) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r13 = new java.math.BigInteger >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r13.<java.math.BigInteger: void <init>(int,byte[])>(1, r7)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r13 = new java.math.BigInteger >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r13.<java.math.BigInteger: void <init>(int,byte[])>(1, r7) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r14 = new java.math.BigInteger
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r13.<java.math.BigInteger: void <init>(int,byte[])>(1, r7) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r14 = new java.math.BigInteger >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r14.<java.math.BigInteger: void <init>(java.lang.String)>("3")
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r14 = new java.math.BigInteger >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r14.<java.math.BigInteger: void <init>(java.lang.String)>("3") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r9 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r14)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : specialinvoke $r14.<java.math.BigInteger: void <init>(java.lang.String)>("3") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r9 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r15 = <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: java.lang.String[] HASHES_2B>
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r9 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r15 = <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: java.lang.String[] HASHES_2B> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i4 = virtualinvoke r9.<java.math.BigInteger: int intValue()>()
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r15 = <org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: java.lang.String[] HASHES_2B> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i4 = virtualinvoke r9.<java.math.BigInteger: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r10 = $r15[$i4]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i4 = virtualinvoke r9.<java.math.BigInteger: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r10 = $r15[$i4] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r23 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r10)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r10 = $r15[$i4] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r23 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r10) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r19 = virtualinvoke r23.<java.security.MessageDigest: byte[] digest(byte[])>(r20)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r23 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r10) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r19 = virtualinvoke r23.<java.security.MessageDigest: byte[] digest(byte[])>(r20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i22 = i22 + 1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r19 = virtualinvoke r23.<java.security.MessageDigest: byte[] digest(byte[])>(r20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i22 = i22 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : goto [?= (branch)]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if i22 < 64
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i5 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r21, i23, $i5)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i5 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r21, i23, $i5) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i6 = lengthof r1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r21, i23, $i5) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i6 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i25 = i23 + $i6
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i25 = i23 + $i6 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i7 = lengthof r19
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i7 = lengthof r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r21, i25, $i7)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i7 = lengthof r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r21, i25, $i7) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i8 = lengthof r19
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r21, i25, $i7) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i8 = lengthof r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i23 = i25 + $i8
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i23 = i25 + $i8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if r2 == null
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i9 = lengthof r2
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i24 = i24 + 1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i24 = i24 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : goto [?= (branch)]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if i24 >= 64
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i9 = lengthof r2 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i9 < 48
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i9 < 48 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r21, i23, 48)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i9 < 48 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i24 = i24 + 1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i9 < 48 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r21, i23, 48) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i23 = i23 + 48
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r21, i23, 48) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i23 = i23 + 48 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i24 = i24 + 1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i10 = lengthof r2 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i10 < 48
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i10 < 48 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i12 = lengthof r1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i10 < 48 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i1 = lengthof r1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i12 = lengthof r1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i11 = lengthof r19
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i11 = lengthof r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i13 = $i12 + $i11
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i13 = $i12 + $i11 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i14 = $i13 + 48
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i14 = $i13 + 48 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i15 = 64 * $i14
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i15 = 64 * $i14 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r21 = newarray (byte)[$i15]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r21 = newarray (byte)[$i15] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : goto [?= i23 = 0]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : goto [?= i23 = 0] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : i23 = 0
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i16 = lengthof r20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i17 = $i16 - 1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i17 = $i16 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $b18 = r20[$i17]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $b18 = r20[$i17] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $s20 = $b18 & 255
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $s20 = $b18 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i19 = i22 - 32
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i19 = i22 - 32 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $s20 <= $i19
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $s20 <= $i19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if r2 == null
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $s20 <= $i19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i21 = lengthof r19
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $i21 = lengthof r19 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i21 <= 32
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i21 <= 32 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r24 = newarray (byte)[32]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : if $i21 <= 32 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : return r19
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r24 = newarray (byte)[32] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r24, 0, 32)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : r24 = newarray (byte)[32] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r24, 0, 32) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : return r24
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r19, 0, r24, 0, 32) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeHash2B : $r16 := @caughtexception
