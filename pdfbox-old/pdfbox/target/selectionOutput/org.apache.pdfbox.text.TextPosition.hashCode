org.apache.pdfbox.text.TextPosition.hashCode : $r1 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.util.Matrix textMatrix> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : if $r1 == null
org.apache.pdfbox.text.TextPosition.hashCode : if $r1 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r8 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.util.Matrix textMatrix>
org.apache.pdfbox.text.TextPosition.hashCode : if $r1 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i30 = 0
org.apache.pdfbox.text.TextPosition.hashCode : $i30 = 0 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i0 = 31 * $i30
org.apache.pdfbox.text.TextPosition.hashCode : $i0 = 31 * $i30 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f0 = r0.<org.apache.pdfbox.text.TextPosition: float endX>
org.apache.pdfbox.text.TextPosition.hashCode : $f0 = r0.<org.apache.pdfbox.text.TextPosition: float endX> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0)
org.apache.pdfbox.text.TextPosition.hashCode : $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i32 = $i0 + $i1
org.apache.pdfbox.text.TextPosition.hashCode : i32 = $i0 + $i1 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i2 = 31 * i32
org.apache.pdfbox.text.TextPosition.hashCode : $i2 = 31 * i32 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f1 = r0.<org.apache.pdfbox.text.TextPosition: float endY>
org.apache.pdfbox.text.TextPosition.hashCode : $f1 = r0.<org.apache.pdfbox.text.TextPosition: float endY> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1)
org.apache.pdfbox.text.TextPosition.hashCode : $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i33 = $i2 + $i3
org.apache.pdfbox.text.TextPosition.hashCode : i33 = $i2 + $i3 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i4 = 31 * i33
org.apache.pdfbox.text.TextPosition.hashCode : $i4 = 31 * i33 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f2 = r0.<org.apache.pdfbox.text.TextPosition: float maxHeight>
org.apache.pdfbox.text.TextPosition.hashCode : $f2 = r0.<org.apache.pdfbox.text.TextPosition: float maxHeight> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f2)
org.apache.pdfbox.text.TextPosition.hashCode : $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f2) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i34 = $i4 + $i5
org.apache.pdfbox.text.TextPosition.hashCode : i34 = $i4 + $i5 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i7 = 31 * i34
org.apache.pdfbox.text.TextPosition.hashCode : $i7 = 31 * i34 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i6 = r0.<org.apache.pdfbox.text.TextPosition: int rotation>
org.apache.pdfbox.text.TextPosition.hashCode : $i6 = r0.<org.apache.pdfbox.text.TextPosition: int rotation> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i35 = $i7 + $i6
org.apache.pdfbox.text.TextPosition.hashCode : i35 = $i7 + $i6 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i8 = 31 * i35
org.apache.pdfbox.text.TextPosition.hashCode : $i8 = 31 * i35 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f3 = r0.<org.apache.pdfbox.text.TextPosition: float x>
org.apache.pdfbox.text.TextPosition.hashCode : $f3 = r0.<org.apache.pdfbox.text.TextPosition: float x> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i9 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f3)
org.apache.pdfbox.text.TextPosition.hashCode : $i9 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f3) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i36 = $i8 + $i9
org.apache.pdfbox.text.TextPosition.hashCode : i36 = $i8 + $i9 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i10 = 31 * i36
org.apache.pdfbox.text.TextPosition.hashCode : $i10 = 31 * i36 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f4 = r0.<org.apache.pdfbox.text.TextPosition: float y>
org.apache.pdfbox.text.TextPosition.hashCode : $f4 = r0.<org.apache.pdfbox.text.TextPosition: float y> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i11 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f4)
org.apache.pdfbox.text.TextPosition.hashCode : $i11 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f4) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i37 = $i10 + $i11
org.apache.pdfbox.text.TextPosition.hashCode : i37 = $i10 + $i11 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i12 = 31 * i37
org.apache.pdfbox.text.TextPosition.hashCode : $i12 = 31 * i37 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f5 = r0.<org.apache.pdfbox.text.TextPosition: float pageHeight>
org.apache.pdfbox.text.TextPosition.hashCode : $f5 = r0.<org.apache.pdfbox.text.TextPosition: float pageHeight> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i13 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f5)
org.apache.pdfbox.text.TextPosition.hashCode : $i13 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f5) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i38 = $i12 + $i13
org.apache.pdfbox.text.TextPosition.hashCode : i38 = $i12 + $i13 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i14 = 31 * i38
org.apache.pdfbox.text.TextPosition.hashCode : $i14 = 31 * i38 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f6 = r0.<org.apache.pdfbox.text.TextPosition: float pageWidth>
org.apache.pdfbox.text.TextPosition.hashCode : $f6 = r0.<org.apache.pdfbox.text.TextPosition: float pageWidth> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i15 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f6)
org.apache.pdfbox.text.TextPosition.hashCode : $i15 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f6) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i39 = $i14 + $i15
org.apache.pdfbox.text.TextPosition.hashCode : i39 = $i14 + $i15 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i16 = 31 * i39
org.apache.pdfbox.text.TextPosition.hashCode : $i16 = 31 * i39 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f7 = r0.<org.apache.pdfbox.text.TextPosition: float widthOfSpace>
org.apache.pdfbox.text.TextPosition.hashCode : $f7 = r0.<org.apache.pdfbox.text.TextPosition: float widthOfSpace> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i17 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f7)
org.apache.pdfbox.text.TextPosition.hashCode : $i17 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f7) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i40 = $i16 + $i17
org.apache.pdfbox.text.TextPosition.hashCode : i40 = $i16 + $i17 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i18 = 31 * i40
org.apache.pdfbox.text.TextPosition.hashCode : $i18 = 31 * i40 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r2 = r0.<org.apache.pdfbox.text.TextPosition: int[] charCodes>
org.apache.pdfbox.text.TextPosition.hashCode : $r2 = r0.<org.apache.pdfbox.text.TextPosition: int[] charCodes> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i19 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r2)
org.apache.pdfbox.text.TextPosition.hashCode : $i19 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r2) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i41 = $i18 + $i19
org.apache.pdfbox.text.TextPosition.hashCode : i41 = $i18 + $i19 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i20 = 31 * i41
org.apache.pdfbox.text.TextPosition.hashCode : $i20 = 31 * i41 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r3 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont font>
org.apache.pdfbox.text.TextPosition.hashCode : $r3 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont font> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : if $r3 == null
org.apache.pdfbox.text.TextPosition.hashCode : if $r3 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r7 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont font>
org.apache.pdfbox.text.TextPosition.hashCode : if $r3 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i42 = 0
org.apache.pdfbox.text.TextPosition.hashCode : $i42 = 0 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i43 = $i20 + $i42
org.apache.pdfbox.text.TextPosition.hashCode : i43 = $i20 + $i42 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i21 = 31 * i43
org.apache.pdfbox.text.TextPosition.hashCode : $i21 = 31 * i43 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f8 = r0.<org.apache.pdfbox.text.TextPosition: float fontSize>
org.apache.pdfbox.text.TextPosition.hashCode : $f8 = r0.<org.apache.pdfbox.text.TextPosition: float fontSize> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i22 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f8)
org.apache.pdfbox.text.TextPosition.hashCode : $i22 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f8) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i44 = $i21 + $i22
org.apache.pdfbox.text.TextPosition.hashCode : i44 = $i21 + $i22 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i24 = 31 * i44
org.apache.pdfbox.text.TextPosition.hashCode : $i24 = 31 * i44 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i23 = r0.<org.apache.pdfbox.text.TextPosition: int fontSizePt>
org.apache.pdfbox.text.TextPosition.hashCode : $i23 = r0.<org.apache.pdfbox.text.TextPosition: int fontSizePt> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i45 = $i24 + $i23
org.apache.pdfbox.text.TextPosition.hashCode : i45 = $i24 + $i23 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i25 = 31 * i45
org.apache.pdfbox.text.TextPosition.hashCode : $i25 = 31 * i45 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r4 = r0.<org.apache.pdfbox.text.TextPosition: float[] widths>
org.apache.pdfbox.text.TextPosition.hashCode : $r4 = r0.<org.apache.pdfbox.text.TextPosition: float[] widths> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i26 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r4)
org.apache.pdfbox.text.TextPosition.hashCode : $i26 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r4) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i46 = $i25 + $i26
org.apache.pdfbox.text.TextPosition.hashCode : i46 = $i25 + $i26 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i27 = 31 * i46
org.apache.pdfbox.text.TextPosition.hashCode : $i27 = 31 * i46 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r5 = r0.<org.apache.pdfbox.text.TextPosition: java.lang.String unicode>
org.apache.pdfbox.text.TextPosition.hashCode : $r5 = r0.<org.apache.pdfbox.text.TextPosition: java.lang.String unicode> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : if $r5 == null
org.apache.pdfbox.text.TextPosition.hashCode : if $r5 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $r6 = r0.<org.apache.pdfbox.text.TextPosition: java.lang.String unicode>
org.apache.pdfbox.text.TextPosition.hashCode : if $r5 == null >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i47 = 0
org.apache.pdfbox.text.TextPosition.hashCode : $i47 = 0 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i48 = $i27 + $i47
org.apache.pdfbox.text.TextPosition.hashCode : i48 = $i27 + $i47 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i28 = 31 * i48
org.apache.pdfbox.text.TextPosition.hashCode : $i28 = 31 * i48 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $f9 = r0.<org.apache.pdfbox.text.TextPosition: float direction>
org.apache.pdfbox.text.TextPosition.hashCode : $f9 = r0.<org.apache.pdfbox.text.TextPosition: float direction> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i29 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f9)
org.apache.pdfbox.text.TextPosition.hashCode : $i29 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f9) >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i49 = $i28 + $i29
org.apache.pdfbox.text.TextPosition.hashCode : i49 = $i28 + $i29 >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : return i49
org.apache.pdfbox.text.TextPosition.hashCode : $r6 = r0.<org.apache.pdfbox.text.TextPosition: java.lang.String unicode> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i47 = virtualinvoke $r6.<java.lang.String: int hashCode()>()
org.apache.pdfbox.text.TextPosition.hashCode : $i47 = virtualinvoke $r6.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : goto [?= i48 = $i27 + $i47]
org.apache.pdfbox.text.TextPosition.hashCode : goto [?= i48 = $i27 + $i47] >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i48 = $i27 + $i47
org.apache.pdfbox.text.TextPosition.hashCode : $r7 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont font> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i42 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.font.PDFont: int hashCode()>()
org.apache.pdfbox.text.TextPosition.hashCode : $i42 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.font.PDFont: int hashCode()>() >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : goto [?= i43 = $i20 + $i42]
org.apache.pdfbox.text.TextPosition.hashCode : goto [?= i43 = $i20 + $i42] >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : i43 = $i20 + $i42
org.apache.pdfbox.text.TextPosition.hashCode : $r8 = r0.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.util.Matrix textMatrix> >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i30 = virtualinvoke $r8.<org.apache.pdfbox.util.Matrix: int hashCode()>()
org.apache.pdfbox.text.TextPosition.hashCode : $i30 = virtualinvoke $r8.<org.apache.pdfbox.util.Matrix: int hashCode()>() >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : goto [?= $i0 = 31 * $i30]
org.apache.pdfbox.text.TextPosition.hashCode : goto [?= $i0 = 31 * $i30] >>>>>>>> org.apache.pdfbox.text.TextPosition.hashCode : $i0 = 31 * $i30
