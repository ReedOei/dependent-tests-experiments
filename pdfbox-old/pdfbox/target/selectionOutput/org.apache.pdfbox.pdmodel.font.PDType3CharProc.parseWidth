org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r4 = virtualinvoke r1.<org.apache.pdfbox.contentstream.operator.Operator: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("d0")
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("d0") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r14 = virtualinvoke r1.<org.apache.pdfbox.contentstream.operator.Operator: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : r3 = (org.apache.pdfbox.cos.COSBase) $r5
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : r3 = (org.apache.pdfbox.cos.COSBase) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $z1 = r3 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $z1 = r3 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r13 = (org.apache.pdfbox.cos.COSNumber) r3
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r6 = new java.io.IOException
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r6 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r7 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected argument type: ")
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected argument type: ") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r12)
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r12) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : throw $r6
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r13 = (org.apache.pdfbox.cos.COSNumber) r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $f0 = virtualinvoke $r13.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $f0 = virtualinvoke $r13.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : return $f0
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r14 = virtualinvoke r1.<org.apache.pdfbox.contentstream.operator.Operator: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("d1")
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("d1") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : if $z2 == 0
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r15 = new java.io.IOException
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : $r15 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("First operator must be d0 or d1")
org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("First operator must be d0 or d1") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3CharProc.parseWidth : throw $r15
