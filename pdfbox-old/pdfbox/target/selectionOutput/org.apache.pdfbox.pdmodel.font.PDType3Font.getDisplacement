org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.util.Matrix getFontMatrix()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : $r2 = new org.apache.pdfbox.util.Vector
org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : $r2 = new org.apache.pdfbox.util.Vector >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: float getWidth(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: float getWidth(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : specialinvoke $r2.<org.apache.pdfbox.util.Vector: void <init>(float,float)>($f0, 0.0F)
org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : specialinvoke $r2.<org.apache.pdfbox.util.Vector: void <init>(float,float)>($f0, 0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : $r3 = virtualinvoke $r1.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Vector transform(org.apache.pdfbox.util.Vector)>($r2)
org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : $r3 = virtualinvoke $r1.<org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Vector transform(org.apache.pdfbox.util.Vector)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getDisplacement : return $r3
