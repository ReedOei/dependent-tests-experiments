org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write ")
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write ") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception: ")
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception: ") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r23 = virtualinvoke $r18.<java.io.IOException: java.lang.String getMessage()>()
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r23 = virtualinvoke $r18.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : staticinvoke <junit.framework.TestCase: void fail(java.lang.String)>($r25)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : staticinvoke <junit.framework.TestCase: void fail(java.lang.String)>($r25) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : return
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream>
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void writePDF(java.io.OutputStream)>($r2)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void writePDF(java.io.OutputStream)>($r2) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r3 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0>
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void writePDF(java.io.OutputStream)>($r2) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r3 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $f1 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: float floatValue()>()
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r3 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $f1 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r4 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r3, $f1)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $f1 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r4 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r3, $f1) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r5 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream>
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r4 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r3, $f1) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r5 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r6 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1")
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r5 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r6 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>($r4, $r6)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r6 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>($r4, $r6) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r7 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0>
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>($r4, $r6) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r7 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r8 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r7, f0)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r7 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r8 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r7, f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r9 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream>
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r8 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r7, f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r9 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r10 = virtualinvoke $r9.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1")
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r9 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r10 = virtualinvoke $r9.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>($r8, $r10)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r10 = virtualinvoke $r9.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>($r8, $r10) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r12 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0>
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>($r8, $r10) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r12 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r11 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0>
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r11 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r13 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r11, f0)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r11 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r13 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r11, f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1")
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r13 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r11, f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r15 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream>
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r15 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r16 = virtualinvoke $r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r15 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r16 = virtualinvoke $r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : virtualinvoke $r12.<org.apache.pdfbox.cos.TestCOSFloat: void testByteArrays(byte[],byte[])>($r14, $r16)
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r16 = virtualinvoke $r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : virtualinvoke $r12.<org.apache.pdfbox.cos.TestCOSFloat: void testByteArrays(byte[],byte[])>($r14, $r16) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r17 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream>
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : virtualinvoke $r12.<org.apache.pdfbox.cos.TestCOSFloat: void testByteArrays(byte[],byte[])>($r14, $r16) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r17 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : virtualinvoke $r17.<java.io.ByteArrayOutputStream: void reset()>()
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r17 = r0.<org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : virtualinvoke $r17.<java.io.ByteArrayOutputStream: void reset()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : goto [?= return]
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : virtualinvoke $r17.<java.io.ByteArrayOutputStream: void reset()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : $r18 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : goto [?= return] >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$WritePDFTester.runTest : return
