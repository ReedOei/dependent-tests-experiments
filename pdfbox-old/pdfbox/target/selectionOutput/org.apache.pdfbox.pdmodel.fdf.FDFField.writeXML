org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<field name=\"")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<field name=\"") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getPartialFieldName()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getPartialFieldName()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r12)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r12) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.Object getValue()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r2 == null
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z1 = r2 instanceof org.apache.pdfbox.cos.COSString
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r3 == null
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r14 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.util.List getKids()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.util.List getKids()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r4 == null
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("</field>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("</field>\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : return
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z0 == 0
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("</field>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r6 = (org.apache.pdfbox.pdmodel.fdf.FDFField) $r13
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r6 = (org.apache.pdfbox.pdmodel.fdf.FDFField) $r13 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r6.<org.apache.pdfbox.pdmodel.fdf.FDFField: void writeXML(java.io.Writer)>(r1)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r6.<org.apache.pdfbox.pdmodel.fdf.FDFField: void writeXML(java.io.Writer)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value-richtext>")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value-richtext>") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r16 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r16 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value-richtext>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value-richtext>\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r19)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.util.List getKids()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z1 = r2 instanceof org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z1 == 0
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r28 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z2 = r2 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $z2 = r2 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z2 == 0
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r20 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value>")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value>") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r22 = (org.apache.pdfbox.cos.COSStream) r2
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r22 = (org.apache.pdfbox.cos.COSStream) r2 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r23 = virtualinvoke $r22.<org.apache.pdfbox.cos.COSStream: java.lang.String toTextString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r23 = virtualinvoke $r22.<org.apache.pdfbox.cos.COSStream: java.lang.String toTextString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r24 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>($r23)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r24 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>($r23) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value>\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r27)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r27) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value>")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<value>") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r30 = (org.apache.pdfbox.cos.COSString) r2
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r30 = (org.apache.pdfbox.cos.COSString) r2 >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r31 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r31 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSString: java.lang.String getString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r32 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>($r31)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r32 = specialinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String escapeXML(java.lang.String)>($r31) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value>\n")
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value>\n") >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r35)
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r35) >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : goto [?= r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()]
org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : goto [?= r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()] >>>>>>>> org.apache.pdfbox.pdmodel.fdf.FDFField.writeXML : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.fdf.FDFField: java.lang.String getRichText()>()
