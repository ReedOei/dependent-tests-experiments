org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r2 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $i0 = virtualinvoke $r2.<java.awt.image.ColorModel: int getNumComponents()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $i0 = virtualinvoke $r2.<java.awt.image.ColorModel: int getNumComponents()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : if $i0 != 1
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r12 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r3 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r3 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : r1 = virtualinvoke $r3.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : r1 = virtualinvoke $r3.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $z0 = r1 instanceof java.awt.color.ICC_ColorSpace
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $z0 = r1 instanceof java.awt.color.ICC_ColorSpace >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $z1 = virtualinvoke r1.<java.awt.color.ColorSpace: boolean isCS_sRGB()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $i1 = virtualinvoke r1.<java.awt.color.ColorSpace: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $i1 = virtualinvoke r1.<java.awt.color.ColorSpace: int getType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : tableswitch($i1) {     case 5:
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : tableswitch($i1) {     case 5: >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r13 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : tableswitch($i1) {     case 5: >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : tableswitch($i1) {     case 5: >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r6 = new java.lang.UnsupportedOperationException
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : tableswitch($i1) {     case 5: >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r4 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r4 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : return $r4
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r6 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r7 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("color space not implemented: ")
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("color space not implemented: ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $i2 = virtualinvoke r1.<java.awt.color.ColorSpace: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $i2 = virtualinvoke r1.<java.awt.color.ColorSpace: int getType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : throw $r6
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r5 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : return $r5
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r13 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : return $r13
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $z1 = virtualinvoke r1.<java.awt.color.ColorSpace: boolean isCS_sRGB()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : if $z1 != 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r11 = new java.lang.UnsupportedOperationException
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $i1 = virtualinvoke r1.<java.awt.color.ColorSpace: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r11 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ICC color spaces not implemented")
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ICC color spaces not implemented") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : throw $r11
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : $r12 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getColorSpaceFromAWT : return $r12
