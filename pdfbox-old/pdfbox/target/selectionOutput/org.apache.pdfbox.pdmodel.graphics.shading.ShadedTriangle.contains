org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i0 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: int degree> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i0 != 1
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r17 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: int degree>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i1 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: int degree> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i1 != 2
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i1 != 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r14 = new java.awt.Point
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $i1 != 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r5 = $r2[1]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r5 = $r2[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r4 = $r3[2]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r4 = $r3[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d10 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r5, $r4)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d10 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r5, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d2 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v0>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d2 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v0> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d3 = d10 * $d2
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d3 = d10 * $d2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b2 = $d3 cmpg 0.0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b2 = $d3 cmpg 0.0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b2 >= 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b2 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b2 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r9 = $r6[2]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r9 = $r6[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r8 = $r7[0]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r8 = $r7[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r9, $r8)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r9, $r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d4 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v1>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d4 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v1> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d5 = d0 * $d4
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d5 = d0 * $d4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b3 = $d5 cmpg 0.0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b3 = $d5 cmpg 0.0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b3 >= 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b3 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b3 >= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r10 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r10 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r13 = $r10[0]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r13 = $r10[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r11 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r11 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r12 = $r11[1]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r12 = $r11[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r13, $r12)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : d1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r13, $r12) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v2>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d6 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: double v2> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d7 = d1 * $d6
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d7 = d1 * $d6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b4 = $d7 cmpl 0.0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $b4 = $d7 cmpl 0.0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b4 < 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b4 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z6 = 1
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : if $b4 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z6 = 0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z6 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return $z6
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z6 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : goto [?= return $z6]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : goto [?= return $z6] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return $z6
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r14 = new java.awt.Point >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d8 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d8 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $l5 = staticinvoke <java.lang.Math: long round(double)>($d8)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $l5 = staticinvoke <java.lang.Math: long round(double)>($d8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i6 = (int) $l5
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i6 = (int) $l5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d9 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>()
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $d9 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $l7 = staticinvoke <java.lang.Math: long round(double)>($d9)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $l7 = staticinvoke <java.lang.Math: long round(double)>($d9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i8 = (int) $l7
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $i8 = (int) $l7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : specialinvoke $r14.<java.awt.Point: void <init>(int,int)>($i6, $i8)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : specialinvoke $r14.<java.awt.Point: void <init>(int,int)>($i6, $i8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r15 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: org.apache.pdfbox.pdmodel.graphics.shading.Line line>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r15 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: org.apache.pdfbox.pdmodel.graphics.shading.Line line> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r16 = $r15.<org.apache.pdfbox.pdmodel.graphics.shading.Line: java.util.Set linePoints>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r16 = $r15.<org.apache.pdfbox.pdmodel.graphics.shading.Line: java.util.Set linePoints> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z0 = interfaceinvoke $r16.<java.util.Set: boolean contains(java.lang.Object)>($r14)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z0 = interfaceinvoke $r16.<java.util.Set: boolean contains(java.lang.Object)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return $z0
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r17 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r18 = $r17[0]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r18 = $r17[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r18, r1)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r18, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r19 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r19 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r20 = $r19[1]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r20 = $r19[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r20, r1)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r20, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z3 = $z1 | $z2
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z3 = $z1 | $z2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r21 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner>
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r21 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: java.awt.geom.Point2D[] corner> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r22 = $r21[2]
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $r22 = $r21[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r22, r1)
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle: boolean overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r22, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z5 = $z3 | $z4
org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : $z5 = $z3 | $z4 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle.contains : return $z5
