org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r6 = virtualinvoke r1.<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>("javax_imageio_jpeg_image_1.0") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : r2 = (org.w3c.dom.Element) $r6
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : r2 = (org.w3c.dom.Element) $r6 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r7 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("markerSequence")
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r7 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("markerSequence") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r8 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0)
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r8 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : r3 = (org.w3c.dom.Element) $r8
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : r3 = (org.w3c.dom.Element) $r8 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : r4 = interfaceinvoke r3.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("app14Adobe")
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : r4 = interfaceinvoke r3.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("app14Adobe") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : if r4 == null
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : if r4 == null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $i0 = interfaceinvoke r4.<org.w3c.dom.NodeList: int getLength()>()
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : if r4 == null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : return $r9
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $i0 = interfaceinvoke r4.<org.w3c.dom.NodeList: int getLength()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : if $i0 <= 0
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : if $i0 <= 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r10 = interfaceinvoke r4.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0)
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : if $i0 <= 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r10 = interfaceinvoke r4.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : r5 = (org.w3c.dom.Element) $r10
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : r5 = (org.w3c.dom.Element) $r10 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r11 = interfaceinvoke r5.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("transform")
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r11 = interfaceinvoke r5.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("transform") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11)
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.getAdobeTransform : return $r12
