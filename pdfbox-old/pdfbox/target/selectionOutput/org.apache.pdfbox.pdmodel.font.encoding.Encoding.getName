org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : $r2 = r0.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map codeToName> >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : r1 = (java.lang.String) $r4
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : r1 = (java.lang.String) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : if r1 == null
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : return r1
org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.encoding.Encoding.getName : return ".notdef"
