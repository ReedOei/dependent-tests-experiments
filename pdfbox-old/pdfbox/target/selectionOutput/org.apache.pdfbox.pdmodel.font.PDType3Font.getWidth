org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIRST_CHAR>
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIRST_CHAR> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : i1 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r1, -1)
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : i1 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r1, -1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAST_CHAR>
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAST_CHAR> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : i2 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r3, -1)
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : i2 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r3, -1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: java.util.List getWidths()>()
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: java.util.List getWidths()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if i0 < i1
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if r9 == null
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if r9 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $f1 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getMissingWidth()>()
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if r9 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: float getWidthFromFont(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: float getWidthFromFont(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : return $f0
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $f1 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getMissingWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : return $f1
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if i0 < i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if i0 > i2
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if i0 < i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if i0 > i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: java.util.List getWidths()>()
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if i0 > i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType3Font: java.util.List getWidths()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $i3 = i0 - i1
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $i3 = i0 - i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i3)
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : r8 = (java.lang.Float) $r7
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : r8 = (java.lang.Float) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if r8 != null
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if r8 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $f2 = 0.0F
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : if r8 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $f2 = virtualinvoke r8.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $f2 = virtualinvoke r8.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : return $f2
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : $f2 = 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : goto [?= return $f2]
org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : goto [?= return $f2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType3Font.getWidth : return $f2
