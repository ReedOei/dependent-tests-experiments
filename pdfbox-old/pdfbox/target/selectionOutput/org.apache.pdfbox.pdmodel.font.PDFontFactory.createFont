org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r4, $r3)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r4, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z0 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z0 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r37 = <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName)>($r6)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSName getCOSName(org.apache.pdfbox.cos.COSName)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE1>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE1> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z1 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z1 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r31 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_DESC>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MM_TYPE1>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MM_TYPE1> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z2 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z2 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z2 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r26 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_DESC>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TRUE_TYPE>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TRUE_TYPE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z3 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z3 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z3 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r25 = new org.apache.pdfbox.pdmodel.font.PDTrueTypeFont
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE3>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE3> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z4 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z4 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z4 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r24 = new org.apache.pdfbox.pdmodel.font.PDType3Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE0>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE0> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z5 = virtualinvoke $r11.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z5 = virtualinvoke $r11.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z5 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r23 = new org.apache.pdfbox.pdmodel.font.PDType0Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE0>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE0> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z6 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z6 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z6 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r22 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE2>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE2> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z7 = virtualinvoke $r13.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z7 = virtualinvoke $r13.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z7 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r21 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z7 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r15 = <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r15 = <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r14 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid font subtype \'")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid font subtype \'") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : interfaceinvoke $r15.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r19)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : interfaceinvoke $r15.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r20 = new org.apache.pdfbox.pdmodel.font.PDType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r20 = new org.apache.pdfbox.pdmodel.font.PDType1Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r20.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r20.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r20
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r21 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type 2 descendant font not allowed")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type 2 descendant font not allowed") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : throw $r21
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r22 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type 0 descendant font not allowed")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type 0 descendant font not allowed") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : throw $r22
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r23 = new org.apache.pdfbox.pdmodel.font.PDType0Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r23.<org.apache.pdfbox.pdmodel.font.PDType0Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r23.<org.apache.pdfbox.pdmodel.font.PDType0Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r23
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r24 = new org.apache.pdfbox.pdmodel.font.PDType3Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r24.<org.apache.pdfbox.pdmodel.font.PDType3Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r24.<org.apache.pdfbox.pdmodel.font.PDType3Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r24
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r25 = new org.apache.pdfbox.pdmodel.font.PDTrueTypeFont >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r25.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r25.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r25
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r26 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_DESC> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r44 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r26)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r44 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r26) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z8 = r44 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z8 = r44 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z8 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r29 = (org.apache.pdfbox.cos.COSDictionary) r44
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z8 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r27 = new org.apache.pdfbox.pdmodel.font.PDMMType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r27 = new org.apache.pdfbox.pdmodel.font.PDMMType1Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r27.<org.apache.pdfbox.pdmodel.font.PDMMType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r27.<org.apache.pdfbox.pdmodel.font.PDMMType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r27
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r29 = (org.apache.pdfbox.cos.COSDictionary) r44 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_FILE3>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_FILE3> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z9 = virtualinvoke $r29.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r28)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z9 = virtualinvoke $r29.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r28) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z9 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z9 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r30 = new org.apache.pdfbox.pdmodel.font.PDType1CFont
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z9 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r27 = new org.apache.pdfbox.pdmodel.font.PDMMType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r30 = new org.apache.pdfbox.pdmodel.font.PDType1CFont >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r30.<org.apache.pdfbox.pdmodel.font.PDType1CFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r30.<org.apache.pdfbox.pdmodel.font.PDType1CFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r30
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r31 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_DESC> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r43 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r31)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : r43 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r31) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z10 = r43 instanceof org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z10 = r43 instanceof org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z10 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r34 = (org.apache.pdfbox.cos.COSDictionary) r43
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z10 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r32 = new org.apache.pdfbox.pdmodel.font.PDType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r32 = new org.apache.pdfbox.pdmodel.font.PDType1Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r32.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r32.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r32
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r34 = (org.apache.pdfbox.cos.COSDictionary) r43 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r33 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_FILE3>
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r33 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT_FILE3> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z11 = virtualinvoke $r34.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r33)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $z11 = virtualinvoke $r34.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r33) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z11 == 0
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z11 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r35 = new org.apache.pdfbox.pdmodel.font.PDType1CFont
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : if $z11 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r32 = new org.apache.pdfbox.pdmodel.font.PDType1Font
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r35 = new org.apache.pdfbox.pdmodel.font.PDType1CFont >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r35.<org.apache.pdfbox.pdmodel.font.PDType1CFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r35.<org.apache.pdfbox.pdmodel.font.PDType1CFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : return $r35
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r37 = <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r36 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r36 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \'Font\' dictionary but found \'")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \'Font\' dictionary but found \'") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r39 = virtualinvoke r1.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r39 = virtualinvoke r1.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : interfaceinvoke $r37.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r42)
org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : interfaceinvoke $r37.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r42) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>
