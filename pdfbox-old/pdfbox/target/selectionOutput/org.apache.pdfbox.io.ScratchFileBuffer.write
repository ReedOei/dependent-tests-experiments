org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i1
org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i0
org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : if i19 <= 0
org.apache.pdfbox.io.ScratchFileBuffer.write : if i19 <= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean ensureAvailableBytesInPage(boolean)>(1)
org.apache.pdfbox.io.ScratchFileBuffer.write : if i19 <= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.write : $l5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l4 = (long) $i3
org.apache.pdfbox.io.ScratchFileBuffer.write : $l4 = (long) $i3 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l7 = $l5 + $l4
org.apache.pdfbox.io.ScratchFileBuffer.write : $l7 = $l5 + $l4 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size>
org.apache.pdfbox.io.ScratchFileBuffer.write : $l6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $b8 = $l7 cmp $l6
org.apache.pdfbox.io.ScratchFileBuffer.write : $b8 = $l7 cmp $l6 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : if $b8 <= 0
org.apache.pdfbox.io.ScratchFileBuffer.write : if $b8 <= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset>
org.apache.pdfbox.io.ScratchFileBuffer.write : if $b8 <= 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : return
org.apache.pdfbox.io.ScratchFileBuffer.write : $l11 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l10 = (long) $i9
org.apache.pdfbox.io.ScratchFileBuffer.write : $l10 = (long) $i9 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $l12 = $l11 + $l10
org.apache.pdfbox.io.ScratchFileBuffer.write : $l12 = $l11 + $l10 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = $l12
org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long size> = $l12 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : return
org.apache.pdfbox.io.ScratchFileBuffer.write : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean ensureAvailableBytesInPage(boolean)>(1) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i14 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i14 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i15 = $i14 - $i13
org.apache.pdfbox.io.ScratchFileBuffer.write : $i15 = $i14 - $i13 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i2 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i15)
org.apache.pdfbox.io.ScratchFileBuffer.write : i2 = staticinvoke <java.lang.Math: int min(int,int)>(i19, $i15) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i16 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i20, $r2, $i16, i2)
org.apache.pdfbox.io.ScratchFileBuffer.write : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i20, $r2, $i16, i2) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i17 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage>
org.apache.pdfbox.io.ScratchFileBuffer.write : $i17 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : $i18 = $i17 + i2
org.apache.pdfbox.io.ScratchFileBuffer.write : $i18 = $i17 + i2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = $i18
org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = $i18 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 1
org.apache.pdfbox.io.ScratchFileBuffer.write : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i20 + i2
org.apache.pdfbox.io.ScratchFileBuffer.write : i20 = i20 + i2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i19 - i2
org.apache.pdfbox.io.ScratchFileBuffer.write : i19 = i19 - i2 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : goto [?= (branch)]
org.apache.pdfbox.io.ScratchFileBuffer.write : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.write : if i19 <= 0
