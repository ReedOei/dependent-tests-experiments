org.apache.pdfbox.text.PDFTextStripper.writePage : f13 = -3.4028235E38F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f14 = 3.4028235E38F
org.apache.pdfbox.text.PDFTextStripper.writePage : f14 = 3.4028235E38F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f15 = -1.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : f15 = -1.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f16 = -1.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : f16 = -1.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f17 = -1.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : f17 = -1.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r25 = null
org.apache.pdfbox.text.PDFTextStripper.writePage : r25 = null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r26 = null
org.apache.pdfbox.text.PDFTextStripper.writePage : r26 = null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : z7 = 1
org.apache.pdfbox.text.PDFTextStripper.writePage : z7 = 1 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r7 = r0.<org.apache.pdfbox.text.PDFTextStripper: java.util.ArrayList charactersByArticle>
org.apache.pdfbox.text.PDFTextStripper.writePage : $r7 = r0.<org.apache.pdfbox.text.PDFTextStripper: java.util.ArrayList charactersByArticle> >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $i1 <= 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $i1 <= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writePageStart()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if $i1 <= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r8 = r0.<org.apache.pdfbox.text.PDFTextStripper: java.util.ArrayList charactersByArticle>
org.apache.pdfbox.text.PDFTextStripper.writePage : $r8 = r0.<org.apache.pdfbox.text.PDFTextStripper: java.util.ArrayList charactersByArticle> >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r1 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : r1 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z8 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $z8 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $z8 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z8 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z8 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writePageEnd()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writePageEnd()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : return
org.apache.pdfbox.text.PDFTextStripper.writePage : $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r2 = (java.util.List) $r9
org.apache.pdfbox.text.PDFTextStripper.writePage : r2 = (java.util.List) $r9 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z0 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: boolean getSortByPosition()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $z0 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: boolean getSortByPosition()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $z0 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z0 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r24 = new org.apache.pdfbox.text.TextPositionComparator
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z0 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void startArticle()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void startArticle()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : z9 = 1
org.apache.pdfbox.text.PDFTextStripper.writePage : z9 = 1 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r28 = new java.util.ArrayList
org.apache.pdfbox.text.PDFTextStripper.writePage : $r28 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke $r28.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke $r28.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f18 = -1.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : f18 = -1.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z10 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $z10 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $z10 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z10 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z10 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $i2 = interfaceinvoke $r28.<java.util.List: int size()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $i2 = interfaceinvoke $r28.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $i2 <= 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $i2 <= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r10 = specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: java.util.List normalize(java.util.List)>($r28)
org.apache.pdfbox.text.PDFTextStripper.writePage : if $i2 <= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void endArticle()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void endArticle()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $z8 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $z8 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z8 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r10 = specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: java.util.List normalize(java.util.List)>($r28) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writeLine(java.util.List)>($r10)
org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writeLine(java.util.List)>($r10) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writeParagraphEnd()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writeParagraphEnd()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void endArticle()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r4 = (org.apache.pdfbox.text.TextPosition) $r11
org.apache.pdfbox.text.PDFTextStripper.writePage : r4 = (org.apache.pdfbox.text.TextPosition) $r11 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r12 = new org.apache.pdfbox.text.PDFTextStripper$PositionWrapper
org.apache.pdfbox.text.PDFTextStripper.writePage : $r12 = new org.apache.pdfbox.text.PDFTextStripper$PositionWrapper >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke $r12.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: void <init>(org.apache.pdfbox.text.TextPosition)>(r4)
org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke $r12.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: void <init>(org.apache.pdfbox.text.TextPosition)>(r4) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r6 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : r6 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 == null
org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 == null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r20 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont getFont()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 == null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z11 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: boolean getSortByPosition()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $z11 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: boolean getSortByPosition()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $z11 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z11 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f19 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getXDirAdj()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z11 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f19 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getX()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : f19 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getX()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f20 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getY()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : f20 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getY()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f21 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getWidth()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : f21 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getWidth()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f22 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getHeight()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : f22 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getHeight()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r13 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float[] getIndividualWidths()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r13 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float[] getIndividualWidths()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : i0 = lengthof $r13
org.apache.pdfbox.text.PDFTextStripper.writePage : i0 = lengthof $r13 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f0 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getWidthOfSpace()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : f0 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getWidthOfSpace()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b3 = f0 cmpl 0.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : $b3 = f0 cmpl 0.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $b3 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b3 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z5 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0)
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b3 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f23 = 3.4028235E38F
org.apache.pdfbox.text.PDFTextStripper.writePage : f23 = 3.4028235E38F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $b10 = f18 cmpg 0.0F]
org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $b10 = f18 cmpg 0.0F] >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b10 = f18 cmpg 0.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : $b10 = f18 cmpg 0.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $b10 >= 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b10 >= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f6 = (float) i0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b10 >= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f2 = (float) i0
org.apache.pdfbox.text.PDFTextStripper.writePage : $f2 = (float) i0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f3 = f21 / $f2
org.apache.pdfbox.text.PDFTextStripper.writePage : $f3 = f21 / $f2 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f4 = f18 + $f3
org.apache.pdfbox.text.PDFTextStripper.writePage : $f4 = f18 + $f3 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f24 = $f4 / 2.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : f24 = $f4 / 2.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f5 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: float getAverageCharTolerance()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $f5 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: float getAverageCharTolerance()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f1 = f24 * $f5
org.apache.pdfbox.text.PDFTextStripper.writePage : f1 = f24 * $f5 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f25 = -3.4028235E38F
org.apache.pdfbox.text.PDFTextStripper.writePage : f25 = -3.4028235E38F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b4 = f15 cmpl -1.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : $b4 = f15 cmpl -1.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $b4 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b4 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b7 = f1 cmpl f23
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b4 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 == null
org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 == null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if z9 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 == null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b11 = f20 cmpl f13
org.apache.pdfbox.text.PDFTextStripper.writePage : $b11 = f20 cmpl f13 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $b11 < 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b11 < 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f13 = f20
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b11 < 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f15 = f19 + f21
org.apache.pdfbox.text.PDFTextStripper.writePage : f15 = f19 + f21 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if r6 == null
org.apache.pdfbox.text.PDFTextStripper.writePage : if r6 == null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if z7 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if r6 == null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f17 = staticinvoke <java.lang.Math: float max(float,float)>(f17, f22)
org.apache.pdfbox.text.PDFTextStripper.writePage : f17 = staticinvoke <java.lang.Math: float max(float,float)>(f17, f22) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f26 = f20 - f22
org.apache.pdfbox.text.PDFTextStripper.writePage : $f26 = f20 - f22 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f14 = staticinvoke <java.lang.Math: float min(float,float)>(f14, $f26)
org.apache.pdfbox.text.PDFTextStripper.writePage : f14 = staticinvoke <java.lang.Math: float min(float,float)>(f14, $f26) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r25 = $r12
org.apache.pdfbox.text.PDFTextStripper.writePage : r25 = $r12 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if z7 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if z7 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke $r12.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: void setParagraphStart()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if z7 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f16 = f0
org.apache.pdfbox.text.PDFTextStripper.writePage : f16 = f0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f18 = f24
org.apache.pdfbox.text.PDFTextStripper.writePage : f18 = f24 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $z10 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $z10 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z10 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke $r12.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: void setParagraphStart()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke $r12.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: void setLineStart()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke $r12.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: void setLineStart()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r26 = $r12
org.apache.pdfbox.text.PDFTextStripper.writePage : r26 = $r12 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : z7 = 0
org.apache.pdfbox.text.PDFTextStripper.writePage : z7 = 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f16 = f0
org.apache.pdfbox.text.PDFTextStripper.writePage : if z7 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 != null
org.apache.pdfbox.text.PDFTextStripper.writePage : if z7 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r30 = new org.apache.pdfbox.text.PDFTextStripper$LineItem
org.apache.pdfbox.text.PDFTextStripper.writePage : $r30 = new org.apache.pdfbox.text.PDFTextStripper$LineItem >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke $r30.<org.apache.pdfbox.text.PDFTextStripper$LineItem: void <init>(org.apache.pdfbox.text.TextPosition)>(r4)
org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke $r30.<org.apache.pdfbox.text.PDFTextStripper$LineItem: void <init>(org.apache.pdfbox.text.TextPosition)>(r4) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r30)
org.apache.pdfbox.text.PDFTextStripper.writePage : interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r30) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f17 = staticinvoke <java.lang.Math: float max(float,float)>(f17, f22)
org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 != null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writeParagraphStart()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 != null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r30 = new org.apache.pdfbox.text.PDFTextStripper$LineItem
org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writeParagraphStart()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r30 = new org.apache.pdfbox.text.PDFTextStripper$LineItem
org.apache.pdfbox.text.PDFTextStripper.writePage : f13 = f20 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f15 = f19 + f21
org.apache.pdfbox.text.PDFTextStripper.writePage : if z9 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: void setArticleStart()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if z9 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z2 = specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: boolean overlap(float,float,float,float)>(f20, f22, f13, f17)
org.apache.pdfbox.text.PDFTextStripper.writePage : $z2 = specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: boolean overlap(float,float,float,float)>(f20, f22, f13, f17) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $z2 != 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z2 != 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r19 = specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: java.util.List normalize(java.util.List)>($r28)
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z2 != 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b5 = f25 cmpl -3.4028235E38F
org.apache.pdfbox.text.PDFTextStripper.writePage : $b5 = f25 cmpl -3.4028235E38F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $b5 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b5 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b6 = f25 cmpg f19
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b5 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b11 = f20 cmpl f13
org.apache.pdfbox.text.PDFTextStripper.writePage : $b6 = f25 cmpg f19 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $b6 >= 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b6 >= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r14 = virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: org.apache.pdfbox.text.TextPosition getTextPosition()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b6 >= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b11 = f20 cmpl f13
org.apache.pdfbox.text.PDFTextStripper.writePage : $r14 = virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: org.apache.pdfbox.text.TextPosition getTextPosition()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r15 = virtualinvoke $r14.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r15 = virtualinvoke $r14.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $r15 == null
org.apache.pdfbox.text.PDFTextStripper.writePage : if $r15 == null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r16 = virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: org.apache.pdfbox.text.TextPosition getTextPosition()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if $r15 == null >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b11 = f20 cmpl f13
org.apache.pdfbox.text.PDFTextStripper.writePage : $r16 = virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: org.apache.pdfbox.text.TextPosition getTextPosition()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r17 = virtualinvoke $r16.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r17 = virtualinvoke $r16.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z3 = virtualinvoke $r17.<java.lang.String: boolean endsWith(java.lang.String)>(" ")
org.apache.pdfbox.text.PDFTextStripper.writePage : $z3 = virtualinvoke $r17.<java.lang.String: boolean endsWith(java.lang.String)>(" ") >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $z3 != 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z3 != 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r18 = staticinvoke <org.apache.pdfbox.text.PDFTextStripper$LineItem: org.apache.pdfbox.text.PDFTextStripper$LineItem getWordSeparator()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z3 != 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b11 = f20 cmpl f13
org.apache.pdfbox.text.PDFTextStripper.writePage : $r18 = staticinvoke <org.apache.pdfbox.text.PDFTextStripper$LineItem: org.apache.pdfbox.text.PDFTextStripper$LineItem getWordSeparator()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r18)
org.apache.pdfbox.text.PDFTextStripper.writePage : interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b11 = f20 cmpl f13
org.apache.pdfbox.text.PDFTextStripper.writePage : $r19 = specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: java.util.List normalize(java.util.List)>($r28) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writeLine(java.util.List)>($r19)
org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writeLine(java.util.List)>($r19) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : interfaceinvoke $r28.<java.util.List: void clear()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : interfaceinvoke $r28.<java.util.List: void clear()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : r26 = specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: org.apache.pdfbox.text.PDFTextStripper$PositionWrapper handleLineSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)>($r12, r25, r26, f17)
org.apache.pdfbox.text.PDFTextStripper.writePage : r26 = specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: org.apache.pdfbox.text.PDFTextStripper$PositionWrapper handleLineSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)>($r12, r25, r26, f17) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f25 = -3.4028235E38F
org.apache.pdfbox.text.PDFTextStripper.writePage : f25 = -3.4028235E38F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f13 = -3.4028235E38F
org.apache.pdfbox.text.PDFTextStripper.writePage : f13 = -3.4028235E38F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f17 = -1.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : f17 = -1.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f14 = 3.4028235E38F
org.apache.pdfbox.text.PDFTextStripper.writePage : f14 = 3.4028235E38F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b5 = f25 cmpl -3.4028235E38F
org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: void setArticleStart()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : z9 = 0
org.apache.pdfbox.text.PDFTextStripper.writePage : z9 = 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z2 = specialinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: boolean overlap(float,float,float,float)>(f20, f22, f13, f17)
org.apache.pdfbox.text.PDFTextStripper.writePage : $b7 = f1 cmpl f23 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $b7 <= 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b7 <= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f25 = f15 + f23
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b7 <= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f25 = f15 + f1
org.apache.pdfbox.text.PDFTextStripper.writePage : f25 = f15 + f1 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 == null
org.apache.pdfbox.text.PDFTextStripper.writePage : f25 = f15 + f23 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= (branch)]
org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if r25 == null
org.apache.pdfbox.text.PDFTextStripper.writePage : $f6 = (float) i0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f24 = f21 / $f6
org.apache.pdfbox.text.PDFTextStripper.writePage : f24 = f21 / $f6 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $f5 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: float getAverageCharTolerance()>()]
org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $f5 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: float getAverageCharTolerance()>()] >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f5 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: float getAverageCharTolerance()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $z5 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $z5 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z5 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f23 = 3.4028235E38F
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z5 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b8 = f16 cmpg 0.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : $b8 = f16 cmpg 0.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $b8 >= 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b8 >= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f10 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: float getSpacingTolerance()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b8 >= 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f7 = f0 + f16
org.apache.pdfbox.text.PDFTextStripper.writePage : $f7 = f0 + f16 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f8 = $f7 / 2.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : $f8 = $f7 / 2.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f9 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: float getSpacingTolerance()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $f9 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: float getSpacingTolerance()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f23 = $f8 * $f9
org.apache.pdfbox.text.PDFTextStripper.writePage : f23 = $f8 * $f9 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b10 = f18 cmpg 0.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : $f10 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: float getSpacingTolerance()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f23 = f0 * $f10
org.apache.pdfbox.text.PDFTextStripper.writePage : f23 = f0 * $f10 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $b10 = f18 cmpg 0.0F]
org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $b10 = f18 cmpg 0.0F] >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b10 = f18 cmpg 0.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : f19 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getXDirAdj()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f20 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getYDirAdj()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : f20 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getYDirAdj()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f21 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getWidthDirAdj()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : f21 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getWidthDirAdj()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f22 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getHeightDir()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : f22 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getHeightDir()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $r13 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float[] getIndividualWidths()>()]
org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= $r13 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float[] getIndividualWidths()>()] >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r13 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float[] getIndividualWidths()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r20 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont getFont()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r21 = virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: org.apache.pdfbox.text.TextPosition getTextPosition()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r21 = virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: org.apache.pdfbox.text.TextPosition getTextPosition()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r22 = virtualinvoke $r21.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont getFont()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r22 = virtualinvoke $r21.<org.apache.pdfbox.text.TextPosition: org.apache.pdfbox.pdmodel.font.PDFont getFont()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $r20 != $r22
org.apache.pdfbox.text.PDFTextStripper.writePage : if $r20 != $r22 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f11 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getFontSize()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : if $r20 != $r22 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f18 = -1.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : f18 = -1.0F >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z11 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: boolean getSortByPosition()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $f11 = virtualinvoke r4.<org.apache.pdfbox.text.TextPosition: float getFontSize()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r23 = virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: org.apache.pdfbox.text.TextPosition getTextPosition()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r23 = virtualinvoke r25.<org.apache.pdfbox.text.PDFTextStripper$PositionWrapper: org.apache.pdfbox.text.TextPosition getTextPosition()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $f12 = virtualinvoke $r23.<org.apache.pdfbox.text.TextPosition: float getFontSize()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $f12 = virtualinvoke $r23.<org.apache.pdfbox.text.TextPosition: float getFontSize()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $b9 = $f11 cmpl $f12
org.apache.pdfbox.text.PDFTextStripper.writePage : $b9 = $f11 cmpl $f12 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $b9 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b9 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : f18 = -1.0F
org.apache.pdfbox.text.PDFTextStripper.writePage : if $b9 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z11 = virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: boolean getSortByPosition()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : $r24 = new org.apache.pdfbox.text.TextPositionComparator >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke $r24.<org.apache.pdfbox.text.TextPositionComparator: void <init>()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : specialinvoke $r24.<org.apache.pdfbox.text.TextPositionComparator: void <init>()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $z6 = <org.apache.pdfbox.text.PDFTextStripper: boolean useCustomQuickSort>
org.apache.pdfbox.text.PDFTextStripper.writePage : $z6 = <org.apache.pdfbox.text.PDFTextStripper: boolean useCustomQuickSort> >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : if $z6 == 0
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z6 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : staticinvoke <org.apache.pdfbox.util.QuickSort: void sort(java.util.List,java.util.Comparator)>(r2, $r24)
org.apache.pdfbox.text.PDFTextStripper.writePage : if $z6 == 0 >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r24)
org.apache.pdfbox.text.PDFTextStripper.writePage : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r24) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void startArticle()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : staticinvoke <org.apache.pdfbox.util.QuickSort: void sort(java.util.List,java.util.Comparator)>(r2, $r24) >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void startArticle()>()]
org.apache.pdfbox.text.PDFTextStripper.writePage : goto [?= virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void startArticle()>()] >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void startArticle()>()
org.apache.pdfbox.text.PDFTextStripper.writePage : virtualinvoke r0.<org.apache.pdfbox.text.PDFTextStripper: void writePageStart()>() >>>>>>>> org.apache.pdfbox.text.PDFTextStripper.writePage : $r8 = r0.<org.apache.pdfbox.text.PDFTextStripper: java.util.ArrayList charactersByArticle>
