org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : $r2 = new java.util.HashSet >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : specialinvoke $r2.<java.util.HashSet: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i4 = 0
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i4 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : if i4 >= i1
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : if i4 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i5 = 0
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : if i4 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : $i2 = interfaceinvoke $r2.<java.util.Set: int size()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : $i2 = interfaceinvoke $r2.<java.util.Set: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : return $i2
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i5 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : if i5 >= i0
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : if i5 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : $i3 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(i5, i4)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : if i5 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i4 = i4 + 1
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i4 = i4 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : if i4 >= i1
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : $i3 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(i5, i4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i5 = i5 + 1
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.colorCount : if i5 >= i0
