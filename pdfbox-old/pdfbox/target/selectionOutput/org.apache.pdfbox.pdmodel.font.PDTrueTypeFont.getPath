org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : i1 = virtualinvoke $r2.<org.apache.fontbox.ttf.TrueTypeFont: int nameToGID(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : i1 = virtualinvoke $r2.<org.apache.fontbox.ttf.TrueTypeFont: int nameToGID(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r7 = new java.awt.geom.GeneralPath
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r4 = virtualinvoke $r3.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.GlyphTable getGlyph()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r4 = virtualinvoke $r3.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.GlyphTable getGlyph()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : r11 = virtualinvoke $r4.<org.apache.fontbox.ttf.GlyphTable: org.apache.fontbox.ttf.GlyphData getGlyph(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : r11 = virtualinvoke $r4.<org.apache.fontbox.ttf.GlyphTable: org.apache.fontbox.ttf.GlyphData getGlyph(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if r11 == null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if r11 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r6 = virtualinvoke r11.<org.apache.fontbox.ttf.GlyphData: java.awt.geom.GeneralPath getPath()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if r11 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r5 = new java.awt.geom.GeneralPath
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r5 = new java.awt.geom.GeneralPath >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : specialinvoke $r5.<java.awt.geom.GeneralPath: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : specialinvoke $r5.<java.awt.geom.GeneralPath: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : return $r5
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r6 = virtualinvoke r11.<org.apache.fontbox.ttf.GlyphData: java.awt.geom.GeneralPath getPath()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : return $r6
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r7 = new java.awt.geom.GeneralPath >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : specialinvoke $r7.<java.awt.geom.GeneralPath: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : specialinvoke $r7.<java.awt.geom.GeneralPath: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : return $r7
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $i0 = virtualinvoke $r8.<org.apache.fontbox.ttf.TrueTypeFont: int getNumberOfGlyphs()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $i0 = virtualinvoke $r8.<org.apache.fontbox.ttf.TrueTypeFont: int getNumberOfGlyphs()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 <= $i0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $i0 = virtualinvoke $r8.<org.apache.fontbox.ttf.TrueTypeFont: int getNumberOfGlyphs()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 <= $i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : i1 = 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 <= $i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : if i1 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getPath : goto [?= (branch)]
