org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: float getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f0 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: float getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $b0 = f0 cmpl 1.4F
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $b0 = f0 cmpl 1.4F >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : if $b0 < 0
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if $b0 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if $b0 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : return f0
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : r1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.lang.String getVersion()>()
org.apache.pdfbox.pdmodel.PDDocument.getVersion : r1 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.lang.String getVersion()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = -1.0F
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = -1.0F >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : if r1 == null
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r5 := @caughtexception
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r6 = <org.apache.pdfbox.pdmodel.PDDocument: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : interfaceinvoke $r6.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Can\'t extract the version number of the document catalog.", $r5)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : interfaceinvoke $r6.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Can\'t extract the version number of the document catalog.", $r5) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)
org.apache.pdfbox.pdmodel.PDDocument.getVersion : $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : return $f2
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : goto [?= $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)]
org.apache.pdfbox.pdmodel.PDDocument.getVersion : f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $r5 := @caughtexception
org.apache.pdfbox.pdmodel.PDDocument.getVersion : goto [?= $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)] >>>>>>>> org.apache.pdfbox.pdmodel.PDDocument.getVersion : $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f0)
