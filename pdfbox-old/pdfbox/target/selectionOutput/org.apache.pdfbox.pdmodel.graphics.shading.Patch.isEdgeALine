org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r4 = r1[1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r3 = r1[0]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r3 = r1[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r2 = r1[3]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r2 = r1[3] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Patch: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r4, $r3, $r2)
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Patch: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r4, $r3, $r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : d0 = staticinvoke <java.lang.Math: double abs(double)>($d4)
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : d0 = staticinvoke <java.lang.Math: double abs(double)>($d4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r7 = r1[2]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r7 = r1[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r6 = r1[0]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r6 = r1[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r5 = r1[3]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r5 = r1[3] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Patch: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r7, $r6, $r5)
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Patch: double edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r7, $r6, $r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : d1 = staticinvoke <java.lang.Math: double abs(double)>($d5)
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : d1 = staticinvoke <java.lang.Math: double abs(double)>($d5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r8 = r1[0]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r8 = r1[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d6 = virtualinvoke $r8.<java.awt.geom.Point2D: double getX()>()
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d6 = virtualinvoke $r8.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r9 = r1[3]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r9 = r1[3] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d7 = virtualinvoke $r9.<java.awt.geom.Point2D: double getX()>()
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d7 = virtualinvoke $r9.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d8 = $d6 - $d7
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d8 = $d6 - $d7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : d2 = staticinvoke <java.lang.Math: double abs(double)>($d8)
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : d2 = staticinvoke <java.lang.Math: double abs(double)>($d8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r10 = r1[0]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r10 = r1[0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d9 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>()
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d9 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r11 = r1[3]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $r11 = r1[3] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d10 = virtualinvoke $r11.<java.awt.geom.Point2D: double getY()>()
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d10 = virtualinvoke $r11.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d11 = $d9 - $d10
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $d11 = $d9 - $d10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : d3 = staticinvoke <java.lang.Math: double abs(double)>($d11)
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : d3 = staticinvoke <java.lang.Math: double abs(double)>($d11) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $b0 = d0 cmpg d2
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $b0 = d0 cmpg d2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b0 > 0
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b0 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $b3 = d1 cmpg d2
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b0 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $b1 = d0 cmpg d3
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $b1 = d0 cmpg d3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b1 > 0
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b1 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $b2 = d1 cmpg d3
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b1 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $z0 = 0
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $z0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : return $z0
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $b2 = d1 cmpg d3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b2 > 0
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b2 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $z0 = 1
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b2 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $z0 = 0
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $z0 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : goto [?= return $z0]
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : goto [?= return $z0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : return $z0
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $b3 = d1 cmpg d2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b3 <= 0
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b3 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $b1 = d0 cmpg d3
org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : if $b3 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.shading.Patch.isEdgeALine : $z0 = 1
