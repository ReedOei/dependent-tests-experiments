org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $z0 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: boolean isEmbedded> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : i10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int codeToCID(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : i10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int codeToCID(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $r1 == null
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i1 = virtualinvoke $r2.<org.apache.fontbox.ttf.TrueTypeFont: int getNumberOfGlyphs()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i1 = virtualinvoke $r2.<org.apache.fontbox.ttf.TrueTypeFont: int getNumberOfGlyphs()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if i10 >= $i1
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if i10 >= $i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : return i10
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if i10 >= $i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : return 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i2 = lengthof $r3
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i2 = lengthof $r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if i10 >= $i2
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if i10 >= $i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if i10 >= $i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : return 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i3 = $r4[i10]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i3 = $r4[i10] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : return $i3
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $r5 == null
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $z1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: boolean isDamaged>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.pdfbox.pdmodel.font.PDType0Font parent>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.pdfbox.pdmodel.font.PDType0Font parent> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : r24 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.lang.String toUnicode(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : r24 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.lang.String toUnicode(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if r24 != null
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if r24 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r10 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if r24 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i4 = virtualinvoke r24.<java.lang.String: int length()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i4 = virtualinvoke r24.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $i4 <= 1
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $i4 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r8 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $i4 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r7 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.fontbox.ttf.CmapSubtable cmap>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r7 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.fontbox.ttf.CmapSubtable cmap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i5 = virtualinvoke r24.<java.lang.String: int codePointAt(int)>(0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i5 = virtualinvoke r24.<java.lang.String: int codePointAt(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i6 = virtualinvoke $r7.<org.apache.fontbox.ttf.CmapSubtable: int getGlyphId(int)>($i5)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i6 = virtualinvoke $r7.<org.apache.fontbox.ttf.CmapSubtable: int getGlyphId(int)>($i5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : return $i6
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r8 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : interfaceinvoke $r8.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Trying to map multi-byte character using \'cmap\', result will be poor")
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : interfaceinvoke $r8.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Trying to map multi-byte character using \'cmap\', result will be poor") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r7 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.fontbox.ttf.CmapSubtable cmap>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r10 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r9 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find a character mapping for ")
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find a character mapping for ") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ")
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : interfaceinvoke $r10.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r16)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : interfaceinvoke $r10.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int codeToCID(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int codeToCID(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : return $i7
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $z1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: boolean isDamaged> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $z1 != 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r18 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.pdfbox.pdmodel.font.PDType0Font parent>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r18 = <org.apache.pdfbox.pdmodel.font.PDCIDFontType2: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r17 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using non-embedded GIDs in font ")
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using non-embedded GIDs in font ") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r20 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r20 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : interfaceinvoke $r18.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r22)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : interfaceinvoke $r18.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r22) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : i9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int codeToCID(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : i9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int codeToCID(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r23 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid>
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $r23 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2: int[] cid2gid> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i8 = $r23[i9]
org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : $i8 = $r23[i9] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType2.codeToGID : return $i8
