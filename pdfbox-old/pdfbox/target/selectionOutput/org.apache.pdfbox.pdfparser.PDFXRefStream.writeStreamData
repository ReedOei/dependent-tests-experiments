org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i0 = r2[0] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 0L, $i0)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 0L, $i0) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i1 = r2[1]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i1 = r2[1] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 0L, $i1)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 0L, $i1) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i2 = r2[2]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i2 = r2[2] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 65535L, $i2)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 65535L, $i2) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $r5 = r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: java.util.Map streamData>
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $r5 = r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: java.util.Map streamData> >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z0 == 0
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : return
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $z1 = r4 instanceof org.apache.pdfbox.pdfparser.PDFXRefStream$FreeReference
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $z1 = r4 instanceof org.apache.pdfbox.pdfparser.PDFXRefStream$FreeReference >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z1 == 0
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r8 = (org.apache.pdfbox.pdfparser.PDFXRefStream$FreeReference) r4
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $z2 = r4 instanceof org.apache.pdfbox.pdfparser.PDFXRefStream$NormalReference
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $z2 = r4 instanceof org.apache.pdfbox.pdfparser.PDFXRefStream$NormalReference >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z2 == 0
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r9 = (org.apache.pdfbox.pdfparser.PDFXRefStream$NormalReference) r4
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $z3 = r4 instanceof org.apache.pdfbox.pdfparser.PDFXRefStream$ObjectStreamReference
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $z3 = r4 instanceof org.apache.pdfbox.pdfparser.PDFXRefStream$ObjectStreamReference >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z3 == 0
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r10 = (org.apache.pdfbox.pdfparser.PDFXRefStream$ObjectStreamReference) r4
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $r7 = new java.lang.RuntimeException
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $r7 = new java.lang.RuntimeException >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("unexpected reference type")
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("unexpected reference type") >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : throw $r7
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r10 = (org.apache.pdfbox.pdfparser.PDFXRefStream$ObjectStreamReference) r4 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i3 = r2[0]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i3 = r2[0] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 2L, $i3)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 2L, $i3) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l5 = r10.<org.apache.pdfbox.pdfparser.PDFXRefStream$ObjectStreamReference: long offset>
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l5 = r10.<org.apache.pdfbox.pdfparser.PDFXRefStream$ObjectStreamReference: long offset> >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i4 = r2[1]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i4 = r2[1] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l5, $i4)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l5, $i4) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l7 = r10.<org.apache.pdfbox.pdfparser.PDFXRefStream$ObjectStreamReference: long objectNumberOfObjectStream>
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l7 = r10.<org.apache.pdfbox.pdfparser.PDFXRefStream$ObjectStreamReference: long objectNumberOfObjectStream> >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i6 = r2[2]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i6 = r2[2] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l7, $i6)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l7, $i6) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= (branch)]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r9 = (org.apache.pdfbox.pdfparser.PDFXRefStream$NormalReference) r4 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i8 = r2[0]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i8 = r2[0] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 1L, $i8)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 1L, $i8) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l10 = r9.<org.apache.pdfbox.pdfparser.PDFXRefStream$NormalReference: long offset>
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l10 = r9.<org.apache.pdfbox.pdfparser.PDFXRefStream$NormalReference: long offset> >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i9 = r2[1]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i9 = r2[1] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l10, $i9)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l10, $i9) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i11 = r9.<org.apache.pdfbox.pdfparser.PDFXRefStream$NormalReference: int genNumber>
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i11 = r9.<org.apache.pdfbox.pdfparser.PDFXRefStream$NormalReference: int genNumber> >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l13 = (long) $i11
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l13 = (long) $i11 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i12 = r2[2]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i12 = r2[2] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l13, $i12)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l13, $i12) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= (branch)]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : r8 = (org.apache.pdfbox.pdfparser.PDFXRefStream$FreeReference) r4 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i14 = r2[0]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i14 = r2[0] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 0L, $i14)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, 0L, $i14) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l16 = r8.<org.apache.pdfbox.pdfparser.PDFXRefStream$FreeReference: long nextFree>
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l16 = r8.<org.apache.pdfbox.pdfparser.PDFXRefStream$FreeReference: long nextFree> >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i15 = r2[1]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i15 = r2[1] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l16, $i15)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l16, $i15) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i17 = r8.<org.apache.pdfbox.pdfparser.PDFXRefStream$FreeReference: int nextGenNumber>
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i17 = r8.<org.apache.pdfbox.pdfparser.PDFXRefStream$FreeReference: int nextGenNumber> >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l19 = (long) $i17
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $l19 = (long) $i17 >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i18 = r2[2]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : $i18 = r2[2] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l19, $i18)
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : specialinvoke r0.<org.apache.pdfbox.pdfparser.PDFXRefStream: void writeNumber(java.io.OutputStream,long,int)>(r1, $l19, $i18) >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= (branch)]
org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.PDFXRefStream.writeStreamData : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
