org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: boolean isEmbedded()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : return r1
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $z1 = interfaceinvoke $r5.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $z1 = interfaceinvoke $r5.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : return r1
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r6 = <org.apache.pdfbox.pdmodel.font.PDType1Font: java.util.Map ALT_NAMES>
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r6 = <org.apache.pdfbox.pdmodel.font.PDType1Font: java.util.Map ALT_NAMES> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : r2 = (java.lang.String) $r7
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : r2 = (java.lang.String) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if r2 == null
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(".notdef")
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : r3 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String toUnicode(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : r3 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String toUnicode(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if r3 == null
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $i0 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : return ".notdef"
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $i0 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $i0 != 1
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $i1 = virtualinvoke r3.<java.lang.String: int codePointAt(int)>(0)
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : return ".notdef"
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $i1 = virtualinvoke r3.<java.lang.String: int codePointAt(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : r4 = staticinvoke <org.apache.pdfbox.pdmodel.font.UniUtil: java.lang.String getUniNameOfCodePoint(int)>($i1)
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : r4 = staticinvoke <org.apache.pdfbox.pdmodel.font.UniUtil: java.lang.String getUniNameOfCodePoint(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $z2 = interfaceinvoke $r8.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r4)
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $z2 = interfaceinvoke $r8.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z2 == 0
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : return r4
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : return ".notdef"
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(".notdef") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z3 != 0
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r9 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r9 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $z4 = interfaceinvoke $r9.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r2)
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $z4 = interfaceinvoke $r9.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z4 == 0
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : return r2
org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getNameInFont : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
