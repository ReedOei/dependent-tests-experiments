org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z12 = 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z12 = 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r19 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r19 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f7 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getX()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f7 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getX()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f0 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getY()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f0 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getY()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r7 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Map characterListMapping>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r7 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Map characterListMapping> >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r20 = (java.util.List) $r8
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r20 = (java.util.List) $r8 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r20 != null
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r20 != null >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r16 = new java.util.ArrayList
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r20 != null >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z13 = 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z13 = 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f4 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getWidth()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f4 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: float getWidth()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i0 = virtualinvoke r19.<java.lang.String: int length()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i0 = virtualinvoke r19.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f5 = (float) $i0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f5 = (float) $i0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f6 = $f4 / $f5
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $f6 = $f4 / $f5 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f1 = $f6 / 3.0F
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f1 = $f6 / 3.0F >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r2 = interfaceinvoke r20.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r2 = interfaceinvoke r20.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z14 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z14 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z14 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z14 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z14 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z13 != 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z13 != 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z13 != 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z12 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z12 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r9 = new java.util.ArrayList
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z12 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : return
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r9 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z0 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z0 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z0 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i1 = interfaceinvoke $r9.<java.util.List: int size()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i1 = interfaceinvoke $r9.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i2 = $i1 - 1
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i2 = $i1 - 1 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i2)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i2) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r22 = (org.apache.pdfbox.text.TextPosition) $r10
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r22 = (org.apache.pdfbox.text.TextPosition) $r10 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z1 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z1 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z1 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z1 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z6 = virtualinvoke r22.<org.apache.pdfbox.text.TextPosition: boolean contains(org.apache.pdfbox.text.TextPosition)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z1 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z2 = virtualinvoke r22.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z2 = virtualinvoke r22.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z2 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z2 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z4 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: boolean contains(org.apache.pdfbox.text.TextPosition)>(r22)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z2 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents> >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z15 = virtualinvoke $r23.<java.util.Stack: boolean isEmpty()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z15 = virtualinvoke $r23.<java.util.Stack: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z15 != 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z15 != 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r11 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z15 != 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : return
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r11 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents> >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r12 = virtualinvoke $r11.<java.util.Stack: java.lang.Object peek()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r12 = virtualinvoke $r11.<java.util.Stack: java.lang.Object peek()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r13 = (org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent) $r12
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r13 = (org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent) $r12 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke $r13.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent: void addText(org.apache.pdfbox.text.TextPosition)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke $r13.<org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent: void addText(org.apache.pdfbox.text.TextPosition)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : return
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z4 = virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: boolean contains(org.apache.pdfbox.text.TextPosition)>(r22) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z4 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z4 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: void mergeDiacritic(org.apache.pdfbox.text.TextPosition)>(r22)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z4 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r1.<org.apache.pdfbox.text.TextPosition: void mergeDiacritic(org.apache.pdfbox.text.TextPosition)>(r22) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i3 = interfaceinvoke $r9.<java.util.List: int size()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i3 = interfaceinvoke $r9.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i4 = $i3 - 1
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $i4 = $i3 - 1 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r9.<java.util.List: java.lang.Object remove(int)>($i4)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r9.<java.util.List: java.lang.Object remove(int)>($i4) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z6 = virtualinvoke r22.<org.apache.pdfbox.text.TextPosition: boolean contains(org.apache.pdfbox.text.TextPosition)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z6 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z6 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r22.<org.apache.pdfbox.text.TextPosition: void mergeDiacritic(org.apache.pdfbox.text.TextPosition)>(r1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z6 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z2 = virtualinvoke r22.<org.apache.pdfbox.text.TextPosition: boolean isDiacritic()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : virtualinvoke r22.<org.apache.pdfbox.text.TextPosition: void mergeDiacritic(org.apache.pdfbox.text.TextPosition)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r23 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Stack currentMarkedContents>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z12 = 1
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z12 = 1 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z12 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r15 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r3 = (org.apache.pdfbox.text.TextPosition) $r15
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r3 = (org.apache.pdfbox.text.TextPosition) $r15 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r5 = virtualinvoke r3.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r5 = virtualinvoke r3.<org.apache.pdfbox.text.TextPosition: java.lang.String getUnicode()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f2 = virtualinvoke r3.<org.apache.pdfbox.text.TextPosition: float getX()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f2 = virtualinvoke r3.<org.apache.pdfbox.text.TextPosition: float getX()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f3 = virtualinvoke r3.<org.apache.pdfbox.text.TextPosition: float getY()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : f3 = virtualinvoke r3.<org.apache.pdfbox.text.TextPosition: float getY()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r5 == null
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r5 == null >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z9 = specialinvoke r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: boolean within(float,float,float)>(f2, f7, f1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if r5 == null >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $z14 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $z14 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z14 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z9 = specialinvoke r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: boolean within(float,float,float)>(f2, f7, f1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z9 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z9 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z10 = specialinvoke r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: boolean within(float,float,float)>(f3, f0, f1)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z9 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $z14 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $z10 = specialinvoke r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: boolean within(float,float,float)>(f3, f0, f1) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z10 == 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z10 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z13 = 1
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if $z10 == 0 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= $z14 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z13 = 1 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= (branch)]
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : if z13 != 0
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r16 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : specialinvoke $r16.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : specialinvoke $r16.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r20 = $r16
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : r20 = $r16 >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r17 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Map characterListMapping>
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : $r17 = r0.<org.apache.pdfbox.text.PDFMarkedContentExtractor: java.util.Map characterListMapping> >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, $r16)
org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, $r16) >>>>>>>> org.apache.pdfbox.text.PDFMarkedContentExtractor.processTextPosition : z13 = 0
