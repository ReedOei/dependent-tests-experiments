org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r7 = new java.util.PriorityQueue >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : specialinvoke $r7.<java.util.PriorityQueue: void <init>(int)>(20)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : specialinvoke $r7.<java.util.PriorityQueue: void <init>(int)>(20) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r8 = r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: java.util.Map fontInfoByName>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r8 = r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: java.util.Map fontInfoByName> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r4 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r4 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z2 == 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : return $r7
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r5 = (org.apache.pdfbox.pdmodel.font.FontInfo) $r10
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r5 = (org.apache.pdfbox.pdmodel.font.FontInfo) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if r2 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: boolean isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)>(r2, r5)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11 = new org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11 = new org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : specialinvoke $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: void <init>(org.apache.pdfbox.pdmodel.font.FontInfo)>(r5)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : specialinvoke $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: void <init>(org.apache.pdfbox.pdmodel.font.FontInfo)>(r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r12 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.font.PDPanose getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r12 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.font.PDPanose getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r12 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r12 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r13 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r12 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $b1 = $f1 cmpl 0.0F
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $b1 = $f1 cmpl 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $b1 <= 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClass()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i2 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClass()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i2 <= 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i2 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i2 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i3 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClass()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i3 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClass()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f3 = (float) $i3
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f3 = (float) $i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f4 = $f2 - $f3
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f4 = $f2 - $f3 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : f6 = staticinvoke <java.lang.Math: float abs(float)>($f4)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : f6 = staticinvoke <java.lang.Math: float abs(float)>($f4) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d3 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d3 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f5 = f6 / 100.0F
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f5 = f6 / 100.0F >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d0 = (double) $f5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d0 = (double) $f5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d1 = $d0 * 0.5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d1 = $d0 * 0.5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d2 = 1.0 - $d1
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d2 = 1.0 - $d1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d4 = $d3 + $d2
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d4 = $d3 + $d2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d4
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d4 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r13 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r13 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r13 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r14 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.font.PDPanose getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $r13 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $f1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getFontWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r14 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.font.PDPanose getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r22 = virtualinvoke $r14.<org.apache.pdfbox.pdmodel.font.PDPanose: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : r22 = virtualinvoke $r14.<org.apache.pdfbox.pdmodel.font.PDPanose: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i4 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getFamilyKind()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i4 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getFamilyKind()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r15 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r15 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i5 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getFamilyKind()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i5 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getFamilyKind()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i4 != $i5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i4 != $i5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i6 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i4 != $i5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i6 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r16 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r16 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i7 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i7 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i6 != $i7
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i6 != $i7 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d18 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i6 != $i7 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i8 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i8 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i8 < 2
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i8 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i18 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i8 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i21 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i21 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i21 < 11
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i21 < 11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i15 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i21 < 11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i22 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i22 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i22 == 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i22 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r17 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i22 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i23 = virtualinvoke $r23.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i23 = virtualinvoke $r23.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i0 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClassAsPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i0 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: int getWeightClassAsPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i24 = i23 - i0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i24 = i23 - i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i25 = staticinvoke <java.lang.Math: int abs(int)>($i24)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i25 = staticinvoke <java.lang.Math: int abs(int)>($i24) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i25 <= 2
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i25 <= 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i23 = i0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i25 <= 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i9 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i9 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i9 != i23
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i9 != i23 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d10 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i9 != i23 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i10 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i10 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i10 <= 1
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i10 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if i23 <= 1
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i10 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if i23 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i11 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if i23 <= 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i11 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i12 = $i11 - i23
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i12 = $i11 - i23 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i13 = staticinvoke <java.lang.Math: int abs(int)>($i12)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i13 = staticinvoke <java.lang.Math: int abs(int)>($i12) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : f0 = (float) $i13
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : f0 = (float) $i13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d8 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d8 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d5 = (double) f0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d5 = (double) f0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d6 = $d5 * 0.5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d6 = $d5 * 0.5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d7 = 1.0 - $d6
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d7 = 1.0 - $d6 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d9 = $d8 + $d7
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d9 = $d8 + $d7 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d9
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d9 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d10 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d11 = $d10 + 2.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d11 = $d10 + 2.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d11
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= virtualinvoke $r7.<java.util.PriorityQueue: boolean add(java.lang.Object)>($r11)]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : i23 = i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i9 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getWeight()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r17 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i14 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i14 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i14 == 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i14 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d12 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i14 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d12 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d13 = $d12 - 1.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d13 = $d12 - 1.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d13
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i15 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i15 > 13
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i15 > 13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r18 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i15 > 13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i22 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r18 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i16 = virtualinvoke $r18.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i16 = virtualinvoke $r18.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i16 < 11
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i16 < 11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r19 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i16 < 11 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i22 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r19 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i17 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i17 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i17 > 13
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i17 > 13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d14 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i17 > 13 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i22 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d14 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d15 = $d14 + 1.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d15 = $d14 + 1.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d15
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d15 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i18 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i18 > 5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i18 > 5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r20 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i18 > 5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i21 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r20 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i19 = virtualinvoke $r20.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i19 = virtualinvoke $r20.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i19 < 2
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i19 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r21 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i19 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i21 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r21 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i20 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i20 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i20 > 5
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i20 > 5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d16 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $i20 > 5 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $i21 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.PDPanoseClassification: int getSerifStyle()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d16 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d17 = $d16 + 1.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d17 = $d16 + 1.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d17
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d17 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d18 = $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d19 = $d18 + 2.0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $d19 = $d18 + 2.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d19
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11.<org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch: double score> = $d19 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r23 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.pdfbox.pdmodel.font.PDPanoseClassification getPanose()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: boolean isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)>(r2, r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z1 != 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $r11 = new org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch
org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.getFontMatches : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
