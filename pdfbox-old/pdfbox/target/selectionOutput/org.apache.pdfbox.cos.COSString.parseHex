org.apache.pdfbox.cos.COSString.parseHex : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r5 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSString.parseHex : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r6 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.pdfbox.cos.COSString.parseHex : $r6 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6)
org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $i1 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>()
org.apache.pdfbox.cos.COSString.parseHex : $i1 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $i2 = $i1 % 2
org.apache.pdfbox.cos.COSString.parseHex : $i2 = $i1 % 2 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : if $i2 == 0
org.apache.pdfbox.cos.COSString.parseHex : if $i2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)
org.apache.pdfbox.cos.COSString.parseHex : if $i2 == 0 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : i0 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>()
org.apache.pdfbox.cos.COSString.parseHex : i0 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : i5 = 0
org.apache.pdfbox.cos.COSString.parseHex : i5 = 0 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : if i5 >= i0
org.apache.pdfbox.cos.COSString.parseHex : if i5 >= i0 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $i3 = i5 + 2
org.apache.pdfbox.cos.COSString.parseHex : if i5 >= i0 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r7 = new org.apache.pdfbox.cos.COSString
org.apache.pdfbox.cos.COSString.parseHex : $r7 = new org.apache.pdfbox.cos.COSString >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r8 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.COSString.parseHex : $r8 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r7.<org.apache.pdfbox.cos.COSString: void <init>(byte[])>($r8)
org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r7.<org.apache.pdfbox.cos.COSString: void <init>(byte[])>($r8) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : return $r7
org.apache.pdfbox.cos.COSString.parseHex : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String substring(int,int)>(i5, $i3)
org.apache.pdfbox.cos.COSString.parseHex : $i3 = i5 + 2 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r11 := @caughtexception
org.apache.pdfbox.cos.COSString.parseHex : $z0 = <org.apache.pdfbox.cos.COSString: boolean FORCE_PARSING> >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : if $z0 == 0
org.apache.pdfbox.cos.COSString.parseHex : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r17 = <org.apache.pdfbox.cos.COSString: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.cos.COSString.parseHex : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r12 = new java.io.IOException
org.apache.pdfbox.cos.COSString.parseHex : $r12 = new java.io.IOException >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r13 = new java.lang.StringBuilder
org.apache.pdfbox.cos.COSString.parseHex : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid hex string: ")
org.apache.pdfbox.cos.COSString.parseHex : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid hex string: ") >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.pdfbox.cos.COSString.parseHex : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.COSString.parseHex : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r11)
org.apache.pdfbox.cos.COSString.parseHex : specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r11) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : throw $r12
org.apache.pdfbox.cos.COSString.parseHex : $r17 = <org.apache.pdfbox.cos.COSString: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : interfaceinvoke $r17.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Encountered a malformed hex string")
org.apache.pdfbox.cos.COSString.parseHex : interfaceinvoke $r17.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Encountered a malformed hex string") >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>(63)
org.apache.pdfbox.cos.COSString.parseHex : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>(63) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : goto [?= i5 = i5 + 2]
org.apache.pdfbox.cos.COSString.parseHex : goto [?= i5 = i5 + 2] >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : i5 = i5 + 2
org.apache.pdfbox.cos.COSString.parseHex : i5 = i5 + 2 >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : goto [?= (branch)]
org.apache.pdfbox.cos.COSString.parseHex : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : if i5 >= i0
org.apache.pdfbox.cos.COSString.parseHex : $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String substring(int,int)>(i5, $i3) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r9, 16)
org.apache.pdfbox.cos.COSString.parseHex : $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String substring(int,int)>(i5, $i3) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r11 := @caughtexception
org.apache.pdfbox.cos.COSString.parseHex : $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r9, 16) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i4)
org.apache.pdfbox.cos.COSString.parseHex : $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r9, 16) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r11 := @caughtexception
org.apache.pdfbox.cos.COSString.parseHex : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i4) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : goto [?= i5 = i5 + 2]
org.apache.pdfbox.cos.COSString.parseHex : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i4) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : $r11 := @caughtexception
org.apache.pdfbox.cos.COSString.parseHex : goto [?= i5 = i5 + 2] >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : i5 = i5 + 2
org.apache.pdfbox.cos.COSString.parseHex : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48) >>>>>>>> org.apache.pdfbox.cos.COSString.parseHex : i0 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>()
