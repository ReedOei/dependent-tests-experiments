org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : if $i0 >= 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : if $i0 >= 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : if $i0 >= 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r2 = new java.lang.IllegalArgumentException
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("comment should not include a newline")
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("comment should not include a newline") >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : throw $r2
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : if $i1 < 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : if $i1 < 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r2 = new java.lang.IllegalArgumentException
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : if $i1 < 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : virtualinvoke $r3.<java.io.OutputStream: void write(int)>(37)
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : virtualinvoke $r3.<java.io.OutputStream: void write(int)>(37) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r5 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r4 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII>
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r4 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r6 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4)
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r6 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>($r6)
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>($r6) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r7 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : $r7 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : virtualinvoke $r7.<java.io.OutputStream: void write(int)>(10)
org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : virtualinvoke $r7.<java.io.OutputStream: void write(int)>(10) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.addComment : return
