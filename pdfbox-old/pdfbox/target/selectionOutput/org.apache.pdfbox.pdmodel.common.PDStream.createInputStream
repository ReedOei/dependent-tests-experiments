org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r6 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r15 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSStream: java.io.InputStream createRawInputStream()>()
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r15 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSStream: java.io.InputStream createRawInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r7 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r7 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: java.util.List getFilters()>()
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: java.util.List getFilters()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if r3 == null
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : i1 = 0
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : return r15
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $i0 = interfaceinvoke r3.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $i0 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if i1 >= $i0
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1)
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if i1 >= $i0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : return r15
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r4 = (org.apache.pdfbox.cos.COSName) $r8
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r4 = (org.apache.pdfbox.cos.COSName) $r8 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if r1 == null
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r14 = virtualinvoke r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r9 = <org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.FilterFactory INSTANCE>
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r9 = <org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.FilterFactory INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r5 = virtualinvoke $r9.<org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.Filter getFilter(org.apache.pdfbox.cos.COSName)>(r4)
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r5 = virtualinvoke $r9.<org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.Filter getFilter(org.apache.pdfbox.cos.COSName)>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r10 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r10 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : virtualinvoke r5.<org.apache.pdfbox.filter.Filter: org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>(r15, $r7, $r10, i1)
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : virtualinvoke r5.<org.apache.pdfbox.filter.Filter: org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>(r15, $r7, $r10, i1) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>(r15)
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>(r15) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r12 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r12 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r13 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r13 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>($r13)
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>($r13) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r15 = $r12
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : r15 = $r12 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : virtualinvoke $r7.<java.io.ByteArrayOutputStream: void reset()>()
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : virtualinvoke $r7.<java.io.ByteArrayOutputStream: void reset()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : i1 = i1 + 1
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : goto [?= $i0 = interfaceinvoke r3.<java.util.List: int size()>()]
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : goto [?= $i0 = interfaceinvoke r3.<java.util.List: int size()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $i0 = interfaceinvoke r3.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r14 = virtualinvoke r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r14)
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if $z0 == 0
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : goto [?= return r15]
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : $r9 = <org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.FilterFactory INSTANCE>
org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : goto [?= return r15] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.createInputStream : return r15
