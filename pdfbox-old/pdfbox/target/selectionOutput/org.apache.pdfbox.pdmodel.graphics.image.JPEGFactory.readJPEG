org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r1 = staticinvoke <javax.imageio.ImageIO: java.util.Iterator getImageReadersByFormatName(java.lang.String)>("JPEG") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r7 = null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r7 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if r7 != null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $r4 = new org.apache.pdfbox.filter.MissingImageReaderException
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if r7 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r8 = null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r8 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r8 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r8 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $r6 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if r8 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : interfaceinvoke r8.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if r8 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : virtualinvoke r7.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : virtualinvoke r7.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : throw $r6
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : interfaceinvoke r8.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : virtualinvoke r7.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r8 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : virtualinvoke r7.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r8)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r8 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $r6 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : virtualinvoke r7.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : staticinvoke <javax.imageio.ImageIO: void setUseCache(boolean)>(0)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : virtualinvoke r7.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $r6 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : staticinvoke <javax.imageio.ImageIO: void setUseCache(boolean)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r2 = virtualinvoke r7.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : staticinvoke <javax.imageio.ImageIO: void setUseCache(boolean)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $r6 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r2 = virtualinvoke r7.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if r8 == null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r2 = virtualinvoke r7.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $r6 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if r8 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : interfaceinvoke r8.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if r8 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : virtualinvoke r7.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : virtualinvoke r7.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : return r2
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : interfaceinvoke r8.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : virtualinvoke r7.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $r4 = new org.apache.pdfbox.filter.MissingImageReaderException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : specialinvoke $r4.<org.apache.pdfbox.filter.MissingImageReaderException: void <init>(java.lang.String)>("Cannot read JPEG image: a suitable JAI I/O image filter is not installed")
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : specialinvoke $r4.<org.apache.pdfbox.filter.MissingImageReaderException: void <init>(java.lang.String)>("Cannot read JPEG image: a suitable JAI I/O image filter is not installed") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : throw $r4
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r7 = (javax.imageio.ImageReader) $r5
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : r7 = (javax.imageio.ImageReader) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $z1 = virtualinvoke r7.<javax.imageio.ImageReader: boolean canReadRaster()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $z1 = virtualinvoke r7.<javax.imageio.ImageReader: boolean canReadRaster()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.readJPEG : if r7 != null
