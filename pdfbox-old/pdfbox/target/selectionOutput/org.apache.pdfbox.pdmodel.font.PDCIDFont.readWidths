org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r4 = new java.util.HashMap >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : specialinvoke $r4.<java.util.HashMap: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths> = $r4
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths> = $r4 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName W>
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName W> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r1 = (org.apache.pdfbox.cos.COSArray) $r7
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r1 = (org.apache.pdfbox.cos.COSArray) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if r1 == null
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : return
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i0 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i3 = 0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i3 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i3 >= i0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i3 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i4 = i3 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i3 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : return
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i4 = i3 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r8 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i3)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r8 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r2 = (org.apache.pdfbox.cos.COSNumber) $r8
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r2 = (org.apache.pdfbox.cos.COSNumber) $r8 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i3 = i4 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i3 = i4 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r3 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i4)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r3 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $z0 = r3 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $z0 = r3 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if $z0 == 0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r19 = (org.apache.pdfbox.cos.COSArray) r3
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r21 = (org.apache.pdfbox.cos.COSNumber) r3
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r21 = (org.apache.pdfbox.cos.COSNumber) r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $i1 = i3
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $i1 = i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i3 = i3 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i3 = i3 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r9 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i1)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r9 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r22 = (org.apache.pdfbox.cos.COSNumber) $r9
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r22 = (org.apache.pdfbox.cos.COSNumber) $r9 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i8 = virtualinvoke r2.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i8 = virtualinvoke r2.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i9 = virtualinvoke r21.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i9 = virtualinvoke r21.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : f1 = virtualinvoke r22.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : f1 = virtualinvoke r22.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i10 = i8
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i10 = i8 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i10 > i9
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i10 > i9 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths>
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i10 > i9 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i3 >= i0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i10 = i10 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i10 = i10 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i10 > i9
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r19 = (org.apache.pdfbox.cos.COSArray) r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i5 = virtualinvoke r2.<org.apache.pdfbox.cos.COSNumber: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i5 = virtualinvoke r2.<org.apache.pdfbox.cos.COSNumber: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i6 = virtualinvoke r19.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i6 = virtualinvoke r19.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i7 = 0
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i7 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i7 >= i6
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i7 >= i6 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r14 = virtualinvoke r19.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i7)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i7 >= i6 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r14 = virtualinvoke r19.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i7) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r20 = (org.apache.pdfbox.cos.COSNumber) $r14
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : r20 = (org.apache.pdfbox.cos.COSNumber) $r14 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths>
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map widths> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $i2 = i5 + i7
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $i2 = i5 + i7 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $f0 = virtualinvoke r20.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $f0 = virtualinvoke r20.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17)
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i7 = i7 + 1
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : i7 = i7 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.readWidths : if i7 >= i6
