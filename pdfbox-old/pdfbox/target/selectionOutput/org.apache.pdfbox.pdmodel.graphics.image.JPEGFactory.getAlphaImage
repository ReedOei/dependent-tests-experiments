org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $r3 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $z0 = virtualinvoke $r3.<java.awt.image.ColorModel: boolean hasAlpha()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $z0 = virtualinvoke $r3.<java.awt.image.ColorModel: boolean hasAlpha()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : if $z0 != 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : return null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getTransparency()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getTransparency()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : if $i0 != 2
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : if $i0 != 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $r5 = new java.lang.UnsupportedOperationException
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : if $i0 != 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : r1 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getAlphaRaster()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : r1 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getAlphaRaster()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : if r1 != null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : return null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : if r1 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $r4 = new java.awt.image.BufferedImage
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $r4 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $i2 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $i2 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i2, 10)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : specialinvoke $r4.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i2, 10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : virtualinvoke $r4.<java.awt.image.BufferedImage: void setData(java.awt.image.Raster)>(r1)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : virtualinvoke $r4.<java.awt.image.BufferedImage: void setData(java.awt.image.Raster)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : return $r4
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : $r5 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("BITMASK Transparency JPEG compression is not useful, use LosslessImageFactory instead")
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("BITMASK Transparency JPEG compression is not useful, use LosslessImageFactory instead") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.getAlphaImage : throw $r5
