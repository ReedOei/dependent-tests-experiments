org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.color.PDICCBased: org.apache.pdfbox.pdmodel.common.PDStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE>
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RANGE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r5 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r4)
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r5 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : r1 = (org.apache.pdfbox.cos.COSArray) $r5
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : r1 = (org.apache.pdfbox.cos.COSArray) $r5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : if r1 == null
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $i1 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r6 = new org.apache.pdfbox.pdmodel.common.PDRange
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r6 = new org.apache.pdfbox.pdmodel.common.PDRange >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : specialinvoke $r6.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : specialinvoke $r6.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : return $r6
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $i1 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDICCBased: int getNumberOfComponents()>()
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDICCBased: int getNumberOfComponents()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $i3 = $i2 * 2
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $i3 = $i2 * 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : if $i1 >= $i3
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : if $i1 >= $i3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r6 = new org.apache.pdfbox.pdmodel.common.PDRange
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : if $i1 >= $i3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r7 = new org.apache.pdfbox.pdmodel.common.PDRange
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : $r7 = new org.apache.pdfbox.pdmodel.common.PDRange >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : specialinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>(r1, i0)
org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : specialinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>(r1, i0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getRangeForComponent : return $r7
