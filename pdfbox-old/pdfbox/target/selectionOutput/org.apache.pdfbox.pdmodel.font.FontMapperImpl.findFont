org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : return null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r2 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r5 = r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontProvider fontProvider>
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r5 = r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontProvider fontProvider> >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if $r5 != null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if $r5 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontProvider getProvider()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if $r5 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r20 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, r2)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r20 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r20 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r20 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r18 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r20 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("-", "")
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("-", "") >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r21 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, $r6)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r21 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, $r6) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r21 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r21 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r17 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r21 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r7 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: java.util.List getSubstitutes(java.lang.String)>(r2)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r7 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: java.util.List getSubstitutes(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if $z0 == 0
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(",", "-")
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(",", "-") >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r23 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, $r8)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r23 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, $r8) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r23 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r23 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r14 = virtualinvoke r23.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r23 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r9 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Regular")
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Regular") >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r24 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, $r12)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r24 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, $r12) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r24 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r24 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r13 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r24 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : return null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r13 = virtualinvoke r24.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : return $r13
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r14 = virtualinvoke r23.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : return $r14
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r4 = (java.lang.String) $r15
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r4 = (java.lang.String) $r15 >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r22 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, r4)
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r22 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r22 == null
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r22 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r16 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : if r22 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r16 = virtualinvoke r22.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : return $r16
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r17 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : return $r17
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : $r18 = virtualinvoke r20.<org.apache.pdfbox.pdmodel.font.FontInfo: org.apache.fontbox.FontBoxFont getFont()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : return $r18
org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontProvider getProvider()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FontMapperImpl.findFont : r20 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.FontMapperImpl: org.apache.pdfbox.pdmodel.font.FontInfo getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)>(r1, r2)
