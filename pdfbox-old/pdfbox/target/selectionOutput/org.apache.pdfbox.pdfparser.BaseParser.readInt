org.apache.pdfbox.pdfparser.BaseParser.readInt : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : r1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: java.lang.StringBuilder readStringNumber()>()
org.apache.pdfbox.pdfparser.BaseParser.readInt : r1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: java.lang.StringBuilder readStringNumber()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readInt : r1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: java.lang.StringBuilder readStringNumber()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r4 := @caughtexception
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r7 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset ISO_8859_1>
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r7 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset ISO_8859_1> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r8 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r7)
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r8 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r7) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(byte[])>($r8)
org.apache.pdfbox.pdfparser.BaseParser.readInt : interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(byte[])>($r8) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r9 = new java.io.IOException
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r9 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r10 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.BaseParser.readInt : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Expected an integer type at offset ")
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Expected an integer type at offset ") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r12 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r12 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $l0 = interfaceinvoke $r12.<org.apache.pdfbox.pdfparser.SequentialSource: long getPosition()>()
org.apache.pdfbox.pdfparser.BaseParser.readInt : $l0 = interfaceinvoke $r12.<org.apache.pdfbox.pdfparser.SequentialSource: long getPosition()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r4)
org.apache.pdfbox.pdfparser.BaseParser.readInt : specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r4) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : throw $r9
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3)
org.apache.pdfbox.pdfparser.BaseParser.readInt : $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r4 := @caughtexception
org.apache.pdfbox.pdfparser.BaseParser.readInt : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : goto [?= return i1]
org.apache.pdfbox.pdfparser.BaseParser.readInt : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : $r4 := @caughtexception
org.apache.pdfbox.pdfparser.BaseParser.readInt : goto [?= return i1] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readInt : return i1
