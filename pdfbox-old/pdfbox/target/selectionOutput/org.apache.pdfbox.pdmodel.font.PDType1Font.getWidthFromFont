org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String codeToName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $z0 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: boolean isEmbedded>
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $z0 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: boolean isEmbedded> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(".notdef")
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : f0 = interfaceinvoke $r3.<org.apache.fontbox.FontBoxFont: float getWidth(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : f0 = interfaceinvoke $r3.<org.apache.fontbox.FontBoxFont: float getWidth(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $r4 = new java.awt.geom.Point2D$Float
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $r4 = new java.awt.geom.Point2D$Float >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : specialinvoke $r4.<java.awt.geom.Point2D$Float: void <init>(float,float)>(f0, 0.0F)
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : specialinvoke $r4.<java.awt.geom.Point2D$Float: void <init>(float,float)>(f0, 0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.awt.geom.AffineTransform fontMatrixTransform>
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $r5 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.awt.geom.AffineTransform fontMatrixTransform> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : virtualinvoke $r5.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r4, $r4)
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : virtualinvoke $r5.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r4, $r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $d0 = virtualinvoke $r4.<java.awt.geom.Point2D: double getX()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $d0 = virtualinvoke $r4.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $f1 = (float) $d0
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $f1 = (float) $d0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : return $f1
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(".notdef") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : return 250.0F
org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont>
