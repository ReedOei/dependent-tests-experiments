org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: java.util.List getFilters()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r5 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r5 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: byte[] rawData>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: byte[] rawData> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r19 = $r5
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r19 = $r5 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r7 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r7 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: byte[] rawData>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r8 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: byte[] rawData> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $i0 = lengthof $r8
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $i0 = lengthof $r8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>(int)>($i0)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>(int)>($i0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : i2 = 0
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $i1 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $i1 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if i2 >= $i1
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if i2 >= $i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : virtualinvoke $r7.<java.io.ByteArrayOutputStream: void reset()>()
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if i2 >= $i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r9 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r9 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r10 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r10 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r10)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : return $r9
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : virtualinvoke $r7.<java.io.ByteArrayOutputStream: void reset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r11 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r11 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r11)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : goto [?= $r9 = new java.io.ByteArrayInputStream]
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r12 = <org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.FilterFactory INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r12 = <org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.FilterFactory INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r14 = (java.lang.String) $r13
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r14 = (java.lang.String) $r13 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r4 = virtualinvoke $r12.<org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.Filter getFilter(java.lang.String)>($r14)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r4 = virtualinvoke $r12.<org.apache.pdfbox.filter.FilterFactory: org.apache.pdfbox.filter.Filter getFilter(java.lang.String)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r15 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: org.apache.pdfbox.cos.COSDictionary parameters>
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r15 = r0.<org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage: org.apache.pdfbox.cos.COSDictionary parameters> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : virtualinvoke r4.<org.apache.pdfbox.filter.Filter: org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>(r19, $r7, $r15, i2)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : virtualinvoke r4.<org.apache.pdfbox.filter.Filter: org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>(r19, $r7, $r15, i2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r17 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r17 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r18 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r18 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r18)
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r18) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r19 = $r17
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : r19 = $r17 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : i2 = i2 + 1
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : goto [?= $i1 = interfaceinvoke r2.<java.util.List: int size()>()]
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : goto [?= $i1 = interfaceinvoke r2.<java.util.List: int size()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $i1 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : goto [?= $r9 = new java.io.ByteArrayInputStream] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage.createInputStream : $r9 = new java.io.ByteArrayInputStream
