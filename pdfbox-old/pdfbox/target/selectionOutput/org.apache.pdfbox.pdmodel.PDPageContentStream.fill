org.apache.pdfbox.pdmodel.PDPageContentStream.fill : if i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPageContentStream: void fill()>()
org.apache.pdfbox.pdmodel.PDPageContentStream.fill : if i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : if i0 != 0
org.apache.pdfbox.pdmodel.PDPageContentStream.fill : if i0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPageContentStream: void fillEvenOdd()>()
org.apache.pdfbox.pdmodel.PDPageContentStream.fill : if i0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : $r1 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.PDPageContentStream.fill : $r1 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Error: unknown value for winding rule")
org.apache.pdfbox.pdmodel.PDPageContentStream.fill : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Error: unknown value for winding rule") >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : throw $r1
org.apache.pdfbox.pdmodel.PDPageContentStream.fill : virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPageContentStream: void fillEvenOdd()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : goto [?= return]
org.apache.pdfbox.pdmodel.PDPageContentStream.fill : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : return
org.apache.pdfbox.pdmodel.PDPageContentStream.fill : virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPageContentStream: void fill()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : goto [?= return]
org.apache.pdfbox.pdmodel.PDPageContentStream.fill : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.PDPageContentStream.fill : return
