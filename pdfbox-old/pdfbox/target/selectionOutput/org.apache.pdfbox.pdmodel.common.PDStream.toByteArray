org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r3 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = null
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r5 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r6.<java.io.InputStream: void close()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : throw $r5
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r6.<java.io.InputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : throw $r5
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r6, $r3)
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r5 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r6, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r6 == null
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r6, $r3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r5 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r6.<java.io.InputStream: void close()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : if r6 == null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : return $r4
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : virtualinvoke r6.<java.io.InputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()]
org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : goto [?= $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.toByteArray : $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
