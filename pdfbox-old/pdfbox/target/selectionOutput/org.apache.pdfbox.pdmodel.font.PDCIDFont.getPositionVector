org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: int codeToCID(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map positionVectors>
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: java.util.Map positionVectors> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2)
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : r4 = (org.apache.pdfbox.util.Vector) $r3
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : r4 = (org.apache.pdfbox.util.Vector) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : if r4 != null
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : if r4 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.util.Vector getDefaultPositionVector(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : if r4 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : return r4
org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFont: org.apache.pdfbox.util.Vector getDefaultPositionVector(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFont.getPositionVector : return r4
