org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r5 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r6 = staticinvoke <org.apache.pdfbox.io.IOUtils: byte[] toByteArray(java.io.InputStream)>(r1)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r6 = staticinvoke <org.apache.pdfbox.io.IOUtils: byte[] toByteArray(java.io.InputStream)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : r3 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: java.awt.image.BufferedImage readJPEG(java.io.InputStream)>($r5)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : r3 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: java.awt.image.BufferedImage readJPEG(java.io.InputStream)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : virtualinvoke $r5.<java.io.ByteArrayInputStream: void reset()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : virtualinvoke $r5.<java.io.ByteArrayInputStream: void reset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r7 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r7 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DCT_DECODE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DCT_DECODE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $i0 = virtualinvoke r3.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $i0 = virtualinvoke r3.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $i1 = virtualinvoke r3.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $i1 = virtualinvoke r3.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r9 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r9 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $i2 = virtualinvoke $r9.<java.awt.image.ColorModel: int getComponentSize(int)>(0)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $i2 = virtualinvoke $r9.<java.awt.image.ColorModel: int getComponentSize(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r10 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpaceFromAWT(java.awt.image.BufferedImage)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r10 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpaceFromAWT(java.awt.image.BufferedImage)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : specialinvoke $r7.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, $r5, $r8, $i0, $i1, $i2, $r10)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : specialinvoke $r7.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, $r5, $r8, $i0, $i1, $i2, $r10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r11 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r11 = virtualinvoke r3.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $z0 = virtualinvoke $r11.<java.awt.image.ColorModel: boolean hasAlpha()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $z0 = virtualinvoke $r11.<java.awt.image.ColorModel: boolean hasAlpha()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r12 = new java.lang.UnsupportedOperationException
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : return $r7
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : $r12 = new java.lang.UnsupportedOperationException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("alpha channel not implemented")
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("alpha channel not implemented") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createFromStream : throw $r12
