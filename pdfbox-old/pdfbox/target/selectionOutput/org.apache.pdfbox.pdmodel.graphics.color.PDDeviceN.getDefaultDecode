org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN: int getNumberOfComponents()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : $i2 = i1 * 2
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : $i2 = i1 * 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : r1 = newarray (float)[$i2]
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : r1 = newarray (float)[$i2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : i5 = 0
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : i5 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : if i5 >= i1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : if i5 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : $i3 = i5 * 2
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : if i5 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : return r1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : $i3 = i5 * 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : $i4 = $i3 + 1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : $i4 = $i3 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : r1[$i4] = 1.0F
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : r1[$i4] = 1.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : i5 = i5 + 1
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : i5 = i5 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.getDefaultDecode : if i5 >= i1
