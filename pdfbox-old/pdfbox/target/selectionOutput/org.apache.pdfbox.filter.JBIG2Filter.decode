org.apache.pdfbox.filter.JBIG2Filter.decode : r4 = staticinvoke <org.apache.pdfbox.filter.JBIG2Filter: javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)>("JBIG2", "jbig2-imageio is not installed") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r9 = new org.apache.pdfbox.filter.DecodeResult
org.apache.pdfbox.filter.JBIG2Filter.decode : $r9 = new org.apache.pdfbox.filter.DecodeResult >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r10 = new org.apache.pdfbox.cos.COSDictionary
org.apache.pdfbox.filter.JBIG2Filter.decode : $r10 = new org.apache.pdfbox.cos.COSDictionary >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: void <init>()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r9.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r10)
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r9.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r10) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r11 = virtualinvoke $r9.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r11 = virtualinvoke $r9.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke $r11.<org.apache.pdfbox.cos.COSDictionary: void addAll(org.apache.pdfbox.cos.COSDictionary)>(r3)
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke $r11.<org.apache.pdfbox.cos.COSDictionary: void addAll(org.apache.pdfbox.cos.COSDictionary)>(r3) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT>
org.apache.pdfbox.filter.JBIG2Filter.decode : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : i1 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r12, 1)
org.apache.pdfbox.filter.JBIG2Filter.decode : i1 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r12, 1) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r6 = virtualinvoke r0.<org.apache.pdfbox.filter.JBIG2Filter: org.apache.pdfbox.cos.COSDictionary getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)>(r3, i0)
org.apache.pdfbox.filter.JBIG2Filter.decode : r6 = virtualinvoke r0.<org.apache.pdfbox.filter.JBIG2Filter: org.apache.pdfbox.cos.COSDictionary getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)>(r3, i0) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r33 = null
org.apache.pdfbox.filter.JBIG2Filter.decode : r33 = null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if r6 == null
org.apache.pdfbox.filter.JBIG2Filter.decode : if r6 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName JBIG2_GLOBALS>
org.apache.pdfbox.filter.JBIG2Filter.decode : if r6 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = null
org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if r33 == null
org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if r34 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r34.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if r34 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r30
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r34.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if r33 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r26 = new java.io.SequenceInputStream
org.apache.pdfbox.filter.JBIG2Filter.decode : if r33 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1)
org.apache.pdfbox.filter.JBIG2Filter.decode : if r33 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r34)
org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r34) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r31 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r34) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r34) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r13 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r13 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r31 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r13 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r13 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r35 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, $r13)
org.apache.pdfbox.filter.JBIG2Filter.decode : r35 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, $r13) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r31 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r35 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, $r13) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r35 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int,javax.imageio.ImageReadParam)>(0, $r13) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r14 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()]
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r14 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r14 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r14 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r14 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $i2 = virtualinvoke $r14.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r14 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i2 = virtualinvoke $r14.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if $i2 == i1
org.apache.pdfbox.filter.JBIG2Filter.decode : $i2 = virtualinvoke $r14.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i2 == i1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if i1 == 1
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i2 == i1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r38 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i2 == i1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r38 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r39 = virtualinvoke $r38.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r38 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r39 = virtualinvoke $r38.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $i5 = virtualinvoke r39.<java.awt.image.DataBuffer: int getDataType()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : r39 = virtualinvoke $r38.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i5 = virtualinvoke r39.<java.awt.image.DataBuffer: int getDataType()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if $i5 != 0
org.apache.pdfbox.filter.JBIG2Filter.decode : $i5 = virtualinvoke r39.<java.awt.image.DataBuffer: int getDataType()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i5 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r16 = (java.awt.image.DataBufferByte) r39
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i5 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r15 = new java.io.IOException
org.apache.pdfbox.filter.JBIG2Filter.decode : if $i5 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r15 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Unexpected image buffer type")
org.apache.pdfbox.filter.JBIG2Filter.decode : $r15 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Unexpected image buffer type") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r15
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Unexpected image buffer type") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r15 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r16 = (java.awt.image.DataBufferByte) r39 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r17 = virtualinvoke $r16.<java.awt.image.DataBufferByte: byte[] getData()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r16 = (java.awt.image.DataBufferByte) r39 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r17 = virtualinvoke $r16.<java.awt.image.DataBufferByte: byte[] getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r17)
org.apache.pdfbox.filter.JBIG2Filter.decode : $r17 = virtualinvoke $r16.<java.awt.image.DataBufferByte: byte[] getData()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r17) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r17) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if r34 == null
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : if r34 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r34.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if r34 == null >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>]
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>
org.apache.pdfbox.filter.JBIG2Filter.decode : $r18 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $z0 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r18)
org.apache.pdfbox.filter.JBIG2Filter.decode : $z0 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r18) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : if $z0 != 0
org.apache.pdfbox.filter.JBIG2Filter.decode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r20 = virtualinvoke $r9.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r19 = new org.apache.pdfbox.filter.DecodeResult
org.apache.pdfbox.filter.JBIG2Filter.decode : $r19 = new org.apache.pdfbox.filter.DecodeResult >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r19.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r3)
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r19.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r3) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : return $r19
org.apache.pdfbox.filter.JBIG2Filter.decode : $r20 = virtualinvoke $r9.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>
org.apache.pdfbox.filter.JBIG2Filter.decode : $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DEVICEGRAY>
org.apache.pdfbox.filter.JBIG2Filter.decode : $r21 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DEVICEGRAY> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r23 = virtualinvoke $r21.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r23 = virtualinvoke $r21.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke $r20.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r22, $r23)
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke $r20.<org.apache.pdfbox.cos.COSDictionary: void setName(org.apache.pdfbox.cos.COSName,java.lang.String)>($r22, $r23) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r19 = new org.apache.pdfbox.filter.DecodeResult
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke r34.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : if i1 == 1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r25 = <org.apache.pdfbox.filter.JBIG2Filter: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.filter.JBIG2Filter.decode : if i1 == 1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r24 = new java.awt.image.BufferedImage
org.apache.pdfbox.filter.JBIG2Filter.decode : if i1 == 1 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r24 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $i3 = virtualinvoke r35.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r24 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i3 = virtualinvoke r35.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $i4 = virtualinvoke r35.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $i3 = virtualinvoke r35.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $i4 = virtualinvoke r35.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r24.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i4, 12)
org.apache.pdfbox.filter.JBIG2Filter.decode : $i4 = virtualinvoke r35.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r24.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i4, 12) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r7 = virtualinvoke $r24.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r24.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i4, 12) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r7 = virtualinvoke $r24.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r7.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r35, 0, 0, null)
org.apache.pdfbox.filter.JBIG2Filter.decode : r7 = virtualinvoke $r24.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r7.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r35, 0, 0, null) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r7.<java.awt.Graphics: void dispose()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r7.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r35, 0, 0, null) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r7.<java.awt.Graphics: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r35 = $r24
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r7.<java.awt.Graphics: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r35 = $r24 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r38 = virtualinvoke r35.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : r35 = $r24 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r25 = <org.apache.pdfbox.filter.JBIG2Filter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke $r25.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Attempting to handle a JBIG2 with more than 1-bit depth")
org.apache.pdfbox.filter.JBIG2Filter.decode : $r25 = <org.apache.pdfbox.filter.JBIG2Filter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke $r25.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Attempting to handle a JBIG2 with more than 1-bit depth") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r24 = new java.awt.image.BufferedImage
org.apache.pdfbox.filter.JBIG2Filter.decode : interfaceinvoke $r25.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Attempting to handle a JBIG2 with more than 1-bit depth") >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r32 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JBIG2 image", $r31)
org.apache.pdfbox.filter.JBIG2Filter.decode : $r32 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JBIG2 image", $r31) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r32
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JBIG2 image", $r31) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : throw $r32 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r26 = new java.io.SequenceInputStream >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r27 = virtualinvoke r33.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r26 = new java.io.SequenceInputStream >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : $r27 = virtualinvoke r33.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r26.<java.io.SequenceInputStream: void <init>(java.io.InputStream,java.io.InputStream)>($r27, r1)
org.apache.pdfbox.filter.JBIG2Filter.decode : $r27 = virtualinvoke r33.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r26.<java.io.SequenceInputStream: void <init>(java.io.InputStream,java.io.InputStream)>($r27, r1) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>($r26)
org.apache.pdfbox.filter.JBIG2Filter.decode : specialinvoke $r26.<java.io.SequenceInputStream: void <init>(java.io.InputStream,java.io.InputStream)>($r27, r1) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>($r26) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r34)
org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>($r26) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r34) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r13 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>()]
org.apache.pdfbox.filter.JBIG2Filter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r34) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r13 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r31 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r13 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r30 := @caughtexception
org.apache.pdfbox.filter.JBIG2Filter.decode : goto [?= $r13 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>()] >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r13 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.ImageReadParam getDefaultReadParam()>()
org.apache.pdfbox.filter.JBIG2Filter.decode : $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName JBIG2_GLOBALS> >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : $r29 = virtualinvoke r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r28)
org.apache.pdfbox.filter.JBIG2Filter.decode : $r29 = virtualinvoke r6.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r28) >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r33 = (org.apache.pdfbox.cos.COSStream) $r29
org.apache.pdfbox.filter.JBIG2Filter.decode : r33 = (org.apache.pdfbox.cos.COSStream) $r29 >>>>>>>> org.apache.pdfbox.filter.JBIG2Filter.decode : r34 = null
