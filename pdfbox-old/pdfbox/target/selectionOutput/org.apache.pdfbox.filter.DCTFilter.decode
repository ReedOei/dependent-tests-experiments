org.apache.pdfbox.filter.DCTFilter.decode : r4 = staticinvoke <org.apache.pdfbox.filter.DCTFilter: javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)>("JPEG", "a suitable JAI I/O image filter is not installed") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r23 = null
org.apache.pdfbox.filter.DCTFilter.decode : r23 = null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r23 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1)
org.apache.pdfbox.filter.DCTFilter.decode : r23 = null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if r23 == null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.DCTFilter.decode : if r23 == null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : throw $r12
org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.DCTFilter.decode : r23 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $i2 = interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: int read()>()
org.apache.pdfbox.filter.DCTFilter.decode : r23 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $i2 = interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: int read()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : if $i2 == 10
org.apache.pdfbox.filter.DCTFilter.decode : $i2 = interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: int read()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if $i2 == 10 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: void seek(long)>(0L)
org.apache.pdfbox.filter.DCTFilter.decode : if $i2 == 10 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r23)
org.apache.pdfbox.filter.DCTFilter.decode : if $i2 == 10 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r23) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r5 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.lang.String getNumChannels(javax.imageio.ImageReader)>(r4)
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r23) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r5 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.lang.String getNumChannels(javax.imageio.ImageReader)>(r4) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : staticinvoke <javax.imageio.ImageIO: void setUseCache(boolean)>(0)
org.apache.pdfbox.filter.DCTFilter.decode : r5 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.lang.String getNumChannels(javax.imageio.ImageReader)>(r4) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : staticinvoke <javax.imageio.ImageIO: void setUseCache(boolean)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r7 = "3"
org.apache.pdfbox.filter.DCTFilter.decode : staticinvoke <javax.imageio.ImageIO: void setUseCache(boolean)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r7 = "3" >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r5)
org.apache.pdfbox.filter.DCTFilter.decode : $r7 = "3" >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r5) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : if $z0 != 0
org.apache.pdfbox.filter.DCTFilter.decode : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r5) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $z1 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>()
org.apache.pdfbox.filter.DCTFilter.decode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r24 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0)
org.apache.pdfbox.filter.DCTFilter.decode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r22 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r25 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.Raster readRaster(int,javax.imageio.ImageReadParam)>(0, null) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()]
org.apache.pdfbox.filter.DCTFilter.decode : r25 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.Raster readRaster(int,javax.imageio.ImageReadParam)>(0, null) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : if $i4 != 4
org.apache.pdfbox.filter.DCTFilter.decode : $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if $i4 != 4 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r9 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(0)
org.apache.pdfbox.filter.DCTFilter.decode : if $i4 != 4 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $i3 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()
org.apache.pdfbox.filter.DCTFilter.decode : if $i4 != 4 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r13 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if $i4 != 4 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r14 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r14 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r14 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r14 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r29 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("colorSpaceCode")
org.apache.pdfbox.filter.DCTFilter.decode : r29 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("colorSpaceCode") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r29 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("colorSpaceCode") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r29 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("colorSpaceCode") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r29 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("colorSpaceCode") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r29.<java.lang.reflect.Field: void setAccessible(boolean)>(1)
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r29.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r29.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r29.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r29.<java.lang.reflect.Field: void setAccessible(boolean)>(1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : i1 = virtualinvoke r29.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r4)
org.apache.pdfbox.filter.DCTFilter.decode : i1 = virtualinvoke r29.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : i1 = virtualinvoke r29.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : i1 = virtualinvoke r29.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : i1 = virtualinvoke r29.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r4) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : tableswitch(i1) {     case 4:
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch(i1) {     case 4: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch(i1) {     case 4: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r15 = new java.io.IOException
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch(i1) {     case 4: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch(i1) {     case 4: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch(i1) {     case 4: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch(i1) {     case 4: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : throw $r13 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : throw $r13 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : if r27 == null
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if r27 == null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $i5 = virtualinvoke r27.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.filter.DCTFilter.decode : if r27 == null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $i5 = 0
org.apache.pdfbox.filter.DCTFilter.decode : if r27 == null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $i5 = 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : tableswitch($i5) {     case 0:
org.apache.pdfbox.filter.DCTFilter.decode : $i5 = 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch($i5) {     case 0: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch($i5) {     case 0: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r10 = <org.apache.pdfbox.filter.DCTFilter: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch($i5) {     case 0: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r25 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.awt.image.WritableRaster fromYCCKtoCMYK(java.awt.image.Raster)>(r25)
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch($i5) {     case 0: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r11 = new java.lang.IllegalArgumentException
org.apache.pdfbox.filter.DCTFilter.decode : tableswitch($i5) {     case 0: >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r11 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown colorTransform")
org.apache.pdfbox.filter.DCTFilter.decode : $r11 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown colorTransform") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : throw $r11
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown colorTransform") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : throw $r11 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r25 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.awt.image.WritableRaster fromYCCKtoCMYK(java.awt.image.Raster)>(r25) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.DCTFilter.decode : r25 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.awt.image.WritableRaster fromYCCKtoCMYK(java.awt.image.Raster)>(r25) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r33 = (java.awt.image.DataBufferByte) $r32
org.apache.pdfbox.filter.DCTFilter.decode : $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r33 = (java.awt.image.DataBufferByte) $r32 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r34 = virtualinvoke r33.<java.awt.image.DataBufferByte: byte[] getData()>()
org.apache.pdfbox.filter.DCTFilter.decode : r33 = (java.awt.image.DataBufferByte) $r32 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r34 = virtualinvoke r33.<java.awt.image.DataBufferByte: byte[] getData()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r34)
org.apache.pdfbox.filter.DCTFilter.decode : $r34 = virtualinvoke r33.<java.awt.image.DataBufferByte: byte[] getData()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r34) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : if r23 == null
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r34) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if r23 == null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.DCTFilter.decode : if r23 == null >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $r8 = new org.apache.pdfbox.filter.DecodeResult]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $r8 = new org.apache.pdfbox.filter.DecodeResult] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r8 = new org.apache.pdfbox.filter.DecodeResult
org.apache.pdfbox.filter.DCTFilter.decode : $r8 = new org.apache.pdfbox.filter.DecodeResult >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r8.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r3)
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r8.<org.apache.pdfbox.filter.DecodeResult: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r3) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : return $r8
org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.DCTFilter.decode : $r10 = <org.apache.pdfbox.filter.DCTFilter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke $r10.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("YCbCr JPEGs not implemented")
org.apache.pdfbox.filter.DCTFilter.decode : $r10 = <org.apache.pdfbox.filter.DCTFilter: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke $r10.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("YCbCr JPEGs not implemented") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke $r10.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("YCbCr JPEGs not implemented") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $i5 = virtualinvoke r27.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.DCTFilter.decode : $i5 = virtualinvoke r27.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : tableswitch($i5) {     case 0:
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r15 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r16 = new java.lang.StringBuilder
org.apache.pdfbox.filter.DCTFilter.decode : $r15 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected color space: ")
org.apache.pdfbox.filter.DCTFilter.decode : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected color space: ") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected color space: ") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected color space: ") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected color space: ") >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
org.apache.pdfbox.filter.DCTFilter.decode : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.filter.DCTFilter.decode : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r19)
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : throw $r15
org.apache.pdfbox.filter.DCTFilter.decode : throw $r15 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r20 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r21 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $i3 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : if $i3 != 3
org.apache.pdfbox.filter.DCTFilter.decode : $i3 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if $i3 != 3 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r25 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.awt.image.WritableRaster fromBGRtoRGB(java.awt.image.Raster)>(r25)
org.apache.pdfbox.filter.DCTFilter.decode : if $i3 != 3 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.filter.DCTFilter.decode : if $i3 != 3 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r25 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.awt.image.WritableRaster fromBGRtoRGB(java.awt.image.Raster)>(r25) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r32 = virtualinvoke r25.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>()
org.apache.pdfbox.filter.DCTFilter.decode : r25 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.awt.image.WritableRaster fromBGRtoRGB(java.awt.image.Raster)>(r25) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r9 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r13 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r9 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $r9 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r27 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.lang.Integer getAdobeTransform(javax.imageio.metadata.IIOMetadata)>($r9)
org.apache.pdfbox.filter.DCTFilter.decode : r27 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.lang.Integer getAdobeTransform(javax.imageio.metadata.IIOMetadata)>($r9) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r13 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.lang.Integer getAdobeTransform(javax.imageio.metadata.IIOMetadata)>($r9) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r27 = specialinvoke r0.<org.apache.pdfbox.filter.DCTFilter: java.lang.Integer getAdobeTransform(javax.imageio.metadata.IIOMetadata)>($r9) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : if r27 == null
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r24 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r22 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r24 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r24 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r25 = virtualinvoke r24.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>()
org.apache.pdfbox.filter.DCTFilter.decode : r25 = virtualinvoke r24.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r22 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r25 = virtualinvoke r24.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r25 = virtualinvoke r24.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()]
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()
org.apache.pdfbox.filter.DCTFilter.decode : goto [?= $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()] >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : $z1 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : if $z1 == 0
org.apache.pdfbox.filter.DCTFilter.decode : $z1 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if $z1 == 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r24 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0)
org.apache.pdfbox.filter.DCTFilter.decode : if $z1 == 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : r25 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.Raster readRaster(int,javax.imageio.ImageReadParam)>(0, null)
org.apache.pdfbox.filter.DCTFilter.decode : if $z1 == 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r22 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : if $z1 == 0 >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : r25 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.Raster readRaster(int,javax.imageio.ImageReadParam)>(0, null) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $i4 = virtualinvoke r25.<java.awt.image.Raster: int getNumBands()>()
org.apache.pdfbox.filter.DCTFilter.decode : r25 = virtualinvoke r4.<javax.imageio.ImageReader: java.awt.image.Raster readRaster(int,javax.imageio.ImageReadParam)>(0, null) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: void seek(long)>(0L) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object)>(r23)
org.apache.pdfbox.filter.DCTFilter.decode : interfaceinvoke r23.<javax.imageio.stream.ImageInputStream: void seek(long)>(0L) >>>>>>>> org.apache.pdfbox.filter.DCTFilter.decode : $r12 := @caughtexception
