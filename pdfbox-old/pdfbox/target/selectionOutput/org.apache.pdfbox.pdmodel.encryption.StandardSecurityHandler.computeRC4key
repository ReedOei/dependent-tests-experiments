org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r2 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getMD5()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] truncateOrPad(byte[])>(r1)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : $r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] truncateOrPad(byte[])>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r4 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r4 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 == 3
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 == 3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 != 4
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 == 3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : i2 = 0
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i2 >= 50
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i2 >= 50 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : virtualinvoke r2.<java.security.MessageDigest: void update(byte[],int,int)>(r4, 0, i1)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i2 >= 50 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r5 = newarray (byte)[i1]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r5 = newarray (byte)[i1] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, 0, i1)
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, 0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : return r5
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : virtualinvoke r2.<java.security.MessageDigest: void update(byte[],int,int)>(r4, 0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r4 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r4 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : i2 = i2 + 1
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : goto [?= (branch)]
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i2 >= 50
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 != 4 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : i2 = 0
org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : if i0 != 4 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler.computeRC4key : r5 = newarray (byte)[i1]
