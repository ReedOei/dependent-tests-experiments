org.apache.pdfbox.cos.COSStream.getLength : $z0 = r0.<org.apache.pdfbox.cos.COSStream: boolean isWriting> >>>>>>>> org.apache.pdfbox.cos.COSStream.getLength : if $z0 == 0
org.apache.pdfbox.cos.COSStream.getLength : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getLength : $r2 = new java.lang.IllegalStateException
org.apache.pdfbox.cos.COSStream.getLength : if $z0 == 0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getLength : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LENGTH>
org.apache.pdfbox.cos.COSStream.getLength : $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LENGTH> >>>>>>>> org.apache.pdfbox.cos.COSStream.getLength : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: int getInt(org.apache.pdfbox.cos.COSName,int)>($r1, 0)
org.apache.pdfbox.cos.COSStream.getLength : $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: int getInt(org.apache.pdfbox.cos.COSName,int)>($r1, 0) >>>>>>>> org.apache.pdfbox.cos.COSStream.getLength : $l1 = (long) $i0
org.apache.pdfbox.cos.COSStream.getLength : $l1 = (long) $i0 >>>>>>>> org.apache.pdfbox.cos.COSStream.getLength : return $l1
org.apache.pdfbox.cos.COSStream.getLength : $r2 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.cos.COSStream.getLength : specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("There is an open OutputStream associated with this COSStream. It must be closed before queryinglength of this COSStream.")
org.apache.pdfbox.cos.COSStream.getLength : specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("There is an open OutputStream associated with this COSStream. It must be closed before queryinglength of this COSStream.") >>>>>>>> org.apache.pdfbox.cos.COSStream.getLength : throw $r2
