org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r1 = new org.apache.pdfbox.cos.COSFloat >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write ")
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write ") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception: ")
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception: ") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r20 = virtualinvoke $r15.<java.io.IOException: java.lang.String getMessage()>()
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r20 = virtualinvoke $r15.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : staticinvoke <junit.framework.TestCase: void fail(java.lang.String)>($r22)
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : staticinvoke <junit.framework.TestCase: void fail(java.lang.String)>($r22) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : return
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.pdfwriter.COSWriter visitor>
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : specialinvoke $r1.<org.apache.pdfbox.cos.COSFloat: void <init>(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.pdfwriter.COSWriter visitor> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>($r2)
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.pdfwriter.COSWriter visitor> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>($r2) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r4 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.cos.TestCOSFloat this$0>
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)>($r2) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r4 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $f1 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: float floatValue()>()
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r4 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $f1 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r5 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r4, $f1)
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $f1 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSFloat: float floatValue()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r5 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r4, $f1) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r6 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: java.io.ByteArrayOutputStream outStream>
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r5 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r4, $f1) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r6 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r7 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1")
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r6 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r7 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>($r5, $r7)
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r7 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>($r5, $r7) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r9 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.cos.TestCOSFloat this$0>
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>($r5, $r7) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r9 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r8 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.cos.TestCOSFloat this$0>
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r8 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r10 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r8, f0)
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r8 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: org.apache.pdfbox.cos.TestCOSFloat this$0> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r10 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r8, f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1")
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r10 = staticinvoke <org.apache.pdfbox.cos.TestCOSFloat: java.lang.String access$000(org.apache.pdfbox.cos.TestCOSFloat,float)>($r8, f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r12 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: java.io.ByteArrayOutputStream outStream>
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r12 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r13 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r12 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r13 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : virtualinvoke $r9.<org.apache.pdfbox.cos.TestCOSFloat: void testByteArrays(byte[],byte[])>($r11, $r13)
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r13 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : virtualinvoke $r9.<org.apache.pdfbox.cos.TestCOSFloat: void testByteArrays(byte[],byte[])>($r11, $r13) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r14 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: java.io.ByteArrayOutputStream outStream>
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : virtualinvoke $r9.<org.apache.pdfbox.cos.TestCOSFloat: void testByteArrays(byte[],byte[])>($r11, $r13) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r14 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : virtualinvoke $r14.<java.io.ByteArrayOutputStream: void reset()>()
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r14 = r0.<org.apache.pdfbox.cos.TestCOSFloat$AcceptTester: java.io.ByteArrayOutputStream outStream> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : virtualinvoke $r14.<java.io.ByteArrayOutputStream: void reset()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : goto [?= return]
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : virtualinvoke $r14.<java.io.ByteArrayOutputStream: void reset()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : $r15 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : goto [?= return] >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$AcceptTester.runTest : return
