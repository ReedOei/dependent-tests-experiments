org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : $z1 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: boolean useAES> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : if $z1 == 0
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : $r4 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: byte[] encryptionKey>
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: byte[] calcFinalKey(long,long)>(l0, l1)
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: byte[] calcFinalKey(long,long)>(l0, l1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : $z2 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: boolean useAES>
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : $z2 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: boolean useAES> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : if $z2 == 0
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: void encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)>(r3, r1, r2, z0)
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: void encryptDataRC4(byte[],java.io.InputStream,java.io.OutputStream)>(r3, r1, r2)
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : virtualinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: void encryptDataRC4(byte[],java.io.InputStream,java.io.OutputStream)>(r3, r1, r2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : virtualinvoke r2.<java.io.OutputStream: void flush()>()
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : virtualinvoke r2.<java.io.OutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : return
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: void encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)>(r3, r1, r2, z0) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : goto [?= virtualinvoke r2.<java.io.OutputStream: void flush()>()]
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : goto [?= virtualinvoke r2.<java.io.OutputStream: void flush()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : virtualinvoke r2.<java.io.OutputStream: void flush()>()
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : $r4 = r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: byte[] encryptionKey> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : $i2 = lengthof $r4
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : $i2 = lengthof $r4 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : if $i2 != 32
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : if $i2 != 32 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: void encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)>(r1, r2, z0)
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : if $i2 != 32 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : r3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: byte[] calcFinalKey(long,long)>(l0, l1)
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: void encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)>(r1, r2, z0) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : goto [?= virtualinvoke r2.<java.io.OutputStream: void flush()>()]
org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : goto [?= virtualinvoke r2.<java.io.OutputStream: void flush()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.SecurityHandler.encryptData : virtualinvoke r2.<java.io.OutputStream: void flush()>()
