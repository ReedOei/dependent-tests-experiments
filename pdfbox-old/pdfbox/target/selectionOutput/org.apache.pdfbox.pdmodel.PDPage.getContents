org.apache.pdfbox.pdmodel.PDPage.getContents : $r7 = r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary page> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>
org.apache.pdfbox.pdmodel.PDPage.getContents : $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS> >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : r1 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6)
org.apache.pdfbox.pdmodel.PDPage.getContents : r1 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $z0 = r1 instanceof org.apache.pdfbox.cos.COSStream
org.apache.pdfbox.pdmodel.PDPage.getContents : $z0 = r1 instanceof org.apache.pdfbox.cos.COSStream >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : if $z0 == 0
org.apache.pdfbox.pdmodel.PDPage.getContents : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r18 = (org.apache.pdfbox.cos.COSStream) r1
org.apache.pdfbox.pdmodel.PDPage.getContents : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray
org.apache.pdfbox.pdmodel.PDPage.getContents : $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : if $z1 == 0
org.apache.pdfbox.pdmodel.PDPage.getContents : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r10 = (org.apache.pdfbox.cos.COSArray) r1
org.apache.pdfbox.pdmodel.PDPage.getContents : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r8 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.PDPage.getContents : $r8 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r9 = newarray (byte)[0]
org.apache.pdfbox.pdmodel.PDPage.getContents : $r9 = newarray (byte)[0] >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9)
org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : return $r8
org.apache.pdfbox.pdmodel.PDPage.getContents : $r10 = (org.apache.pdfbox.cos.COSArray) r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $i0 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.PDPage.getContents : $i0 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : if $i0 <= 0
org.apache.pdfbox.pdmodel.PDPage.getContents : if $i0 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : r2 = (org.apache.pdfbox.cos.COSArray) r1
org.apache.pdfbox.pdmodel.PDPage.getContents : if $i0 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r8 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.PDPage.getContents : r2 = (org.apache.pdfbox.cos.COSArray) r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r11 = newarray (byte)[1]
org.apache.pdfbox.pdmodel.PDPage.getContents : $r11 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r11[0] = 10
org.apache.pdfbox.pdmodel.PDPage.getContents : $r11[0] = 10 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r12 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.PDPage.getContents : $r12 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : i2 = 0
org.apache.pdfbox.pdmodel.PDPage.getContents : i2 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $i1 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.PDPage.getContents : $i1 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : if i2 >= $i1
org.apache.pdfbox.pdmodel.PDPage.getContents : if i2 >= $i1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r15 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i2)
org.apache.pdfbox.pdmodel.PDPage.getContents : if i2 >= $i1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r13 = new java.io.SequenceInputStream
org.apache.pdfbox.pdmodel.PDPage.getContents : $r13 = new java.io.SequenceInputStream >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r14 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r12)
org.apache.pdfbox.pdmodel.PDPage.getContents : $r14 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r12) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r13.<java.io.SequenceInputStream: void <init>(java.util.Enumeration)>($r14)
org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r13.<java.io.SequenceInputStream: void <init>(java.util.Enumeration)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : return $r13
org.apache.pdfbox.pdmodel.PDPage.getContents : $r15 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i2) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : r5 = (org.apache.pdfbox.cos.COSStream) $r15
org.apache.pdfbox.pdmodel.PDPage.getContents : r5 = (org.apache.pdfbox.cos.COSStream) $r15 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r16 = virtualinvoke r5.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>()
org.apache.pdfbox.pdmodel.PDPage.getContents : $r16 = virtualinvoke r5.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r16)
org.apache.pdfbox.pdmodel.PDPage.getContents : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r17 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.PDPage.getContents : $r17 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11)
org.apache.pdfbox.pdmodel.PDPage.getContents : specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r17)
org.apache.pdfbox.pdmodel.PDPage.getContents : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : i2 = i2 + 1
org.apache.pdfbox.pdmodel.PDPage.getContents : i2 = i2 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : goto [?= $i1 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>()]
org.apache.pdfbox.pdmodel.PDPage.getContents : goto [?= $i1 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>()] >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $i1 = virtualinvoke r2.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.PDPage.getContents : $r18 = (org.apache.pdfbox.cos.COSStream) r1 >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : $r19 = virtualinvoke $r18.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>()
org.apache.pdfbox.pdmodel.PDPage.getContents : $r19 = virtualinvoke $r18.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.PDPage.getContents : return $r19
