org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.lang.String toUnicode(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if r1 == null
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : return r1
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $z0 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isCMapPredefined>
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $z0 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isCMapPredefined> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $z4 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isDescendantCJK>
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMapUCS2>
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMapUCS2> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $r2 == null
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: int codeToCID(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r3 = <org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r3 = <org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $z1 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isWarnEnabled()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $z1 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isWarnEnabled()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.util.Set noUnicode>
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : return null
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.util.Set noUnicode> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $z2 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $z2 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z2 != 0
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r6 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : return null
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CID+")
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CID+") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: int codeToCID(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: int codeToCID(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : r23 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : r23 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r10 = <org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r10 = <org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r9 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Unicode mapping for ")
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Unicode mapping for ") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (")
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in font ")
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in font ") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : interfaceinvoke $r10.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r18)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : interfaceinvoke $r10.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r18) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.util.Set noUnicode>
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r19 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: java.util.Set noUnicode> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>($r20)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : return null
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: int codeToCID(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r21 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMapUCS2>
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r21 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMapUCS2> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r22 = virtualinvoke $r21.<org.apache.fontbox.cmap.CMap: java.lang.String toUnicode(int)>(i2)
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r22 = virtualinvoke $r21.<org.apache.fontbox.cmap.CMap: java.lang.String toUnicode(int)>(i2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : return $r22
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $z4 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: boolean isDescendantCJK> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z4 == 0
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.fontbox.cmap.CMap cMapUCS2>
org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType0Font.toUnicode : $r3 = <org.apache.pdfbox.pdmodel.font.PDType0Font: org.apache.commons.logging.Log LOG>
