org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b1 = l0 cmp 0L >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r7 = new java.io.IOException
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b1 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l3 cmp $l2
org.apache.pdfbox.io.RandomAccessBuffer.seek : $b4 = $l3 cmp $l2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l14 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : if $b4 >= 0 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i5
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i6 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i6)
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i6) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r3 = (byte[]) $r2
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r3 = (byte[]) $r2 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l8 = (long) $i7
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l8 = (long) $i7 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l10 = $l9 % $l8
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l10 = $l9 % $l8 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i11 = (int) $l10
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i11 = (int) $l10 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i11
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i11 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : return
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l14 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l13 = (long) $i12
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l13 = (long) $i12 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l15 = $l14 / $l13
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l15 = $l14 / $l13 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i16 = (int) $l15
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i16 = (int) $l15 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i16
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i16 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l19 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l19 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i17 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i17 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int chunkSize> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l18 = (long) $i17
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l18 = (long) $i17 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $l20 = $l19 % $l18
org.apache.pdfbox.io.RandomAccessBuffer.seek : $l20 = $l19 % $l18 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i21 = (int) $l20
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i21 = (int) $l20 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i21
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: int currentBufferPointer> = $i21 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.List bufferList> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $i22 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>
org.apache.pdfbox.io.RandomAccessBuffer.seek : $i22 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i22)
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i22) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r6 = (byte[]) $r5
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r6 = (byte[]) $r5 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r6
org.apache.pdfbox.io.RandomAccessBuffer.seek : r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r6 >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : goto [?= return]
org.apache.pdfbox.io.RandomAccessBuffer.seek : goto [?= return] >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : return
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r7 = new java.io.IOException >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r8 = new java.lang.StringBuilder
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid position ")
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid position ") >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.io.RandomAccessBuffer.seek : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r11)
org.apache.pdfbox.io.RandomAccessBuffer.seek : specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r11) >>>>>>>> org.apache.pdfbox.io.RandomAccessBuffer.seek : throw $r7
