org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: boolean flushed> = 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $r1 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] indata>
org.apache.pdfbox.filter.ASCII85OutputStream.write : $r1 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] indata> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $i1 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count>
org.apache.pdfbox.filter.ASCII85OutputStream.write : $i1 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $i2 = $i1 + 1
org.apache.pdfbox.filter.ASCII85OutputStream.write : $i2 = $i1 + 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> = $i2
org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> = $i2 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $b3 = (byte) i0
org.apache.pdfbox.filter.ASCII85OutputStream.write : $b3 = (byte) i0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $r1[$i1] = $b3
org.apache.pdfbox.filter.ASCII85OutputStream.write : $r1[$i1] = $b3 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $i4 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count>
org.apache.pdfbox.filter.ASCII85OutputStream.write : $i4 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : if $i4 >= 4
org.apache.pdfbox.filter.ASCII85OutputStream.write : if $i4 >= 4 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : return
org.apache.pdfbox.filter.ASCII85OutputStream.write : if $i4 >= 4 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : specialinvoke r0.<org.apache.pdfbox.filter.ASCII85OutputStream: void transformASCII85()>()
org.apache.pdfbox.filter.ASCII85OutputStream.write : specialinvoke r0.<org.apache.pdfbox.filter.ASCII85OutputStream: void transformASCII85()>() >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : i10 = 0
org.apache.pdfbox.filter.ASCII85OutputStream.write : i10 = 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : if i10 >= 5
org.apache.pdfbox.filter.ASCII85OutputStream.write : if i10 >= 5 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $r2 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata>
org.apache.pdfbox.filter.ASCII85OutputStream.write : if i10 >= 5 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> = 0
org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> = 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : return
org.apache.pdfbox.filter.ASCII85OutputStream.write : $r2 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $b5 = $r2[i10]
org.apache.pdfbox.filter.ASCII85OutputStream.write : $b5 = $r2[i10] >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : if $b5 != 0
org.apache.pdfbox.filter.ASCII85OutputStream.write : if $b5 != 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : goto [?= r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> = 0]
org.apache.pdfbox.filter.ASCII85OutputStream.write : if $b5 != 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $r4 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out>
org.apache.pdfbox.filter.ASCII85OutputStream.write : $r4 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $r3 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata>
org.apache.pdfbox.filter.ASCII85OutputStream.write : $r3 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: byte[] outdata> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $b6 = $r3[i10]
org.apache.pdfbox.filter.ASCII85OutputStream.write : $b6 = $r3[i10] >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : virtualinvoke $r4.<java.io.OutputStream: void write(int)>($b6)
org.apache.pdfbox.filter.ASCII85OutputStream.write : virtualinvoke $r4.<java.io.OutputStream: void write(int)>($b6) >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $i7 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak>
org.apache.pdfbox.filter.ASCII85OutputStream.write : $i7 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $i8 = $i7 - 1
org.apache.pdfbox.filter.ASCII85OutputStream.write : $i8 = $i7 - 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i8
org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i8 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : if $i8 != 0
org.apache.pdfbox.filter.ASCII85OutputStream.write : if $i8 != 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $r5 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out>
org.apache.pdfbox.filter.ASCII85OutputStream.write : if $i8 != 0 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : i10 = i10 + 1
org.apache.pdfbox.filter.ASCII85OutputStream.write : i10 = i10 + 1 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : goto [?= (branch)]
org.apache.pdfbox.filter.ASCII85OutputStream.write : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : if i10 >= 5
org.apache.pdfbox.filter.ASCII85OutputStream.write : $r5 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: java.io.OutputStream out> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(10)
org.apache.pdfbox.filter.ASCII85OutputStream.write : virtualinvoke $r5.<java.io.OutputStream: void write(int)>(10) >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : $i9 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int maxline>
org.apache.pdfbox.filter.ASCII85OutputStream.write : $i9 = r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int maxline> >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i9
org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int lineBreak> = $i9 >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : i10 = i10 + 1
org.apache.pdfbox.filter.ASCII85OutputStream.write : goto [?= r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> = 0] >>>>>>>> org.apache.pdfbox.filter.ASCII85OutputStream.write : r0.<org.apache.pdfbox.filter.ASCII85OutputStream: int count> = 0
