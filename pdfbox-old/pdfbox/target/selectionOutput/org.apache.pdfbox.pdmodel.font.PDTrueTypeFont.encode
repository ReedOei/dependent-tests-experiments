org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r1 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $r1 == null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r18 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r42 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r42 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z0 = virtualinvoke $r3.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r42)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z0 = virtualinvoke $r3.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r42) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r13 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : i5 = virtualinvoke $r4.<org.apache.fontbox.ttf.TrueTypeFont: int nameToGID(java.lang.String)>(r42)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : i5 = virtualinvoke $r4.<org.apache.fontbox.ttf.TrueTypeFont: int nameToGID(java.lang.String)>(r42) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map getGIDToCode()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.util.Map getGIDToCode()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r43 = (java.lang.Integer) $r7
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r43 = (java.lang.Integer) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if r43 != null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if r43 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r9 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if r43 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r8 = newarray (byte)[1]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r8 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $i1 = virtualinvoke r43.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $i1 = virtualinvoke r43.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $b2 = (byte) $i1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $b2 = (byte) $i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r8[0] = $b2
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r8[0] = $b2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : return $r8
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r9 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r10 = newarray (java.lang.Object)[1]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r10 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r10[0] = $r11
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r10[0] = $r11 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X is not available in this font\'s Encoding", $r10)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X is not available in this font\'s Encoding", $r10) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : throw $r9
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r13 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r14 = newarray (java.lang.Object)[2]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r14 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r14[0] = $r15
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r14[0] = $r15 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r14[1] = $r16
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r14[1] = $r16 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r14)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r14) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : throw $r13
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r18 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r20 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r20 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z1 = virtualinvoke $r18.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>($r20)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z1 = virtualinvoke $r18.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z1 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r33 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r21 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r21 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r39 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r39 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r22 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r22 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r40 = virtualinvoke $r22.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getNameToCodeMap()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r40 = virtualinvoke $r22.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getNameToCodeMap()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r23 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r23 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z2 = virtualinvoke $r23.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r39)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z2 = virtualinvoke $r23.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r39) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z2 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r41 = staticinvoke <org.apache.pdfbox.pdmodel.font.UniUtil: java.lang.String getUniNameOfCodePoint(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r24 = interfaceinvoke r40.<java.util.Map: java.lang.Object get(java.lang.Object)>(r39)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r24 = interfaceinvoke r40.<java.util.Map: java.lang.Object get(java.lang.Object)>(r39) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r25 = (java.lang.Integer) $r24
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r25 = (java.lang.Integer) $r24 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : i4 = virtualinvoke $r25.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : i4 = virtualinvoke $r25.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r26 = newarray (byte)[1]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r26 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $b3 = (byte) i4
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $b3 = (byte) i4 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r26[0] = $b3
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r26[0] = $b3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : return $r26
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : r41 = staticinvoke <org.apache.pdfbox.pdmodel.font.UniUtil: java.lang.String getUniNameOfCodePoint(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z3 = virtualinvoke $r27.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r41)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $z3 = virtualinvoke $r27.<org.apache.fontbox.ttf.TrueTypeFont: boolean hasGlyph(java.lang.String)>(r41) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z3 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r28 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r24 = interfaceinvoke r40.<java.util.Map: java.lang.Object get(java.lang.Object)>(r39)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r28 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r29 = newarray (java.lang.Object)[2]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r29 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r29[0] = $r30
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r29[0] = $r30 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r31 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r31 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r29[1] = $r31
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r29[1] = $r31 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r29)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r29) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : throw $r28
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r33 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r34 = newarray (java.lang.Object)[2]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r34 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r34[0] = $r35
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r34[0] = $r35 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r36 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r36 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r37 = virtualinvoke $r36.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r37 = virtualinvoke $r36.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r34[1] = $r37
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r34[1] = $r37 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X is not available in this font\'s encoding: %s", $r34)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X is not available in this font\'s encoding: %s", $r34) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.encode : throw $r33
