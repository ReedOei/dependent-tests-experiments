org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.afm.FontMetrics getStandard14AFM()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $r4 == null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r13 = new org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $r4 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.Boolean getSymbolicFlag()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.Boolean getSymbolicFlag()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $r5 == null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.Boolean getSymbolicFlag()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $r5 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r1 = staticinvoke <org.apache.pdfbox.pdmodel.font.Standard14Fonts: java.lang.String getMappedFontName(java.lang.String)>($r6)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r1 = staticinvoke <org.apache.pdfbox.pdmodel.font.Standard14Fonts: java.lang.String getMappedFontName(java.lang.String)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: boolean isStandard14()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: boolean isStandard14()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z0 == 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("Symbol")
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r2 = virtualinvoke $r15.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.PostScriptTable getPostScript()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r2 = virtualinvoke $r15.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.PostScriptTable getPostScript()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r16 = new java.util.HashMap
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r16 = new java.util.HashMap >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : specialinvoke $r16.<java.util.HashMap: void <init>()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : specialinvoke $r16.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : i1 = 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : i1 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if i1 > 256
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if i1 > 256 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: int codeToGID(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if i1 > 256 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r7 = new org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r7 = new org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : specialinvoke $r7.<org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding: void <init>(java.util.Map)>($r16)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : specialinvoke $r7.<org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding: void <init>(java.util.Map)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : return $r7
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: int codeToGID(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if i0 <= 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if i0 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r17 = null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if i0 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : i1 = i1 + 1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : i1 = i1 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if i1 > 256
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r17 = null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if r2 == null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r17 = virtualinvoke r2.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String getName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if r17 != null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if r17 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if r17 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r17)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r17) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : i1 = i1 + 1
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : r17 = virtualinvoke r2.<org.apache.fontbox.ttf.PostScriptTable: java.lang.String getName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if r17 != null
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("Symbol") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z1 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ZapfDingbats")
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ZapfDingbats") >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z2 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r10 = <org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding: org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding INSTANCE>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.ttf.TrueTypeFont ttf>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r10 = <org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding: org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : return $r10
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.Boolean getSymbolicFlag()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $z3 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $z3 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z3 != 0
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r12 = <org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding: org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding INSTANCE>
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r12 = <org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding: org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : return $r12
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r13 = new org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.afm.FontMetrics getStandard14AFM()>()
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.fontbox.afm.FontMetrics getStandard14AFM()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : specialinvoke $r13.<org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding: void <init>(org.apache.fontbox.afm.FontMetrics)>($r14)
org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : specialinvoke $r13.<org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding: void <init>(org.apache.fontbox.afm.FontMetrics)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.readEncodingFromFont : return $r13
