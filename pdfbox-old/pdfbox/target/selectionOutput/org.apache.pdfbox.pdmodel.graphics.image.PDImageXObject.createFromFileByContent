org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r31 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r32 = null
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r32 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r2 = new java.io.FileInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r32 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>(r31) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>(r32)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>(r32) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : throw $r23
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r2 = new java.io.FileInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r24 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r2 = new java.io.FileInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r2 = new java.io.FileInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r24 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r31 = $r2
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r31 = $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r3 = new java.io.BufferedInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r31 = $r2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r3 = new java.io.BufferedInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r24 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r3 = new java.io.BufferedInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r3 = new java.io.BufferedInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r24 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r32 = $r3
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r32 = $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r24 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r32 = $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r32 = $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r33 = staticinvoke <org.apache.pdfbox.util.filetypedetector.FileTypeDetector: org.apache.pdfbox.util.filetypedetector.FileType detectFileType(java.io.BufferedInputStream)>($r3)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r33 = staticinvoke <org.apache.pdfbox.util.filetypedetector.FileTypeDetector: org.apache.pdfbox.util.filetypedetector.FileType detectFileType(java.io.BufferedInputStream)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r24 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r33 = staticinvoke <org.apache.pdfbox.util.filetypedetector.FileTypeDetector: org.apache.pdfbox.util.filetypedetector.FileType detectFileType(java.io.BufferedInputStream)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r33 = staticinvoke <org.apache.pdfbox.util.filetypedetector.FileTypeDetector: org.apache.pdfbox.util.filetypedetector.FileType detectFileType(java.io.BufferedInputStream)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>($r2)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>($r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>($r3)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if r33 != null
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if r33 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r17 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if r33 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r4 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType JPEG>
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r4 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType JPEG> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z0 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r4)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z0 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r16 = new java.io.FileInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r5 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType TIFF>
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r5 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType TIFF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z1 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r5)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z1 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r15 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)>(r1, r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r6 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType BMP>
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r6 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType BMP> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z2 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r6)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z2 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z2 != 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r7 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType GIF>
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r38 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r38 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r39 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)>(r1, r38)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r39 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)>(r1, r38) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : return $r39
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r7 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType GIF> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z3 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r7)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z3 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z3 != 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r8 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType PNG>
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r38 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r8 = <org.apache.pdfbox.util.filetypedetector.FileType: org.apache.pdfbox.util.filetypedetector.FileType PNG> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z4 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r8)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $z4 = virtualinvoke r33.<org.apache.pdfbox.util.filetypedetector.FileType: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z4 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r38 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : if $z4 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r9 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r9 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r10 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image type not supported: ")
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image type not supported: ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r12 = virtualinvoke r0.<java.io.File: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r12 = virtualinvoke r0.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : throw $r9
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r15 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)>(r1, r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : return $r15
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r16 = new java.io.FileInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r16.<java.io.FileInputStream: void <init>(java.io.File)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r16.<java.io.FileInputStream: void <init>(java.io.File)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r37 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)>(r1, $r16)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : r37 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)>(r1, $r16) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : virtualinvoke $r16.<java.io.FileInputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : virtualinvoke $r16.<java.io.FileInputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : return r37
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r17 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r18 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image type not supported: ")
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image type not supported: ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r20 = virtualinvoke r0.<java.io.File: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r20 = virtualinvoke r0.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : throw $r17
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r25 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r26 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r25 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not determine file type: ")
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not determine file type: ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r28 = virtualinvoke r0.<java.io.File: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not determine file type: ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r28 = virtualinvoke r0.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r28 = virtualinvoke r0.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r24)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r24) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : throw $r25
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r24) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : throw $r25 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByContent : $r23 := @caughtexception
