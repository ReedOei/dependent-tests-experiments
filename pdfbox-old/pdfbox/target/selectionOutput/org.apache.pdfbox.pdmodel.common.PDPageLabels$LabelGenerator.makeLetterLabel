org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i4 = i0 / 26
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i4 = i0 / 26 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i3 = i0 % 26
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i3 = i0 % 26 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i5 = staticinvoke <java.lang.Integer: int signum(int)>($i3)
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i5 = staticinvoke <java.lang.Integer: int signum(int)>($i3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : i1 = $i4 + $i5
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : i1 = $i4 + $i5 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i7 = i0 % 26
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i7 = i0 % 26 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i6 = i0 % 26
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i6 = i0 % 26 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i8 = staticinvoke <java.lang.Integer: int signum(int)>($i6)
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i8 = staticinvoke <java.lang.Integer: int signum(int)>($i6) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i9 = 1 - $i8
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i9 = 1 - $i8 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i10 = 26 * $i9
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i10 = 26 * $i9 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i11 = $i7 + $i10
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i11 = $i7 + $i10 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i12 = $i11 + 97
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $i12 = $i11 + 97 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : i2 = $i12 - 1
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : i2 = $i12 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : i13 = 0
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : i13 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : if i13 >= i1
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : if i13 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i2)
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : if i13 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : return $r2
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i2) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : i13 = i13 + 1
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : i13 = i13 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : goto [?= (branch)]
org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator.makeLetterLabel : if i13 >= i1
