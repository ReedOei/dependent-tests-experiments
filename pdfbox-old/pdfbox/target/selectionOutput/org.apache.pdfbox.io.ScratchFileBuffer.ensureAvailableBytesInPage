org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i0 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i1 < $i0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i1 < $i0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $z1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i1 < $i0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $z1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $z1 == 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $z1 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $z1 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i4 = $i2 + 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i4 = $i2 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i3 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageCount> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i4 >= $i3
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i4 >= $i3 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if $i4 >= $i3 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if z0 == 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void addPage()>()
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : if z0 == 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : specialinvoke r0.<org.apache.pdfbox.io.ScratchFileBuffer: void addPage()>() >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : goto [?= return 1]
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : goto [?= return 1] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r1 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i6 = $i5 + 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i6 = $i5 + 1 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i6
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> = $i6 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i7 = $r2[$i6]
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i7 = $r2[$i6] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r3 = virtualinvoke $r1.<org.apache.pdfbox.io.ScratchFile: byte[] readPage(int)>($i7)
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r3 = virtualinvoke $r1.<org.apache.pdfbox.io.ScratchFile: byte[] readPage(int)>($i7) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r3
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> = $r3 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i8 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l11 = (long) $i8
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l11 = (long) $i8 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i9 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int pageSize> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l10 = (long) $i9
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l10 = (long) $i9 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l12 = $l11 * $l10
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $l12 = $l11 * $l10 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l12
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: long currentPageOffset> = $l12 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: int positionInPage> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : goto [?= return 1]
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : goto [?= return 1] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : return 1
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r6 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: org.apache.pdfbox.io.ScratchFile pageHandler> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r4 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int[] pageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i13 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i14 = $r4[$i13]
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i14 = $r4[$i13] >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage>
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $r5 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: byte[] currentPage> >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : virtualinvoke $r6.<org.apache.pdfbox.io.ScratchFile: void writePage(int,byte[])>($i14, $r5)
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : virtualinvoke $r6.<org.apache.pdfbox.io.ScratchFile: void writePage(int,byte[])>($i14, $r5) >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 0
org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : r0.<org.apache.pdfbox.io.ScratchFileBuffer: boolean currentPageContentChanged> = 0 >>>>>>>> org.apache.pdfbox.io.ScratchFileBuffer.ensureAvailableBytesInPage : $i2 = r0.<org.apache.pdfbox.io.ScratchFileBuffer: int currentPagePositionInPageIndexes>
