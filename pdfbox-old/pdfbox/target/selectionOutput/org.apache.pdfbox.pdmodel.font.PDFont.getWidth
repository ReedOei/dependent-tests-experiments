org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r28 = (java.lang.Float) $r4
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r28 = (java.lang.Float) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r28 == null
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r28 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f7 = virtualinvoke r28.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r28 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTHS>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTHS> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z0 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r5)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z0 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r5) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIRST_CHAR>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FIRST_CHAR> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i1 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r7, -1)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i1 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r7, -1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r10 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAST_CHAR>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LAST_CHAR> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i2 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r9, -1)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i2 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r9, -1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.List getWidths()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.List getWidths()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i3 = interfaceinvoke $r11.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i3 = interfaceinvoke $r11.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i4 = i0 - i1
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : i4 = i0 - i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i3 <= 0
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i3 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 < i1
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i3 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r1 == null
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean hasMissingWidth()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isStandard14()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isStandard14()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z3 == 0
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: float getStandard14Width(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: float getWidthFromFont(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: float getWidthFromFont(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r32 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r32 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r32)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r32) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f1 = virtualinvoke r32.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f1 = virtualinvoke r32.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f1
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: float getStandard14Width(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r31 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r31 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r31)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r31) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f3 = virtualinvoke r31.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f3 = virtualinvoke r31.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f3
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: boolean hasMissingWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getMissingWidth()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isStandard14()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: float getMissingWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r30 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r30 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r18 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r18 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r30)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r30) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f5 = virtualinvoke r30.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f5 = virtualinvoke r30.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f5
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 < i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 > i2
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 < i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 > i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i4 >= i3
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i0 > i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i4 >= i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r21 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.List getWidths()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if i4 >= i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r21 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.List getWidths()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i4)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r29 = (java.lang.Float) $r22
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r29 = (java.lang.Float) $r22 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r29 != null
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r29 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r29 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if r29 != null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r23 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r23 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, r29)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, r29) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f6 = virtualinvoke r29.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f6 = virtualinvoke r29.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f6
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : r29 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r23 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: java.util.Map codeToWidthMap>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r26 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MISSING_WIDTH>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r26 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MISSING_WIDTH> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z2 = virtualinvoke $r27.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r26)
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z2 = virtualinvoke $r27.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r26) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z2 == 0
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $r8 = r0.<org.apache.pdfbox.pdmodel.font.PDFont: org.apache.pdfbox.cos.COSDictionary dict>
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $z3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDFont: boolean isStandard14()>()
org.apache.pdfbox.pdmodel.font.PDFont.getWidth : $f7 = virtualinvoke r28.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDFont.getWidth : return $f7
