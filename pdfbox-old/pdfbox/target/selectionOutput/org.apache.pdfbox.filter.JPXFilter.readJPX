org.apache.pdfbox.filter.JPXFilter.readJPX : r3 = staticinvoke <org.apache.pdfbox.filter.JPXFilter: javax.imageio.ImageReader findImageReader(java.lang.String,java.lang.String)>("JPEG2000", "Java Advanced Imaging (JAI) Image I/O Tools are not installed") >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r21 = null
org.apache.pdfbox.filter.JPXFilter.readJPX : r21 = null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r21 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1)
org.apache.pdfbox.filter.JPXFilter.readJPX : r21 = null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : if r21 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r21.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : if r21 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : throw $r18
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r21.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : r21 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>(r21, 1, 1)
org.apache.pdfbox.filter.JPXFilter.readJPX : r21 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>(r21, 1, 1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r19 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>(r21, 1, 1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean,boolean)>(r21, 1, 1) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r4 = virtualinvoke r3.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0)
org.apache.pdfbox.filter.JPXFilter.readJPX : r4 = virtualinvoke r3.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r19 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r4 = virtualinvoke r3.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r4 = virtualinvoke r3.<javax.imageio.ImageReader: java.awt.image.BufferedImage read(int)>(0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= r23 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()]
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= r23 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : r23 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : goto [?= r23 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>()] >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : r23 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r7 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : r23 = virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: org.apache.pdfbox.cos.COSDictionary getParameters()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r7 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $i1 = virtualinvoke $r7.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r7 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $i1 = virtualinvoke $r7.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r8 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $i1 = virtualinvoke $r7.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r8 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $i2 = virtualinvoke $r8.<java.awt.image.WritableRaster: int getNumBands()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r8 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $i2 = virtualinvoke $r8.<java.awt.image.WritableRaster: int getNumBands()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : i0 = $i1 / $i2
org.apache.pdfbox.filter.JPXFilter.readJPX : $i2 = virtualinvoke $r8.<java.awt.image.WritableRaster: int getNumBands()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : i0 = $i1 / $i2 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT>
org.apache.pdfbox.filter.JPXFilter.readJPX : i0 = $i1 / $i2 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r9, i0)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_COMPONENT> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r9, i0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE_MASK>
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r9, i0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE_MASK> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $z0 = virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: boolean getBoolean(org.apache.pdfbox.cos.COSName,boolean)>($r10, 0)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE_MASK> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $z0 = virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: boolean getBoolean(org.apache.pdfbox.cos.COSName,boolean)>($r10, 0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if $z0 != 0
org.apache.pdfbox.filter.JPXFilter.readJPX : $z0 = virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: boolean getBoolean(org.apache.pdfbox.cos.COSName,boolean)>($r10, 0) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r17 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE>
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH>
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z0 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $i3 = virtualinvoke r4.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $i3 = virtualinvoke r4.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r11, $i3)
org.apache.pdfbox.filter.JPXFilter.readJPX : $i3 = virtualinvoke r4.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r11, $i3) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName HEIGHT>
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r11, $i3) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName HEIGHT> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $i4 = virtualinvoke r4.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName HEIGHT> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $i4 = virtualinvoke r4.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r12, $i4)
org.apache.pdfbox.filter.JPXFilter.readJPX : $i4 = virtualinvoke r4.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r12, $i4) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE>
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r12, $i4) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $z1 = virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r13)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLORSPACE> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $z1 = virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r13) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if $z1 != 0
org.apache.pdfbox.filter.JPXFilter.readJPX : $z1 = virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: boolean containsKey(org.apache.pdfbox.cos.COSName)>($r13) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z1 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r14 = new org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z1 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if r21 == null
org.apache.pdfbox.filter.JPXFilter.readJPX : if $z1 != 0 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : if r21 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r21.<javax.imageio.stream.ImageInputStream: void close()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : if r21 == null >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : return r4
org.apache.pdfbox.filter.JPXFilter.readJPX : interfaceinvoke r21.<javax.imageio.stream.ImageInputStream: void close()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r3.<javax.imageio.ImageReader: void dispose()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r14 = new org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r15 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r14 = new org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r15 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r16 = virtualinvoke $r15.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>()
org.apache.pdfbox.filter.JPXFilter.readJPX : $r15 = virtualinvoke r4.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r16 = virtualinvoke $r15.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r14.<org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace: void <init>(java.awt.color.ColorSpace)>($r16)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r16 = virtualinvoke $r15.<java.awt.image.ColorModel: java.awt.color.ColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r14.<org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace: void <init>(java.awt.color.ColorSpace)>($r16) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)>($r14)
org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r14.<org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace: void <init>(java.awt.color.ColorSpace)>($r16) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)>($r14) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : if r21 == null
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r2.<org.apache.pdfbox.filter.DecodeResult: void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)>($r14) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r17 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r17, null)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r17 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE> >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r17, null) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName WIDTH>
org.apache.pdfbox.filter.JPXFilter.readJPX : virtualinvoke r23.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r17, null) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : $r20 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JPEG 2000 (JPX) image", $r19)
org.apache.pdfbox.filter.JPXFilter.readJPX : $r20 = new java.io.IOException >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JPEG 2000 (JPX) image", $r19) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : throw $r20
org.apache.pdfbox.filter.JPXFilter.readJPX : specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read JPEG 2000 (JPX) image", $r19) >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
org.apache.pdfbox.filter.JPXFilter.readJPX : throw $r20 >>>>>>>> org.apache.pdfbox.filter.JPXFilter.readJPX : $r18 := @caughtexception
