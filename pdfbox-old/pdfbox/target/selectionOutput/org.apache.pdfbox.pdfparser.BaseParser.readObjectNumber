org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : l0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: long readLong()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $b1 = l0 cmp 0L
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $b1 = l0 cmp 0L >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : if $b1 < 0
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : if $b1 < 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $b2 = l0 cmp 10000000000L
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : if $b1 < 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r1 = new java.io.IOException
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r1 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object Number \'")
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object Number \'") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has more than 10 digits or is negative")
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has more than 10 digits or is negative") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r6)
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : throw $r1
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $b2 = l0 cmp 10000000000L >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : if $b2 < 0
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : if $b2 < 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : $r1 = new java.io.IOException
org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : if $b2 < 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readObjectNumber : return l0
