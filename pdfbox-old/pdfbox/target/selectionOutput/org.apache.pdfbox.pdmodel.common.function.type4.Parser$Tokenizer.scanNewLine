org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $z0 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean $assertionsDisabled> >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if $z0 != 0
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer> >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if c0 != 13
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if c0 != 13 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $c2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char peek()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if c0 != 13 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r8 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r8 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler> >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r9 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r9 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer> >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : interfaceinvoke $r8.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler: void newLine(java.lang.CharSequence)>($r9)
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : interfaceinvoke $r8.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler: void newLine(java.lang.CharSequence)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : return
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $c2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char peek()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if $c2 != 10
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if $c2 != 10 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r3 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if $c2 != 10 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r8 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r3 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer> >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $c3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $c3 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3)
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r8 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state> >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r5 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State NEWLINE>
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r5 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State NEWLINE> >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if $r6 == $r5
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if $r6 == $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r7 = new java.lang.AssertionError
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : if $r6 == $r5 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : $r7 = new java.lang.AssertionError >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : specialinvoke $r7.<java.lang.AssertionError: void <init>()>()
org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : specialinvoke $r7.<java.lang.AssertionError: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer.scanNewLine : throw $r7
