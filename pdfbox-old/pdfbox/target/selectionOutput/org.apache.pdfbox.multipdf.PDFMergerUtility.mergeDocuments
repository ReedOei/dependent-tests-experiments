org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r28 = null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r6 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r6 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r6 == null
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r6 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r7 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r6 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : return
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r7 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $i0 = interfaceinvoke $r7.<java.util.List: int size()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $i0 = interfaceinvoke $r7.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $i0 <= 0
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $i0 <= 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r8 = new java.util.ArrayList
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $i0 <= 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : return
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r8 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if r1 == null
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if r28 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r28.<org.apache.pdfbox.pdmodel.PDDocument: void close()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if r28 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r36 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r36 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z5 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z5 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z5 == 0
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z5 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r27 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z5 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r25 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List fileInputStreams>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r25 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List fileInputStreams> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r38 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r38 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z2 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z2 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z2 == 0
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z2 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r26 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z2 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : throw $r24
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r26 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r39 = (java.io.FileInputStream) $r26
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r39 = (java.io.FileInputStream) $r26 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r39.<java.io.FileInputStream: void close()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r39.<java.io.FileInputStream: void close()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z2 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z2 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z2 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r27 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r37 = (org.apache.pdfbox.pdmodel.PDDocument) $r27
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r37 = (org.apache.pdfbox.pdmodel.PDDocument) $r27 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r37.<org.apache.pdfbox.pdmodel.PDDocument: void close()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r37.<org.apache.pdfbox.pdmodel.PDDocument: void close()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z5 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z5 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z5 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r28.<org.apache.pdfbox.pdmodel.PDDocument: void close()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r36 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if r1 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r23 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if r1 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r29 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if r1 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r29 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r30 = $r29
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r29 = staticinvoke <org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting setupMainMemoryOnly()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r30 = $r29 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r9 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r30 = $r29 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r9 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r31 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r9 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r31 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r10 = new org.apache.pdfbox.pdmodel.PDDocument
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r31 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r10 = new org.apache.pdfbox.pdmodel.PDDocument >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : specialinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r29)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r10 = new org.apache.pdfbox.pdmodel.PDDocument >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : specialinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r29) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r28 = $r10
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : specialinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void <init>(org.apache.pdfbox.io.MemoryUsageSetting)>($r29) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r28 = $r10 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r28 = $r10 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z3 == 0
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z3 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r22 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z3 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r11 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.PDDocumentInformation destinationDocumentInformation>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z3 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r11 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.PDDocumentInformation destinationDocumentInformation> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r11 == null
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r11 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.PDDocumentInformation destinationDocumentInformation> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r11 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r21 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.PDDocumentInformation destinationDocumentInformation>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r11 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r12 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.common.PDMetadata destinationMetadata>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r11 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r12 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.common.PDMetadata destinationMetadata> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r12 == null
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r12 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.common.PDMetadata destinationMetadata> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r12 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r19 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r12 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r13 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.io.OutputStream destinationStream>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r12 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r13 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.io.OutputStream destinationStream> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r13 != null
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r13 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.io.OutputStream destinationStream> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r13 != null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r18 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.lang.String destinationFileName>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r13 != null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r14 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.io.OutputStream destinationStream>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r13 != null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r14 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.io.OutputStream destinationStream> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.io.OutputStream)>($r14)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r14 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.io.OutputStream destinationStream> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.io.OutputStream)>($r14) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r10 == null
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.io.OutputStream)>($r14) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r10 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void close()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r10 == null >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r32 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r32 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z4 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z4 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z4 == 0
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z4 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r17 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z4 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r15 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List fileInputStreams>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r15 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List fileInputStreams> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r34 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r34 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z0 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z0 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z0 == 0
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z0 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r16 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $z0 == 0 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= return]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= return] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : return
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r16 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r35 = (java.io.FileInputStream) $r16
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r35 = (java.io.FileInputStream) $r16 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r35.<java.io.FileInputStream: void close()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r35.<java.io.FileInputStream: void close()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z0 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z0 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z0 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r17 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r33 = (org.apache.pdfbox.pdmodel.PDDocument) $r17
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r33 = (org.apache.pdfbox.pdmodel.PDDocument) $r17 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r33.<org.apache.pdfbox.pdmodel.PDDocument: void close()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r33.<org.apache.pdfbox.pdmodel.PDDocument: void close()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z4 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z4 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z4 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void close()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r32 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r18 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.lang.String destinationFileName> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.lang.String)>($r18)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r18 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.lang.String destinationFileName> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.lang.String)>($r18) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= (branch)]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.lang.String)>($r18) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : if $r10 == null
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r19 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r20 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.common.PDMetadata destinationMetadata>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r19 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r20 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.common.PDMetadata destinationMetadata> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r19.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)>($r20)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r20 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.common.PDMetadata destinationMetadata> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r19.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)>($r20) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r13 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.io.OutputStream destinationStream>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r19.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)>($r20) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r21 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.PDDocumentInformation destinationDocumentInformation> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation)>($r21)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r21 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.PDDocumentInformation destinationDocumentInformation> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation)>($r21) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r12 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: org.apache.pdfbox.pdmodel.common.PDMetadata destinationMetadata>
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke $r10.<org.apache.pdfbox.pdmodel.PDDocument: void setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation)>($r21) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r22 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r2 = (java.io.InputStream) $r22
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r22 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r2 = (java.io.InputStream) $r22 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.MemoryUsageSetting)>(r2, r30)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r2 = (java.io.InputStream) $r22 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.MemoryUsageSetting)>(r2, r30) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r3)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.MemoryUsageSetting)>(r2, r30) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)>($r10, r3)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)>($r10, r3) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : virtualinvoke r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)>($r10, r3) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= $z3 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r23 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $i1 = interfaceinvoke $r23.<java.util.List: int size()>()
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r23 = r0.<org.apache.pdfbox.multipdf.PDFMergerUtility: java.util.List sources> >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $i1 = interfaceinvoke $r23.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $i2 = $i1 + 1
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $i1 = interfaceinvoke $r23.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $i2 = $i1 + 1 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r29 = virtualinvoke r1.<org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting getPartitionedCopy(int)>($i2)
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $i2 = $i1 + 1 >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r29 = virtualinvoke r1.<org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting getPartitionedCopy(int)>($i2) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= r30 = $r29]
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r29 = virtualinvoke r1.<org.apache.pdfbox.io.MemoryUsageSetting: org.apache.pdfbox.io.MemoryUsageSetting getPartitionedCopy(int)>($i2) >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= r30 = $r29] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : r30 = $r29
org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : goto [?= r30 = $r29] >>>>>>>> org.apache.pdfbox.multipdf.PDFMergerUtility.mergeDocuments : $r24 := @caughtexception
