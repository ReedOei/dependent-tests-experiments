org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r2 == null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r2 == null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : return r1
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $r3 != null
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $r3 != null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : return r1
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $r3 != null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r18 = null
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r18 = null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LUMINOSITY>
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LUMINOSITY> >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r5 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.cos.COSName getSubType()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r5 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.cos.COSName getSubType()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $z0 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r5)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $z0 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $z0 == 0
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $z0 == 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r19 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.cos.COSArray getBackdropColor()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $z0 == 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r21 = new org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r21 = new org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r22 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r22 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r23 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.util.Matrix getInitialTransformationMatrix()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r23 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.util.Matrix getInitialTransformationMatrix()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r21.<org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup: void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.rendering.PageDrawer$1)>(r0, $r22, 1, $r23, r18, null)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r21.<org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup: void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.rendering.PageDrawer$1)>(r0, $r22, 1, $r23, r18, null) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r25 = virtualinvoke $r21.<org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup: java.awt.image.BufferedImage getImage()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r25 = virtualinvoke $r21.<org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup: java.awt.image.BufferedImage getImage()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r25 != null
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r25 != null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : return r1
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r25 != null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r6 = new java.awt.image.BufferedImage
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r6 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $i0 = virtualinvoke r25.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $i0 = virtualinvoke r25.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $i1 = virtualinvoke r25.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $i1 = virtualinvoke r25.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r6.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 10)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r6.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 10) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ALPHA>
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ALPHA> >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.cos.COSName getSubType()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r8 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.cos.COSName getSubType()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $z1 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r8)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $z1 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $z1 == 0
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $z1 == 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r14 = virtualinvoke r25.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getAlphaRaster()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $z1 == 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LUMINOSITY>
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LUMINOSITY> >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r10 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.cos.COSName getSubType()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r10 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.cos.COSName getSubType()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $z2 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r10)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $z2 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $z2 == 0
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $z2 == 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r27 = virtualinvoke $r6.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if $z2 == 0 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r11 = new java.io.IOException
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r11 = new java.io.IOException >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Invalid soft mask subtype.")
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Invalid soft mask subtype.") >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : throw $r11
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r27 = virtualinvoke $r6.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : virtualinvoke r27.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r25, 0, 0, null)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : virtualinvoke r27.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r25, 0, 0, null) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : virtualinvoke r27.<java.awt.Graphics: void dispose()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : virtualinvoke r27.<java.awt.Graphics: void dispose()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : goto [?= r28 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.image.BufferedImage getRotatedImage(java.awt.image.BufferedImage)>($r6)]
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : goto [?= r28 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.image.BufferedImage getRotatedImage(java.awt.image.BufferedImage)>($r6)] >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r28 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.image.BufferedImage getRotatedImage(java.awt.image.BufferedImage)>($r6)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r28 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.image.BufferedImage getRotatedImage(java.awt.image.BufferedImage)>($r6) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r29 = virtualinvoke $r21.<org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup: java.awt.geom.Rectangle2D getBounds()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r29 = virtualinvoke $r21.<org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup: java.awt.geom.Rectangle2D getBounds()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: void adjustRectangle(java.awt.geom.Rectangle2D)>(r29)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: void adjustRectangle(java.awt.geom.Rectangle2D)>(r29) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r12 = new org.apache.pdfbox.rendering.SoftMask
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r12 = new org.apache.pdfbox.rendering.SoftMask >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r13 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.pdmodel.common.function.PDFunction getTransferFunction()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r13 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.pdmodel.common.function.PDFunction getTransferFunction()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r12.<org.apache.pdfbox.rendering.SoftMask: void <init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)>(r1, r28, r29, r18, $r13)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r12.<org.apache.pdfbox.rendering.SoftMask: void <init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)>(r1, r28, r29, r18, $r13) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : return $r12
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r14 = virtualinvoke r25.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getAlphaRaster()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : virtualinvoke $r6.<java.awt.image.BufferedImage: void setData(java.awt.image.Raster)>($r14)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : virtualinvoke $r6.<java.awt.image.BufferedImage: void setData(java.awt.image.Raster)>($r14) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : goto [?= r28 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.image.BufferedImage getRotatedImage(java.awt.image.BufferedImage)>($r6)]
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : goto [?= r28 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.image.BufferedImage getRotatedImage(java.awt.image.BufferedImage)>($r6)] >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r28 = specialinvoke r0.<org.apache.pdfbox.rendering.PageDrawer: java.awt.image.BufferedImage getRotatedImage(java.awt.image.BufferedImage)>($r6)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r19 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.cos.COSArray getBackdropColor()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r15 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r15 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask: org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r16 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup: org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes getGroup()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r16 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup: org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes getGroup()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r20 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r20 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r20 == null
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r20 == null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r19 == null
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r20 == null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r21 = new org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r19 == null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r17 = new org.apache.pdfbox.pdmodel.graphics.color.PDColor
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : if r19 == null >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r21 = new org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r17 = new org.apache.pdfbox.pdmodel.graphics.color.PDColor >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r17.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r19, r20)
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : specialinvoke $r17.<org.apache.pdfbox.pdmodel.graphics.color.PDColor: void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r19, r20) >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r18 = $r17
org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : r18 = $r17 >>>>>>>> org.apache.pdfbox.rendering.PageDrawer.applySoftMaskToPaint : $r21 = new org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup
