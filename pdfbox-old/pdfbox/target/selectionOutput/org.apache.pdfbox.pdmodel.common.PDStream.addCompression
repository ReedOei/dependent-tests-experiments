org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r12 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: java.util.List getFilters()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : if r12 != null
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : if r12 != null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : if r12 != null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : return
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $l0 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: long getLength()>()
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $l0 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSStream: long getLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $b1 = $l0 cmp 0L
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $b1 = $l0 cmp 0L >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : if $b1 <= 0
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r13 = null
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : if $b1 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r3 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r3 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FLATE_DECODE>
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FLATE_DECODE> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4)
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: void setFilters(java.util.List)>($r3)
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: void setFilters(java.util.List)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : return
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r13 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r5 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r13 = null >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>(r13) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : throw $r11
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r5 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r5 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r5 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>()
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSInputStream createInputStream()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r14 = staticinvoke <org.apache.pdfbox.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r6)
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r14 = staticinvoke <org.apache.pdfbox.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r14 = staticinvoke <org.apache.pdfbox.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r14 = staticinvoke <org.apache.pdfbox.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r8 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream>
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r8 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FLATE_DECODE>
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r8 = r0.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream stream> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FLATE_DECODE> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FLATE_DECODE> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FLATE_DECODE> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r13 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>($r7)
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r13 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r13 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : r13 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createOutputStream(org.apache.pdfbox.cos.COSBase)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : virtualinvoke r13.<java.io.OutputStream: void write(byte[])>(r14)
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : virtualinvoke r13.<java.io.OutputStream: void write(byte[])>(r14) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r9 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : virtualinvoke r13.<java.io.OutputStream: void write(byte[])>(r14) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : virtualinvoke r13.<java.io.OutputStream: void write(byte[])>(r14) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>(r13)
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.Closeable)>(r13) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : goto [?= (branch)]
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : goto [?= return]
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : return
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r10 = new java.lang.RuntimeException >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9)
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r10 = new java.lang.RuntimeException >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : throw $r10
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
org.apache.pdfbox.pdmodel.common.PDStream.addCompression : throw $r10 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDStream.addCompression : $r11 := @caughtexception
