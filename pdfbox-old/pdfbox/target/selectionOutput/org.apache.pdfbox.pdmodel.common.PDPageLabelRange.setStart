org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : if i0 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : $r3 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : if i0 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabelRange: org.apache.pdfbox.cos.COSDictionary root>
org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabelRange: org.apache.pdfbox.cos.COSDictionary root> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : $r1 = <org.apache.pdfbox.pdmodel.common.PDPageLabelRange: org.apache.pdfbox.cos.COSName KEY_START>
org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : $r1 = <org.apache.pdfbox.pdmodel.common.PDPageLabelRange: org.apache.pdfbox.cos.COSName KEY_START> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r1, i0)
org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r1, i0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : return
org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : $r3 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The page numbering start value must be a positive integer")
org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The page numbering start value must be a positive integer") >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabelRange.setStart : throw $r3
