org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r6 = new java.io.BufferedWriter >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r7 = new java.io.OutputStreamWriter
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r7 = new java.io.OutputStreamWriter >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r8 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII>
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r8 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset US_ASCII> >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r1, $r8)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r1, $r8) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r7)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/CIDInit /ProcSet findresource begin")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/CIDInit /ProcSet findresource begin") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "12 dict begin\n")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "12 dict begin\n") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "begincmap")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "begincmap") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/CIDSystemInfo")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/CIDSystemInfo") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "<< /Registry (Adobe)")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "<< /Registry (Adobe)") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/Ordering (UCS)")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/Ordering (UCS)") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/Supplement 0")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/Supplement 0") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, ">> def\n")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, ">> def\n") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/CMapName /Adobe-Identity-UCS def")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/CMapName /Adobe-Identity-UCS def") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/CMapType 2 def\n")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "/CMapType 2 def\n") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i1 = r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: int wMode>
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i1 = r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: int wMode> >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i1 == 0
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r33 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "1 begincodespacerange")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "1 begincodespacerange") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "<0000> <FFFF>")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "<0000> <FFFF>") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "endcodespacerange\n")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "endcodespacerange\n") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r9 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r9 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r10 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r10 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r10.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r10.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r11 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r11 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i21 = -1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i21 = -1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r38 = null
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r38 = null >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i22 = -1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i22 = -1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r12 = r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: java.util.Map cidToUnicode>
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r12 = r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: java.util.Map cidToUnicode> >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r39 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r39 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $z3 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $z3 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $z3 == 0
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r27 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i2 = interfaceinvoke $r9.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i2 = interfaceinvoke $r9.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $d0 = (double) $i2
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $d0 = (double) $i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $d1 = $d0 / 100.0
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $d1 = $d0 / 100.0 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i24 = (int) $d2
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i24 = (int) $d2 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i25 = 0
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i25 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i25 >= i24
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i25 >= i24 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i3 = i24 - 1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i25 >= i24 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "endcmap")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "endcmap") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "CMapName currentdict /CMap defineresource pop")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "CMapName currentdict /CMap defineresource pop") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "end")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "end") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "end")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "end") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void flush()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void flush()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : return
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i3 = i24 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i25 != $i3
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i25 != $i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i7 = interfaceinvoke $r9.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i25 != $i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i26 = 100
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i26 = 100 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i27 = $i26
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i27 = $i26 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r14 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r14 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" beginbfrange\n")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" beginbfrange\n") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>($r17)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>($r17) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i28 = 0
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i28 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i28 >= i27
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i28 >= i27 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i4 = i25 * 100
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i28 >= i27 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "endbfrange\n")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "endbfrange\n") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i25 = i25 + 1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i25 = i25 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i25 >= i24
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i4 = i25 * 100 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i0 = $i4 + i28
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i0 = $i4 + i28 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(int)>(60)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(int)>(60) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r18 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r18 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r19 = (java.lang.Integer) $r18
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r19 = (java.lang.Integer) $r18 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $s5 = virtualinvoke $r19.<java.lang.Integer: short shortValue()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $s5 = virtualinvoke $r19.<java.lang.Integer: short shortValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r20 = staticinvoke <org.apache.pdfbox.util.Hex: char[] getChars(short)>($s5)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r20 = staticinvoke <org.apache.pdfbox.util.Hex: char[] getChars(short)>($s5) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(char[])>($r20)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(char[])>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>("> ")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>("> ") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(int)>(60)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(int)>(60) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r21 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r21 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r22 = (java.lang.Integer) $r21
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r22 = (java.lang.Integer) $r21 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $s6 = virtualinvoke $r22.<java.lang.Integer: short shortValue()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $s6 = virtualinvoke $r22.<java.lang.Integer: short shortValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r23 = staticinvoke <org.apache.pdfbox.util.Hex: char[] getChars(short)>($s6)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r23 = staticinvoke <org.apache.pdfbox.util.Hex: char[] getChars(short)>($s6) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(char[])>($r23)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(char[])>($r23) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>("> ")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>("> ") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(int)>(60)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(int)>(60) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r24 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r24 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r25 = (java.lang.String) $r24
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r26 = staticinvoke <org.apache.pdfbox.util.Hex: char[] getCharsUTF16BE(java.lang.String)>($r25)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r26 = staticinvoke <org.apache.pdfbox.util.Hex: char[] getCharsUTF16BE(java.lang.String)>($r25) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(char[])>($r26)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(char[])>($r26) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>(">\n")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>(">\n") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i28 = i28 + 1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i28 = i28 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= (branch)]
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i28 >= i27
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i7 = interfaceinvoke $r9.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i26 = $i7 % 100
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i26 = $i7 % 100 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= i27 = $i26]
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= i27 = $i26] >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i27 = $i26
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r27 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r40 = (java.util.Map$Entry) $r27
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r40 = (java.util.Map$Entry) $r27 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r28 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r28 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r29 = (java.lang.Integer) $r28
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r29 = (java.lang.Integer) $r28 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i23 = virtualinvoke $r29.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i23 = virtualinvoke $r29.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r30 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r30 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r41 = (java.lang.String) $r30
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r41 = (java.lang.String) $r30 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i8 = i21 + 1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i8 = i21 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i23 != $i8
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i23 != $i8 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i9 = virtualinvoke r38.<java.lang.String: int length()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if i23 != $i8 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i22 = i23
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i22 = i23 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r42)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r42) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r43)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r43) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r41)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r41) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i21 = i23
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i21 = i23 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r38 = r41
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : r38 = r41 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= $z3 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= $z3 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $z3 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i9 = virtualinvoke r38.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i10 = virtualinvoke r38.<java.lang.String: int codePointCount(int,int)>(0, $i9)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i10 = virtualinvoke r38.<java.lang.String: int codePointCount(int,int)>(0, $i9) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i10 != 1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i10 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i11 = virtualinvoke r41.<java.lang.String: int codePointAt(int)>(0)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i10 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i22 = i23
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i11 = virtualinvoke r41.<java.lang.String: int codePointAt(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i12 = virtualinvoke r38.<java.lang.String: int codePointAt(int)>(0)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i12 = virtualinvoke r38.<java.lang.String: int codePointAt(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i13 = $i12 + 1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i13 = $i12 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i11 != $i13
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i11 != $i13 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i14 = virtualinvoke r38.<java.lang.String: int codePointAt(int)>(0)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i11 != $i13 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i22 = i23
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i14 = virtualinvoke r38.<java.lang.String: int codePointAt(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i17 = $i14 + 1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i17 = $i14 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i15 = i23 - i22
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i15 = i23 - i22 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i16 = 255 - $i15
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i16 = 255 - $i15 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i17 > $i16
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i17 > $i16 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i18 = interfaceinvoke $r10.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : if $i17 > $i16 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i22 = i23
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i18 = interfaceinvoke $r10.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i19 = $i18 - 1
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i19 = $i18 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : interfaceinvoke $r10.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i19, $r31)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : interfaceinvoke $r10.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i19, $r31) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= i21 = i23]
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : goto [?= i21 = i23] >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : i21 = i23
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/WMode /")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/WMode /") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i20 = r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: int wMode>
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $i20 = r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: int wMode> >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def")
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" def") >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, $r37)
org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, $r37) >>>>>>>> org.apache.pdfbox.pdmodel.font.ToUnicodeWriter.writeTo : specialinvoke r0.<org.apache.pdfbox.pdmodel.font.ToUnicodeWriter: void writeLine(java.io.BufferedWriter,java.lang.String)>($r6, "1 begincodespacerange")
