org.apache.pdfbox.multipdf.Splitter.processPage : specialinvoke r0.<org.apache.pdfbox.multipdf.Splitter: void createNewDocumentIfNecessary()>() >>>>>>>> org.apache.pdfbox.multipdf.Splitter.processPage : $r3 = virtualinvoke r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument getDestinationDocument()>()
org.apache.pdfbox.multipdf.Splitter.processPage : $r3 = virtualinvoke r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument getDestinationDocument()>() >>>>>>>> org.apache.pdfbox.multipdf.Splitter.processPage : r2 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)>(r1)
org.apache.pdfbox.multipdf.Splitter.processPage : r2 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)>(r1) >>>>>>>> org.apache.pdfbox.multipdf.Splitter.processPage : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources getResources()>()
org.apache.pdfbox.multipdf.Splitter.processPage : $r4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources getResources()>() >>>>>>>> org.apache.pdfbox.multipdf.Splitter.processPage : virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDPage: void setResources(org.apache.pdfbox.pdmodel.PDResources)>($r4)
org.apache.pdfbox.multipdf.Splitter.processPage : virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDPage: void setResources(org.apache.pdfbox.pdmodel.PDResources)>($r4) >>>>>>>> org.apache.pdfbox.multipdf.Splitter.processPage : specialinvoke r0.<org.apache.pdfbox.multipdf.Splitter: void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)>(r2)
org.apache.pdfbox.multipdf.Splitter.processPage : specialinvoke r0.<org.apache.pdfbox.multipdf.Splitter: void processAnnotations(org.apache.pdfbox.pdmodel.PDPage)>(r2) >>>>>>>> org.apache.pdfbox.multipdf.Splitter.processPage : return
