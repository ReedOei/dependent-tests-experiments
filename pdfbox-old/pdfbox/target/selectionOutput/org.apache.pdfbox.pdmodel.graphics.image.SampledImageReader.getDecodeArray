org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : r1 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: org.apache.pdfbox.cos.COSArray getDecode()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : r18 = null
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : r18 = null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if r1 == null
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r4 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if r1 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if r18 != null
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if r18 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r2 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if r18 != null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : return r18
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r2 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $i1 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: int getBitsPerComponent()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $i1 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: int getBitsPerComponent()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: float[] getDefaultDecode(int)>($i1)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: float[] getDefaultDecode(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : return $r3
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r4 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : i0 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: int getNumberOfComponents()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : i0 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: int getNumberOfComponents()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $i2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $i2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $i3 = i0 * 2
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $i3 = i0 * 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $i2 == $i3
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $i2 == $i3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $z0 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: boolean isStencil()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $i2 == $i3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : r18 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: float[] toFloatArray()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : r18 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: float[] toFloatArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if r18 != null
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $z0 = interfaceinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImage: boolean isStencil()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $i4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r19 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r19 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r20 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("decode array ")
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("decode array ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not compatible with color space, using default")
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not compatible with color space, using default") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : interfaceinvoke $r19.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r24)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : interfaceinvoke $r19.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r24) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if r18 != null
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $i4 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $i4 < 2
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $i4 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $i4 < 2 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r19 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r5 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $z1 = $r5 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $z1 = $r5 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r6 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r19 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r6 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $z2 = $r6 instanceof org.apache.pdfbox.cos.COSNumber
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $z2 = $r6 instanceof org.apache.pdfbox.cos.COSNumber >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $z2 == 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r7 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r19 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r7 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r8 = (org.apache.pdfbox.cos.COSNumber) $r7
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r8 = (org.apache.pdfbox.cos.COSNumber) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : f0 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : f0 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r9 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r9 = virtualinvoke r1.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r10 = (org.apache.pdfbox.cos.COSNumber) $r9
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r10 = (org.apache.pdfbox.cos.COSNumber) $r9 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : f1 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSNumber: float floatValue()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : f1 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSNumber: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $b5 = f0 cmpl 0.0F
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $b5 = f0 cmpl 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b5 < 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b5 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $b6 = f0 cmpg 1.0F
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b5 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r19 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $b6 = f0 cmpg 1.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b6 > 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b6 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $b7 = f1 cmpl 0.0F
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b6 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r19 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $b7 = f1 cmpl 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b7 < 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b7 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $b8 = f1 cmpg 1.0F
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b7 < 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r19 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $b8 = f1 cmpg 1.0F >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b8 > 0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b8 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r12 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : if $b8 > 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r19 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r12 = <org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r11 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("decode array ")
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("decode array ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not compatible with color space, using the first two entries")
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not compatible with color space, using the first two entries") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : interfaceinvoke $r12.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r16)
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : interfaceinvoke $r12.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r16) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r17 = newarray (float)[2]
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r17 = newarray (float)[2] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r17[0] = f0
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r17[0] = f0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r17[1] = f1
org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : $r17[1] = f1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getDecodeArray : return $r17
