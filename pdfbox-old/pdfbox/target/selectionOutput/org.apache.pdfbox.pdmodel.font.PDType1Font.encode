org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.util.Map codeToBytesMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : r46 = (byte[]) $r4
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : r46 = (byte[]) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if r46 == null
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if r46 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : return r46
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if r46 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : r1 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : r1 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String codePointToName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: boolean isStandard14()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: boolean isStandard14()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z0 == 0
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r32 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z1 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z1 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z1 != 0
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r23 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : r47 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getNameInFont(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : r47 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getNameInFont(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r7 = ".notdef"
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r7 = ".notdef" >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r47)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r47) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z2 != 0
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r8 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r8 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r9 = newarray (java.lang.Object)[3]
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r9 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r9[0] = $r10
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r9[0] = $r10 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r9[1] = $r11
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r9[1] = $r11 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r13 = interfaceinvoke $r12.<org.apache.fontbox.FontBoxFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r13 = interfaceinvoke $r12.<org.apache.fontbox.FontBoxFont: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r9[2] = $r13
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r9[2] = $r13 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s (generic: %s)", $r9)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s (generic: %s)", $r9) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : throw $r8
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r15 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z3 = interfaceinvoke $r15.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r47)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z3 = interfaceinvoke $r15.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r47) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z3 != 0
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r8 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z3 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r16 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r16 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : r48 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getNameToCodeMap()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : r48 = virtualinvoke $r16.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.util.Map getNameToCodeMap()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r17 = interfaceinvoke r48.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r17 = interfaceinvoke r48.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r18 = (java.lang.Integer) $r17
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r18 = (java.lang.Integer) $r17 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : i1 = virtualinvoke $r18.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : i1 = virtualinvoke $r18.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r19 = newarray (byte)[1]
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r19 = newarray (byte)[1] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $b2 = (byte) i1
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $b2 = (byte) i1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r19[0] = $b2
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r19[0] = $b2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r20 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.util.Map codeToBytesMap>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r20 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.util.Map codeToBytesMap> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r19)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r19) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : return $r19
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r23 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24 = newarray (java.lang.Object)[5]
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[0] = $r25
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[0] = $r25 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[1] = r1
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[1] = r1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r26 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r26 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[2] = $r26
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[2] = $r26 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r27 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r28 = interfaceinvoke $r27.<org.apache.fontbox.FontBoxFont: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r28 = interfaceinvoke $r27.<org.apache.fontbox.FontBoxFont: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[3] = $r28
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[3] = $r28 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r29 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r29 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r30 = virtualinvoke $r29.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r30 = virtualinvoke $r29.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[4] = $r30
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r24[4] = $r30 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X (\'%s\') is not available in this font %s (generic: %s) encoding: %s", $r24)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X (\'%s\') is not available in this font %s (generic: %s) encoding: %s", $r24) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : throw $r23
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r32 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z4 = virtualinvoke $r32.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z4 = virtualinvoke $r32.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: boolean contains(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z4 != 0
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z4 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r39 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z4 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r33 = ".notdef"
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r33 = ".notdef" >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z5 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $z5 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z5 == 0
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r34 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : if $z5 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r16 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r34 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r35 = newarray (java.lang.Object)[2]
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r35 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r35[0] = $r36
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r35[0] = $r36 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r37 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r37 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r35[1] = $r37
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r35[1] = $r37 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r35)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No glyph for U+%04X in font %s", $r35) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : throw $r34
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r39 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40 = newarray (java.lang.Object)[4]
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40[0] = $r41
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40[0] = $r41 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40[1] = r1
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40[1] = r1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r42 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r42 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40[2] = $r42
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40[2] = $r42 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r43 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding>
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r43 = r0.<org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.encoding.Encoding encoding> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r44 = virtualinvoke $r43.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>()
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r44 = virtualinvoke $r43.<org.apache.pdfbox.pdmodel.font.encoding.Encoding: java.lang.String getEncodingName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40[3] = $r44
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r40[3] = $r44 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r45 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X (\'%s\') is not available in this font %s encoding: %s", $r40)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : $r45 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("U+%04X (\'%s\') is not available in this font %s encoding: %s", $r40) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r45)
org.apache.pdfbox.pdmodel.font.PDType1Font.encode : specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r45) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1Font.encode : throw $r39
