org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i2 == 12
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i2 == 12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r9 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i2 == 12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r5 = new javax.imageio.stream.MemoryCacheImageOutputStream
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r5 = new javax.imageio.stream.MemoryCacheImageOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>($r4)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i9 = 0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i9 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i9 >= i0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i9 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i10 = 0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i9 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r6 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r6 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r7 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r7 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r8 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, $r6, i1, i0, $r7)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r8 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, $r6, i1, i0, $r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : return $r8
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i10 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i10 >= i1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i10 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i4 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(i10, i9)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i10 >= i1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i3 = virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i3 = virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i3 == 0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBit(int)>(0)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i9 = i9 + 1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i9 = i9 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i9 >= i0
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBit(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= $i3 = virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>()]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= $i3 = virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i3 = virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i4 = virtualinvoke r1.<java.awt.image.BufferedImage: int getRGB(int,int)>(i10, i9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i5 = $i4 & 1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i5 = $i4 & 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i6 = $i5 ^ -1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i6 = $i5 ^ -1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $l7 = (long) $i6
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $l7 = (long) $i6 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l7, 1)
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : virtualinvoke $r5.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l7, 1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i10 = i10 + 1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i10 = i10 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if i10 >= i1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r9 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i8 = virtualinvoke $r9.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $i8 = virtualinvoke $r9.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i8 == 1
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i8 == 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r10 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : if $i8 == 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : $r10 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only 1-bit b/w images supported")
org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only 1-bit b/w images supported") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromImage : throw $r10
