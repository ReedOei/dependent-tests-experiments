org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : r2 = virtualinvoke r0.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r5 = virtualinvoke r0.<java.io.File: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r5 = virtualinvoke r0.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : i0 = virtualinvoke $r5.<java.lang.String: int lastIndexOf(int)>(46)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : i0 = virtualinvoke $r5.<java.lang.String: int lastIndexOf(int)>(46) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if i0 != -1
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if i0 != -1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r21 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if i0 != -1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $i1 = i0 + 1
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $i1 = i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : r3 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : r3 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r7 = "jpg"
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r7 = "jpg" >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z0 != 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r9 = "jpeg"
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r8 = new java.io.FileInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r8 = new java.io.FileInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : r4 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)>(r1, $r8)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : r4 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)>(r1, $r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : virtualinvoke $r8.<java.io.FileInputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : virtualinvoke $r8.<java.io.FileInputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : return r4
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r9 = "jpeg" >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z1 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r8 = new java.io.FileInputStream
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r10 = "tif"
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r10 = "tif" >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z2 != 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r12 = "tiff"
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z2 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r11 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)>(r1, r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r11 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)>(r1, r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : return $r11
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r12 = "tiff" >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z3 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r11 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)>(r1, r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r13 = "gif"
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r13 = "gif" >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z4 != 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z4 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r14 = "bmp"
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z4 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : r27 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : r27 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r28 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)>(r1, r27)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r28 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)>(r1, r27) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : return $r28
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r14 = "bmp" >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z5 != 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r15 = "png"
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z5 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : r27 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r15 = "png" >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z6 == 0
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : r27 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>(r0)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : if $z6 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r16 = new java.lang.IllegalArgumentException
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r16 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r17 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image type not supported: ")
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image type not supported: ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : throw $r16
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r21 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r22 = new java.lang.StringBuilder
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image type not supported: ")
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image type not supported: ") >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25)
org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.createFromFileByExtension : throw $r21
