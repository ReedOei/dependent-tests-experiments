org.apache.pdfbox.pdfparser.BaseParser.readString : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void skipSpaces()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readString : $r2 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : i3 = interfaceinvoke $r2.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.readString : i3 = interfaceinvoke $r2.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $r3 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.readString : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.readString : specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(i0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i3)
org.apache.pdfbox.pdfparser.BaseParser.readString : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i3) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if $z0 != 0
org.apache.pdfbox.pdfparser.BaseParser.readString : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isClosing(int)>(i3)
org.apache.pdfbox.pdfparser.BaseParser.readString : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : return $r4
org.apache.pdfbox.pdfparser.BaseParser.readString : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i3)
org.apache.pdfbox.pdfparser.BaseParser.readString : interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i3) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.readString : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isClosing(int)>(i3) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if $z1 != 0
org.apache.pdfbox.pdfparser.BaseParser.readString : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.readString : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>()
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.readString : $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if $i1 >= i0
org.apache.pdfbox.pdfparser.BaseParser.readString : if $i1 >= i0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 91
org.apache.pdfbox.pdfparser.BaseParser.readString : if $i1 >= i0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 91 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 60
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 91 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 60 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 40
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 60 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 40 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 47
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 40 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 47 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $c2 = (char) i3
org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == 47 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : if i3 == -1
org.apache.pdfbox.pdfparser.BaseParser.readString : $c2 = (char) i3 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2)
org.apache.pdfbox.pdfparser.BaseParser.readString : virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $r7 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.readString : $r7 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : i3 = interfaceinvoke $r7.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.readString : i3 = interfaceinvoke $r7.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : goto [?= $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i3)]
org.apache.pdfbox.pdfparser.BaseParser.readString : goto [?= $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i3)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.readString : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isWhitespace(int)>(i3)
