org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("+") >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : if $z0 == 0
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1)
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : $r1 = r0
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : $r1 = r0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : return $i0
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : goto [?= $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)]
org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : goto [?= $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)] >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder.parseInt : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1)
