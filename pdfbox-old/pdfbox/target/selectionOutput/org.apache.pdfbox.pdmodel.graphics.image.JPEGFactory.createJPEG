org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : r2 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: java.awt.image.BufferedImage getColorImage(java.awt.image.BufferedImage)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : r3 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: java.awt.image.BufferedImage getAlphaImage(java.awt.image.BufferedImage)>(r1)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : r3 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: java.awt.image.BufferedImage getAlphaImage(java.awt.image.BufferedImage)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r8 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r8 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: void encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int,java.io.OutputStream)>(r2, f0, i0, $r8)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: void encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int,java.io.OutputStream)>(r2, f0, i0, $r8) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r9 = new java.io.ByteArrayInputStream
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r9 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r10 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r10 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r10)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r11 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r11 = new org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DCT_DECODE>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DCT_DECODE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $i1 = virtualinvoke r2.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $i1 = virtualinvoke r2.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $i2 = virtualinvoke r2.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $i2 = virtualinvoke r2.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r13 = virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r13 = virtualinvoke r2.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $i3 = virtualinvoke $r13.<java.awt.image.ColorModel: int getComponentSize(int)>(0)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $i3 = virtualinvoke $r13.<java.awt.image.ColorModel: int getComponentSize(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r14 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpaceFromAWT(java.awt.image.BufferedImage)>(r2)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r14 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpaceFromAWT(java.awt.image.BufferedImage)>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : specialinvoke $r11.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, $r9, $r12, $i1, $i2, $i3, $r14)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : specialinvoke $r11.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, $r9, $r12, $i1, $i2, $i3, $r14) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : if r3 == null
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : r7 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)>(r0, r3, f0)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : if r3 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : return $r11
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : r7 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)>(r0, r3, f0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r15 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r15 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK>
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : virtualinvoke $r15.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r16, r7)
org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : virtualinvoke $r15.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r16, r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory.createJPEG : return $r11
