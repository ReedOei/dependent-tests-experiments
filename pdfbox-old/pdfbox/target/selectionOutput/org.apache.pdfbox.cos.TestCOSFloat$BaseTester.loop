org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r3 = new java.util.Random >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : specialinvoke $r3.<java.util.Random: void <init>(long)>(l0)
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : specialinvoke $r3.<java.util.Random: void <init>(long)>(l0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : i3 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int low>
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : i3 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int low> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i1 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int high>
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i1 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int high> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : if i3 >= $i1
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : if i3 >= $i1 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $f1 = (float) i3
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : if i3 >= $i1 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : return
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $f1 = (float) i3 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $f2 = virtualinvoke $r3.<java.util.Random: float nextFloat()>()
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $f2 = virtualinvoke $r3.<java.util.Random: float nextFloat()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : f0 = $f1 * $f2
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : f0 = $f1 * $f2 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : virtualinvoke r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: void runTest(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : f0 = $f1 * $f2 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r4 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("num = ")
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("num = ") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0)
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", seed = ")
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", seed = ") >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : staticinvoke <junit.framework.TestCase: void fail(java.lang.String)>($r10)
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : staticinvoke <junit.framework.TestCase: void fail(java.lang.String)>($r10) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int step>
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int step> >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : i3 = i3 + $i2
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : i3 = i3 + $i2 >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : goto [?= $i1 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int high>]
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : goto [?= $i1 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int high>] >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i1 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int high>
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : virtualinvoke r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: void runTest(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : goto [?= $i2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int step>]
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : virtualinvoke r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: void runTest(float)>(f0) >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $r4 := @caughtexception
org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : goto [?= $i2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int step>] >>>>>>>> org.apache.pdfbox.cos.TestCOSFloat$BaseTester.loop : $i2 = r0.<org.apache.pdfbox.cos.TestCOSFloat$BaseTester: int step>
