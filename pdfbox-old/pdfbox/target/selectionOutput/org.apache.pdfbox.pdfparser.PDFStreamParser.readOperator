org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: void skipSpaces()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r2 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(4)
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(4) >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r3 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r3 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : i4 = interfaceinvoke $r3.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : i4 = interfaceinvoke $r3.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == -1
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: boolean isWhitespace(int)>(i4)
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : return $r10
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: boolean isWhitespace(int)>(i4) >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if $z0 != 0
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: boolean isClosing(int)>(i4)
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: boolean isClosing(int)>(i4) >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if $z1 != 0
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 91
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if $z1 != 0 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 91 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 60
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 91 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 60 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 40
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 60 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 40 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 47
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 40 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 47 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 < 48
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 47 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 < 48 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 <= 57
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 < 48 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r4 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r4 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $i1 = interfaceinvoke $r4.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $i1 = interfaceinvoke $r4.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : c0 = (char) $i1
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : c0 = (char) $i1 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r5 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r5 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : i4 = interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : i4 = interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0) >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if c0 != 100
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if c0 != 100 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 48
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if c0 != 100 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : goto [?= (branch)]
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == -1
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 48 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 != 49
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 == 48 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r7 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r7 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $i2 = interfaceinvoke $r7.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $i2 = interfaceinvoke $r7.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $c3 = (char) $i2
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $c3 = (char) $i2 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3)
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3) >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r9 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r9 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : i4 = interfaceinvoke $r9.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>()
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : i4 = interfaceinvoke $r9.<org.apache.pdfbox.pdfparser.SequentialSource: int peek()>() >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : goto [?= (branch)]
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 != 49 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r7 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 != 49 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : goto [?= (branch)]
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 <= 57 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r4 = r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : if i4 <= 57 >>>>>>>> org.apache.pdfbox.pdfparser.PDFStreamParser.readOperator : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
