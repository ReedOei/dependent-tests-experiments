org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : i0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : if $z0 == 0
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : return i0
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : r2 = (org.apache.pdfbox.cos.COSName) $r3
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : r2 = (org.apache.pdfbox.cos.COSName) $r3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : i0 = i0 + 1
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : i0 = i0 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.count : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
