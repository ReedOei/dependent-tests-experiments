org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : f1 = f0 / 1000.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : f5 = 0.0F
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : f5 = 0.0F >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r5 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: java.util.List words>
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r5 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: java.util.List words> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : if $z0 == 0
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : return f5
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : r3 = (org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word) $r6
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : r3 = (org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r7 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: java.text.AttributedString getAttributes()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r7 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: java.text.AttributedString getAttributes()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r8 = virtualinvoke $r7.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r8 = virtualinvoke $r7.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r9 = <org.apache.pdfbox.pdmodel.interactive.form.PlainText$TextAttribute: java.text.AttributedCharacterIterator$Attribute WIDTH>
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r9 = <org.apache.pdfbox.pdmodel.interactive.form.PlainText$TextAttribute: java.text.AttributedCharacterIterator$Attribute WIDTH> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r10 = interfaceinvoke $r8.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r9)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r10 = interfaceinvoke $r8.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r9) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r11 = (java.lang.Float) $r10
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r11 = (java.lang.Float) $r10 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $f3 = virtualinvoke $r11.<java.lang.Float: float floatValue()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $f3 = virtualinvoke $r11.<java.lang.Float: float floatValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : f5 = f5 + $f3
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : f5 = f5 + $f3 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: java.lang.String getText()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Word: java.lang.String getText()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r12 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: java.util.List words>
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r12 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: java.util.List words> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i0 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i0 = interfaceinvoke $r12.<java.util.List: int indexOf(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r13 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: java.util.List words>
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r13 = r0.<org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line: java.util.List words> >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i1 = interfaceinvoke $r13.<java.util.List: int size()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i1 = interfaceinvoke $r13.<java.util.List: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i2 = $i1 - 1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i2 = $i1 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : if $i0 != $i2
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : if $i0 != $i2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i3 = virtualinvoke r4.<java.lang.String: int length()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : if $i0 != $i2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i3 = virtualinvoke r4.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i4 = $i3 - 1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i4 = $i3 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $c5 = virtualinvoke r4.<java.lang.String: char charAt(int)>($i4)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $c5 = virtualinvoke r4.<java.lang.String: char charAt(int)>($i4) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : if $z1 == 0
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i6 = virtualinvoke r4.<java.lang.String: int length()>()
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i6 = virtualinvoke r4.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i7 = $i6 - 1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $i7 = $i6 - 1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r14 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i7)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $r14 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i7) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $f4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>($r14)
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : $f4 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.font.PDFont: float getStringWidth(java.lang.String)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : f2 = $f4 * f1
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : f2 = $f4 * f1 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : f5 = f5 - f2
org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : f5 = f5 - f2 >>>>>>>> org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line.calculateWidth : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
