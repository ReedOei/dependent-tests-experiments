org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $r4 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $r4 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $r5 = (java.lang.Number) $r4
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $r5 = (java.lang.Number) $r4 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>()
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : i0 = virtualinvoke $r5.<java.lang.Number: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : if i0 <= 0
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : if i0 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : i1 = virtualinvoke r2.<java.util.Stack: int size()>()
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : if i0 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : return
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : i1 = virtualinvoke r2.<java.util.Stack: int size()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $r6 = new java.util.ArrayList
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $r6 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $i2 = i1 - i0
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $i2 = i1 - i0 >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $r7 = virtualinvoke r2.<java.util.Stack: java.util.List subList(int,int)>($i2, i1)
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : $r7 = virtualinvoke r2.<java.util.Stack: java.util.List subList(int,int)>($i2, i1) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r7)
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : virtualinvoke r2.<java.util.Stack: boolean addAll(java.util.Collection)>($r6)
org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : virtualinvoke r2.<java.util.Stack: boolean addAll(java.util.Collection)>($r6) >>>>>>>> org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy.execute : return
