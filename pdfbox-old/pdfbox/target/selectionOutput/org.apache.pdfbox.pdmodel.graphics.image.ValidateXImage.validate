org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertNotNull(java.lang.Object)>(r3)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT>
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r6 = virtualinvoke r3.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r4)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r6 = virtualinvoke r3.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE>
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r9 = virtualinvoke r3.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r7)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r9 = virtualinvoke r3.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $l3 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSStream: long getLength()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $l3 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSStream: long getLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $b4 = $l3 cmp 0L
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $b4 = $l3 cmp 0L >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : if $b4 <= 0
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : if $b4 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $z0 = 1
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : if $b4 <= 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $z0 = 0
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $z0 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z0)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z0) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getBitsPerComponent()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getBitsPerComponent()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>(i0, $i5)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>(i0, $i5) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>(i1, $i6)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>(i1, $i6) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>(i2, $i7)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>(i2, $i7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.lang.String getSuffix()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.lang.String getSuffix()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>(r1, $r11)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>(r1, $r11) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r12 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r13 = virtualinvoke $r12.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: java.lang.String getName()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r13 = virtualinvoke $r12.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: java.lang.String getName()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>(r2, $r13)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(java.lang.String,java.lang.String)>(r2, $r13) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getImage()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r14 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getImage()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertNotNull(java.lang.Object)>($r14)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertNotNull(java.lang.Object)>($r14) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getImage()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getImage()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i9 = virtualinvoke $r15.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i9 = virtualinvoke $r15.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>($i8, $i9)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>($i8, $i9) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getImage()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getImage()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i11 = virtualinvoke $r16.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $i11 = virtualinvoke $r16.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>($i10, $i11)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertEquals(int,int)>($i10, $i11) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getImage()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r17 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getImage()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r18 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r18 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : specialinvoke $r18.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : specialinvoke $r18.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : z1 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>($r17, r1, $r18)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : z1 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>($r17, r1, $r18) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>(z1)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>(z1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getOpaqueImage()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: java.awt.image.BufferedImage getOpaqueImage()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r20 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $r20 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : specialinvoke $r20.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : specialinvoke $r20.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : z2 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>($r19, r1, $r20)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : z2 = staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>($r19, r1, $r20) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>(z2)
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>(z2) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : return
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : $z0 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : goto [?= staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z0)]
org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : goto [?= staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z0)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.validate : staticinvoke <junit.framework.TestCase: void assertTrue(boolean)>($z0)
