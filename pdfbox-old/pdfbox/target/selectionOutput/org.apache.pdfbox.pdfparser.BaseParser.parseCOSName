org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: void readExpectedChar(char)>(47) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r4 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r4 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r5 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = interfaceinvoke $r5.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i7 = i6
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r13 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r31 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r31 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z0 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isValidUTF8(byte[])>(r31)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z0 = specialinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isValidUTF8(byte[])>(r31) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z0 == 0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r10 = new java.lang.String
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r6 = new java.lang.String
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r6 = new java.lang.String >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r7 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r7 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r8 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset WINDOWS_1252>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r8 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset WINDOWS_1252> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r6.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r7, $r8)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r6.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r7, $r8) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r32 = $r6
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r32 = $r6 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r9 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r32)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r9 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r32) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : return $r9
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r10 = new java.lang.String >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r11 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r11 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r12 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset UTF_8>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r12 = <org.apache.pdfbox.util.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r10.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r11, $r12)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r10.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r11, $r12) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r32 = $r10
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r32 = $r10 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= $r9 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r32)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= $r9 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r32)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r9 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>(r32)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r13 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r13.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i6)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r13.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i6) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r31 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i7 = i6 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 != 35
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 != 35 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r15 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 != 35 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEndOfName(int)>(i6)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z1 = virtualinvoke r0.<org.apache.pdfbox.pdfparser.BaseParser: boolean isEndOfName(int)>(i6) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z1 == 0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>(i6)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>(i6) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r14 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r14 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = interfaceinvoke $r14.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = interfaceinvoke $r14.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r15 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i8 = interfaceinvoke $r15.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i8 = interfaceinvoke $r15.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r16 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r16 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = interfaceinvoke $r16.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i0 = interfaceinvoke $r16.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c1 = (char) i8
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c1 = (char) i8 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z2 = staticinvoke <org.apache.pdfbox.pdfparser.BaseParser: boolean isHexDigit(char)>($c1)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z2 = staticinvoke <org.apache.pdfbox.pdfparser.BaseParser: boolean isHexDigit(char)>($c1) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z2 == 0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c2 = (char) i0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i8 != -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r17 = <org.apache.pdfbox.pdfparser.BaseParser: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r17 = <org.apache.pdfbox.pdfparser.BaseParser: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r17.<org.apache.commons.logging.Log: void error(java.lang.Object)>("Premature EOF in BaseParser#parseCOSName")
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r17.<org.apache.commons.logging.Log: void error(java.lang.Object)>("Premature EOF in BaseParser#parseCOSName") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i6 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i8 != -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r17 = <org.apache.pdfbox.pdfparser.BaseParser: org.apache.commons.logging.Log LOG>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i8 != -1 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r18 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r18 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r18.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i0)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : interfaceinvoke $r18.<org.apache.pdfbox.pdfparser.SequentialSource: void unread(int)>(i0) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = i8
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = i8 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>(i7)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>(i7) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c2 = (char) i0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z3 = staticinvoke <org.apache.pdfbox.pdfparser.BaseParser: boolean isHexDigit(char)>($c2)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $z3 = staticinvoke <org.apache.pdfbox.pdfparser.BaseParser: boolean isHexDigit(char)>($c2) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z3 == 0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r19 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : if i0 == -1
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("")
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c3 = (char) i8
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c3 = (char) i8 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c4 = (char) i0
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $c4 = (char) i0 >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r2, 16)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r24 := @caughtexception
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r25 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r26 = new java.lang.StringBuilder
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: expected hex digit, actual=\'")
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: expected hex digit, actual=\'") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r24)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r24) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : throw $r25
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r2, 16) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i5)
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r2, 16) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r24 := @caughtexception
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i5) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= $r23 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(int)>($i5) >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r24 := @caughtexception
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= $r23 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r23 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource>
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : $r23 = r0.<org.apache.pdfbox.pdfparser.BaseParser: org.apache.pdfbox.pdfparser.SequentialSource seqSource> >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = interfaceinvoke $r23.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>()
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : i6 = interfaceinvoke $r23.<org.apache.pdfbox.pdfparser.SequentialSource: int read()>() >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdfparser.BaseParser.parseCOSName : goto [?= (branch)]
