org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: boolean isEmbedded()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $z0 != 0
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : return r1
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $r4 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $z1 = interfaceinvoke $r4.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $z1 = interfaceinvoke $r4.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : return r1
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>()
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : r2 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String toUnicode(java.lang.String)>(r1)
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : r2 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.encoding.GlyphList: java.lang.String toUnicode(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if r2 == null
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $i0 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : return ".notdef"
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $i0 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $i0 != 1
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $i1 = virtualinvoke r2.<java.lang.String: int codePointAt(int)>(0)
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $i0 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : return ".notdef"
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $i1 = virtualinvoke r2.<java.lang.String: int codePointAt(int)>(0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : r3 = staticinvoke <org.apache.pdfbox.pdmodel.font.UniUtil: java.lang.String getUniNameOfCodePoint(int)>($i1)
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : r3 = staticinvoke <org.apache.pdfbox.pdmodel.font.UniUtil: java.lang.String getUniNameOfCodePoint(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.fontbox.FontBoxFont genericFont>
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDType1CFont: org.apache.fontbox.FontBoxFont genericFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $z2 = interfaceinvoke $r6.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r3)
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : $z2 = interfaceinvoke $r6.<org.apache.fontbox.FontBoxFont: boolean hasGlyph(java.lang.String)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $z2 == 0
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : return r3
org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDType1CFont.getNameInFont : return ".notdef"
