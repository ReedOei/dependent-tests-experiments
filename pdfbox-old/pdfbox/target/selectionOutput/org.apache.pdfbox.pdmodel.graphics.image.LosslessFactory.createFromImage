org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r2 = newarray (int)[i1]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r2 = newarray (int)[i1] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i3 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i3 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i3 != 10
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i3 != 10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r9 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i3 != 10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i4 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i4 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i4 != 12
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i4 != 12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r5 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i4 != 12 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i28 = 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i28 = 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i5 = i1 * i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i5 = i1 * i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i6 = $i5 * 3
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i6 = $i5 * 3 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14 = newarray (byte)[$i6]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14 = newarray (byte)[$i6] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i34 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i34 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i35 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i35 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i35 >= i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i35 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r15 = virtualinvoke r1.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i35, i1, 1, r2, 0, i1)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i35 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i7 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i7 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i8 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i8 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r16 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, r14, $i7, $i8, i28, r10)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r16 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>(r0, r14, $i7, $i8, i28, r10) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r17 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createAlphaFromARGBImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)>(r0, r1)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r17 = staticinvoke <org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory: org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createAlphaFromARGBImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)>(r0, r1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r17 == null
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r17 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r3 = virtualinvoke r16.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if r17 == null >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : return r16
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r3 = virtualinvoke r16.<org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject: org.apache.pdfbox.cos.COSStream getCOSObject()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK>
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r3.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r4, r17)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r3.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r4, r17) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : return r16
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r15 = virtualinvoke r1.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i35, i1, 1, r2, 0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i36 = lengthof r15
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i36 = lengthof r15 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i37 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i37 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i37 >= i36
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i37 >= i36 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i38 = r15[i37]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i37 >= i36 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i35 = i35 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i35 = i35 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i35 >= i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i38 = r15[i37] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i39 = i34 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i39 = i34 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i9 = i38 >> 16
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i9 = i38 >> 16 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i10 = $i9 & 255
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i10 = $i9 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b11 = (byte) $i10
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b11 = (byte) $i10 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14[i34] = $b11
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14[i34] = $b11 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i40 = i39 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i40 = i39 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i12 = i38 >> 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i12 = i38 >> 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i13 = $i12 & 255
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i13 = $i12 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b14 = (byte) $i13
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b14 = (byte) $i13 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14[i39] = $b14
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14[i39] = $b14 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i34 = i40 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i34 = i40 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i15 = i38 & 255
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i15 = i38 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b16 = (byte) $i15
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b16 = (byte) $i15 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14[i40] = $b16
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14[i40] = $b16 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i37 = i37 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i37 = i37 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i37 >= i36
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r5 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i17 = virtualinvoke $r5.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i17 = virtualinvoke $r5.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i17 != 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i17 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r6 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i17 != 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i28 = 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r6 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i28 = virtualinvoke $r6.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i28 = virtualinvoke $r6.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE>
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r10 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray INSTANCE> >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r7 = new java.io.ByteArrayOutputStream
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r7 = new java.io.ByteArrayOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i18 = i1 * i28
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i18 = i1 * i28 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i22 = $i18 / 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i22 = $i18 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i19 = i1 * i28
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i19 = i1 * i28 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i20 = $i19 % 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i20 = $i19 % 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i20 == 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i20 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b29 = 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i20 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b29 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b29 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i21 = $b29 * i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i21 = $b29 * i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i23 = $i22 + $i21
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i23 = $i22 + $i21 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>(int)>($i23)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>(int)>($i23) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r8 = new javax.imageio.stream.MemoryCacheImageOutputStream
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r8 = new javax.imageio.stream.MemoryCacheImageOutputStream >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : specialinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>($r7)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : specialinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>($r7) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i30 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i30 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i30 >= i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i30 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r13 = virtualinvoke r1.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i30, i1, 1, r2, 0, i1)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i30 >= i0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r14 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= $i7 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= $i7 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i7 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : r13 = virtualinvoke r1.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, i30, i1, 1, r2, 0, i1) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i31 = lengthof r13
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i31 = lengthof r13 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i32 = 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i32 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i32 >= i31
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i32 >= i31 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i2 = r13[i32]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i32 >= i31 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i33 = virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i33 = virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i33 == 0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i33 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i24 = 8 - i33
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i33 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i30 = i30 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i30 = i30 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i30 >= i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i24 = 8 - i33 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, $i24)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>(0L, $i24) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i30 = i30 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i2 = r13[i32] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i25 = i2 & 255
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i25 = i2 & 255 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $l26 = (long) $i25
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $l26 = (long) $i25 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l26, i28)
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : virtualinvoke $r8.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l26, i28) >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i32 = i32 + 1
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : i32 = i32 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= (branch)] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if i32 >= i31
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $b29 = 1 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= $i21 = $b29 * i0]
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : goto [?= $i21 = $b29 * i0] >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i21 = $b29 * i0
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r9 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i27 = virtualinvoke $r9.<java.awt.image.ColorModel: int getPixelSize()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i27 = virtualinvoke $r9.<java.awt.image.ColorModel: int getPixelSize()>() >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i27 <= 8
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i27 <= 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $i4 = virtualinvoke r1.<java.awt.image.BufferedImage: int getType()>()
org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : if $i27 <= 8 >>>>>>>> org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory.createFromImage : $r6 = virtualinvoke r1.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>()
