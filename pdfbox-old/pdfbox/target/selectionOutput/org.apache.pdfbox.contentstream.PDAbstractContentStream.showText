org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $z0 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: boolean inTextMode> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if $z0 != 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if $z0 != 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r9 = new java.lang.IllegalStateException
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if $z0 != 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack fontStack>
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r3 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack fontStack> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $z1 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $z1 = virtualinvoke $r3.<java.util.Stack: boolean isEmpty()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if $z1 == 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if $z1 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r8 = new java.lang.IllegalStateException
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if $z1 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r4 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack fontStack>
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r4 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.util.Stack fontStack> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object peek()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object peek()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : r2 = (org.apache.pdfbox.pdmodel.font.PDFont) $r5
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : r2 = (org.apache.pdfbox.pdmodel.font.PDFont) $r5 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $z2 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.PDFont: boolean willBeSubset()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $z2 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.PDFont: boolean willBeSubset()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if $z2 == 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if $z2 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : i3 = 0
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if $z2 == 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r6 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.PDFont: byte[] encode(java.lang.String)>(r1)
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r6 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.PDFont: byte[] encode(java.lang.String)>(r1) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r7 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output>
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r7 = r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: java.io.OutputStream output> >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : staticinvoke <org.apache.pdfbox.pdfwriter.COSWriter: void writeString(byte[],java.io.OutputStream)>($r6, $r7)
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : staticinvoke <org.apache.pdfbox.pdfwriter.COSWriter: void writeString(byte[],java.io.OutputStream)>($r6, $r7) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void write(java.lang.String)>(" ")
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void write(java.lang.String)>(" ") >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("Tj")
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : virtualinvoke r0.<org.apache.pdfbox.contentstream.PDAbstractContentStream: void writeOperator(java.lang.String)>("Tj") >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : return
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : i3 = 0 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $i1 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if i3 >= $i1
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if i3 >= $i1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : i0 = virtualinvoke r1.<java.lang.String: int codePointAt(int)>(i3)
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : if i3 >= $i1 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r6 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.PDFont: byte[] encode(java.lang.String)>(r1)
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : i0 = virtualinvoke r1.<java.lang.String: int codePointAt(int)>(i3) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.PDFont: void addToSubset(int)>(i0)
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : virtualinvoke r2.<org.apache.pdfbox.pdmodel.font.PDFont: void addToSubset(int)>(i0) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $i2 = staticinvoke <java.lang.Character: int charCount(int)>(i0)
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $i2 = staticinvoke <java.lang.Character: int charCount(int)>(i0) >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : i3 = i3 + $i2
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : i3 = i3 + $i2 >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : goto [?= $i1 = virtualinvoke r1.<java.lang.String: int length()>()]
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : goto [?= $i1 = virtualinvoke r1.<java.lang.String: int length()>()] >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r8 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must call setFont() before showText()")
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must call setFont() before showText()") >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : throw $r8
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : $r9 = new java.lang.IllegalStateException >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must call beginText() before showText()")
org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must call beginText() before showText()") >>>>>>>> org.apache.pdfbox.contentstream.PDAbstractContentStream.showText : throw $r9
