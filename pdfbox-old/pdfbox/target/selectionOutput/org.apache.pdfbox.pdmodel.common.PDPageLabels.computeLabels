org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r4 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: java.util.Map labels> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z0 != 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : return
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z0 != 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i6 = 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i6 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r23 = (java.util.Map$Entry) $r6
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r23 = (java.util.Map$Entry) $r6 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z1 == 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r7 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r7 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r8 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r8 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r10 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r8
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r10 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r8 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r9 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: org.apache.pdfbox.pdmodel.PDDocument doc>
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r9 = r0.<org.apache.pdfbox.pdmodel.common.PDPageLabels: org.apache.pdfbox.pdmodel.PDDocument doc> >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i1 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i1 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r11 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r11 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r12 = (java.lang.Integer) $r11
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r12 = (java.lang.Integer) $r11 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i3 = $i1 - $i2
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i3 = $i1 - $i2 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : specialinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r10, $i3)
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : specialinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r10, $i3) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z2 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z2 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z2 == 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r13 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z2 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : return
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r13 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i6, $r13)
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i6, $r13) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i6 = i6 + 1
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i6 = i6 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z2 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z2 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z2 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r24 = (java.util.Map$Entry) $r14
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r24 = (java.util.Map$Entry) $r14 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r15 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r15 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r16 = (java.lang.Integer) $r15
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r16 = (java.lang.Integer) $r15 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i4 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i4 = virtualinvoke $r16.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r17 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r17 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r18 = (java.lang.Integer) $r17
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r18 = (java.lang.Integer) $r17 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i5 = virtualinvoke $r18.<java.lang.Integer: int intValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $i5 = virtualinvoke $r18.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i0 = $i4 - $i5
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i0 = $i4 - $i5 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r19 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r19 = new org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r20 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r20 = interfaceinvoke r23.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r21 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r20
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r21 = (org.apache.pdfbox.pdmodel.common.PDPageLabelRange) $r20 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : specialinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r21, i0)
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : specialinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: void <init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)>($r21, i0) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z3 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z3 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z3 == 0
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r22 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : if $z3 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r23 = r24
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : r23 = r24 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $r22 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: java.lang.String next()>() >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i6, $r22)
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : interfaceinvoke r1.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler: void newLabel(int,java.lang.String)>(i6, $r22) >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i6 = i6 + 1
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : i6 = i6 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z3 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : goto [?= $z3 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.common.PDPageLabels.computeLabels : $z3 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator: boolean hasNext()>()
