org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r5 = r0.<org.apache.pdfbox.pdmodel.font.FileSystemFontProvider: java.util.List fontInfoList>
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r5 = r0.<org.apache.pdfbox.pdmodel.font.FileSystemFontProvider: java.util.List fontInfoList> >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : if $z0 == 0
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : return $r6
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : r3 = (org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo) $r7
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : r3 = (org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r8 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo: org.apache.pdfbox.pdmodel.font.FontFormat getFormat()>()
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r8 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo: org.apache.pdfbox.pdmodel.font.FontFormat getFormat()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8) >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ")
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r11 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo: java.lang.String getPostScriptName()>()
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r11 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo: java.lang.String getPostScriptName()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ")
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r14 = staticinvoke <org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo: java.io.File access$1400(org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo)>(r3)
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r14 = staticinvoke <org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo: java.io.File access$1400(org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo)>(r3) >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getPath()>()
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getPath()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10) >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.pdfbox.pdmodel.font.FileSystemFontProvider.toDebugString : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
