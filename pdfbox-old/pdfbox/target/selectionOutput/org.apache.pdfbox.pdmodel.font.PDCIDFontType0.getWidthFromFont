org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: int codeToCID(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.cff.CFFCIDFont cidFont>
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r2 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.cff.CFFCIDFont cidFont> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : if $r2 == null
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.cff.Type2CharString getType2CharString(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : if $r2 == null >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $z0 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: boolean isEmbedded>
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $z0 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: boolean isEmbedded> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : if $z0 == 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.FontBoxFont t1Font>
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : if $z0 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.FontBoxFont t1Font>
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.FontBoxFont t1Font> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: java.lang.String getGlyphName(int)>(i0)
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: java.lang.String getGlyphName(int)>(i0) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : f0 = interfaceinvoke $r3.<org.apache.fontbox.FontBoxFont: float getWidth(java.lang.String)>($r4)
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : f0 = interfaceinvoke $r3.<org.apache.fontbox.FontBoxFont: float getWidth(java.lang.String)>($r4) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r11 = new java.awt.geom.Point2D$Float
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r11 = new java.awt.geom.Point2D$Float >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : specialinvoke $r11.<java.awt.geom.Point2D$Float: void <init>(float,float)>(f0, 0.0F)
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : specialinvoke $r11.<java.awt.geom.Point2D$Float: void <init>(float,float)>(f0, 0.0F) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: java.awt.geom.AffineTransform fontMatrixTransform>
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r12 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: java.awt.geom.AffineTransform fontMatrixTransform> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : virtualinvoke $r12.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r11, $r11)
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : virtualinvoke $r12.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r11, $r11) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $d0 = virtualinvoke $r11.<java.awt.geom.Point2D: double getX()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $d0 = virtualinvoke $r11.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $f1 = (float) $d0
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $f1 = (float) $d0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : return $f1
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r6 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.FontBoxFont t1Font> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $z1 = $r6 instanceof org.apache.fontbox.cff.CFFType1Font
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $z1 = $r6 instanceof org.apache.fontbox.cff.CFFType1Font >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : if $z1 == 0
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r7 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.FontBoxFont t1Font>
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : if $z1 == 0 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r3 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.FontBoxFont t1Font>
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r7 = r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.FontBoxFont t1Font> >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r8 = (org.apache.fontbox.cff.CFFType1Font) $r7
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r8 = (org.apache.fontbox.cff.CFFType1Font) $r7 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r9 = virtualinvoke $r8.<org.apache.fontbox.cff.CFFType1Font: org.apache.fontbox.cff.Type2CharString getType2CharString(int)>(i1)
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r9 = virtualinvoke $r8.<org.apache.fontbox.cff.CFFType1Font: org.apache.fontbox.cff.Type2CharString getType2CharString(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $i2 = virtualinvoke $r9.<org.apache.fontbox.cff.Type2CharString: int getWidth()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $i2 = virtualinvoke $r9.<org.apache.fontbox.cff.Type2CharString: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : f0 = (float) $i2
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : f0 = (float) $i2 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : goto [?= $r11 = new java.awt.geom.Point2D$Float]
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : goto [?= $r11 = new java.awt.geom.Point2D$Float] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r11 = new java.awt.geom.Point2D$Float
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0: org.apache.fontbox.cff.Type2CharString getType2CharString(int)>(i1) >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $i3 = virtualinvoke $r10.<org.apache.fontbox.cff.Type2CharString: int getWidth()>()
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $i3 = virtualinvoke $r10.<org.apache.fontbox.cff.Type2CharString: int getWidth()>() >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : f0 = (float) $i3
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : f0 = (float) $i3 >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : goto [?= $r11 = new java.awt.geom.Point2D$Float]
org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : goto [?= $r11 = new java.awt.geom.Point2D$Float] >>>>>>>> org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getWidthFromFont : $r11 = new java.awt.geom.Point2D$Float
