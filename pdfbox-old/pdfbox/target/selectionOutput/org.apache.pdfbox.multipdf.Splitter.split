org.apache.pdfbox.multipdf.Splitter.split : $r2 = new java.util.ArrayList >>>>>>>> org.apache.pdfbox.multipdf.Splitter.split : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.pdfbox.multipdf.Splitter.split : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.pdfbox.multipdf.Splitter.split : r0.<org.apache.pdfbox.multipdf.Splitter: java.util.List destinationDocuments> = $r2
org.apache.pdfbox.multipdf.Splitter.split : r0.<org.apache.pdfbox.multipdf.Splitter: java.util.List destinationDocuments> = $r2 >>>>>>>> org.apache.pdfbox.multipdf.Splitter.split : r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument sourceDocument> = r1
org.apache.pdfbox.multipdf.Splitter.split : r0.<org.apache.pdfbox.multipdf.Splitter: org.apache.pdfbox.pdmodel.PDDocument sourceDocument> = r1 >>>>>>>> org.apache.pdfbox.multipdf.Splitter.split : specialinvoke r0.<org.apache.pdfbox.multipdf.Splitter: void processPages()>()
org.apache.pdfbox.multipdf.Splitter.split : specialinvoke r0.<org.apache.pdfbox.multipdf.Splitter: void processPages()>() >>>>>>>> org.apache.pdfbox.multipdf.Splitter.split : $r3 = r0.<org.apache.pdfbox.multipdf.Splitter: java.util.List destinationDocuments>
org.apache.pdfbox.multipdf.Splitter.split : $r3 = r0.<org.apache.pdfbox.multipdf.Splitter: java.util.List destinationDocuments> >>>>>>>> org.apache.pdfbox.multipdf.Splitter.split : return $r3
