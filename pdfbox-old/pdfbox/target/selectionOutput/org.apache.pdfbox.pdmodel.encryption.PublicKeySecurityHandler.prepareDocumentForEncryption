org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i0 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if $i0 != 256
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if $i0 != 256 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r16 = new java.io.IOException
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if $i0 != 256 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r21 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if $i0 != 256 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r18 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r18.<java.io.IOException: void <init>(java.lang.Throwable)>($r17)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r18.<java.io.IOException: void <init>(java.lang.Throwable)>($r17) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : throw $r18
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r21 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if r21 != null
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r21 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryption getEncryption()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if r21 != null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r15 = new org.apache.pdfbox.pdmodel.encryption.PDEncryption
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if r21 != null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setFilter(java.lang.String)>("Adobe.PubSec")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if r21 != null >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setFilter(java.lang.String)>("Adobe.PubSec") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i1 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setFilter(java.lang.String)>("Adobe.PubSec") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i1 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setLength(int)>($i1)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i1 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setLength(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setVersion(int)>(2)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setLength(int)>($i1) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setVersion(int)>(2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void removeV45filters()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setVersion(int)>(2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void removeV45filters()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setSubFilter(java.lang.String)>("adbe.pkcs7.s4")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void removeV45filters()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setSubFilter(java.lang.String)>("adbe.pkcs7.s4") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = newarray (byte)[20]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setSubFilter(java.lang.String)>("adbe.pkcs7.s4") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = newarray (byte)[20] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = newarray (byte)[20] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r2 = newarray (byte)[20] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r19 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $r5 = new java.security.SecureRandom]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $r5 = new java.security.SecureRandom] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r5 = new java.security.SecureRandom
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r5 = new java.security.SecureRandom >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r5 = new java.security.SecureRandom >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r5.<java.security.SecureRandom: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(192, $r5)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r5.<java.security.SecureRandom: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(192, $r5) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r23 = virtualinvoke r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(192, $r5) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r23 = virtualinvoke r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r6 = interfaceinvoke r23.<javax.crypto.SecretKey: byte[] getEncoded()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r23 = virtualinvoke r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r6 = interfaceinvoke r23.<javax.crypto.SecretKey: byte[] getEncoded()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r2, 0, 20)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r6 = interfaceinvoke r23.<javax.crypto.SecretKey: byte[] getEncoded()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r2, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[][] computeRecipientsField(byte[])>(r2)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r2, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[][] computeRecipientsField(byte[])>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setRecipients(byte[][])>(r4)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r4 = specialinvoke r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[][] computeRecipientsField(byte[])>(r2) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setRecipients(byte[][])>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i11 = lengthof r2
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setRecipients(byte[][])>(r4) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i11 = lengthof r2 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i12 = 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i12 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i2 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i12 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i2 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i12 >= $i2
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i2 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i12 >= $i2 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r24 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i12)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i12 >= $i2 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r25 = newarray (byte)[i11]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i12 >= $i2 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r25 = newarray (byte)[i11] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r25, 0, 20)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r25 = newarray (byte)[i11] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r25, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i13 = 20
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r25, 0, 20) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i13 = 20 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i14 = 0
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i14 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i3 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i14 = 0 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i3 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i14 >= $i3
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i3 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i14 >= $i3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r26 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i14)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i14 >= $i3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r27 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getSHA1()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : if i14 >= $i3 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r27 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getSHA1()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r28 = virtualinvoke r27.<java.security.MessageDigest: byte[] digest(byte[])>(r25)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r27 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.MessageDigests: java.security.MessageDigest getSHA1()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r28 = virtualinvoke r27.<java.security.MessageDigest: byte[] digest(byte[])>(r25) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i4 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r28 = virtualinvoke r27.<java.security.MessageDigest: byte[] digest(byte[])>(r25) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i4 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i5 = $i4 / 8
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i5 = $i4 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r7 = newarray (byte)[$i5]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r7 = newarray (byte)[$i5] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> = $r7
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> = $r7 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r8 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r8 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: byte[] encryptionKey> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i6 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength>
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i6 = r0.<org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: int keyLength> >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i7 = $i6 / 8
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i7 = $i6 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r28, 0, $r8, 0, $i7)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i7 = $i6 / 8 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r28, 0, $r8, 0, $i7) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: void setEncryptionDictionary(org.apache.pdfbox.pdmodel.encryption.PDEncryption)>(r21)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r28, 0, $r8, 0, $i7) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: void setEncryptionDictionary(org.apache.pdfbox.pdmodel.encryption.PDEncryption)>(r21) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: void setEncryptionDictionary(org.apache.pdfbox.pdmodel.encryption.PDEncryption)>(r21) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r10 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r10 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke $r9.<org.apache.pdfbox.cos.COSDocument: void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)>($r10)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r10 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke $r9.<org.apache.pdfbox.cos.COSDocument: void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= return]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke $r9.<org.apache.pdfbox.cos.COSDocument: void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)>($r10) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= return] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : return
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r26 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i14) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r11 = virtualinvoke r26.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r26 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i14) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r11 = virtualinvoke r26.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r12 = virtualinvoke r26.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r11 = virtualinvoke r26.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r12 = virtualinvoke r26.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i8 = lengthof $r12
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r12 = virtualinvoke r26.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i8 = lengthof $r12 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r25, i13, $i8)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i8 = lengthof $r12 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r25, i13, $i8) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r13 = virtualinvoke r26.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r25, i13, $i8) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r13 = virtualinvoke r26.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i9 = lengthof $r13
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r13 = virtualinvoke r26.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i9 = lengthof $r13 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i13 = i13 + $i9
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i13 = i13 + $i9 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i14 = i14 + 1
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i14 = i14 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i3 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i3 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i3 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i3 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r24 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i12) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r14 = virtualinvoke r24.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r24 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: org.apache.pdfbox.cos.COSString getRecipientStringAt(int)>(i12) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r14 = virtualinvoke r24.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i10 = lengthof $r14
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r14 = virtualinvoke r24.<org.apache.pdfbox.cos.COSString: byte[] getBytes()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i10 = lengthof $r14 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i11 = i11 + $i10
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i11 = i11 + $i10 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i12 = i12 + 1
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : i12 = i12 + 1 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i2 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()]
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i2 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $i2 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : goto [?= $i2 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: int getRecipientsLength()>()] >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r20 = new java.lang.RuntimeException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r19)
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r20 = new java.lang.RuntimeException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : throw $r20
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r19) >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r15 = new org.apache.pdfbox.pdmodel.encryption.PDEncryption >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r15.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void <init>()>()
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r15 = new org.apache.pdfbox.pdmodel.encryption.PDEncryption >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r15.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r21 = $r15
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r15.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void <init>()>() >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r21 = $r15 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : virtualinvoke r21.<org.apache.pdfbox.pdmodel.encryption.PDEncryption: void setFilter(java.lang.String)>("Adobe.PubSec")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : r21 = $r15 >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r17 := @caughtexception
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : $r16 = new java.io.IOException >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("256 bit key length is not supported yet for public key security")
org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("256 bit key length is not supported yet for public key security") >>>>>>>> org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler.prepareDocumentForEncryption : throw $r16
