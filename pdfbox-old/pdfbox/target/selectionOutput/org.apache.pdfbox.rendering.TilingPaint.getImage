org.apache.pdfbox.rendering.TilingPaint.getImage : r7 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1000) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $r14 = new java.awt.image.ComponentColorModel
org.apache.pdfbox.rendering.TilingPaint.getImage : $r14 = new java.awt.image.ComponentColorModel >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : specialinvoke $r14.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>(r7, 1, 0, 3, 0)
org.apache.pdfbox.rendering.TilingPaint.getImage : specialinvoke $r14.<java.awt.image.ComponentColorModel: void <init>(java.awt.color.ColorSpace,boolean,boolean,int,int)>(r7, 1, 0, 3, 0) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $d0 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getWidth()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $d0 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0)
org.apache.pdfbox.rendering.TilingPaint.getImage : $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : f12 = (float) $d1
org.apache.pdfbox.rendering.TilingPaint.getImage : f12 = (float) $d1 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $d2 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getHeight()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $d2 = virtualinvoke r6.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2)
org.apache.pdfbox.rendering.TilingPaint.getImage : $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : f13 = (float) $d3
org.apache.pdfbox.rendering.TilingPaint.getImage : f13 = (float) $d3 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $r15 = new org.apache.pdfbox.util.Matrix
org.apache.pdfbox.rendering.TilingPaint.getImage : $r15 = new org.apache.pdfbox.util.Matrix >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : specialinvoke $r15.<org.apache.pdfbox.util.Matrix: void <init>(java.awt.geom.AffineTransform)>(r5)
org.apache.pdfbox.rendering.TilingPaint.getImage : specialinvoke $r15.<org.apache.pdfbox.util.Matrix: void <init>(java.awt.geom.AffineTransform)>(r5) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : f0 = virtualinvoke $r15.<org.apache.pdfbox.util.Matrix: float getScalingFactorX()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : f0 = virtualinvoke $r15.<org.apache.pdfbox.util.Matrix: float getScalingFactorX()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : f1 = virtualinvoke $r15.<org.apache.pdfbox.util.Matrix: float getScalingFactorY()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : f1 = virtualinvoke $r15.<org.apache.pdfbox.util.Matrix: float getScalingFactorY()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : f14 = f12 * f0
org.apache.pdfbox.rendering.TilingPaint.getImage : f14 = f12 * f0 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : f15 = f13 * f1
org.apache.pdfbox.rendering.TilingPaint.getImage : f15 = f13 * f1 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $d4 = (double) f14
org.apache.pdfbox.rendering.TilingPaint.getImage : $d4 = (double) f14 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $i2 = staticinvoke <org.apache.pdfbox.rendering.TilingPaint: int ceiling(double)>($d4)
org.apache.pdfbox.rendering.TilingPaint.getImage : $i2 = staticinvoke <org.apache.pdfbox.rendering.TilingPaint: int ceiling(double)>($d4) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i2)
org.apache.pdfbox.rendering.TilingPaint.getImage : i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i2) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $d5 = (double) f15
org.apache.pdfbox.rendering.TilingPaint.getImage : $d5 = (double) f15 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $i3 = staticinvoke <org.apache.pdfbox.rendering.TilingPaint: int ceiling(double)>($d5)
org.apache.pdfbox.rendering.TilingPaint.getImage : $i3 = staticinvoke <org.apache.pdfbox.rendering.TilingPaint: int ceiling(double)>($d5) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : i1 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i3)
org.apache.pdfbox.rendering.TilingPaint.getImage : i1 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i3) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : r10 = virtualinvoke $r14.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i0, i1)
org.apache.pdfbox.rendering.TilingPaint.getImage : r10 = virtualinvoke $r14.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>(i0, i1) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $r16 = new java.awt.image.BufferedImage
org.apache.pdfbox.rendering.TilingPaint.getImage : $r16 = new java.awt.image.BufferedImage >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : specialinvoke $r16.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r14, r10, 0, null)
org.apache.pdfbox.rendering.TilingPaint.getImage : specialinvoke $r16.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r14, r10, 0, null) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : r12 = virtualinvoke $r16.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : r12 = virtualinvoke $r16.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f2 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: float getYStep()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $f2 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: float getYStep()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $b4 = $f2 cmpg 0.0F
org.apache.pdfbox.rendering.TilingPaint.getImage : $b4 = $f2 cmpg 0.0F >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : if $b4 >= 0
org.apache.pdfbox.rendering.TilingPaint.getImage : if $b4 >= 0 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void translate(int,int)>(0, i1)
org.apache.pdfbox.rendering.TilingPaint.getImage : if $b4 >= 0 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: float getXStep()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $f3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: float getXStep()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $b5 = $f3 cmpg 0.0F
org.apache.pdfbox.rendering.TilingPaint.getImage : $b5 = $f3 cmpg 0.0F >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : if $b5 >= 0
org.apache.pdfbox.rendering.TilingPaint.getImage : if $b5 >= 0 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void translate(int,int)>(i0, 0)
org.apache.pdfbox.rendering.TilingPaint.getImage : if $b5 >= 0 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $d7 = (double) f0
org.apache.pdfbox.rendering.TilingPaint.getImage : $d7 = (double) f0 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $d6 = (double) f1
org.apache.pdfbox.rendering.TilingPaint.getImage : $d6 = (double) f1 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void scale(double,double)>($d7, $d6)
org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void scale(double,double)>($d7, $d6) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $r17 = r0.<org.apache.pdfbox.rendering.TilingPaint: org.apache.pdfbox.util.Matrix patternMatrix>
org.apache.pdfbox.rendering.TilingPaint.getImage : $r17 = r0.<org.apache.pdfbox.rendering.TilingPaint: org.apache.pdfbox.util.Matrix patternMatrix> >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f4 = virtualinvoke $r17.<org.apache.pdfbox.util.Matrix: float getScalingFactorX()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $f4 = virtualinvoke $r17.<org.apache.pdfbox.util.Matrix: float getScalingFactorX()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f5 = staticinvoke <java.lang.Math: float abs(float)>($f4)
org.apache.pdfbox.rendering.TilingPaint.getImage : $f5 = staticinvoke <java.lang.Math: float abs(float)>($f4) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $r18 = r0.<org.apache.pdfbox.rendering.TilingPaint: org.apache.pdfbox.util.Matrix patternMatrix>
org.apache.pdfbox.rendering.TilingPaint.getImage : $r18 = r0.<org.apache.pdfbox.rendering.TilingPaint: org.apache.pdfbox.util.Matrix patternMatrix> >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f6 = virtualinvoke $r18.<org.apache.pdfbox.util.Matrix: float getScalingFactorY()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $f6 = virtualinvoke $r18.<org.apache.pdfbox.util.Matrix: float getScalingFactorY()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6)
org.apache.pdfbox.rendering.TilingPaint.getImage : $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : r13 = staticinvoke <org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix getScaleInstance(float,float)>($f5, $f7)
org.apache.pdfbox.rendering.TilingPaint.getImage : r13 = staticinvoke <org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix getScaleInstance(float,float)>($f5, $f7) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $r19 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $r19 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f8 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $f8 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftX()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f9 = neg $f8
org.apache.pdfbox.rendering.TilingPaint.getImage : $f9 = neg $f8 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $r20 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $r20 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: org.apache.pdfbox.pdmodel.common.PDRectangle getBBox()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f10 = virtualinvoke $r20.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : $f10 = virtualinvoke $r20.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getLowerLeftY()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f11 = neg $f10
org.apache.pdfbox.rendering.TilingPaint.getImage : $f11 = neg $f10 >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $r21 = staticinvoke <org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix getTranslateInstance(float,float)>($f9, $f11)
org.apache.pdfbox.rendering.TilingPaint.getImage : $r21 = staticinvoke <org.apache.pdfbox.util.Matrix: org.apache.pdfbox.util.Matrix getTranslateInstance(float,float)>($f9, $f11) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r13.<org.apache.pdfbox.util.Matrix: void concatenate(org.apache.pdfbox.util.Matrix)>($r21)
org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r13.<org.apache.pdfbox.util.Matrix: void concatenate(org.apache.pdfbox.util.Matrix)>($r21) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r1.<org.apache.pdfbox.rendering.PageDrawer: void drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)>(r12, r2, r3, r4, r13)
org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r1.<org.apache.pdfbox.rendering.PageDrawer: void drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)>(r12, r2, r3, r4, r13) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void dispose()>()
org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void dispose()>() >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : return $r16
org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void translate(int,int)>(i0, 0) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void scale(double,double)>(-1.0, 1.0)
org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void scale(double,double)>(-1.0, 1.0) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $d7 = (double) f0
org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void translate(int,int)>(0, i1) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void scale(double,double)>(1.0, -1.0)
org.apache.pdfbox.rendering.TilingPaint.getImage : virtualinvoke r12.<java.awt.Graphics2D: void scale(double,double)>(1.0, -1.0) >>>>>>>> org.apache.pdfbox.rendering.TilingPaint.getImage : $f3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern: float getXStep()>()
