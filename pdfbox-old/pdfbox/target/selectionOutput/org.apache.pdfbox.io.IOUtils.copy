org.apache.pdfbox.io.IOUtils.copy : r2 = newarray (byte)[4096] >>>>>>>> org.apache.pdfbox.io.IOUtils.copy : l2 = 0L
org.apache.pdfbox.io.IOUtils.copy : l2 = 0L >>>>>>>> org.apache.pdfbox.io.IOUtils.copy : $i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)
org.apache.pdfbox.io.IOUtils.copy : $i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2) >>>>>>>> org.apache.pdfbox.io.IOUtils.copy : if -1 == $i0
org.apache.pdfbox.io.IOUtils.copy : if -1 == $i0 >>>>>>>> org.apache.pdfbox.io.IOUtils.copy : virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0)
org.apache.pdfbox.io.IOUtils.copy : if -1 == $i0 >>>>>>>> org.apache.pdfbox.io.IOUtils.copy : return l2
org.apache.pdfbox.io.IOUtils.copy : virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0) >>>>>>>> org.apache.pdfbox.io.IOUtils.copy : $l1 = (long) $i0
org.apache.pdfbox.io.IOUtils.copy : $l1 = (long) $i0 >>>>>>>> org.apache.pdfbox.io.IOUtils.copy : l2 = l2 + $l1
org.apache.pdfbox.io.IOUtils.copy : l2 = l2 + $l1 >>>>>>>> org.apache.pdfbox.io.IOUtils.copy : goto [?= $i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)]
org.apache.pdfbox.io.IOUtils.copy : goto [?= $i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)] >>>>>>>> org.apache.pdfbox.io.IOUtils.copy : $i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r2)
