org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.isSolrIndexNode : $r1 = "solr"
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r10 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry: java.util.Map indexingServerRegistry>
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r4 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$1: int[] $SwitchMap$org$apache$jackrabbit$oak$plugins$index$solr$server$SolrServerRegistry$Strategy>
org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get : $r11 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry: java.util.Map indexingServerRegistry>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z8 = virtualinvoke $r6.<java.io.File: boolean mkdirs()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r6 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.checkSolrConfiguration : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void copy(java.lang.String,java.lang.String)>("/solr/solr.xml", r1)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : if r3 == null goto return r7
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : return r7
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValueFor : r7 = r2
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getCoreName : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String coreName>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.propertyAdded : r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: boolean propertiesChanged> = 1
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r9 = interfaceinvoke r5.<org.apache.jackrabbit.oak.spi.state.ChildNodeEntry: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: org.apache.jackrabbit.oak.spi.state.NodeState root>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : r3 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.spi.state.NodeState getChildNode(java.lang.String)>("oak:index")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r7 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r8 = interfaceinvoke r5.<org.apache.jackrabbit.oak.spi.state.ChildNodeEntry: org.apache.jackrabbit.oak.spi.state.NodeState getNodeState()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r6 = interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getChildNodeEntries()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : if z0 == 0 goto return r2
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r6 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: org.apache.jackrabbit.oak.spi.state.NodeState root>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r2 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: java.util.Collection collectIndexNodePaths(org.apache.jackrabbit.oak.spi.query.Filter,boolean)>(r1, 1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.collapseJcrContentNodes : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: boolean getBooleanValueFor(java.lang.String,boolean)>("collapseJcrContentNodes", 0)
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : if r15 != null goto return r15
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r14 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy INDEXING>
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider solrServerProvider>
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r3 = virtualinvoke r1.<org.apache.solr.client.solrj.SolrRequest: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : if z0 == 0 goto $r14 = <org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy: org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry$Strategy SEARCHING>
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.getServer : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.childNodeAdded : $r3 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : r15 = interfaceinvoke r14.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder child(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : $r2 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type NAME>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : $r4 = interfaceinvoke $r3.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("type", "solr")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : if r1 == null goto return r15
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : $r5 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(java.lang.String,java.lang.Object)>("async", "async")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : $r10 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRINGS>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : $z0 = interfaceinvoke r14.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean hasChildNode(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : $r8 = interfaceinvoke r15.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder child(java.lang.String)>("server")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookupTest.newSolrIndexDefinition : $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("ignoredProperties")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : r6 = <org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults: java.util.Collection IGNORED_PROPERTIES>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : if r1 == null goto r6 = <org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults: java.util.Collection IGNORED_PROPERTIES>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.isPersistedConfiguration : $z0 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean hasChildNode(java.lang.String)>("server")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if r1 == null goto r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("usedProperties")
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: void checkSolrConfiguration(java.lang.String,java.lang.String)>(r1, r2)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : if r1 == null goto $r12 = new java.lang.Exception
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : if r2 == null goto $r12 = new java.lang.Exception
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r8 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.createSolrServer : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration solrServerConfiguration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $z1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider: boolean isPersistedConfiguration(org.apache.jackrabbit.oak.spi.state.NodeBuilder)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : goto [?= return r20]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : r21 = interfaceinvoke r2.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeState getNodeState()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : r20 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider: org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor getEditor(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration,org.apache.solr.client.solrj.SolrClient,org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback)>($r12, $r16, r4)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r8 = "solr"
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : r20 = null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : return r20
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getIndexEditor : $r12 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor parent>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String path>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.getPath : $r2 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String path>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.createIndexNodePath : $r2 = newarray (java.lang.String)[2]
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.getSolrServer : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider: org.apache.solr.client.solrj.SolrClient createSolrServer()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.solr.client.solrj.SolrClient solrServer>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $z0 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: boolean propertiesChanged>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r18 = new org.apache.jackrabbit.oak.api.CommitFailedException
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.leave : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback updateCallback>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r15 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r26 = virtualinvoke r43.<java.lang.Object: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r45 = r43
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r46 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : virtualinvoke $r8.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object)>(r42, r43)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r39 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : if r42 == null goto r42 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r25 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : goto [?= $z5 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r9 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r21 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r18 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r42 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r16 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $z2 = interfaceinvoke r41.<org.apache.jackrabbit.oak.api.PropertyState: boolean isArray()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : r3 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r23 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r11 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration configuration>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor.docFromState : $r8 = new org.apache.solr.common.SolrInputDocument
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : $r5 = new org.apache.solr.client.solrj.SolrServerException
org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer.request : r6 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer: org.apache.solr.client.solrj.SolrClient getServer(org.apache.solr.client.solrj.SolrRequest)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : if r18 == null goto $r13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r17 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("coreName", "oak")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r3 = "embedded"
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r18 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrContext", null)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r12 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("httpPort", "0")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r16 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrHomePath", "solr")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrServerType", null)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r5 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : if r3 == null goto return r7
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : return r7
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: org.apache.jackrabbit.oak.spi.state.NodeState nodeState>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : r7 = r2
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : return z1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : z1 = z0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : if r2 == null goto return z1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathField : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("pathField", "path_exact")
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : $r9 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Tree: org.apache.jackrabbit.oak.api.Tree addChild(java.lang.String)>("subtree")
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : interfaceinvoke r3.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("commitPolicy", "hard")
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : interfaceinvoke r4.<org.apache.jackrabbit.oak.api.Tree: void setProperty(java.lang.String,java.lang.Object)>("solrServerType", "embedded")
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : $r15 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT: org.apache.jackrabbit.oak.api.Root root>
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT: org.apache.jackrabbit.oak.api.Root root>
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT: org.apache.jackrabbit.oak.api.Tree createTestIndexNode(org.apache.jackrabbit.oak.api.Tree,java.lang.String)>(r2, "solr")
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createTestIndexNode : r4 = interfaceinvoke r3.<org.apache.jackrabbit.oak.api.Tree: org.apache.jackrabbit.oak.api.Tree addChild(java.lang.String)>("server")
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createRepository : $r8 = virtualinvoke $r6.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.spi.security.SecurityProvider)>($r7)
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createRepository : $r13 = virtualinvoke $r12.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.api.ContentRepository createContentRepository()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createRepository : $r10 = virtualinvoke $r8.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.spi.query.QueryIndexProvider)>($r9)
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createRepository : $r2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createRepository : $r3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createRepository : $r4 = new org.apache.jackrabbit.oak.Oak
org.apache.jackrabbit.oak.plugins.index.solr.query.SubtreeSolrIndexIT.createRepository : $r12 = virtualinvoke $r10.<org.apache.jackrabbit.oak.Oak: org.apache.jackrabbit.oak.Oak 'with'(org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider)>($r11)
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : r11 = null
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : $r7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditor
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : if r2 == null goto $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : goto [?= return r11]
org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider.getEditor : return r11
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : if r2 == null goto return r6
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : r6 = null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getPathDepthField : $r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("depthField", "path_depth")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Type type>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r24 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Type type>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor> = r4
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r4 = r2[i2]
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r2 = virtualinvoke $r25.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r20 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor>
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : lookupswitch(i0) {     case 2: goto $r9 = new java.lang.StringBuilder;     case 4: goto $r5 = new java.lang.StringBuilder;     case 12: goto $r1 = new java.lang.StringBuilder;     default: goto $r13 = new java.lang.StringBuilder; }
org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField : $r13 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getFieldNameFor : if r2 == null goto return null
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getFieldNameFor : r2 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("typeMappings")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.toString : $r1 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getSolrHomePath : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: java.lang.String solrHomePath>
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r10 = new java.io.File
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : staticinvoke <org.apache.jackrabbit.oak.commons.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>(r18, $r12)
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r12 = new java.io.FileOutputStream
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r18 = null
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $z0 = virtualinvoke $r10.<java.io.File: boolean createNewFile()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : r19 = null
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : $r6 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider.copy : throw $r16
org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.getHttpConfiguration : $r1 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration: org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration$HttpConfiguration httpConfiguration>
