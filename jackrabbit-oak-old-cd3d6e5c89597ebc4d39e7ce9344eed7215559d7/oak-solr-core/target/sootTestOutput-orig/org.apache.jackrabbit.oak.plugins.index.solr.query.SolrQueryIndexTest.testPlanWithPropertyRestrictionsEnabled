org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.isSolrIndexNode : $r1 = "solr"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : i2 = i2 + 1
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r7 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction getPropertyRestriction(java.lang.String)>("native*solr")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : i2 = 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r6 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r11 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $z3 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r3 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r13 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r4 = <org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction NO_RESTRICTION>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r9 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getFulltextConditions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $z0 = interfaceinvoke r2.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPrimaryTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction getPropertyRestriction(java.lang.String)>("native*lucene")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r14 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Set getPrimaryTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getMatchingFilterRestrictions : $r10 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.util.Collection getFulltextConditions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r9 = interfaceinvoke r5.<org.apache.jackrabbit.oak.spi.state.ChildNodeEntry: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: org.apache.jackrabbit.oak.spi.state.NodeState root>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : r3 = interfaceinvoke r0.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.spi.state.NodeState getChildNode(java.lang.String)>("oak:index")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r7 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r8 = interfaceinvoke r5.<org.apache.jackrabbit.oak.spi.state.ChildNodeEntry: org.apache.jackrabbit.oak.spi.state.NodeState getNodeState()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r6 = interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getChildNodeEntries()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : if z0 == 0 goto return r2
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r6 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: org.apache.jackrabbit.oak.spi.state.NodeState root>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : $r2 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup: java.util.Collection collectIndexNodePaths(org.apache.jackrabbit.oak.spi.query.Filter,boolean)>(r1, 1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.collectIndexNodePaths : r2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getConfiguration : r16 = r2
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getConfiguration : goto [?= $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getConfiguration : $z3 = interfaceinvoke r16.<org.apache.jackrabbit.oak.spi.state.NodeState: boolean hasChildNode(java.lang.String)>("server")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getConfiguration : $r9 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getConfiguration : r16 = interfaceinvoke r16.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.spi.state.NodeState getChildNode(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getConfiguration : $r4 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: java.lang.Iterable elements(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getConfiguration : $z1 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: boolean isSolrIndexNode(org.apache.jackrabbit.oak.spi.state.NodeState)>(r16)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getEstimator : $r2 = <org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: java.util.Map estimators>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getEstimator : $r3 = <org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: java.util.Map estimators>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.hasIgnoredProperties : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.hasIgnoredProperties : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.hasIgnoredProperties : $z1 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: boolean isIgnoredProperty(org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration)>(r3, r1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.hasIgnoredProperties : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("ignoredProperties")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : r6 = <org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults: java.util.Collection IGNORED_PROPERTIES>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getIgnoredProperties : if r1 == null goto r6 = <org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults: java.util.Collection IGNORED_PROPERTIES>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getServer : $z1 = staticinvoke <org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer: boolean isSolrIndexNode(org.apache.jackrabbit.oak.spi.state.NodeState)>(r18)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getServer : $z3 = interfaceinvoke r18.<org.apache.jackrabbit.oak.spi.state.NodeState: boolean hasChildNode(java.lang.String)>("server")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getServer : $r9 = interfaceinvoke r18.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.spi.state.NodeState getChildNode(java.lang.String)>("server")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getServer : r18 = interfaceinvoke r18.<org.apache.jackrabbit.oak.spi.state.NodeState: org.apache.jackrabbit.oak.spi.state.NodeState getChildNode(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getServer : goto [?= $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getServer : $r4 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: java.lang.Iterable elements(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getServer : $r8 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getServer : r18 = r2
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getServer : $r11 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : if r1 == null goto r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getUsedProperties : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: java.lang.Iterable getStringValuesFor(java.lang.String)>("usedProperties")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $r12 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r6 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r11)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r11 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan getIndexPlan(org.apache.jackrabbit.oak.spi.query.Filter,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration,org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator,java.util.List,java.lang.String)>(r1, r8, r10, r2, r7)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r10 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator getEstimator(java.lang.String)>(r7)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r11 == null goto (branch)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r8 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration getConfiguration(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)>(r7, r3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : r9 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.solr.client.solrj.SolrClient getServer(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)>(r7, r3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r8 == null goto (branch)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : $i0 = interfaceinvoke r4.<java.util.Collection: int size()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPlans : if r9 == null goto (branch)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.useForPropertyRestrictions : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: boolean getBooleanValueFor(java.lang.String,boolean)>("propertyRestrictions", 0)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrIndexLookup.createIndexNodePath : $r2 = newarray (java.lang.String)[2]
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $d0 = (double) l2
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : l2 = 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : i3 = 0
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.estimate : $l0 = staticinvoke <java.lang.Math: long max(long,long)>(0L, l2)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPathPrefix : r2 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: java.lang.String getAncestorPath(java.lang.String,int)>(r1, 2)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getPathPrefix : $z0 = staticinvoke <org.apache.jackrabbit.oak.commons.PathUtils: boolean denotesRoot(java.lang.String)>(r2)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getIndexPlan : $i0 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: int getMatchingFilterRestrictions(org.apache.jackrabbit.oak.spi.query.Filter,org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration)>(r1, r2)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getIndexPlan : $r6 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder planBuilder(org.apache.jackrabbit.oak.spi.query.Filter)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getIndexPlan : $l1 = virtualinvoke r3.<org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: long estimate(org.apache.jackrabbit.oak.spi.query.Filter)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getIndexPlan : $r12 = virtualinvoke $r11.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan build()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getIndexPlan : $r8 = virtualinvoke $r7.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder setSortOrder(java.util.List)>(r4)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getIndexPlan : $r9 = virtualinvoke $r8.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder setPlanName(java.lang.String)>(r5)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.getIndexPlan : $r10 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex: java.lang.String getPathPrefix(java.lang.String)>(r5)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : if r18 == null goto $r13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r17 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("coreName", "oak")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r3 = "embedded"
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r18 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrContext", null)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : $r12 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("httpPort", "0")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r16 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrHomePath", "solr")
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getSolrServerConfiguration : r1 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: java.lang.String getStringValueFor(java.lang.String,java.lang.String)>("solrServerType", null)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r5 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type STRING>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : if r3 == null goto return r7
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : return r7
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : $r4 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider: org.apache.jackrabbit.oak.spi.state.NodeState nodeState>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.getStringValueFor : r7 = r2
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : $r4 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BOOLEAN>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : return z1
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : z1 = z0
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getBooleanValueFor : if r2 == null goto return z1
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexTest.newSelector : $r5 = new org.apache.jackrabbit.oak.query.ast.SelectorImpl
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexTest.newSelector : r3 = interfaceinvoke $r4.<org.apache.jackrabbit.oak.query.ast.NodeTypeInfoProvider: org.apache.jackrabbit.oak.query.ast.NodeTypeInfo getNodeTypeInfo(java.lang.String)>("nt:base")
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexTest.newSelector : $r4 = new org.apache.jackrabbit.oak.query.NodeStateNodeTypeInfoProvider
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.useForPrimaryTypes : $z0 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: boolean getBooleanValueFor(java.lang.String,boolean)>("primaryTypes", 0)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : $r3 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration: org.apache.jackrabbit.oak.spi.state.NodeState definition>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : if r2 == null goto return r6
org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.getStringValuesFor : r6 = null
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 2 goto (branch)
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $z0 = <org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator: boolean $assertionsDisabled>
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $z1 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: boolean containsNativeConstraint()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 4 goto return 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r4 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.Filter$PathRestriction getPathRestriction()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : $r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.spi.query.Filter: org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression getFullTextConstraint()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 1 goto (branch)
org.apache.jackrabbit.oak.plugins.index.solr.query.LMSEstimator.getInput : if i0 != 3 goto (branch)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.planBuilder : $r8 = virtualinvoke $r7.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder setDelayed(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.planBuilder : $r4 = virtualinvoke $r3.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder setCostPerEntry(double)>(0.3)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.planBuilder : $r5 = virtualinvoke $r4.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder setFilter(org.apache.jackrabbit.oak.spi.query.Filter)>(r1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.planBuilder : $r2 = new org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.planBuilder : $r7 = virtualinvoke $r6.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder setIncludesNodeData(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.planBuilder : $r6 = virtualinvoke $r5.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder setFulltextIndex(boolean)>(1)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.planBuilder : $r3 = virtualinvoke $r2.<org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder: org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder setCostPerExecution(double)>(1.5)
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r10 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Type type>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r14 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r24 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Type type>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor> = r4
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r4 = r2[i2]
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r5 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor>
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : r2 = virtualinvoke $r25.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r20 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()
org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration.getProvider : $r7 = r0.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration: java.lang.reflect.Constructor constructor>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $z2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: boolean useForPropertyRestrictions()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r13 = "rep:facet"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r5 = "native*solr"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r15 = ":localname"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r11 = "oak:scoreExplanation"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r9 = "rep:excerpt"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r6 = interfaceinvoke r1.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getUsedProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r7 = r0.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName>
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r17 = interfaceinvoke r1.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.util.Collection getIgnoredProperties()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r3 = "native*lucene"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.isIgnoredProperty : $r16 = r0.<org.apache.jackrabbit.oak.spi.query.Filter$PropertyRestriction: java.lang.String propertyName>
