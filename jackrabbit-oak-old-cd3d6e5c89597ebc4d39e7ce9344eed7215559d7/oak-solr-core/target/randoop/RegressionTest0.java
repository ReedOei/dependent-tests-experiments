import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.SOLRHOME_PATH;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "solrHomePath" + "'", str0.equals("solrHomePath"));
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState0 = null;
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration oakSolrNodeStateConfiguration1 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration(nodeState0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.TYPE_MAPPINGS;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "typeMappings" + "'", str0.equals("typeMappings"));
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration solrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy1 = null;
        try {
            org.apache.solr.client.solrj.SolrClient solrClient2 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get(solrServerConfiguration0, strategy1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.TYPE;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "solr" + "'", str0.equals("solr"));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration0);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient2 = remoteSolrServerProvider1.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState0 = null;
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider nodeStateSolrServerConfigurationProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider(nodeState0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService solrQueryIndexProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService();
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.USED_PROPERTIES;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "usedProperties" + "'", str0.equals("usedProperties"));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.COLLECTION;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "collection" + "'", str0.equals("collection"));
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.HTTP_URL;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "http://127.0.0.1:8983/solr/oak" + "'", str0.equals("http://127.0.0.1:8983/solr/oak"));
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.REPLICATION_FACTOR;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "replicationFactor" + "'", str0.equals("replicationFactor"));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.COMMIT_POLICY;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "commitPolicy" + "'", str0.equals("commitPolicy"));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.CATCHALL_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "catch_all" + "'", str0.equals("catch_all"));
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.COLLECTION;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "oak" + "'", str0.equals("oak"));
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.CORE_NAME;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "oak" + "'", str0.equals("oak"));
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        boolean b0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.COLLAPSE_JCR_CONTENT_NODES;
        org.junit.Assert.assertTrue(b0 == false);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.CATCHALL_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "catchAllField" + "'", str0.equals("catchAllField"));
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration0);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient2 = remoteSolrServerProvider1.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.DESCENDANTS_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "descendantsField" + "'", str0.equals("descendantsField"));
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider1, oakSolrConfigurationProvider2);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient4 = remoteSolrServerProvider1.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.COLLAPSED_PATH_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "pathField" + "'", str0.equals("pathField"));
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.DEPTH_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "depthField" + "'", str0.equals("depthField"));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        boolean b0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.PATH_RESTRICTIONS;
        org.junit.Assert.assertTrue(b0 == false);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState0 = null;
        try {
            boolean b1 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer.isSolrIndexNode(nodeState0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        boolean b0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.PROPERTY_RESTRICTIONS;
        org.junit.Assert.assertTrue(b0 == false);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.COLLAPSED_PATH_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "path_collapsed" + "'", str0.equals("path_collapsed"));
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.SERVER_TYPE;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "solrServerType" + "'", str0.equals("solrServerType"));
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.LOCAL_BASE_URL;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "http://127.0.0.1" + "'", str0.equals("http://127.0.0.1"));
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction3 = null;
        try {
            java.lang.String str4 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.ANC_FIELD_NAME;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "path_anc" + "'", str0.equals("path_anc"));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.SHARDS_NO;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "shardsNo" + "'", str0.equals("shardsNo"));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.CONFIGURATION_DIRECTORY;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "" + "'", str0.equals(""));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.TYPE_MAPPINGS;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "" + "'", str0.equals(""));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.ROWS;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "rows" + "'", str0.equals("rows"));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.PATH_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "pathField" + "'", str0.equals("pathField"));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.ZK_HOST;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "127.0.0.1:9983" + "'", str0.equals("127.0.0.1:9983"));
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.PROPERTY_RESTRICIONS;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "propertyRestrictions" + "'", str0.equals("propertyRestrictions"));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.jackrabbit.oak.spi.lifecycle.RepositoryInitializer repositoryInitializer0 = org.apache.jackrabbit.oak.spi.lifecycle.RepositoryInitializer.DEFAULT;
        org.junit.Assert.assertNotNull(repositoryInitializer0);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.PATH_RESTRICTIONS;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "pathRestrictions" + "'", str0.equals("pathRestrictions"));
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.CONTEXT;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "/solr" + "'", str0.equals("/solr"));
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.PRIMARY_TYPES;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "primaryTypes" + "'", str0.equals("primaryTypes"));
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        int i0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.CONNECTION_TIMEOUT;
        org.junit.Assert.assertTrue(i0 == 3000);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.CONTEXT;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "solrContext" + "'", str0.equals("solrContext"));
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.CHILDREN_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "childrenField" + "'", str0.equals("childrenField"));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.HTTP_PORT;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "8983" + "'", str0.equals("8983"));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.CORE_NAME;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "coreName" + "'", str0.equals("coreName"));
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState0);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient2 = nodeStateSolrServerProvider1.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState0);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient2 = nodeStateSolrServerProvider1.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient1.addBean("solrServerType", (java.lang.Object) "127.0.0.1:9983", (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        int i0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.SOCKET_TIMEOUT;
        org.junit.Assert.assertTrue(i0 == 3000);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.lang.String[] str_array16 = new java.lang.String[] { "primaryTypes", "pathField", "path_depth", "pathField", "typeMappings", "propertyRestrictions", "127.0.0.1:9983", "pathField", "", "descendantsField", "primaryTypes", "path_anc", "" };
        java.util.ArrayList<java.lang.String> arraylist_str17 = new java.util.ArrayList<java.lang.String>();
        boolean b18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str17, str_array16);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse19 = solrClient1.deleteById("catchAllField", (java.util.List<java.lang.String>) arraylist_str17);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(str_array16);
        org.junit.Assert.assertTrue(b18 == true);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.lang.String[] str_array18 = new java.lang.String[] { "childrenField", "solrHomePath", "childrenField", "solr", "http://127.0.0.1", "typeMappings", "path_exact", "solrServerType", "solr", "commitPolicy", "path_collapsed", "path_exact", "shardsNo", "solr", "catch_all", "commitPolicy" };
        java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
        boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str19, str_array18);
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList21 = solrClient1.getById((java.util.Collection<java.lang.String>) arraylist_str19);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue(b20 == true);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.optimize("/solr", true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.lang.String[] str_array25 = new java.lang.String[] { "pathRestrictions", "pathRestrictions", "primaryTypes", "solrServerType", "path_anc", "descendantsField", "http://127.0.0.1:8983/solr/oak", "rows", "oak", "collection", "descendantsField", "/solr", "127.0.0.1:9983", "propertyRestrictions", "", "commitPolicy", "usedProperties", "solrServerType", "propertyRestrictions", "replicationFactor", "depthField", "childrenField", "typeMappings" };
        java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
        boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str26, str_array25);
        org.apache.solr.common.params.SolrParams solrParams28 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList29 = solrClient1.getById((java.util.Collection<java.lang.String>) arraylist_str26, solrParams28);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertTrue(b27 == true);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServersObserver nodeStateSolrServersObserver0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServersObserver();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState1 = null;
        org.apache.jackrabbit.oak.spi.commit.CommitInfo commitInfo2 = null;
        try {
            nodeStateSolrServersObserver0.contentChanged(nodeState1, commitInfo2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction2 = null;
        try {
            java.lang.String str3 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient4.query("collection", solrParams6, mETHOD7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams3 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback4 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse5 = solrClient2.queryAndStreamResponse(solrParams3, streamingResponseCallback4);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array15 = new java.lang.String[] { "typeMappings", "replicationFactor", "pathRestrictions", "catch_all", "rows", "/solr", "catch_all", "/solr", "solrContext", "propertyRestrictions", "hi!", "catchAllField" };
        java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
        boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str16, str_array15);
        org.apache.solr.common.params.SolrParams solrParams18 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList19 = solrClient2.getById((java.util.Collection<java.lang.String>) arraylist_str16, solrParams18);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertTrue(b17 == true);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.lang.String[] str_array9 = new java.lang.String[] { "primaryTypes", "8983", "propertyRestrictions", "http://127.0.0.1:8983/solr/oak" };
        java.util.ArrayList<java.lang.String> arraylist_str10 = new java.util.ArrayList<java.lang.String>();
        boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str10, str_array9);
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList12 = solrClient4.getById((java.util.Collection<java.lang.String>) arraylist_str10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertTrue(b11 == true);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        int i13 = remoteSolrServerConfiguration9.getSolrShardsNo();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i13 == 1);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams3 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse4 = solrClient1.query("rows", solrParams3);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.DESC_FIELD_NAME;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "path_des" + "'", str0.equals("path_des"));
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.PATH_FIELD_NAME;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "path_exact" + "'", str0.equals("path_exact"));
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry solrServerRegistry0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry();
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = solrQueryIndex3.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.Filter filter5 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState6 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor7 = solrQueryIndex3.query(filter5, nodeState6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator4);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.commit("solrContext", true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient4.commit("path_collapsed", true, false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array30 = new java.lang.String[] { "http://127.0.0.1", "shardsNo", "catchAllField", "rows", "collection", "", "8983", "primaryTypes", "path_des", "127.0.0.1:9983", "catchAllField", "shardsNo", "usedProperties", "127.0.0.1:9983", "/solr", "commitPolicy", "hi!", "path_anc", "http://127.0.0.1", "path_anc", "childrenField", "catch_all", "pathField", "path_anc", "pathRestrictions", "path_depth" };
        java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
        boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str31, str_array30);
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList33 = solrClient2.getById("/solr", (java.util.Collection<java.lang.String>) arraylist_str31);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertTrue(b32 == true);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams4 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse5 = solrClient2.query("path_depth", solrParams4);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer3 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(false, "http://127.0.0.1", false);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder4 = null;
        try {
            solrIndexInitializer3.initialize(nodeBuilder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient1.optimize("descendantsField", true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.PROPERTY_MAPPINGS;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "" + "'", str0.equals(""));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams5 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument6 = solrClient2.getById("commitPolicy", "commitPolicy", solrParams5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.deleteById("replicationFactor", "8983");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams5 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse6 = solrClient4.query(solrParams5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.deleteById("rows", (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.commit(false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        java.lang.String str2 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField((-1), "hi!");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!_string_sort" + "'", str2.equals("hi!_string_sort"));
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.commit(true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.deleteByQuery("typeMappings", (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument4 = solrClient1.getById("path_des", "oak");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan4 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState5 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor6 = solrQueryIndex3.query(indexPlan4, nodeState5);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.PATH_DEPTH_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "path_depth" + "'", str0.equals("path_depth"));
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.HTTP_PORT;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "httpPort" + "'", str0.equals("httpPort"));
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument2 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse3 = solrClient1.add(iterator_solrInputDocument2);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState0);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient2 = nodeStateSolrServerProvider1.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.deleteById("pathRestrictions", (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient1.optimize(true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array37 = new java.lang.String[] { "http://127.0.0.1:8983/solr/oak", "usedProperties", "propertyRestrictions", "path_depth", "commitPolicy", "descendantsField", "http://127.0.0.1:8983/solr/oak", "solrContext", "childrenField", "8983", "", "usedProperties", "pathField", "childrenField", "catch_all", "descendantsField", "", "127.0.0.1:9983", "solrServerType", "path_anc", "shardsNo", "usedProperties", "coreName", "path_depth", "", "path_collapsed", "depthField", "catch_all", "http://127.0.0.1", "commitPolicy", "solrHomePath", "shardsNo", "typeMappings", "pathRestrictions" };
        java.util.ArrayList<java.lang.String> arraylist_str38 = new java.util.ArrayList<java.lang.String>();
        boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str38, str_array37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse40 = solrClient2.deleteById((java.util.List<java.lang.String>) arraylist_str38);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(str_array37);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams4 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback5 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse6 = solrClient2.queryAndStreamResponse("pathField", solrParams4, streamingResponseCallback5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array3 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument4 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument4, solrInputDocument_array3);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient1.add("descendantsField", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument4);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrInputDocument_array3);
        org.junit.Assert.assertTrue(b5 == false);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration oakSolrNodeStateConfiguration0 = null;
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties properties1 = oakSolrNodeStateConfiguration0.new Properties();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan4 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState5 = null;
        try {
            java.lang.String str6 = solrQueryIndex3.getPlanDescription(indexPlan4, nodeState5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient2.addBean((java.lang.Object) "8983");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.reflect.Type type13 = remoteSolrServerConfiguration9.getType();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(type13);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.COLLAPSE_JCR_CONTENT_NODES;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "collapseJcrContentNodes" + "'", str0.equals("collapseJcrContentNodes"));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider embeddedSolrServerConfigurationProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider> solrserverconfiguration_embeddedSolrServerProvider1 = embeddedSolrServerConfigurationProvider0.getSolrServerConfiguration();
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer oakSolrServer2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider) embeddedSolrServerConfigurationProvider0);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
        org.junit.Assert.assertNull(solrserverconfiguration_embeddedSolrServerProvider1);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.CHILD_FIELD_NAME;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "path_child" + "'", str0.equals("path_child"));
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument5 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient4.add(solrInputDocument5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument9 = solrClient5.getById("http://127.0.0.1", solrParams8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array8 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument9 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument9, solrInputDocument_array8);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse12 = solrClient5.add("commitPolicy", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument9, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrInputDocument_array8);
        org.junit.Assert.assertTrue(b10 == false);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient4.queryAndStreamResponse("coreName", solrParams6, streamingResponseCallback7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse7 = solrClient4.query("usedProperties", solrParams6);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils nodeTypeIndexingUtils0 = new org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils();
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array22);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse26 = solrClient5.addBean("descendantsField", (java.lang.Object) "pathField", (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array22);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array6 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument7 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, solrInputDocument_array6);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrInputDocument_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = solrQueryIndex3.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.Filter filter5 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array6 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry7 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry7, orderEntry_array6);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState9 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan10 = solrQueryIndex3.getPlans(filter5, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry7, nodeState9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator4);
        org.junit.Assert.assertNotNull(orderEntry_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.deleteById("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = solrQueryIndex3.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan5 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState6 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor7 = solrQueryIndex3.query(indexPlan5, nodeState6);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator4);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient5.queryAndStreamResponse("hi!", solrParams7, streamingResponseCallback8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array3 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument4 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument4, solrInputDocument_array3);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient1.add("127.0.0.1:9983", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument4);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrInputDocument_array3);
        org.junit.Assert.assertTrue(b5 == false);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        int i0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.REPLICATION_FACTOR;
        org.junit.Assert.assertTrue(i0 == 2);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        java.lang.String[] str_array23 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array23);
        java.lang.String str25 = remoteSolrServerConfiguration24.getSolrZkHost();
        java.lang.String[] str_array26 = remoteSolrServerConfiguration24.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration27 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("path_des", "usedProperties", (int) (byte) 0, (int) (short) 0, "catchAllField", (int) (byte) 10, (int) (byte) 0, str_array26);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse29 = solrClient5.addBean("coreName", (java.lang.Object) "usedProperties", (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array23);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        org.junit.Assert.assertNotNull(str_array26);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.optimize("", false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        try {
            org.apache.solr.common.SolrDocument solrDocument9 = solrClient5.getById("shardsNo", "path_child");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.spi.query.Filter filter24 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array25 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry26 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b27 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry26, orderEntry_array25);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState28 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan29 = solrQueryIndex23.getPlans(filter24, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry26, nodeState28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(orderEntry_array25);
        org.junit.Assert.assertTrue(b27 == false);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.PARENT_FIELD;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "parentField" + "'", str0.equals("parentField"));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.deleteById("parentField", "httpPort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array3 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument4 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument4, solrInputDocument_array3);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient1.add("typeMappings", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument4, 32);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrInputDocument_array3);
        org.junit.Assert.assertTrue(b5 == false);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.commit(true, false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState0);
        try {
            java.lang.String str2 = nodeStateSolrServerProvider1.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.util.List<java.lang.String> list_str3 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.deleteById(list_str3, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        java.lang.String[] str_array18 = new java.lang.String[] { "shardsNo", "usedProperties", "127.0.0.1:9983", "8983", "collection", "http://127.0.0.1", "catchAllField", "/solr", "catch_all", "http://127.0.0.1", "solr", "path_collapsed" };
        java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
        boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str19, str_array18);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient5.deleteById((java.util.List<java.lang.String>) arraylist_str19, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue(b20 == true);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.addBean("oak", (java.lang.Object) "collection");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient5.query("replicationFactor", solrParams7, mETHOD8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("coreName", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient4.commit("path_depth", false, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = solrQueryIndex3.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.Filter filter5 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState6 = null;
        try {
            double d7 = solrQueryIndex3.getCost(filter5, nodeState6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator4);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient1.deleteById("http://127.0.0.1", "commitPolicy", (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient5.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.commit(false, false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.SOCKET_TIMEOUT;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "socketTimeout" + "'", str0.equals("socketTimeout"));
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        boolean b0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.PRIMARY_TYPES;
        org.junit.Assert.assertTrue(b0 == false);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient2.deleteById("solrContext");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument8 = solrClient5.getById("descendantsField", "commitPolicy");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str7 = defaultSolrConfiguration6.getPathField();
        java.util.Collection<java.lang.String> collection_str8 = defaultSolrConfiguration6.getUsedProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList9 = solrClient5.getById(collection_str8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "path_exact" + "'", str7.equals("path_exact"));
        org.junit.Assert.assertNotNull(collection_str8);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        java.lang.String str2 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField(3000, "propertyRestrictions");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "propertyRestrictions_string_sort" + "'", str2.equals("propertyRestrictions_string_sort"));
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.deleteById("usedProperties", "shardsNo", (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "pathField", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "rows", "depthField", "collection", "solrServerType", "replicationFactor", "httpPort", "path_des", "httpPort", "hi!", "parentField", "solrContext", "parentField" };
        java.util.ArrayList<java.lang.String> arraylist_str18 = new java.util.ArrayList<java.lang.String>();
        boolean b19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str18, str_array17);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient1.deleteById("typeMappings", (java.util.List<java.lang.String>) arraylist_str18);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertTrue(b19 == true);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        java.lang.CharSequence charSequence1 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.partialEscape((java.lang.CharSequence) "oak");
        org.junit.Assert.assertNotNull(charSequence1);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.util.Collection<java.lang.String> collection_str18 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.IGNORED_PROPERTIES;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList19 = solrClient17.getById(collection_str18);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(collection_str18);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse2 = solrClient1.ping();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.deleteById("path_exact", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse7 = solrClient5.ping();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array7 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument8 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, solrInputDocument_array7);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient5.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrInputDocument_array7);
        org.junit.Assert.assertTrue(b9 == false);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer0 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer();
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder1 = null;
        try {
            solrIndexInitializer0.initialize(nodeBuilder1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient1.deleteByQuery("", (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse5 = solrClient4.ping();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        int i0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.ROWS;
        org.junit.Assert.assertTrue(i0 == 10);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.CONNECTION_TIMEOUT;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "connectionTimeout" + "'", str0.equals("connectionTimeout"));
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.HTTP_URL;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "httpUrl" + "'", str0.equals("httpUrl"));
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array29 = new java.lang.String[] { "primaryTypes", "solr", "hi!", "parentField", "replicationFactor", "pathRestrictions", "path_des", "path_collapsed", "solr", "http://127.0.0.1", "hi!_string_sort", "primaryTypes", "", "catch_all", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "collection", "childrenField", "8983", "", "path_depth", "solrHomePath", "catch_all", "hi!", "propertyRestrictions_string_sort", "hi!", "socketTimeout" };
        java.util.ArrayList<java.lang.String> arraylist_str30 = new java.util.ArrayList<java.lang.String>();
        boolean b31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str30, str_array29);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse32 = solrClient2.deleteById((java.util.List<java.lang.String>) arraylist_str30);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(str_array29);
        org.junit.Assert.assertTrue(b31 == true);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration24 = defaultSolrConfigurationProvider4.getConfiguration();
        org.junit.Assert.assertNotNull(oakSolrConfiguration24);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument8 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add("shardsNo", iterator_solrInputDocument8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient4.query("httpUrl", solrParams6, mETHOD7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array6 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument7 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, solrInputDocument_array6);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrInputDocument_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder18 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback20 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor21 = solrIndexEditorProvider16.getIndexEditor("httpUrl", nodeBuilder18, nodeState19, indexUpdateCallback20);
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNull(editor21);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams18 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse19 = solrClient17.query(solrParams18);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        int i0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.SHARDS_NO;
        org.junit.Assert.assertTrue(i0 == 2);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        org.apache.solr.common.SolrInputDocument solrInputDocument6 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.add(solrInputDocument6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration8 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str9 = defaultSolrConfiguration8.getPathField();
        boolean b10 = defaultSolrConfiguration8.collapseJcrContentNodes();
        boolean b11 = defaultSolrConfiguration8.useForPrimaryTypes();
        boolean b12 = defaultSolrConfiguration8.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str13 = defaultSolrConfiguration8.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams14 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList15 = solrClient5.getById("path_exact", collection_str13, solrParams14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "path_exact" + "'", str9.equals("path_exact"));
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection_str13);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        java.lang.String str2 = defaultSolrConfiguration0.getCatchAllField();
        java.lang.String str3 = defaultSolrConfiguration0.getPathDepthField();
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction4 = null;
        try {
            java.lang.String str5 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "catch_all" + "'", str2.equals("catch_all"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "path_depth" + "'", str3.equals("path_depth"));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        org.apache.solr.common.params.SolrParams solrParams17 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument18 = solrClient14.getById("/solr", "solrContext", solrParams17);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse17 = solrClient14.ping();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument2 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient1.add(solrInputDocument2, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCollapsedPathField();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction2 = null;
        java.lang.String str3 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction2);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_collapsed" + "'", str1.equals("path_collapsed"));
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.commit(true, true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider2);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder5 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState6 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback7 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor8 = solrIndexEditorProvider3.getIndexEditor("pathRestrictions", nodeBuilder5, nodeState6, indexUpdateCallback7);
        org.junit.Assert.assertNull(editor8);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        java.util.Collection<java.lang.String> collection_str7 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.IGNORED_PROPERTIES;
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList9 = solrClient5.getById(collection_str7, solrParams8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(collection_str7);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse6 = solrClient4.ping();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array33 = new java.lang.String[] { "8983", "http://127.0.0.1", "http://127.0.0.1:8983/solr/oak", "http://127.0.0.1:8983/solr/oak", "oak", "typeMappings", "http://127.0.0.1", "path_des", "commitPolicy", "primaryTypes", "path_child", "hi!_string_sort", "pathRestrictions", "http://127.0.0.1", "descendantsField" };
        java.util.ArrayList<java.lang.String> arraylist_str34 = new java.util.ArrayList<java.lang.String>();
        boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str34, str_array33);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse36 = solrClient17.deleteById((java.util.List<java.lang.String>) arraylist_str34);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(str_array33);
        org.junit.Assert.assertTrue(b35 == true);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient4.query("httpUrl", solrParams7, mETHOD8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument17 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse18 = solrClient14.add(iterator_solrInputDocument17);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient5.query(solrParams7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient17.optimize(false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.lang.Object obj3 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient1.addBean("path_child", obj3, 3000);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument6 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.add(iterator_solrInputDocument6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient14.deleteById("depthField", "pathField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient10 = remoteSolrServerProvider6.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.optimize("", false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        org.apache.solr.common.params.SolrParams solrParams18 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse19 = solrClient14.query("childrenField", solrParams18);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.addBean("8983", (java.lang.Object) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient4.commit("childrenField", true, true, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration8);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider11 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider10);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider14 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, oakSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, oakSolrConfigurationProvider16);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator7, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider10, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13);
        java.lang.String str19 = solrQueryIndex18.getIndexName();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient5.addBean("httpUrl", (java.lang.Object) str19, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "solr" + "'", str19.equals("solr"));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.deleteByQuery("httpUrl", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.util.Collection<java.lang.String> collection_str2 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList3 = solrClient1.getById(collection_str2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument3 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient1.add("hi!", iterator_solrInputDocument3);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan12 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState13 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor14 = solrQueryIndex11.query(indexPlan12, nodeState13);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient2.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array7 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument8 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, solrInputDocument_array7);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient5.add("/solr", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrInputDocument_array7);
        org.junit.Assert.assertTrue(b9 == false);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.commit("hi!");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.common.SolrDocument solrDocument5 = solrClient2.getById("collapseJcrContentNodes");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrRequest solrRequest5 = null;
        try {
            org.apache.solr.common.util.NamedList<java.lang.Object> namedlist_obj6 = solrClient4.request(solrRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        org.apache.solr.common.SolrInputDocument solrInputDocument16 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient14.add("/solr", solrInputDocument16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse7 = solrClient5.ping();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        java.lang.String[] str_array59 = new java.lang.String[] { "httpPort", "collection", "hi!_string_sort", "solrServerType", "shardsNo", "path_anc", "catchAllField", "oak", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "commitPolicy", "pathField", "http://127.0.0.1:8983/solr/oak", "collapseJcrContentNodes", "socketTimeout", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "shardsNo", "pathField", "shardsNo", "propertyRestrictions", "pathField", "primaryTypes", "127.0.0.1:9983", "connectionTimeout", "propertyRestrictions_string_sort", "path_exact", "httpPort", "replicationFactor", "path_exact", "http://127.0.0.1", "127.0.0.1:9983", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "connectionTimeout", "path_child", "descendantsField", "8983", "catchAllField", "", "descendantsField", "httpPort", "replicationFactor", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "path_child", "pathField", "childrenField" };
        java.util.ArrayList<java.lang.String> arraylist_str60 = new java.util.ArrayList<java.lang.String>();
        boolean b61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str60, str_array59);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse63 = solrClient14.deleteById((java.util.List<java.lang.String>) arraylist_str60, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertNotNull(str_array59);
        org.junit.Assert.assertTrue(b61 == true);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse3 = solrClient2.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.deleteById("pathField", "descendantsField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.deleteByQuery("depthField", (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.solr.client.solrj.SolrRequest solrRequest4 = null;
        try {
            org.apache.solr.common.util.NamedList<java.lang.Object> namedlist_obj5 = solrClient2.request(solrRequest4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse18 = solrClient17.optimize();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient24 = remoteSolrServerProvider17.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        java.lang.String[] str_array24 = new java.lang.String[] { "hi!", "coreName", "rows", "solrServerType", "socketTimeout", "collapseJcrContentNodes", "usedProperties", "propertyRestrictions", "parentField", "httpPort", "childrenField", "path_child", "oak", "typeMappings", "http://127.0.0.1:8983/solr/oak", "propertyRestrictions_string_sort", "collapseJcrContentNodes", "parentField" };
        java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
        boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str25, str_array24);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse28 = solrClient4.deleteById((java.util.List<java.lang.String>) arraylist_str25, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array24);
        org.junit.Assert.assertTrue(b26 == true);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.common.SolrDocument solrDocument8 = solrClient5.getById("usedProperties");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = solrQueryIndex3.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan5 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState6 = null;
        try {
            java.lang.String str7 = solrQueryIndex3.getPlanDescription(indexPlan5, nodeState6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator4);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.deleteByQuery("coreName", (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str5 = defaultSolrConfiguration4.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy6 = defaultSolrConfiguration4.getCommitPolicy();
        java.lang.String str7 = defaultSolrConfiguration4.getCollapsedPathField();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient3.addBean((java.lang.Object) defaultSolrConfiguration4, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "path_collapsed" + "'", str5.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy6 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy6.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "path_collapsed" + "'", str7.equals("path_collapsed"));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument6 = solrClient4.getById("httpUrl");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array4 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument5 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument5, solrInputDocument_array4);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient2.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
        org.junit.Assert.assertNotNull(solrInputDocument_array4);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator10 = solrQueryIndex9.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.Filter filter11 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState12 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor13 = solrQueryIndex9.query(filter11, nodeState12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator10);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.ZK_HOST;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "zkHost" + "'", str0.equals("zkHost"));
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient1 = solrServerProviderService0.getIndexingSolrServer();
        org.junit.Assert.assertNull(solrClient1);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.solr.common.params.SolrParams solrParams5 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD6 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse7 = solrClient2.query("depthField", solrParams5, mETHOD6);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams4 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD5 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse6 = solrClient2.query("replicationFactor", solrParams4, mETHOD5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient1.commit(true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        int i19 = remoteSolrServerConfiguration17.getSolrShardsNo();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy20 = null;
        try {
            org.apache.solr.client.solrj.SolrClient solrClient21 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration17, strategy20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue(i19 == 1);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider remoteSolrServerConfigurationProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider();
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer oakSolrServer1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider) remoteSolrServerConfigurationProvider0);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator10 = solrQueryIndex9.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan11 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState12 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor13 = solrQueryIndex9.query(indexPlan11, nodeState12);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator10);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        try {
            solrClient14.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient14);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array13 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array13);
        java.lang.reflect.Type type15 = remoteSolrServerConfiguration14.getType();
        java.lang.String str16 = remoteSolrServerConfiguration14.getSolrConfDir();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient3.addBean("rows", (java.lang.Object) remoteSolrServerConfiguration14);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(str_array13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient3.deleteByQuery("rows", "depthField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add(solrInputDocument7, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer3 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(true, "http://127.0.0.1:8983/solr/oak", false);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder4 = null;
        try {
            solrIndexInitializer3.initialize(nodeBuilder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.lang.Object obj2 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse3 = solrClient1.addBean(obj2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        org.apache.solr.common.params.SolrParams solrParams18 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument19 = solrClient14.getById("catch_all", solrParams18);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array37 = new java.lang.String[] { "shardsNo", "httpPort", "path_collapsed", "path_exact", "collapseJcrContentNodes", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "catchAllField", "replicationFactor", "solr", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "path_anc", "collection", "127.0.0.1:9983", "pathField", "solr", "http://127.0.0.1", "shardsNo", "propertyRestrictions", "shardsNo", "propertyRestrictions_string_sort", "/solr", "usedProperties", "path_child", "pathField", "socketTimeout", "commitPolicy", "hi!_string_sort" };
        java.util.ArrayList<java.lang.String> arraylist_str38 = new java.util.ArrayList<java.lang.String>();
        boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str38, str_array37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse41 = solrClient8.deleteById("descendantsField", (java.util.List<java.lang.String>) arraylist_str38, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array37);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient14.rollback();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        org.apache.solr.common.SolrInputDocument solrInputDocument6 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.add(solrInputDocument6, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient5.optimize("/solr", false, true, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        java.lang.String str24 = solrQueryIndex23.getIndexName();
        org.apache.jackrabbit.oak.spi.query.Filter filter25 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState26 = null;
        try {
            java.lang.String str27 = solrQueryIndex23.getPlan(filter25, nodeState26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "solr" + "'", str24.equals("solr"));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        java.util.Collection<java.lang.String> collection_str16 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.IGNORED_PROPERTIES;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList17 = solrClient14.getById("rows", collection_str16);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertNotNull(collection_str16);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.Filter filter12 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState13 = null;
        try {
            double d14 = solrQueryIndex11.getCost(filter12, nodeState13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient8.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.IGNORED_PROPERTIES;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "ignoredProperties" + "'", str0.equals("ignoredProperties"));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient14.commit(true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults oakSolrConfigurationDefaults0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults();
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        int i5 = defaultSolrConfiguration0.getRows();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertTrue(i5 == 10);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array6 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument7 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, solrInputDocument_array6);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrInputDocument_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer3 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(true, "httpPort", true);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder4 = null;
        try {
            solrIndexInitializer3.initialize(nodeBuilder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider solrServerConfigurationProvider0 = null;
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer oakSolrServer1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer(solrServerConfigurationProvider0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        int i18 = remoteSolrServerConfiguration17.getSolrReplicationFactor();
        java.lang.String str19 = remoteSolrServerConfiguration17.getSolrZkHost();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertTrue(i18 == 100);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "catchAllField" + "'", str19.equals("catchAllField"));
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = solrQueryIndex3.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.Filter filter5 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState6 = null;
        try {
            java.lang.String str7 = solrQueryIndex3.getPlan(filter5, nodeState6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator4);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array2 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument3 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b4 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument3, solrInputDocument_array2);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient1.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument3);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrInputDocument_array2);
        org.junit.Assert.assertTrue(b4 == false);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array5 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument6 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument6, solrInputDocument_array5);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument6);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrInputDocument_array5);
        org.junit.Assert.assertTrue(b7 == false);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient3.addBean((java.lang.Object) 0L);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array38 = new java.lang.String[] { "solr", "commitPolicy", "usedProperties", "8983", "propertyRestrictions", "primaryTypes", "solrHomePath", "solrServerType", "childrenField", "collapseJcrContentNodes", "commitPolicy", "httpPort", "typeMappings", "propertyRestrictions_string_sort", "primaryTypes", "shardsNo", "connectionTimeout", "127.0.0.1:9983", "httpPort", "shardsNo", "hi!_string_sort", "solr", "solr", "http://127.0.0.1:8983/solr/oak", "pathField", "collapseJcrContentNodes", "parentField", "path_anc", "replicationFactor", "coreName", "coreName", "", "socketTimeout", "path_des" };
        java.util.ArrayList<java.lang.String> arraylist_str39 = new java.util.ArrayList<java.lang.String>();
        boolean b40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str39, str_array38);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse41 = solrClient3.deleteById((java.util.List<java.lang.String>) arraylist_str39);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertTrue(b40 == true);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        java.lang.String str2 = defaultSolrConfiguration0.getPathDepthField();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "path_depth" + "'", str2.equals("path_depth"));
        org.junit.Assert.assertTrue(b3 == false);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument9 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient8.add(solrInputDocument9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient1.deleteByQuery("", 2);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.OakSolrNodeStateConfiguration.Properties.PROPERTY_MAPPINGS;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "propertyMappings" + "'", str0.equals("propertyMappings"));
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan10 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState11 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor12 = solrQueryIndex9.query(indexPlan10, nodeState11);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        java.lang.String[] str_array4 = new java.lang.String[] { "path_collapsed" };
        java.util.ArrayList<java.lang.String> arraylist_str5 = new java.util.ArrayList<java.lang.String>();
        boolean b6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str5, str_array4);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient1.deleteById("shardsNo", (java.util.List<java.lang.String>) arraylist_str5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(str_array4);
        org.junit.Assert.assertTrue(b6 == true);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument6 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.add(iterator_solrInputDocument6);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration7 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str8 = defaultSolrConfiguration7.getPathField();
        boolean b9 = defaultSolrConfiguration7.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration7);
        java.util.Collection<java.lang.String> collection_str11 = defaultSolrConfiguration7.getUsedProperties();
        java.util.Collection<java.lang.String> collection_str12 = defaultSolrConfiguration7.getIgnoredProperties();
        org.apache.solr.common.params.SolrParams solrParams13 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList14 = solrClient5.getById(collection_str12, solrParams13);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "path_exact" + "'", str8.equals("path_exact"));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNotNull(collection_str11);
        org.junit.Assert.assertNotNull(collection_str12);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient2.rollback();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient3.deleteByQuery("", "hi!_string_sort", 32);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument11 = solrClient9.getById("/solr");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.add("collapseJcrContentNodes", iterator_solrInputDocument7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient14 = remoteSolrServerProvider13.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        java.lang.String[] str_array33 = new java.lang.String[] { "8983", "zkHost", "collapseJcrContentNodes", "path_depth", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "hi!_string_sort", "depthField", "usedProperties", "solr", "path_depth", "pathField", "path_depth", "solr", "childrenField", "coreName", "shardsNo", "solr", "replicationFactor", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "typeMappings", "collapseJcrContentNodes", "/solr", "127.0.0.1:9983", "typeMappings", "path_collapsed", "shardsNo", "path_exact" };
        java.util.ArrayList<java.lang.String> arraylist_str34 = new java.util.ArrayList<java.lang.String>();
        boolean b35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str34, str_array33);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse36 = solrClient4.deleteById((java.util.List<java.lang.String>) arraylist_str34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array33);
        org.junit.Assert.assertTrue(b35 == true);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.Filter filter10 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState11 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor12 = solrQueryIndex9.query(filter10, nodeState11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan10 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState11 = null;
        try {
            java.lang.String str12 = solrQueryIndex9.getPlanDescription(indexPlan10, nodeState11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient3.deleteById("shardsNo");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.deleteById("path_depth", "solrContext");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array19 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument20 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b21 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument20, solrInputDocument_array19);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse23 = solrClient18.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument20, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrInputDocument_array19);
        org.junit.Assert.assertTrue(b21 == false);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.solr.common.SolrInputDocument solrInputDocument8 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add("socketTimeout", solrInputDocument8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction3 = null;
        java.lang.String str4 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction3);
        java.lang.String str5 = defaultSolrConfiguration0.getCollapsedPathField();
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction6 = null;
        try {
            java.lang.String str7 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "path_collapsed" + "'", str5.equals("path_collapsed"));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer1 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(false);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        try {
            solrIndexInitializer1.initialize(nodeBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array7 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument8 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, solrInputDocument_array7);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient4.add("solrServerType", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
        org.junit.Assert.assertNotNull(solrInputDocument_array7);
        org.junit.Assert.assertTrue(b9 == false);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        java.lang.Object obj17 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse19 = solrClient14.addBean(obj17, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient5.query("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", solrParams7, mETHOD8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("solr", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient10 = remoteSolrServerProvider6.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument5 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient3.add("shardsNo", solrInputDocument5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        java.lang.String[] str_array52 = new java.lang.String[] { "descendantsField", "path_exact", "propertyRestrictions_string_sort", "path_exact", "ignoredProperties", "primaryTypes", "collection", "8983", "catchAllField", "ignoredProperties", "hi!", "shardsNo", "ignoredProperties", "path_des", "typeMappings", "httpUrl", "depthField", "path_des", "http://127.0.0.1:8983/solr/oak", "collection", "socketTimeout", "collection", "http://127.0.0.1:8983/solr/oak", "httpPort", "/solr", "path_child", "", "propertyRestrictions_string_sort", "childrenField", "parentField", "shardsNo", "path_child", "8983", "coreName", "childrenField", "socketTimeout", "solr", "httpPort", "solrServerType", "descendantsField", "ignoredProperties", "collection", "zkHost", "typeMappings", "pathRestrictions" };
        java.util.ArrayList<java.lang.String> arraylist_str53 = new java.util.ArrayList<java.lang.String>();
        boolean b54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str53, str_array52);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse55 = solrClient4.deleteById("propertyRestrictions_string_sort", (java.util.List<java.lang.String>) arraylist_str53);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
        org.junit.Assert.assertNotNull(str_array52);
        org.junit.Assert.assertTrue(b54 == true);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getUsedProperties();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getIgnoredProperties();
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction6 = null;
        try {
            java.lang.String str7 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertNotNull(collection_str5);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.Filter filter10 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState11 = null;
        try {
            double d12 = solrQueryIndex9.getCost(filter10, nodeState11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient4.query(solrParams6, mETHOD7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.deleteById("primaryTypes", 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider2);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder5 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState6 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback7 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor8 = solrIndexEditorProvider3.getIndexEditor("path_anc", nodeBuilder5, nodeState6, indexUpdateCallback7);
        org.junit.Assert.assertNull(editor8);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator19, oakSolrConfigurationProvider20, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider21);
        org.apache.solr.client.solrj.SolrClient solrClient23 = defaultSolrServerProvider21.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder24 = solrClient23.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse25 = solrClient17.addBean("hi!", (java.lang.Object) solrClient23);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient23);
        org.junit.Assert.assertNotNull(documentObjectBinder24);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str14 = defaultSolrConfiguration13.getPathField();
        boolean b15 = defaultSolrConfiguration13.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider16);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider18.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient20 = defaultSolrServerProvider18.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration21 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider22, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider23);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider25 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider23);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient27 = defaultSolrServerProvider26.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient28 = defaultSolrServerProvider26.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration29);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider30, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider26, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator35 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31, nodeAggregator35);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState37 = null;
        java.util.List<? extends org.apache.jackrabbit.oak.spi.query.QueryIndex> list_wildcard38 = solrQueryIndexProvider36.getQueryIndexes(nodeState37);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "path_exact" + "'", str14.equals("path_exact"));
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(solrClient20);
        org.junit.Assert.assertNotNull(solrClient27);
        org.junit.Assert.assertNotNull(solrClient28);
        org.junit.Assert.assertNotNull(list_wildcard38);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array34 = new java.lang.String[] { "catchAllField", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "httpPort", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "http://127.0.0.1", "catch_all", "depthField", "solrHomePath", "solr", "coreName", "path_child", "childrenField", "propertyRestrictions", "catch_all", "replicationFactor", "catchAllField" };
        java.util.ArrayList<java.lang.String> arraylist_str35 = new java.util.ArrayList<java.lang.String>();
        boolean b36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str35, str_array34);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse37 = solrClient17.deleteById((java.util.List<java.lang.String>) arraylist_str35);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(str_array34);
        org.junit.Assert.assertTrue(b36 == true);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCatchAllField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy2 = defaultSolrConfiguration0.getCommitPolicy();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "catch_all" + "'", str1.equals("catch_all"));
        org.junit.Assert.assertTrue("'" + commitPolicy2 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy2.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        java.lang.String[] str_array11 = new java.lang.String[] { "solrServerType", "socketTimeout", "path_child", "usedProperties", "solr" };
        java.util.ArrayList<java.lang.String> arraylist_str12 = new java.util.ArrayList<java.lang.String>();
        boolean b13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str12, str_array11);
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList14 = solrClient4.getById((java.util.Collection<java.lang.String>) arraylist_str12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue(b13 == true);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse14 = solrClient9.optimize("solrContext", true, false, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array10 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument11 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11, solrInputDocument_array10);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse14 = solrClient8.add("propertyRestrictions_string_sort", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11, 2);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrInputDocument_array10);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        defaultSolrServerProvider2.close();
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils solrUtils0 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils();
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.deleteByQuery("httpPort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient4.query("solr", solrParams6, mETHOD7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        java.lang.String[] str_array14 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration15 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array14);
        java.lang.reflect.Type type16 = remoteSolrServerConfiguration15.getType();
        int i17 = remoteSolrServerConfiguration15.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider18 = remoteSolrServerConfiguration15.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration19 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str20 = defaultSolrConfiguration19.getPathField();
        boolean b21 = defaultSolrConfiguration19.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration19);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider22);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration24 = defaultSolrConfigurationProvider22.getConfiguration();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse26 = solrClient5.addBean((java.lang.Object) defaultSolrConfigurationProvider22, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue(i17 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "path_exact" + "'", str20.equals("path_exact"));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration24);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration0);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient2 = embeddedSolrServerProvider1.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array24 = new java.lang.String[] { "solrHomePath", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "127.0.0.1:9983", "typeMappings", "catch_all", "descendantsField" };
        java.util.ArrayList<java.lang.String> arraylist_str25 = new java.util.ArrayList<java.lang.String>();
        boolean b26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str25, str_array24);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse27 = solrClient17.deleteById((java.util.List<java.lang.String>) arraylist_str25);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(str_array24);
        org.junit.Assert.assertTrue(b26 == true);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient14.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        java.lang.String str24 = solrQueryIndex23.getIndexName();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan25 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState26 = null;
        try {
            java.lang.String str27 = solrQueryIndex23.getPlanDescription(indexPlan25, nodeState26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "solr" + "'", str24.equals("solr"));
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.optimize(true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str11 = defaultSolrConfiguration10.getPathField();
        boolean b12 = defaultSolrConfiguration10.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration10);
        java.util.Collection<java.lang.String> collection_str14 = defaultSolrConfiguration10.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams15 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList16 = solrClient8.getById("solr", collection_str14, solrParams15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "path_exact" + "'", str11.equals("path_exact"));
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection_str14);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient6.optimize();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array2 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument3 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b4 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument3, solrInputDocument_array2);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient1.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument3, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrInputDocument_array2);
        org.junit.Assert.assertTrue(b4 == false);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array6 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument7 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, solrInputDocument_array6);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient4.add("coreName", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrInputDocument_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str3 = defaultSolrConfiguration2.getCatchAllField();
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration2.getUsedProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList5 = solrClient1.getById(collection_str4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "catch_all" + "'", str3.equals("catch_all"));
        org.junit.Assert.assertNotNull(collection_str4);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.solr.common.SolrInputDocument solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add(solrInputDocument7, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str18 = defaultSolrConfiguration17.getPathField();
        java.util.Collection<java.lang.String> collection_str19 = defaultSolrConfiguration17.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams20 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList21 = solrClient14.getById(collection_str19, solrParams20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "path_exact" + "'", str18.equals("path_exact"));
        org.junit.Assert.assertNotNull(collection_str19);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.optimize("", true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams18 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD19 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse20 = solrClient17.query(solrParams18, mETHOD19);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient17.commit("descendantsField", true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument6 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.add(solrInputDocument6, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient12 = remoteSolrServerProvider6.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient6.rollback();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        boolean b6 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction7 = null;
        try {
            java.lang.String str8 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        java.lang.CharSequence charSequence1 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.partialEscape((java.lang.CharSequence) "descendantsField");
        org.junit.Assert.assertNotNull(charSequence1);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient9.addBean((java.lang.Object) 100L);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient3.deleteByQuery("zkHost", "pathRestrictions", 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient3.deleteByQuery("httpPort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array15 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument16 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b17 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument16, solrInputDocument_array15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse19 = solrClient14.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument16, 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertNotNull(solrInputDocument_array15);
        org.junit.Assert.assertTrue(b17 == false);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient4.rollback();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient14.optimize();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array9 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument10 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b11 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument10, solrInputDocument_array9);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient8.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument10, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrInputDocument_array9);
        org.junit.Assert.assertTrue(b11 == false);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.commit("solrHomePath");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array20 = new java.lang.String[] { "pathRestrictions", "", "path_child", "hi!_string_sort", "path_des", "pathField", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "hi!_string_sort", "path_des", "solrHomePath" };
        java.util.ArrayList<java.lang.String> arraylist_str21 = new java.util.ArrayList<java.lang.String>();
        boolean b22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str21, str_array20);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse24 = solrClient8.deleteById("descendantsField", (java.util.List<java.lang.String>) arraylist_str21, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array20);
        org.junit.Assert.assertTrue(b22 == true);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str7 = defaultSolrConfiguration6.getCatchAllField();
        java.util.Collection<java.lang.String> collection_str8 = defaultSolrConfiguration6.getUsedProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList9 = solrClient4.getById("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", collection_str8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "catch_all" + "'", str7.equals("catch_all"));
        org.junit.Assert.assertNotNull(collection_str8);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient3.deleteByQuery("pathField", "/solr", 3000);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient8.optimize("propertyRestrictions_string_sort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.lang.String[] str_array13 = new java.lang.String[] { "coreName", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "pathField", "path_depth", "pathField", "httpUrl", "connectionTimeout", "catch_all" };
        java.util.ArrayList<java.lang.String> arraylist_str14 = new java.util.ArrayList<java.lang.String>();
        boolean b15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str14, str_array13);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient4.deleteById((java.util.List<java.lang.String>) arraylist_str14, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array13);
        org.junit.Assert.assertTrue(b15 == true);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService4 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService4, nodeAggregator5);
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient5.query(solrParams7, mETHOD8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient5.query(solrParams7, mETHOD8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState19);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider20);
        try {
            java.lang.String str22 = nodeStateSolrServerProvider20.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.optimize("zkHost", false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient18.deleteByQuery("path_exact", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration4 = defaultSolrConfigurationProvider3.getConfiguration();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration4);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient5.optimize();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("path_collapsed", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        java.util.Collection<org.apache.solr.common.SolrInputDocument> collection_solrInputDocument20 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient18.add(collection_solrInputDocument20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration19 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str20 = defaultSolrConfiguration19.getPathField();
        boolean b21 = defaultSolrConfiguration19.collapseJcrContentNodes();
        boolean b22 = defaultSolrConfiguration19.useForPrimaryTypes();
        boolean b23 = defaultSolrConfiguration19.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str24 = defaultSolrConfiguration19.getUsedProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList25 = solrClient18.getById(collection_str24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "path_exact" + "'", str20.equals("path_exact"));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertTrue(b23 == false);
        org.junit.Assert.assertNotNull(collection_str24);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument9 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient8.add(solrInputDocument9, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse12 = solrClient8.commit(false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient2.deleteByQuery("parentField", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient14.optimize(false, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient14);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str7 = defaultSolrConfiguration6.getPathField();
        boolean b8 = defaultSolrConfiguration6.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration6);
        java.util.Collection<java.lang.String> collection_str10 = defaultSolrConfiguration6.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams11 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList12 = solrClient4.getById("127.0.0.1:9983", collection_str10, solrParams11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "path_exact" + "'", str7.equals("path_exact"));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNotNull(collection_str10);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        org.apache.solr.common.params.SolrParams solrParams15 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD16 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse17 = solrClient14.query(solrParams15, mETHOD16);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.optimize(false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.commit("zkHost", false, true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        java.lang.String[] str_array21 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration22 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array21);
        java.lang.reflect.Type type23 = remoteSolrServerConfiguration22.getType();
        int i24 = remoteSolrServerConfiguration22.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider25 = remoteSolrServerConfiguration22.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str27 = defaultSolrConfiguration26.getPathField();
        boolean b28 = defaultSolrConfiguration26.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider29 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration26);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider25, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider29);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient32 = defaultSolrServerProvider31.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient33 = defaultSolrServerProvider31.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration34 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration34);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider35, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider36);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider38 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider31, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider36);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider39 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient40 = defaultSolrServerProvider39.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient41 = defaultSolrServerProvider39.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration42 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider43 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration42);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider45 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider43, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider44);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider46 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider39, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider44);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider47 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider31, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider44);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator48 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider49 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider25, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider44, nodeAggregator48);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider50 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider44);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState51 = null;
        java.util.List<? extends org.apache.jackrabbit.oak.spi.query.QueryIndex> list_wildcard52 = solrQueryIndexProvider50.getQueryIndexes(nodeState51);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue(i24 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider25);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "path_exact" + "'", str27.equals("path_exact"));
        org.junit.Assert.assertTrue(b28 == false);
        org.junit.Assert.assertNotNull(solrClient32);
        org.junit.Assert.assertNotNull(solrClient33);
        org.junit.Assert.assertNotNull(solrClient40);
        org.junit.Assert.assertNotNull(solrClient41);
        org.junit.Assert.assertNotNull(list_wildcard52);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        int i13 = remoteSolrServerConfiguration9.getSocketTimeout();
        java.lang.String str14 = remoteSolrServerConfiguration9.getSolrCollection();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue(i13 == 1);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        java.lang.String[] str_array70 = new java.lang.String[] { "pathField", "pathRestrictions", "/solr", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "pathRestrictions", "commitPolicy", "httpPort", "path_child", "path_child", "path_anc", "descendantsField", "solrHomePath", "connectionTimeout", "depthField", "descendantsField", "path_exact", "zkHost", "rows", "commitPolicy", "collapseJcrContentNodes", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "coreName", "httpUrl", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "hi!_string_sort", "/solr", "solr", "solr", "depthField", "/solr", "path_anc", "coreName", "path_exact", "collapseJcrContentNodes", "path_exact", "path_des", "shardsNo", "usedProperties", "pathField", "pathRestrictions", "catch_all", "commitPolicy", "hi!", "path_exact", "usedProperties", "http://127.0.0.1:8983/solr/oak", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "http://127.0.0.1:8983/solr/oak", "127.0.0.1:9983" };
        java.util.ArrayList<java.lang.String> arraylist_str71 = new java.util.ArrayList<java.lang.String>();
        boolean b72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str71, str_array70);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse74 = solrClient18.deleteById("propertyRestrictions", (java.util.List<java.lang.String>) arraylist_str71, 32);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
        org.junit.Assert.assertNotNull(str_array70);
        org.junit.Assert.assertTrue(b72 == true);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient5.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties.CONFIGURATION_DIRECTORY;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "configurationDirectory" + "'", str0.equals("configurationDirectory"));
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str11 = defaultSolrConfiguration10.getPathField();
        boolean b12 = defaultSolrConfiguration10.collapseJcrContentNodes();
        boolean b13 = defaultSolrConfiguration10.useForPrimaryTypes();
        boolean b14 = defaultSolrConfiguration10.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str15 = defaultSolrConfiguration10.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams16 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList17 = solrClient8.getById("RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", collection_str15, solrParams16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "path_exact" + "'", str11.equals("path_exact"));
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertTrue(b13 == false);
        org.junit.Assert.assertTrue(b14 == false);
        org.junit.Assert.assertNotNull(collection_str15);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient3.deleteById("descendantsField", (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.commit(false, true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrRequest solrRequest2 = null;
        try {
            org.apache.solr.common.util.NamedList<java.lang.Object> namedlist_obj3 = solrClient1.request(solrRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse18 = solrClient17.ping();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array18 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument19 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b20 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument19, solrInputDocument_array18);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient17.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument19);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrInputDocument_array18);
        org.junit.Assert.assertTrue(b20 == false);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument10 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient8.add(solrInputDocument10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams19 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse20 = solrClient17.query("httpUrl", solrParams19);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        java.lang.String[] str_array53 = new java.lang.String[] { "replicationFactor", "parentField", "propertyRestrictions", "", "collapseJcrContentNodes", "propertyMappings", "parentField", "parentField", "collection", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "zkHost", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "catch_all", "/solr", "http://127.0.0.1:8983/solr/oak", "hi!", "rows", "ignoredProperties", "path_collapsed", "childrenField", "hi!_string_sort", "http://127.0.0.1", "connectionTimeout", "shardsNo", "path_depth", "path_anc", "collection", "8983", "rows", "collection", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "catch_all", "127.0.0.1:9983", "collection", "shardsNo", "solrContext", "path_collapsed", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "solrHomePath", "rows", "childrenField", "socketTimeout", "http://127.0.0.1:8983/solr/oak", "propertyMappings", "httpPort", "propertyMappings" };
        java.util.ArrayList<java.lang.String> arraylist_str54 = new java.util.ArrayList<java.lang.String>();
        boolean b55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str54, str_array53);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse57 = solrClient5.deleteById((java.util.List<java.lang.String>) arraylist_str54, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array53);
        org.junit.Assert.assertTrue(b55 == true);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator10 = solrQueryIndex9.getNodeAggregator();
        double d11 = solrQueryIndex9.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.Filter filter12 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState13 = null;
        try {
            double d14 = solrQueryIndex9.getCost(filter12, nodeState13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator10);
        org.junit.Assert.assertTrue(d11 == 2.3d);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.util.Collection<org.apache.solr.common.SolrInputDocument> collection_solrInputDocument19 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient17.add("collapseJcrContentNodes", collection_solrInputDocument19, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        remoteSolrServerProvider13.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService15 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration16 = oakSolrConfigurationProviderService15.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator17 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService15, nodeAggregator17);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        java.util.List<? extends org.apache.jackrabbit.oak.spi.query.QueryIndex> list_wildcard20 = solrQueryIndexProvider18.getQueryIndexes(nodeState19);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(oakSolrConfiguration16);
        org.junit.Assert.assertNotNull(list_wildcard20);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        java.lang.String str0 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults.SOLR_HOME_PATH;
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "solr" + "'", str0.equals("solr"));
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient18.optimize(true, true, 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        java.lang.String[] str_array55 = new java.lang.String[] { "zkHost", "depthField", "pathRestrictions", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "configurationDirectory", "127.0.0.1:9983", "path_collapsed", "solrHomePath", "rows", "path_collapsed", "pathRestrictions", "httpUrl", "usedProperties", "oak", "typeMappings", "connectionTimeout", "pathField", "hi!_string_sort", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "http://127.0.0.1:8983/solr/oak", "depthField", "hi!", "usedProperties", "httpUrl", "path_depth", "solrServerType", "http://127.0.0.1", "rows", "propertyMappings", "solr", "coreName", "childrenField", "path_exact", "collection", "catchAllField", "httpUrl", "collapseJcrContentNodes", "hi!_string_sort", "replicationFactor", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "ignoredProperties", "http://127.0.0.1", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "solrContext", "primaryTypes", "http://127.0.0.1", "configurationDirectory" };
        java.util.ArrayList<java.lang.String> arraylist_str56 = new java.util.ArrayList<java.lang.String>();
        boolean b57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str56, str_array55);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse58 = solrClient5.deleteById("usedProperties", (java.util.List<java.lang.String>) arraylist_str56);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(str_array55);
        org.junit.Assert.assertTrue(b57 == true);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str11 = defaultSolrConfiguration10.getPathField();
        java.util.Collection<java.lang.String> collection_str12 = defaultSolrConfiguration10.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams13 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList14 = solrClient8.getById(collection_str12, solrParams13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "path_exact" + "'", str11.equals("path_exact"));
        org.junit.Assert.assertNotNull(collection_str12);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback9 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse10 = solrClient5.queryAndStreamResponse("socketTimeout", solrParams8, streamingResponseCallback9);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str6 = defaultSolrConfiguration5.getPathField();
        int i7 = defaultSolrConfiguration5.getRows();
        java.util.Collection<java.lang.String> collection_str8 = defaultSolrConfiguration5.getUsedProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList9 = solrClient2.getById("configurationDirectory", collection_str8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_exact" + "'", str6.equals("path_exact"));
        org.junit.Assert.assertTrue(i7 == 10);
        org.junit.Assert.assertNotNull(collection_str8);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument5 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.add("path_child", iterator_solrInputDocument5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider22 = embeddedSolrServerConfiguration21.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration21);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse24 = solrClient18.addBean((java.lang.Object) embeddedSolrServerConfiguration21);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider22);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient9.optimize(false, true, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse43 = solrClient19.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient5.queryAndStreamResponse(solrParams7, streamingResponseCallback8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient18.deleteById("hi!", 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse46 = solrClient19.commit("httpPort", true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration19);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider20, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration23);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider25 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider24, oakSolrConfigurationProvider25);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex27 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider24);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator28 = solrQueryIndex27.getNodeAggregator();
        double d29 = solrQueryIndex27.getMinimumCost();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse31 = solrClient14.addBean("catch_all", (java.lang.Object) solrQueryIndex27, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(nodeAggregator28);
        org.junit.Assert.assertTrue(d29 == 2.3d);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient14.optimize(false, true, 3000);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array64 = new java.lang.String[] { "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "path_child", "catchAllField", "propertyRestrictions", "", "path_child", "catchAllField", "path_depth", "propertyRestrictions", "usedProperties", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "parentField", "solrContext", "path_anc", "http://127.0.0.1", "solrServerType", "path_depth", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "collection", "propertyRestrictions", "connectionTimeout", "solrContext", "socketTimeout", "configurationDirectory", "solrHomePath", "usedProperties", "solrHomePath", "catchAllField", "8983", "propertyRestrictions_string_sort", "primaryTypes", "path_anc", "propertyMappings", "depthField", "path_anc", "path_child", "propertyMappings", "catch_all", "collapseJcrContentNodes", "parentField", "propertyRestrictions", "configurationDirectory", "replicationFactor", "8983" };
        java.util.ArrayList<java.lang.String> arraylist_str65 = new java.util.ArrayList<java.lang.String>();
        boolean b66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str65, str_array64);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse67 = solrClient18.deleteById("collapseJcrContentNodes", (java.util.List<java.lang.String>) arraylist_str65);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(str_array64);
        org.junit.Assert.assertTrue(b66 == true);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState19);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider20);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient22 = nodeStateSolrServerProvider20.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        java.lang.String[] str_array43 = new java.lang.String[] { "solrServerType", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "ignoredProperties", "descendantsField", "shardsNo", "path_des", "127.0.0.1:9983", "commitPolicy", "depthField", "httpPort", "configurationDirectory", "httpPort", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "propertyMappings", "solrHomePath", "hi!_string_sort", "rows", "collection", "path_depth", "configurationDirectory", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "depthField", "shardsNo", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}" };
        java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
        boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str44, str_array43);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse46 = solrClient14.deleteById("pathRestrictions", (java.util.List<java.lang.String>) arraylist_str44);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(str_array43);
        org.junit.Assert.assertTrue(b45 == true);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str7 = defaultSolrConfiguration6.getPathField();
        int i8 = defaultSolrConfiguration6.getRows();
        java.util.Collection<java.lang.String> collection_str9 = defaultSolrConfiguration6.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams10 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList11 = solrClient5.getById(collection_str9, solrParams10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "path_exact" + "'", str7.equals("path_exact"));
        org.junit.Assert.assertTrue(i8 == 10);
        org.junit.Assert.assertNotNull(collection_str9);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        int i15 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        java.lang.String[] str_array24 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration25 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array24);
        java.lang.reflect.Type type26 = remoteSolrServerConfiguration25.getType();
        java.lang.String str27 = remoteSolrServerConfiguration25.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider28 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration25);
        java.lang.String[] str_array37 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration38 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array37);
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration38.getType();
        java.lang.String str40 = remoteSolrServerConfiguration38.getSolrConfDir();
        java.lang.String str41 = remoteSolrServerConfiguration38.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider42 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient43 = defaultSolrServerProvider42.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy44 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration38, solrClient43, strategy44);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration25, strategy44);
        org.apache.solr.client.solrj.SolrClient solrClient47 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy44);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertTrue(i15 == 100);
        org.junit.Assert.assertNotNull(str_array24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "hi!" + "'", str40.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        org.junit.Assert.assertNotNull(solrClient43);
        org.junit.Assert.assertTrue("'" + strategy44 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy44.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient47);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrRequest solrRequest19 = null;
        try {
            org.apache.solr.common.util.NamedList<java.lang.Object> namedlist_obj20 = solrClient18.request(solrRequest19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction6 = null;
        java.lang.String str7 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration9 = defaultSolrConfigurationProvider8.getConfiguration();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(oakSolrConfiguration9);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse12 = solrClient8.commit(false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        int i12 = remoteSolrServerConfiguration10.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = remoteSolrServerConfiguration10.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str15 = defaultSolrConfiguration14.getPathField();
        boolean b16 = defaultSolrConfiguration14.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient20 = defaultSolrServerProvider19.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider19.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration22 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration22);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider25 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider23, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider24);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider19, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider24);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider27 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient28 = defaultSolrServerProvider27.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient29 = defaultSolrServerProvider27.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration30 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration30);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider31, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider27, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider19, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator36 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32, nodeAggregator36);
        java.lang.String[] str_array46 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration47 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array46);
        java.lang.reflect.Type type48 = remoteSolrServerConfiguration47.getType();
        java.lang.String str49 = remoteSolrServerConfiguration47.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider50 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration47);
        java.lang.String[] str_array59 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration60 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array59);
        java.lang.reflect.Type type61 = remoteSolrServerConfiguration60.getType();
        int i62 = remoteSolrServerConfiguration60.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider63 = remoteSolrServerConfiguration60.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration64 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str65 = defaultSolrConfiguration64.getPathField();
        boolean b66 = defaultSolrConfiguration64.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider67 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration64);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider68 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider63, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider67);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider69 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient70 = defaultSolrServerProvider69.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient71 = defaultSolrServerProvider69.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration72 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider73 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration72);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider74 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider75 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider73, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider74);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider76 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider69, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider74);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider77 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient78 = defaultSolrServerProvider77.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient79 = defaultSolrServerProvider77.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration80 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider81 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration80);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider82 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider83 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider81, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider84 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider77, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider85 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider69, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator86 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider87 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider63, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82, nodeAggregator86);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider88 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider50, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex89 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider50);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient90 = remoteSolrServerProvider50.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue(i12 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "path_exact" + "'", str15.equals("path_exact"));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(solrClient20);
        org.junit.Assert.assertNotNull(solrClient21);
        org.junit.Assert.assertNotNull(solrClient28);
        org.junit.Assert.assertNotNull(solrClient29);
        org.junit.Assert.assertNotNull(str_array46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "hi!" + "'", str49.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue(i62 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider63);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "path_exact" + "'", str65.equals("path_exact"));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertNotNull(solrClient70);
        org.junit.Assert.assertNotNull(solrClient71);
        org.junit.Assert.assertNotNull(solrClient78);
        org.junit.Assert.assertNotNull(solrClient79);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        java.lang.String[] str_array85 = new java.lang.String[] { "catchAllField", "hi!_string_sort", "path_depth", "parentField", "rows", "propertyRestrictions_string_sort", "solrHomePath", "replicationFactor", "path_collapsed", "propertyRestrictions", "127.0.0.1:9983", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "127.0.0.1:9983", "usedProperties", "http://127.0.0.1", "primaryTypes", "pathField", "http://127.0.0.1", "path_depth", "parentField", "hi!_string_sort", "path_anc", "httpUrl", "http://127.0.0.1", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "pathField", "rows", "catch_all", "path_exact", "catchAllField", "catchAllField", "descendantsField", "8983", "ignoredProperties", "pathRestrictions", "typeMappings", "httpUrl", "127.0.0.1:9983", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "8983", "propertyRestrictions", "childrenField" };
        java.util.ArrayList<java.lang.String> arraylist_str86 = new java.util.ArrayList<java.lang.String>();
        boolean b87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str86, str_array85);
        org.apache.solr.common.params.SolrParams solrParams88 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList89 = solrClient19.getById((java.util.Collection<java.lang.String>) arraylist_str86, solrParams88);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
        org.junit.Assert.assertNotNull(str_array85);
        org.junit.Assert.assertTrue(b87 == true);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.deleteByQuery("propertyMappings", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration7 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str8 = defaultSolrConfiguration7.getPathField();
        boolean b9 = defaultSolrConfiguration7.collapseJcrContentNodes();
        boolean b10 = defaultSolrConfiguration7.useForPrimaryTypes();
        boolean b11 = defaultSolrConfiguration7.collapseJcrContentNodes();
        java.lang.String str12 = defaultSolrConfiguration7.getPathDepthField();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient4.addBean("primaryTypes", (java.lang.Object) str12);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "path_exact" + "'", str8.equals("path_exact"));
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "path_depth" + "'", str12.equals("path_depth"));
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider nodeStateSolrServerConfigurationProvider0 = null;
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerConfigurationProvider.Properties properties1 = nodeStateSolrServerConfigurationProvider0.new Properties();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration7 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str8 = defaultSolrConfiguration7.getCatchAllField();
        java.util.Collection<java.lang.String> collection_str9 = defaultSolrConfiguration7.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams10 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList11 = solrClient5.getById("childrenField", collection_str9, solrParams10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "catch_all" + "'", str8.equals("catch_all"));
        org.junit.Assert.assertNotNull(collection_str9);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient2.deleteByQuery("pathRestrictions", "primaryTypes", (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        java.lang.String[] str_array25 = new java.lang.String[] { "", "replicationFactor", "socketTimeout", "/solr", "rows", "path_child", "catchAllField" };
        java.util.ArrayList<java.lang.String> arraylist_str26 = new java.util.ArrayList<java.lang.String>();
        boolean b27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str26, str_array25);
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList28 = solrClient14.getById("hi!", (java.util.Collection<java.lang.String>) arraylist_str26);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertTrue(b27 == true);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService nodeStateSolrServersObserverService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService();
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient1.deleteByQuery("descendantsField", 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer1 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer("http://127.0.0.1:8983/solr/oak");
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        try {
            solrIndexInitializer1.initialize(nodeBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument18 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient17.add(solrInputDocument18, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse14 = solrClient9.optimize("usedProperties", true, true, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        org.apache.solr.common.params.SolrParams solrParams44 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD45 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse46 = solrClient19.query("", solrParams44, mETHOD45);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument21 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient18.add("rows", solrInputDocument21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient5 = embeddedSolrServerProvider4.getSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.commit(false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        java.lang.String[] str_array92 = new java.lang.String[] { "path_exact", "http://127.0.0.1:8983/solr/oak", "solrServerType", "primaryTypes", "configurationDirectory", "path_collapsed", "childrenField", "catch_all", "typeMappings", "ignoredProperties", "path_depth", "configurationDirectory", "pathRestrictions", "socketTimeout", "usedProperties", "path_child", "path_des", "hi!", "parentField", "descendantsField", "propertyRestrictions_string_sort", "collapseJcrContentNodes", "primaryTypes", "rows", "connectionTimeout", "/solr", "collection", "usedProperties", "solr", "collapseJcrContentNodes", "solrServerType", "solrHomePath", "catchAllField", "path_anc", "catchAllField", "descendantsField", "http://127.0.0.1", "http://127.0.0.1", "rows", "solr", "socketTimeout", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "", "/solr", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "depthField", "http://127.0.0.1", "zkHost", "depthField" };
        java.util.ArrayList<java.lang.String> arraylist_str93 = new java.util.ArrayList<java.lang.String>();
        boolean b94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str93, str_array92);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse96 = solrClient19.deleteById((java.util.List<java.lang.String>) arraylist_str93, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
        org.junit.Assert.assertNotNull(str_array92);
        org.junit.Assert.assertTrue(b94 == true);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState19);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider20);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan22 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState23 = null;
        try {
            java.lang.String str24 = solrQueryIndex21.getPlanDescription(indexPlan22, nodeState23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.String str3 = embeddedSolrServerConfiguration2.toString();
        java.lang.String str4 = embeddedSolrServerConfiguration2.toString();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}" + "'", str3.equals("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}" + "'", str4.equals("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}"));
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument4 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.add(solrInputDocument4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse3 = solrClient2.optimize();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider1, oakSolrConfigurationProvider2);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState4 = null;
        java.util.List<? extends org.apache.jackrabbit.oak.spi.query.QueryIndex> list_wildcard5 = solrQueryIndexProvider3.getQueryIndexes(nodeState4);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState6 = null;
        java.util.List<? extends org.apache.jackrabbit.oak.spi.query.QueryIndex> list_wildcard7 = solrQueryIndexProvider3.getQueryIndexes(nodeState6);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState8 = null;
        java.util.List<? extends org.apache.jackrabbit.oak.spi.query.QueryIndex> list_wildcard9 = solrQueryIndexProvider3.getQueryIndexes(nodeState8);
        org.junit.Assert.assertNotNull(list_wildcard5);
        org.junit.Assert.assertNotNull(list_wildcard7);
        org.junit.Assert.assertNotNull(list_wildcard9);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse19 = solrClient14.deleteByQuery("depthField", "");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        java.lang.String[] str_array36 = new java.lang.String[] { "8983", "solrServerType", "commitPolicy", "http://127.0.0.1", "coreName", "typeMappings", "replicationFactor", "oak", "8983", "path_anc", "path_des", "replicationFactor", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "oak", "usedProperties", "propertyRestrictions", "ignoredProperties", "solrServerType", "descendantsField", "http://127.0.0.1", "solrContext", "commitPolicy", "path_collapsed", "http://127.0.0.1:8983/solr/oak", "oak", "solr", "parentField", "collapseJcrContentNodes", "oak" };
        java.util.ArrayList<java.lang.String> arraylist_str37 = new java.util.ArrayList<java.lang.String>();
        boolean b38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str37, str_array36);
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList39 = solrClient4.getById("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", (java.util.Collection<java.lang.String>) arraylist_str37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array36);
        org.junit.Assert.assertTrue(b38 == true);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        org.apache.solr.common.SolrInputDocument solrInputDocument17 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse18 = solrClient14.add(solrInputDocument17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient5.optimize("descendantsField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        org.apache.solr.common.params.SolrParams solrParams44 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback45 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse46 = solrClient19.queryAndStreamResponse("solr", solrParams44, streamingResponseCallback45);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService solrIndexEditorProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService();
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState3 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback4 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor5 = solrIndexEditorProviderService0.getIndexEditor("solr", nodeBuilder2, nodeState3, indexUpdateCallback4);
        org.junit.Assert.assertNull(editor5);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str5 = defaultSolrConfiguration4.getPathField();
        int i6 = defaultSolrConfiguration4.getRows();
        boolean b7 = defaultSolrConfiguration4.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str8 = defaultSolrConfiguration4.getIgnoredProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList9 = solrClient3.getById(collection_str8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "path_exact" + "'", str5.equals("path_exact"));
        org.junit.Assert.assertTrue(i6 == 10);
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertNotNull(collection_str8);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPropertyRestrictions();
        java.lang.String str4 = defaultSolrConfiguration0.getPathDepthField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_depth" + "'", str4.equals("path_depth"));
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator10 = solrQueryIndex9.getNodeAggregator();
        double d11 = solrQueryIndex9.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator12 = solrQueryIndex9.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.Filter filter13 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array14 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry15 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b16 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry15, orderEntry_array14);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState17 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan18 = solrQueryIndex9.getPlans(filter13, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry15, nodeState17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator10);
        org.junit.Assert.assertTrue(d11 == 2.3d);
        org.junit.Assert.assertNull(nodeAggregator12);
        org.junit.Assert.assertNotNull(orderEntry_array14);
        org.junit.Assert.assertTrue(b16 == false);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str6 = defaultSolrConfiguration5.getPathField();
        boolean b7 = defaultSolrConfiguration5.collapseJcrContentNodes();
        boolean b8 = defaultSolrConfiguration5.useForPrimaryTypes();
        boolean b9 = defaultSolrConfiguration5.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str10 = defaultSolrConfiguration5.getUsedProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList11 = solrClient3.getById("http://127.0.0.1", collection_str10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_exact" + "'", str6.equals("path_exact"));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertNotNull(collection_str10);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        java.lang.String[] str_array37 = new java.lang.String[] { "propertyMappings", "path_anc", "rows", "hi!", "solr", "path_des", "", "catchAllField", "pathRestrictions", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "replicationFactor", "replicationFactor", "pathRestrictions", "zkHost", "descendantsField", "shardsNo", "", "oak", "8983", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "", "solr" };
        java.util.ArrayList<java.lang.String> arraylist_str38 = new java.util.ArrayList<java.lang.String>();
        boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str38, str_array37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse40 = solrClient14.deleteById((java.util.List<java.lang.String>) arraylist_str38);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertNotNull(str_array37);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState19);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider20);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient22 = nodeStateSolrServerProvider20.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument43 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse44 = solrClient19.add(iterator_solrInputDocument43);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan24 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState25 = null;
        try {
            java.lang.String str26 = solrQueryIndex23.getPlanDescription(indexPlan24, nodeState25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient5.query(solrParams6, mETHOD7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient3.deleteById("catchAllField", "http://127.0.0.1");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator10 = solrQueryIndex9.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.Filter filter11 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array12 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry13 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b14 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry13, orderEntry_array12);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState15 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan16 = solrQueryIndex9.getPlans(filter11, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry13, nodeState15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator10);
        org.junit.Assert.assertNotNull(orderEntry_array12);
        org.junit.Assert.assertTrue(b14 == false);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument20 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient18.add("catchAllField", solrInputDocument20, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array18 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument19 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b20 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument19, solrInputDocument_array18);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient14.add("solrServerType", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument19, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrInputDocument_array18);
        org.junit.Assert.assertTrue(b20 == false);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        java.util.Collection<java.lang.String> collection_str7 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.IGNORED_PROPERTIES;
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList9 = solrClient5.getById(collection_str7, solrParams8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(collection_str7);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str14 = defaultSolrConfiguration13.getPathField();
        boolean b15 = defaultSolrConfiguration13.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider16);
        java.lang.String[] str_array26 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration27 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array26);
        java.lang.reflect.Type type28 = remoteSolrServerConfiguration27.getType();
        int i29 = remoteSolrServerConfiguration27.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider30 = remoteSolrServerConfiguration27.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str32 = defaultSolrConfiguration31.getPathField();
        boolean b33 = defaultSolrConfiguration31.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider30, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider34);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider34);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient37 = remoteSolrServerProvider12.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "path_exact" + "'", str14.equals("path_exact"));
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(str_array26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue(i29 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider30);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "path_exact" + "'", str32.equals("path_exact"));
        org.junit.Assert.assertTrue(b33 == false);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.optimize(true, false, 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        java.lang.String str2 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField(32, "rows");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "rows_string_sort" + "'", str2.equals("rows_string_sort"));
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration19 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str20 = defaultSolrConfiguration19.getPathField();
        int i21 = defaultSolrConfiguration19.getRows();
        boolean b22 = defaultSolrConfiguration19.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str23 = defaultSolrConfiguration19.getIgnoredProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList24 = solrClient18.getById(collection_str23);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "path_exact" + "'", str20.equals("path_exact"));
        org.junit.Assert.assertTrue(i21 == 10);
        org.junit.Assert.assertTrue(b22 == false);
        org.junit.Assert.assertNotNull(collection_str23);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration1 = oakSolrConfigurationProviderService0.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration2 = oakSolrConfigurationProviderService0.getConfiguration();
        org.junit.Assert.assertNotNull(oakSolrConfiguration1);
        org.junit.Assert.assertNotNull(oakSolrConfiguration2);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer1 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer("coreName");
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        try {
            solrIndexInitializer1.initialize(nodeBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument7 = solrClient4.getById("solrHomePath", solrParams6);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.optimize("hi!_string_sort", true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams20 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse21 = solrClient18.query("primaryTypes", solrParams20);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        org.apache.solr.common.params.SolrParams solrParams43 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse44 = solrClient19.query(solrParams43);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.deleteById("coreName", (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse42 = solrClient8.deleteById("replicationFactor");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction4 = null;
        try {
            java.lang.String str5 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState19);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider20);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient22 = nodeStateSolrServerProvider20.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient1.deleteByQuery("parentField", "/solr");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration0);
        embeddedSolrServerProvider1.close();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient3 = embeddedSolrServerProvider1.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration43 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration43);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider45 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider46 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider44, oakSolrConfigurationProvider45);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider47 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider48 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider44, oakSolrConfigurationProvider47);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse49 = solrClient19.addBean((java.lang.Object) oakSolrConfigurationProvider47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        int i15 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        int i16 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertTrue(i15 == 100);
        org.junit.Assert.assertTrue(i16 == 100);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse45 = solrClient19.optimize(true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add(solrInputDocument7, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array10 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument11 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11, solrInputDocument_array10);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse14 = solrClient8.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
        org.junit.Assert.assertNotNull(solrInputDocument_array10);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i14 = remoteSolrServerConfiguration9.getSocketTimeout();
        java.lang.String str15 = remoteSolrServerConfiguration9.toString();
        int i16 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i14 == 1);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}" + "'", str15.equals("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}"));
        org.junit.Assert.assertTrue(i16 == (-1));
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument10 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient8.add("httpPort", iterator_solrInputDocument10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse45 = solrClient19.optimize(false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        int i12 = remoteSolrServerConfiguration10.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = remoteSolrServerConfiguration10.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str15 = defaultSolrConfiguration14.getPathField();
        boolean b16 = defaultSolrConfiguration14.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient20 = defaultSolrServerProvider19.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider19.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration22 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration22);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider25 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider23, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider24);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider19, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider24);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider27 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient28 = defaultSolrServerProvider27.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient29 = defaultSolrServerProvider27.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration30 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration30);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider31, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider27, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider19, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator36 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32, nodeAggregator36);
        java.lang.String[] str_array46 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration47 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array46);
        java.lang.reflect.Type type48 = remoteSolrServerConfiguration47.getType();
        java.lang.String str49 = remoteSolrServerConfiguration47.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider50 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration47);
        java.lang.String[] str_array59 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration60 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array59);
        java.lang.reflect.Type type61 = remoteSolrServerConfiguration60.getType();
        int i62 = remoteSolrServerConfiguration60.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider63 = remoteSolrServerConfiguration60.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration64 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str65 = defaultSolrConfiguration64.getPathField();
        boolean b66 = defaultSolrConfiguration64.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider67 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration64);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider68 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider63, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider67);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider69 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient70 = defaultSolrServerProvider69.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient71 = defaultSolrServerProvider69.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration72 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider73 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration72);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider74 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider75 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider73, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider74);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider76 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider69, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider74);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider77 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient78 = defaultSolrServerProvider77.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient79 = defaultSolrServerProvider77.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration80 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider81 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration80);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider82 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider83 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider81, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider84 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider77, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider85 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider69, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator86 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider87 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider63, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82, nodeAggregator86);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider88 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider50, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider82);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex89 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider32, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider50);
        org.apache.jackrabbit.oak.spi.query.Filter filter90 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState91 = null;
        try {
            double d92 = solrQueryIndex89.getCost(filter90, nodeState91);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue(i12 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "path_exact" + "'", str15.equals("path_exact"));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(solrClient20);
        org.junit.Assert.assertNotNull(solrClient21);
        org.junit.Assert.assertNotNull(solrClient28);
        org.junit.Assert.assertNotNull(solrClient29);
        org.junit.Assert.assertNotNull(str_array46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "hi!" + "'", str49.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue(i62 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider63);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "path_exact" + "'", str65.equals("path_exact"));
        org.junit.Assert.assertTrue(b66 == false);
        org.junit.Assert.assertNotNull(solrClient70);
        org.junit.Assert.assertNotNull(solrClient71);
        org.junit.Assert.assertNotNull(solrClient78);
        org.junit.Assert.assertNotNull(solrClient79);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse18 = solrClient14.deleteById("path_exact");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String str4 = embeddedSolrServerConfiguration2.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider5 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String str6 = embeddedSolrServerConfiguration2.getSolrHomePath();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_des" + "'", str4.equals("path_des"));
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "descendantsField" + "'", str6.equals("descendantsField"));
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.deleteByQuery("8983", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.commit(false, true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        java.lang.String[] str_array53 = new java.lang.String[] { "path_anc", "httpUrl", "8983", "collapseJcrContentNodes", "rows", "http://127.0.0.1", "ignoredProperties", "httpUrl", "8983", "primaryTypes", "path_child", "httpUrl", "shardsNo", "catchAllField", "path_child", "collapseJcrContentNodes", "", "usedProperties", "solrContext", "httpUrl", "rows", "socketTimeout", "zkHost", "typeMappings", "8983", "parentField", "hi!", "pathRestrictions", "http://127.0.0.1:8983/solr/oak", "8983", "solrContext", "httpUrl", "shardsNo", "rows_string_sort", "path_depth", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "replicationFactor", "path_exact", "propertyMappings", "depthField", "coreName", "solrContext", "path_depth", "path_child", "rows_string_sort", "depthField", "pathRestrictions", "usedProperties", "primaryTypes" };
        java.util.ArrayList<java.lang.String> arraylist_str54 = new java.util.ArrayList<java.lang.String>();
        boolean b55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str54, str_array53);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse56 = solrClient2.deleteById((java.util.List<java.lang.String>) arraylist_str54);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
        org.junit.Assert.assertNotNull(str_array53);
        org.junit.Assert.assertTrue(b55 == true);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer1 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(true);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.lang.String[] str_array37 = new java.lang.String[] { "solrServerType", "httpPort", "httpPort", "descendantsField", "coreName", "path_anc", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "depthField", "primaryTypes", "socketTimeout", "httpPort", "path_anc", "usedProperties", "path_depth", "httpPort", "parentField", "configurationDirectory", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "solrContext", "hi!", "127.0.0.1:9983", "primaryTypes", "socketTimeout", "collapseJcrContentNodes", "path_child", "rows_string_sort", "commitPolicy", "collapseJcrContentNodes", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "solrServerType", "configurationDirectory", "path_des" };
        java.util.ArrayList<java.lang.String> arraylist_str38 = new java.util.ArrayList<java.lang.String>();
        boolean b39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str38, str_array37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse40 = solrClient4.deleteById((java.util.List<java.lang.String>) arraylist_str38);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array37);
        org.junit.Assert.assertTrue(b39 == true);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse23 = solrClient18.commit("http://127.0.0.1", false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        java.lang.String str24 = remoteSolrServerConfiguration23.getSolrZkHost();
        java.lang.String[] str_array25 = remoteSolrServerConfiguration23.getSolrHttpUrls();
        java.lang.String str26 = remoteSolrServerConfiguration23.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy27 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient28 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration23, strategy27);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy27);
        int i30 = remoteSolrServerConfiguration9.getSocketTimeout();
        int i31 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertTrue("'" + strategy27 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy27.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient28);
        org.junit.Assert.assertTrue(i30 == 1);
        org.junit.Assert.assertTrue(i31 == (-1));
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        java.lang.String str12 = solrQueryIndex11.getIndexName();
        org.apache.jackrabbit.oak.spi.query.Filter filter13 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState14 = null;
        try {
            java.lang.String str15 = solrQueryIndex11.getPlan(filter13, nodeState14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "solr" + "'", str12.equals("solr"));
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.add("path_exact", iterator_solrInputDocument7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.Filter filter12 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array13 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry14 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b15 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry14, orderEntry_array13);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState16 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan17 = solrQueryIndex11.getPlans(filter12, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry14, nodeState16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(orderEntry_array13);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array7 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument8 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, solrInputDocument_array7);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient5.add("path_exact", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrInputDocument_array7);
        org.junit.Assert.assertTrue(b9 == false);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        org.apache.solr.common.SolrInputDocument solrInputDocument43 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse45 = solrClient19.add(solrInputDocument43, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse42 = solrClient8.deleteById("ignoredProperties");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.deleteById("rows_string_sort", (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.optimize(false, true, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams9 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback10 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse11 = solrClient8.queryAndStreamResponse(solrParams9, streamingResponseCallback10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument5 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient3.add("pathRestrictions", solrInputDocument5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient2.rollback("catchAllField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.reflect.Type type13 = remoteSolrServerConfiguration9.getType();
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        java.lang.reflect.Type type24 = remoteSolrServerConfiguration23.getType();
        java.lang.String str25 = remoteSolrServerConfiguration23.getSolrConfDir();
        java.lang.String str26 = remoteSolrServerConfiguration23.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider27 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient28 = defaultSolrServerProvider27.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy29 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration23, solrClient28, strategy29);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy29);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration9.getType();
        java.lang.String[] str_array33 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertNotNull(solrClient28);
        org.junit.Assert.assertTrue("'" + strategy29 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy29.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(str_array33);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array22);
        java.lang.String[] str_array25 = remoteSolrServerConfiguration24.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("hi!_string_sort", "path_exact", (int) (byte) 100, (int) (byte) 10, "path_anc", (int) (short) 1, (int) (byte) 0, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrCollection();
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "path_exact" + "'", str28.equals("path_exact"));
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient1 = solrServerProviderService0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = solrServerProviderService0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = solrServerProviderService0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = solrServerProviderService0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = solrServerProviderService0.getIndexingSolrServer();
        solrServerProviderService0.close();
        org.junit.Assert.assertNull(solrClient1);
        org.junit.Assert.assertNull(solrClient2);
        org.junit.Assert.assertNull(solrClient3);
        org.junit.Assert.assertNull(solrClient4);
        org.junit.Assert.assertNull(solrClient5);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        java.lang.String str4 = defaultSolrConfiguration0.getPathDepthField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_depth" + "'", str4.equals("path_depth"));
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array21 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument22 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b23 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument22, solrInputDocument_array21);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse24 = solrClient18.add("pathRestrictions", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument22);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
        org.junit.Assert.assertNotNull(solrInputDocument_array21);
        org.junit.Assert.assertTrue(b23 == false);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD9 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse10 = solrClient5.query("commitPolicy", solrParams8, mETHOD9);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.lang.String[] str_array39 = new java.lang.String[] { "configurationDirectory", "127.0.0.1:9983", "collapseJcrContentNodes", "http://127.0.0.1", "path_collapsed", "zkHost", "collection", "usedProperties", "solrServerType", "parentField", "socketTimeout", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "hi!_string_sort", "oak", "propertyRestrictions_string_sort", "depthField", "commitPolicy", "hi!_string_sort", "collection", "commitPolicy", "path_child", "path_depth", "parentField", "pathField", "catch_all", "collapseJcrContentNodes", "solrServerType", "parentField", "connectionTimeout", "rows_string_sort", "solrContext" };
        java.util.ArrayList<java.lang.String> arraylist_str40 = new java.util.ArrayList<java.lang.String>();
        boolean b41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str40, str_array39);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse42 = solrClient6.deleteById("path_exact", (java.util.List<java.lang.String>) arraylist_str40);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
        org.junit.Assert.assertNotNull(str_array39);
        org.junit.Assert.assertTrue(b41 == true);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        org.apache.solr.common.SolrInputDocument solrInputDocument15 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse16 = solrClient14.add(solrInputDocument15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient14);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        java.util.Collection<java.lang.String> collection_str11 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.IGNORED_PROPERTIES;
        org.apache.solr.common.params.SolrParams solrParams12 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList13 = solrClient8.getById("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", collection_str11, solrParams12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
        org.junit.Assert.assertNotNull(collection_str11);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.common.SolrDocument solrDocument8 = solrClient5.getById("path_exact");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        int i17 = remoteSolrServerConfiguration9.getSolrShardsNo();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue(i17 == 1);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument44 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse45 = solrClient19.add("propertyRestrictions", iterator_solrInputDocument44);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient13 = remoteSolrServerProvider12.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        int i12 = remoteSolrServerConfiguration10.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = remoteSolrServerConfiguration10.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration10);
        remoteSolrServerProvider14.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService16 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration17 = oakSolrConfigurationProviderService16.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService16, nodeAggregator18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration20);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider22 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider21, oakSolrConfigurationProvider22);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex24 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider21);
        org.apache.jackrabbit.oak.spi.query.Filter filter25 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState26 = null;
        try {
            java.lang.String str27 = solrQueryIndex24.getPlan(filter25, nodeState26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue(i12 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider13);
        org.junit.Assert.assertNotNull(oakSolrConfiguration17);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient13 = remoteSolrServerProvider12.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse37 = solrClient35.optimize("path_child");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str3 = defaultSolrConfiguration2.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy4 = defaultSolrConfiguration2.getCommitPolicy();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration2.getIgnoredProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList6 = solrClient1.getById(collection_str5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "path_collapsed" + "'", str3.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy4 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy4.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertNotNull(collection_str5);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        java.lang.String[] str_array10 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array10);
        java.lang.reflect.Type type12 = remoteSolrServerConfiguration11.getType();
        int i13 = remoteSolrServerConfiguration11.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = remoteSolrServerConfiguration11.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex15 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider14);
        org.apache.jackrabbit.oak.spi.query.Filter filter16 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState17 = null;
        try {
            double d18 = solrQueryIndex15.getCost(filter16, nodeState17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(str_array10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue(i13 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider14);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams10 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback11 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse12 = solrClient9.queryAndStreamResponse(solrParams10, streamingResponseCallback11);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState19);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider20);
        org.apache.jackrabbit.oak.spi.query.Filter filter22 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState23 = null;
        try {
            double d24 = solrQueryIndex21.getCost(filter22, nodeState23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.deleteByQuery("replicationFactor", (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("http://127.0.0.1", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i14 = remoteSolrServerConfiguration9.getSocketTimeout();
        java.lang.String str15 = remoteSolrServerConfiguration9.toString();
        java.lang.String str16 = remoteSolrServerConfiguration9.getSolrConfDir();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i14 == 1);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}" + "'", str15.equals("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}"));
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("commitPolicy", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction4 = null;
        java.lang.String str5 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction4);
        boolean b6 = defaultSolrConfiguration0.useForPathRestrictions();
        int i7 = defaultSolrConfiguration0.getRows();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(i7 == 10);
    }
}

