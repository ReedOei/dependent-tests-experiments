import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test001");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument5 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient3.add("zkHost", iterator_solrInputDocument5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test002");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("collapseJcrContentNodes", (java.lang.Integer) 0);
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider8 = embeddedSolrServerConfiguration2.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient9 = embeddedSolrServerProvider8.getSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider8);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test003");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        java.lang.String[] str_array10 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array10);
        java.lang.reflect.Type type12 = remoteSolrServerConfiguration11.getType();
        int i13 = remoteSolrServerConfiguration11.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = remoteSolrServerConfiguration11.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex15 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider14);
        org.apache.jackrabbit.oak.spi.query.Filter filter16 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState17 = null;
        try {
            java.lang.String str18 = solrQueryIndex15.getPlan(filter16, nodeState17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(str_array10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue(i13 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider14);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test004");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.addBean("solr", (java.lang.Object) "path_depth");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test005");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String str4 = embeddedSolrServerConfiguration2.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider5 = embeddedSolrServerConfiguration2.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient6 = embeddedSolrServerProvider5.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_des" + "'", str4.equals("path_des"));
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider5);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test006");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument18 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse19 = solrClient17.add(solrInputDocument18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test007");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient4.optimize("httpUrl", true, true, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test008");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "/solr");
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test009");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient5.queryAndStreamResponse(solrParams6, streamingResponseCallback7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test010");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument5 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.add(solrInputDocument5, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test011");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy14);
        int i16 = remoteSolrServerConfiguration9.getSocketTimeout();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue("'" + strategy14 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy14.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient15);
        org.junit.Assert.assertTrue(i16 == 1);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test012");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test013");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        org.apache.solr.common.SolrInputDocument solrInputDocument42 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse43 = solrClient8.add("httpPort", solrInputDocument42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test014");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument9 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.add("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", solrInputDocument9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test015");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        org.apache.solr.common.params.SolrParams solrParams17 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD18 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse19 = solrClient14.query(solrParams17, mETHOD18);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test016");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration solrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder10 = solrClient9.getBinder();
        java.lang.String[] str_array19 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array19);
        java.lang.reflect.Type type21 = remoteSolrServerConfiguration20.getType();
        java.lang.String str22 = remoteSolrServerConfiguration20.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy23 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration20, strategy23);
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register(solrServerConfiguration0, solrClient9, strategy23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(documentObjectBinder10);
        org.junit.Assert.assertNotNull(str_array19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));
        org.junit.Assert.assertTrue("'" + strategy23 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy23.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test017");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction4 = null;
        java.lang.String str5 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction4);
        boolean b6 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test018");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.toString();
        int i11 = remoteSolrServerConfiguration9.getSocketTimeout();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}" + "'", str10.equals("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}"));
        org.junit.Assert.assertTrue(i11 == 1);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test019");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider remoteSolrServerConfigurationProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider> solrserverconfiguration_remoteSolrServerProvider1 = remoteSolrServerConfigurationProvider0.getSolrServerConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration<org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider> solrserverconfiguration_remoteSolrServerProvider2 = remoteSolrServerConfigurationProvider0.getSolrServerConfiguration();
        org.junit.Assert.assertNull(solrserverconfiguration_remoteSolrServerProvider1);
        org.junit.Assert.assertNull(solrserverconfiguration_remoteSolrServerProvider2);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test020");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str14 = defaultSolrConfiguration13.getPathField();
        boolean b15 = defaultSolrConfiguration13.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider16);
        java.lang.String[] str_array26 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration27 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array26);
        java.lang.reflect.Type type28 = remoteSolrServerConfiguration27.getType();
        int i29 = remoteSolrServerConfiguration27.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider30 = remoteSolrServerConfiguration27.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str32 = defaultSolrConfiguration31.getPathField();
        boolean b33 = defaultSolrConfiguration31.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider30, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider34);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider34);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder38 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState39 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback40 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor41 = solrIndexEditorProvider36.getIndexEditor("zkHost", nodeBuilder38, nodeState39, indexUpdateCallback40);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "path_exact" + "'", str14.equals("path_exact"));
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(str_array26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue(i29 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider30);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "path_exact" + "'", str32.equals("path_exact"));
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNull(editor41);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test021");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        java.lang.String str6 = defaultSolrConfiguration0.getPathField();
        boolean b7 = defaultSolrConfiguration0.useForPrimaryTypes();
        java.lang.String str8 = defaultSolrConfiguration0.getCollapsedPathField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_exact" + "'", str6.equals("path_exact"));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "path_collapsed" + "'", str8.equals("path_collapsed"));
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test022");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str14 = defaultSolrConfiguration13.getPathField();
        boolean b15 = defaultSolrConfiguration13.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider16);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider18.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient20 = defaultSolrServerProvider18.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration21 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider22, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider23);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider25 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider23);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient27 = defaultSolrServerProvider26.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient28 = defaultSolrServerProvider26.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration29);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider30, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider26, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator35 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31, nodeAggregator35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient38 = defaultSolrServerProvider37.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient39 = defaultSolrServerProvider37.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient40 = defaultSolrServerProvider37.getIndexingSolrServer();
        java.lang.String[] str_array49 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration50 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array49);
        java.lang.reflect.Type type51 = remoteSolrServerConfiguration50.getType();
        int i52 = remoteSolrServerConfiguration50.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider53 = remoteSolrServerConfiguration50.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration54 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str55 = defaultSolrConfiguration54.getPathField();
        boolean b56 = defaultSolrConfiguration54.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider57 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration54);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider58 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider53, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider57);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration59 = defaultSolrConfigurationProvider57.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider60 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider37, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider57);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration61 = defaultSolrConfigurationProvider57.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider62 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider57);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "path_exact" + "'", str14.equals("path_exact"));
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(solrClient20);
        org.junit.Assert.assertNotNull(solrClient27);
        org.junit.Assert.assertNotNull(solrClient28);
        org.junit.Assert.assertNotNull(solrClient38);
        org.junit.Assert.assertNotNull(solrClient39);
        org.junit.Assert.assertNotNull(solrClient40);
        org.junit.Assert.assertNotNull(str_array49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue(i52 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider53);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "path_exact" + "'", str55.equals("path_exact"));
        org.junit.Assert.assertTrue(b56 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration59);
        org.junit.Assert.assertNotNull(oakSolrConfiguration61);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test023");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.deleteByQuery("zkHost", 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test024");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration15 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str16 = defaultSolrConfiguration15.getPathField();
        int i17 = defaultSolrConfiguration15.getRows();
        boolean b18 = defaultSolrConfiguration15.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str19 = defaultSolrConfiguration15.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams20 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList21 = solrClient14.getById(collection_str19, solrParams20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient14);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "path_exact" + "'", str16.equals("path_exact"));
        org.junit.Assert.assertTrue(i17 == 10);
        org.junit.Assert.assertTrue(b18 == false);
        org.junit.Assert.assertNotNull(collection_str19);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test025");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.commit(false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test026");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient6.optimize("propertyRestrictions_string_sort", false, true, 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test027");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test028");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument7 = solrClient4.getById("childrenField", "rows");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test029");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str7 = defaultSolrConfiguration6.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy8 = defaultSolrConfiguration6.getCommitPolicy();
        java.util.Collection<java.lang.String> collection_str9 = defaultSolrConfiguration6.getIgnoredProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList10 = solrClient4.getById(collection_str9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "path_collapsed" + "'", str7.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy8 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy8.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertNotNull(collection_str9);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test030");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array20 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument21 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b22 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument21, solrInputDocument_array20);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse24 = solrClient18.add("depthField", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument21, 2);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrInputDocument_array20);
        org.junit.Assert.assertTrue(b22 == false);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test031");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient4.optimize();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test032");
        java.lang.String str2 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField(0, "hi!_string_sort");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!_string_sort_string_sort" + "'", str2.equals("hi!_string_sort_string_sort"));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test033");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i14 = remoteSolrServerConfiguration9.getSocketTimeout();
        int i15 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i14 == 1);
        org.junit.Assert.assertTrue(i15 == (-1));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test034");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        java.util.Collection<java.lang.String> collection_str5 = org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationDefaults.IGNORED_PROPERTIES;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.addBean((java.lang.Object) collection_str5, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(collection_str5);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test035");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        org.apache.solr.common.params.SolrParams solrParams21 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD22 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse23 = solrClient18.query("replicationFactor", solrParams21, mETHOD22);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test036");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array20 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument21 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b22 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument21, solrInputDocument_array20);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse24 = solrClient18.add("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument21, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrInputDocument_array20);
        org.junit.Assert.assertTrue(b22 == false);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test037");
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState0);
        nodeStateSolrServerProvider1.close();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient3 = nodeStateSolrServerProvider1.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test038");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i14 = remoteSolrServerConfiguration9.getSolrShardsNo();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient16 = remoteSolrServerProvider15.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i14 == 1);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test039");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse18 = solrClient14.commit("/solr");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test040");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient4.commit(false, true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test041");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add(solrInputDocument7, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test042");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i14 = remoteSolrServerConfiguration9.getSolrShardsNo();
        int i15 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i14 == 1);
        org.junit.Assert.assertTrue(i15 == 100);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test043");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCatchAllField();
        java.util.Collection<java.lang.String> collection_str2 = defaultSolrConfiguration0.getUsedProperties();
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction3 = null;
        try {
            java.lang.String str4 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "catch_all" + "'", str1.equals("catch_all"));
        org.junit.Assert.assertNotNull(collection_str2);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test044");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array10 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument11 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11, solrInputDocument_array10);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient8.add("commitPolicy", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrInputDocument_array10);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test045");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState19);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider20);
        nodeStateSolrServerProvider20.close();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient23 = nodeStateSolrServerProvider20.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test046");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.commit("solr", true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test047");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        solrServerProviderService0.close();
        org.apache.solr.client.solrj.SolrClient solrClient2 = solrServerProviderService0.getSolrServer();
        org.junit.Assert.assertNull(solrClient2);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test048");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCollapsedPathField();
        java.lang.String str2 = defaultSolrConfiguration0.getCollapsedPathField();
        boolean b3 = defaultSolrConfiguration0.collapseJcrContentNodes();
        int i4 = defaultSolrConfiguration0.getRows();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_collapsed" + "'", str1.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "path_collapsed" + "'", str2.equals("path_collapsed"));
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(i4 == 10);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test049");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient4.optimize("childrenField", false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test050");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient13 = remoteSolrServerProvider12.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test051");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test052");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        java.lang.String[] str_array68 = new java.lang.String[] { "path_exact", "propertyRestrictions_string_sort", "hi!", "solrHomePath", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "primaryTypes", "path_des", "rows_string_sort", "rows", "hi!_string_sort_string_sort", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "hi!_string_sort", "rows_string_sort", "httpPort", "127.0.0.1:9983", "pathRestrictions", "catch_all", "http://127.0.0.1:8983/solr/oak", "commitPolicy", "ignoredProperties", "propertyRestrictions", "depthField", "propertyRestrictions", "collapseJcrContentNodes", "collection", "pathField", "replicationFactor", "shardsNo", "path_child", "ignoredProperties", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "pathRestrictions", "pathField", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "hi!_string_sort", "configurationDirectory", "solrServerType", "httpPort", "descendantsField", "8983", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "rows", "solrContext", "http://127.0.0.1", "oak", "ignoredProperties", "socketTimeout", "/solr", "connectionTimeout", "replicationFactor" };
        java.util.ArrayList<java.lang.String> arraylist_str69 = new java.util.ArrayList<java.lang.String>();
        boolean b70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str69, str_array68);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse72 = solrClient14.deleteById("httpUrl", (java.util.List<java.lang.String>) arraylist_str69, 3000);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(str_array68);
        org.junit.Assert.assertTrue(b70 == true);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test053");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse23 = solrClient18.optimize("http://127.0.0.1:8983/solr/oak", false, false, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test054");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient13 = remoteSolrServerProvider12.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test055");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument9 = solrClient5.getById("path_anc", "pathField", solrParams8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test056");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array22);
        java.lang.String[] str_array25 = remoteSolrServerConfiguration24.getSolrHttpUrls();
        int i26 = remoteSolrServerConfiguration24.getSocketTimeout();
        int i27 = remoteSolrServerConfiguration24.getConnectionTimeout();
        java.lang.String[] str_array36 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array36);
        java.lang.reflect.Type type38 = remoteSolrServerConfiguration37.getType();
        int i39 = remoteSolrServerConfiguration37.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider40 = remoteSolrServerConfiguration37.getProvider();
        java.lang.reflect.Type type41 = remoteSolrServerConfiguration37.getType();
        java.lang.String[] str_array50 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration51 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array50);
        java.lang.reflect.Type type52 = remoteSolrServerConfiguration51.getType();
        java.lang.String str53 = remoteSolrServerConfiguration51.getSolrConfDir();
        java.lang.String str54 = remoteSolrServerConfiguration51.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider55 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient56 = defaultSolrServerProvider55.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy57 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration51, solrClient56, strategy57);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy57);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration24, strategy57);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse62 = solrClient5.addBean("path_depth", (java.lang.Object) remoteSolrServerConfiguration24, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertTrue(i26 == 32);
        org.junit.Assert.assertTrue(i27 == 10);
        org.junit.Assert.assertNotNull(str_array36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue(i39 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(str_array50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "hi!" + "'", str53.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        org.junit.Assert.assertNotNull(solrClient56);
        org.junit.Assert.assertTrue("'" + strategy57 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy57.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test057");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient5.optimize("typeMappings", false, false, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test058");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        solrServerProviderService0.close();
        java.lang.String[] str_array10 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array10);
        java.lang.reflect.Type type12 = remoteSolrServerConfiguration11.getType();
        int i13 = remoteSolrServerConfiguration11.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = remoteSolrServerConfiguration11.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        remoteSolrServerProvider15.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService17 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = oakSolrConfigurationProviderService17.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider15, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService17, nodeAggregator19);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator21 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator22 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration23);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider25 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider24, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider25);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration27 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider28 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration27);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider29 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider28, oakSolrConfigurationProvider29);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider31 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider28, oakSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex33 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator22, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider25, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider28);
        java.lang.String[] str_array42 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration43 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array42);
        java.lang.reflect.Type type44 = remoteSolrServerConfiguration43.getType();
        int i45 = remoteSolrServerConfiguration43.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider46 = remoteSolrServerConfiguration43.getProvider();
        remoteSolrServerProvider46.close();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex48 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator21, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider25, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider46);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider49 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider15, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider25);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator50 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider51 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) solrServerProviderService0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider25, nodeAggregator50);
        org.junit.Assert.assertNotNull(str_array10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue(i13 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider14);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
        org.junit.Assert.assertNotNull(str_array42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue(i45 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider46);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test059");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument6 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.add(solrInputDocument6, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test060");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer5 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient2.addBean("httpUrl", (java.lang.Object) solrIndexInitializer5, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test061");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        java.lang.String[] str_array15 = new java.lang.String[] { "connectionTimeout", "path_exact", "usedProperties", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "path_anc" };
        java.util.ArrayList<java.lang.String> arraylist_str16 = new java.util.ArrayList<java.lang.String>();
        boolean b17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str16, str_array15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse18 = solrClient8.deleteById((java.util.List<java.lang.String>) arraylist_str16);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertTrue(b17 == true);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test062");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.solr.common.params.SolrParams solrParams5 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD6 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse7 = solrClient2.query("hi!", solrParams5, mETHOD6);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test063");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient18.optimize(false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test064");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient14.optimize("zkHost", false, true, 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test065");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        int i2 = defaultSolrConfiguration0.getRows();
        boolean b3 = defaultSolrConfiguration0.useForPathRestrictions();
        java.lang.String str4 = defaultSolrConfiguration0.getCatchAllField();
        boolean b5 = defaultSolrConfiguration0.useForPropertyRestrictions();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(i2 == 10);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "catch_all" + "'", str4.equals("catch_all"));
        org.junit.Assert.assertTrue(b5 == false);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test066");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array3 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument4 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b5 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument4, solrInputDocument_array3);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient2.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument4, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrInputDocument_array3);
        org.junit.Assert.assertTrue(b5 == false);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test067");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState19);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider20);
        nodeStateSolrServerProvider20.close();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient23 = nodeStateSolrServerProvider20.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test068");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array5 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument6 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument6, solrInputDocument_array5);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient3.add("/solr", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument6, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrInputDocument_array5);
        org.junit.Assert.assertTrue(b7 == false);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test069");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        java.lang.String[] str_array18 = new java.lang.String[] { "zkHost", "httpUrl", "socketTimeout", "path_collapsed", "oak", "solrContext", "usedProperties", "collapseJcrContentNodes", "/solr", "oak", "path_depth", "hi!_string_sort_string_sort" };
        java.util.ArrayList<java.lang.String> arraylist_str19 = new java.util.ArrayList<java.lang.String>();
        boolean b20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str19, str_array18);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient4.deleteById((java.util.List<java.lang.String>) arraylist_str19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue(b20 == true);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test070");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, oakSolrConfigurationProvider19);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState21 = null;
        java.util.List<? extends org.apache.jackrabbit.oak.spi.query.QueryIndex> list_wildcard22 = solrQueryIndexProvider20.getQueryIndexes(nodeState21);
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(list_wildcard22);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test071");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array4 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument5 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument5, solrInputDocument_array4);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient2.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument5, 2);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
        org.junit.Assert.assertNotNull(solrInputDocument_array4);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test072");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        int i12 = remoteSolrServerConfiguration10.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = remoteSolrServerConfiguration10.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration10);
        remoteSolrServerProvider14.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService16 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration17 = oakSolrConfigurationProviderService16.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService16, nodeAggregator18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration20);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider22 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider21, oakSolrConfigurationProvider22);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex24 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider21);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan25 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState26 = null;
        try {
            java.lang.String str27 = solrQueryIndex24.getPlanDescription(indexPlan25, nodeState26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue(i12 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider13);
        org.junit.Assert.assertNotNull(oakSolrConfiguration17);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test073");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.String str3 = embeddedSolrServerConfiguration2.toString();
        java.lang.String str4 = embeddedSolrServerConfiguration2.getSolrHomePath();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}" + "'", str3.equals("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "descendantsField" + "'", str4.equals("descendantsField"));
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test074");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.add(iterator_solrInputDocument7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test075");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.common.SolrDocument solrDocument9 = solrClient5.getById("propertyRestrictions_string_sort", "propertyRestrictions");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test076");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse12 = solrClient9.deleteById("path_exact", "rows_string_sort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test077");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument9 = solrClient5.getById("propertyMappings", solrParams8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test078");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("collapseJcrContentNodes", (java.lang.Integer) 0);
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider8 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String str9 = embeddedSolrServerConfiguration2.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}" + "'", str9.equals("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}"));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test079");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.commit("propertyRestrictions_string_sort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test080");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults solrServerConfigurationDefaults16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationDefaults();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient14.addBean("ignoredProperties", (java.lang.Object) solrServerConfigurationDefaults16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient14);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test081");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.lang.String[] str_array13 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array13);
        java.lang.reflect.Type type15 = remoteSolrServerConfiguration14.getType();
        java.lang.String str16 = remoteSolrServerConfiguration14.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration14);
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService18 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService18, nodeAggregator19);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str22 = defaultSolrConfiguration21.getPathField();
        boolean b23 = defaultSolrConfiguration21.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration21);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator25 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider24, nodeAggregator25);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider27 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider24);
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "path_exact" + "'", str22.equals("path_exact"));
        org.junit.Assert.assertTrue(b23 == false);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test082");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        try {
            org.apache.solr.common.SolrDocument solrDocument45 = solrClient19.getById("http://127.0.0.1:8983/solr/oak", "httpPort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test083");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument8 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add("solr", solrInputDocument8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test084");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient6.deleteById("oak", (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test085");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array11 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument12 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b13 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument12, solrInputDocument_array11);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse15 = solrClient8.add("depthField", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument12, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
        org.junit.Assert.assertNotNull(solrInputDocument_array11);
        org.junit.Assert.assertTrue(b13 == false);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test086");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient12 = remoteSolrServerProvider6.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test087");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.addBean("RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", (java.lang.Object) "path_exact");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test088");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        org.apache.solr.client.solrj.SolrRequest solrRequest15 = null;
        try {
            org.apache.solr.common.util.NamedList<java.lang.Object> namedlist_obj16 = solrClient14.request(solrRequest15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient14);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test089");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        int i12 = remoteSolrServerConfiguration10.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = remoteSolrServerConfiguration10.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration10);
        remoteSolrServerProvider14.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService16 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration17 = oakSolrConfigurationProviderService16.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService16, nodeAggregator18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration20);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider22 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider21, oakSolrConfigurationProvider22);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex24 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration25 = oakSolrConfigurationProviderService16.getConfiguration();
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue(i12 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider13);
        org.junit.Assert.assertNotNull(oakSolrConfiguration17);
        org.junit.Assert.assertNotNull(oakSolrConfiguration25);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test090");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction3 = null;
        java.lang.String str4 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction3);
        java.lang.String str5 = defaultSolrConfiguration0.getCollapsedPathField();
        boolean b6 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "path_collapsed" + "'", str5.equals("path_collapsed"));
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test091");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider20.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient22 = defaultSolrServerProvider20.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration23);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider25 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider24, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider25);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider27 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider20, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider25);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider28 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient29 = defaultSolrServerProvider28.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient30 = defaultSolrServerProvider28.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration31);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider32, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider33);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider28, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider33);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider20, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider33);
        org.apache.solr.client.solrj.SolrClient solrClient37 = defaultSolrServerProvider20.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient38 = defaultSolrServerProvider20.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder39 = solrClient38.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse41 = solrClient18.addBean("typeMappings", (java.lang.Object) solrClient38, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient21);
        org.junit.Assert.assertNotNull(solrClient22);
        org.junit.Assert.assertNotNull(solrClient29);
        org.junit.Assert.assertNotNull(solrClient30);
        org.junit.Assert.assertNotNull(solrClient37);
        org.junit.Assert.assertNotNull(solrClient38);
        org.junit.Assert.assertNotNull(documentObjectBinder39);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test092");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str10 = defaultSolrConfiguration9.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy11 = defaultSolrConfiguration9.getCommitPolicy();
        java.util.Collection<java.lang.String> collection_str12 = defaultSolrConfiguration9.getIgnoredProperties();
        org.apache.solr.common.params.SolrParams solrParams13 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList14 = solrClient5.getById("configurationDirectory", collection_str12, solrParams13);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "path_collapsed" + "'", str10.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy11 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy11.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertNotNull(collection_str12);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test093");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array30 = new java.lang.String[] { "http://127.0.0.1:8983/solr/oak", "connectionTimeout", "hi!", "typeMappings", "typeMappings", "path_depth", "path_exact", "replicationFactor", "path_depth", "propertyMappings", "depthField", "connectionTimeout", "propertyMappings", "path_exact", "typeMappings", "childrenField", "http://127.0.0.1:8983/solr/oak", "ignoredProperties", "solrHomePath", "propertyRestrictions_string_sort", "/solr" };
        java.util.ArrayList<java.lang.String> arraylist_str31 = new java.util.ArrayList<java.lang.String>();
        boolean b32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str31, str_array30);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse33 = solrClient8.deleteById((java.util.List<java.lang.String>) arraylist_str31);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertTrue(b32 == true);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test094");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        java.lang.String[] str_array62 = new java.lang.String[] { "http://127.0.0.1:8983/solr/oak", "propertyRestrictions", "solr", "shardsNo", "solr", "descendantsField", "hi!_string_sort", "rows", "ignoredProperties", "collection", "coreName", "8983", "propertyMappings", "descendantsField", "usedProperties", "shardsNo", "path_exact", "127.0.0.1:9983", "httpPort", "httpUrl", "usedProperties", "pathRestrictions", "solrContext", "collection", "collapseJcrContentNodes", "shardsNo" };
        java.util.ArrayList<java.lang.String> arraylist_str63 = new java.util.ArrayList<java.lang.String>();
        boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str63, str_array62);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse66 = solrClient35.deleteById((java.util.List<java.lang.String>) arraylist_str63, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient35);
        org.junit.Assert.assertNotNull(str_array62);
        org.junit.Assert.assertTrue(b64 == true);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test095");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse14 = solrClient9.commit("hi!", false, false, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test096");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        java.lang.String[] str_array47 = new java.lang.String[] { "path_depth", "hi!", "zkHost", "parentField", "8983", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "shardsNo", "solrContext", "typeMappings", "path_collapsed", "hi!", "configurationDirectory", "usedProperties", "pathField", "shardsNo", "shardsNo", "path_child", "commitPolicy", "commitPolicy", "shardsNo", "hi!_string_sort", "socketTimeout", "replicationFactor", "path_collapsed", "httpUrl", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "solrHomePath", "httpUrl", "shardsNo", "shardsNo", "propertyMappings", "solr", "rows", "/solr", "propertyRestrictions", "primaryTypes", "path_child", "descendantsField", "127.0.0.1:9983", "hi!_string_sort" };
        java.util.ArrayList<java.lang.String> arraylist_str48 = new java.util.ArrayList<java.lang.String>();
        boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str48, str_array47);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse51 = solrClient5.deleteById((java.util.List<java.lang.String>) arraylist_str48, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array47);
        org.junit.Assert.assertTrue(b49 == true);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test097");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        java.lang.String str12 = solrQueryIndex11.getIndexName();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator13 = solrQueryIndex11.getNodeAggregator();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan14 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState15 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor16 = solrQueryIndex11.query(indexPlan14, nodeState15);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "solr" + "'", str12.equals("solr"));
        org.junit.Assert.assertNull(nodeAggregator13);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test098");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient5 = embeddedSolrServerProvider4.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test099");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration8 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str9 = defaultSolrConfiguration8.getPathField();
        int i10 = defaultSolrConfiguration8.getRows();
        boolean b11 = defaultSolrConfiguration8.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str12 = defaultSolrConfiguration8.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams13 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList14 = solrClient5.getById("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", collection_str12, solrParams13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "path_exact" + "'", str9.equals("path_exact"));
        org.junit.Assert.assertTrue(i10 == 10);
        org.junit.Assert.assertTrue(b11 == false);
        org.junit.Assert.assertNotNull(collection_str12);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test100");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getSocketTimeout();
        java.lang.String[] str_array12 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == 1);
        org.junit.Assert.assertNotNull(str_array12);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test101");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str7 = defaultSolrConfiguration6.getPathField();
        boolean b8 = defaultSolrConfiguration6.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration6);
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction10 = null;
        java.lang.String str11 = defaultSolrConfiguration6.getFieldForPropertyRestriction(propertyRestriction10);
        boolean b12 = defaultSolrConfiguration6.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str13 = defaultSolrConfiguration6.getIgnoredProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList14 = solrClient4.getById(collection_str13);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "path_exact" + "'", str7.equals("path_exact"));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection_str13);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test102");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument4 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient3.add(solrInputDocument4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test103");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        org.apache.solr.common.params.SolrParams solrParams9 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument10 = solrClient5.getById("ignoredProperties", solrParams9);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test104");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array19 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument20 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b21 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument20, solrInputDocument_array19);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient18.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument20);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrInputDocument_array19);
        org.junit.Assert.assertTrue(b21 == false);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test105");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("collapseJcrContentNodes", (java.lang.Integer) 0);
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider8 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration11 = embeddedSolrServerConfiguration2.withHttpConfiguration("", (java.lang.Integer) 1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration12 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider8);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration11);
        org.junit.Assert.assertNull(httpConfiguration12);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test106");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array6 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument7 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, solrInputDocument_array6);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient4.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrInputDocument_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test107");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        double d12 = solrQueryIndex11.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.Filter filter13 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array14 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry15 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b16 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry15, orderEntry_array14);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState17 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan18 = solrQueryIndex11.getPlans(filter13, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry15, nodeState17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue(d12 == 2.3d);
        org.junit.Assert.assertNotNull(orderEntry_array14);
        org.junit.Assert.assertTrue(b16 == false);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test108");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array8 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument9 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b10 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument9, solrInputDocument_array8);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient6.add("path_collapsed", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument9);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
        org.junit.Assert.assertNotNull(solrInputDocument_array8);
        org.junit.Assert.assertTrue(b10 == false);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test109");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument8 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.add("pathField", solrInputDocument8, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test110");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.deleteById("path_anc");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test111");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.deleteById("shardsNo", "catchAllField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test112");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.commit("propertyRestrictions_string_sort", false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test113");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument7 = solrClient2.getById("httpUrl", "oak", solrParams6);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test114");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        remoteSolrServerProvider13.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService15 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration16 = oakSolrConfigurationProviderService15.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator17 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService15, nodeAggregator17);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient19 = remoteSolrServerProvider13.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(oakSolrConfiguration16);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test115");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add(solrInputDocument7, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test116");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient4.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test117");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        java.lang.Object obj20 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient18.addBean("parentField", obj20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test118");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse17 = solrClient14.deleteByQuery("", (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient14);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test119");
        java.lang.String str2 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField((int) (byte) 100, "/solr");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "/solr_string_sort" + "'", str2.equals("/solr_string_sort"));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test120");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient3.deleteByQuery("zkHost", "hi!_string_sort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test121");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy2 = defaultSolrConfiguration0.getCommitPolicy();
        boolean b3 = defaultSolrConfiguration0.useForPropertyRestrictions();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_collapsed" + "'", str1.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy2 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy2.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertTrue(b3 == false);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test122");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient8.optimize("catchAllField", false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test123");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        org.apache.solr.common.params.SolrParams solrParams37 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse38 = solrClient35.query("solrHomePath", solrParams37);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test124");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient4.commit("path_exact");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test125");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient5.deleteById("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "path_collapsed", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test126");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array19 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array19);
        java.lang.reflect.Type type21 = remoteSolrServerConfiguration20.getType();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient9.addBean("hi!", (java.lang.Object) remoteSolrServerConfiguration20);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(str_array19);
        org.junit.Assert.assertNotNull(type21);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test127");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.deleteById("zkHost", "catchAllField", 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test128");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        double d12 = solrQueryIndex11.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan13 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState14 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor15 = solrQueryIndex11.query(indexPlan13, nodeState14);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
        org.junit.Assert.assertTrue(d12 == 2.3d);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test129");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse7 = solrClient5.ping();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test130");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient6.commit("hi!_string_sort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test131");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy11 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.SEARCHING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy11);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertTrue("'" + strategy11 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.SEARCHING + "'", strategy11.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.SEARCHING));
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test132");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCatchAllField();
        boolean b2 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "catch_all" + "'", str1.equals("catch_all"));
        org.junit.Assert.assertTrue(b2 == false);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test133");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider36 = embeddedSolrServerConfiguration2.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient37 = embeddedSolrServerProvider36.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider36);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test134");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration7 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str8 = defaultSolrConfiguration7.getPathField();
        int i9 = defaultSolrConfiguration7.getRows();
        boolean b10 = defaultSolrConfiguration7.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str11 = defaultSolrConfiguration7.getIgnoredProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList12 = solrClient5.getById(collection_str11);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "path_exact" + "'", str8.equals("path_exact"));
        org.junit.Assert.assertTrue(i9 == 10);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(collection_str11);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test135");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.deleteByQuery("usedProperties");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test136");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("ignoredProperties", "8983", 1, 0, "usedProperties", (int) ' ', (int) (byte) -1, str_array15);
        org.junit.Assert.assertNotNull(str_array15);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test137");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.deleteById("rows_string_sort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test138");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.useForPropertyRestrictions();
        boolean b5 = defaultSolrConfiguration0.useForPrimaryTypes();
        java.lang.String str6 = defaultSolrConfiguration0.getPathDepthField();
        boolean b7 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy8 = defaultSolrConfiguration0.getCommitPolicy();
        boolean b9 = defaultSolrConfiguration0.useForPathRestrictions();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_depth" + "'", str6.equals("path_depth"));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue("'" + commitPolicy8 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy8.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertTrue(b9 == false);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test139");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument12 = solrClient9.getById("depthField", "collection");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test140");
        java.lang.CharSequence charSequence1 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.partialEscape((java.lang.CharSequence) "propertyMappings");
        org.junit.Assert.assertNotNull(charSequence1);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test141");
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState0);
        nodeStateSolrServerProvider1.close();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient3 = nodeStateSolrServerProvider1.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test142");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        java.lang.String[] str_array47 = new java.lang.String[] { "socketTimeout", "/solr", "path_exact" };
        java.util.ArrayList<java.lang.String> arraylist_str48 = new java.util.ArrayList<java.lang.String>();
        boolean b49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str48, str_array47);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse51 = solrClient19.deleteById("ignoredProperties", (java.util.List<java.lang.String>) arraylist_str48, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
        org.junit.Assert.assertNotNull(str_array47);
        org.junit.Assert.assertTrue(b49 == true);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test143");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy14);
        java.lang.String str16 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue("'" + strategy14 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy14.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient15);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test144");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.lang.String[] str_array12 = new java.lang.String[] { "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "primaryTypes", "hi!", "/solr", "descendantsField", "solrHomePath" };
        java.util.ArrayList<java.lang.String> arraylist_str13 = new java.util.ArrayList<java.lang.String>();
        boolean b14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str13, str_array12);
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList15 = solrClient4.getById("catch_all", (java.util.Collection<java.lang.String>) arraylist_str13);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertTrue(b14 == true);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test145");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient18.rollback("http://127.0.0.1:8983/solr/oak");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test146");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("path_anc", "ignoredProperties");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration3 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.reflect.Type type4 = embeddedSolrServerConfiguration2.getType();
        java.lang.reflect.Type type5 = embeddedSolrServerConfiguration2.getType();
        org.junit.Assert.assertNull(httpConfiguration3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test147");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test148");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient4.optimize("collapseJcrContentNodes", true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test149");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse37 = solrClient35.rollback("hi!_string_sort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test150");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument5 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.add("/solr_string_sort", iterator_solrInputDocument5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test151");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        java.lang.String str6 = defaultSolrConfiguration0.getPathField();
        java.lang.String str7 = defaultSolrConfiguration0.getCatchAllField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_exact" + "'", str6.equals("path_exact"));
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "catch_all" + "'", str7.equals("catch_all"));
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test152");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        defaultSolrServerProvider0.close();
        defaultSolrServerProvider0.close();
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test153");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        double d24 = solrQueryIndex23.getMinimumCost();
        double d25 = solrQueryIndex23.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan26 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState27 = null;
        try {
            java.lang.String str28 = solrQueryIndex23.getPlanDescription(indexPlan26, nodeState27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue(d24 == 2.3d);
        org.junit.Assert.assertTrue(d25 == 2.3d);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test154");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration19 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str20 = defaultSolrConfiguration19.getPathField();
        boolean b21 = defaultSolrConfiguration19.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration19);
        java.util.Collection<java.lang.String> collection_str23 = defaultSolrConfiguration19.getUsedProperties();
        java.util.Collection<java.lang.String> collection_str24 = defaultSolrConfiguration19.getIgnoredProperties();
        org.apache.solr.common.params.SolrParams solrParams25 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList26 = solrClient18.getById(collection_str24, solrParams25);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "path_exact" + "'", str20.equals("path_exact"));
        org.junit.Assert.assertTrue(b21 == false);
        org.junit.Assert.assertNotNull(collection_str23);
        org.junit.Assert.assertNotNull(collection_str24);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test155");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        org.apache.solr.common.params.SolrParams solrParams41 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD42 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse43 = solrClient8.query(solrParams41, mETHOD42);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test156");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.lang.String str5 = defaultSolrConfiguration0.getPathDepthField();
        boolean b6 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "path_depth" + "'", str5.equals("path_depth"));
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test157");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer3 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(false, "typeMappings", true);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder4 = null;
        try {
            solrIndexInitializer3.initialize(nodeBuilder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test158");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument8 = solrClient5.getById("httpUrl", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test159");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient15 = remoteSolrServerProvider14.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test160");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        java.lang.String str12 = remoteSolrServerConfiguration10.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration10);
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        java.lang.reflect.Type type24 = remoteSolrServerConfiguration23.getType();
        int i25 = remoteSolrServerConfiguration23.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider26 = remoteSolrServerConfiguration23.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration27 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str28 = defaultSolrConfiguration27.getPathField();
        boolean b29 = defaultSolrConfiguration27.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration27);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider26, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider30);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient33 = defaultSolrServerProvider32.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient34 = defaultSolrServerProvider32.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration35 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider38 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider36, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider37);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider39 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider32, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider40 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient41 = defaultSolrServerProvider40.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient42 = defaultSolrServerProvider40.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration43 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration43);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider45 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider46 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider44, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider47 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider40, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider48 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider32, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator49 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider50 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider26, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45, nodeAggregator49);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider51 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration52 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider53 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration52);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider55 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider53, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider54);
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService56 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider57 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider53, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService56);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator58 = null;
        java.lang.String[] str_array67 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration68 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array67);
        java.lang.reflect.Type type69 = remoteSolrServerConfiguration68.getType();
        int i70 = remoteSolrServerConfiguration68.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider71 = remoteSolrServerConfiguration68.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider72 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration68);
        remoteSolrServerProvider72.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService74 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration75 = oakSolrConfigurationProviderService74.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator76 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider77 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider72, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService74, nodeAggregator76);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration78 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider79 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration78);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider80 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider81 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider79, oakSolrConfigurationProvider80);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex82 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator58, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService74, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider79);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator83 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider84 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider53, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService74, nodeAggregator83);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex85 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider53);
        java.lang.String str86 = solrQueryIndex85.getIndexName();
        org.apache.jackrabbit.oak.spi.query.Filter filter87 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState88 = null;
        try {
            double d89 = solrQueryIndex85.getCost(filter87, nodeState88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue(i25 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider26);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "path_exact" + "'", str28.equals("path_exact"));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(solrClient33);
        org.junit.Assert.assertNotNull(solrClient34);
        org.junit.Assert.assertNotNull(solrClient41);
        org.junit.Assert.assertNotNull(solrClient42);
        org.junit.Assert.assertNotNull(str_array67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue(i70 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider71);
        org.junit.Assert.assertNotNull(oakSolrConfiguration75);
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "solr" + "'", str86.equals("solr"));
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test161");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        java.lang.String[] str_array10 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array10);
        java.lang.reflect.Type type12 = remoteSolrServerConfiguration11.getType();
        int i13 = remoteSolrServerConfiguration11.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = remoteSolrServerConfiguration11.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex15 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider14);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient16 = remoteSolrServerProvider14.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue(i13 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider14);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test162");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.useForPropertyRestrictions();
        boolean b5 = defaultSolrConfiguration0.useForPrimaryTypes();
        java.lang.String str6 = defaultSolrConfiguration0.getPathDepthField();
        boolean b7 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.lang.String str8 = defaultSolrConfiguration0.getCatchAllField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_depth" + "'", str6.equals("path_depth"));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "catch_all" + "'", str8.equals("catch_all"));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test163");
        java.lang.CharSequence charSequence1 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.partialEscape((java.lang.CharSequence) "primaryTypes");
        org.junit.Assert.assertNotNull(charSequence1);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test164");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer1 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer("shardsNo");
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        try {
            solrIndexInitializer1.initialize(nodeBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test165");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str38 = defaultSolrConfiguration37.getPathField();
        boolean b39 = defaultSolrConfiguration37.collapseJcrContentNodes();
        boolean b40 = defaultSolrConfiguration37.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str41 = defaultSolrConfiguration37.getIgnoredProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList42 = solrClient35.getById("pathRestrictions", collection_str41);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "path_exact" + "'", str38.equals("path_exact"));
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(collection_str41);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test166");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument8 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add(iterator_solrInputDocument8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test167");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array53 = new java.lang.String[] { "usedProperties", "/solr", "/solr_string_sort", "shardsNo", "childrenField", "replicationFactor", "path_collapsed", "solrContext", "path_des", "depthField", "shardsNo", "hi!", "socketTimeout", "path_collapsed", "propertyRestrictions", "typeMappings", "", "rows_string_sort", "httpPort", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "path_collapsed", "socketTimeout", "oak", "propertyRestrictions", "solrContext", "collection", "path_child", "catchAllField", "/solr_string_sort", "usedProperties", "typeMappings", "socketTimeout", "httpPort", "collapseJcrContentNodes" };
        java.util.ArrayList<java.lang.String> arraylist_str54 = new java.util.ArrayList<java.lang.String>();
        boolean b55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str54, str_array53);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse56 = solrClient18.deleteById((java.util.List<java.lang.String>) arraylist_str54);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(str_array53);
        org.junit.Assert.assertTrue(b55 == true);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test168");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse45 = solrClient19.deleteByQuery("path_anc", (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test169");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient8.deleteByQuery("httpUrl", "127.0.0.1:9983", (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test170");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer1 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer("oak");
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        try {
            solrIndexInitializer1.initialize(nodeBuilder2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test171");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        int i17 = remoteSolrServerConfiguration9.getSolrShardsNo();
        int i18 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        java.lang.String[] str_array27 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration28 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array27);
        java.lang.reflect.Type type29 = remoteSolrServerConfiguration28.getType();
        java.lang.String str30 = remoteSolrServerConfiguration28.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy31 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration28, strategy31);
        org.apache.solr.client.solrj.SolrClient solrClient33 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy31);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertTrue(i18 == 100);
        org.junit.Assert.assertNotNull(str_array27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        org.junit.Assert.assertTrue("'" + strategy31 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy31.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient33);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test172");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient4.commit("propertyRestrictions");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test173");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.lang.String[] str_array22 = new java.lang.String[] { "parentField", "replicationFactor", "hi!_string_sort", "path_collapsed", "ignoredProperties", "oak", "catchAllField", "propertyRestrictions_string_sort", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "coreName", "propertyRestrictions_string_sort", "http://127.0.0.1", "http://127.0.0.1", "coreName", "/solr", "parentField", "depthField" };
        java.util.ArrayList<java.lang.String> arraylist_str23 = new java.util.ArrayList<java.lang.String>();
        boolean b24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str23, str_array22);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse26 = solrClient4.deleteById((java.util.List<java.lang.String>) arraylist_str23, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertTrue(b24 == true);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test174");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction4 = null;
        java.lang.String str5 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction4);
        boolean b6 = defaultSolrConfiguration0.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str7 = defaultSolrConfiguration0.getUsedProperties();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertNotNull(collection_str7);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test175");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.spi.query.Filter filter24 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState25 = null;
        try {
            java.lang.String str26 = solrQueryIndex23.getPlan(filter24, nodeState25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test176");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse12 = solrClient9.optimize(true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test177");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse42 = solrClient8.optimize("hi!");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test178");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array10 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument11 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11, solrInputDocument_array10);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient9.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrInputDocument_array10);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test179");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration7 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str8 = defaultSolrConfiguration7.getPathField();
        int i9 = defaultSolrConfiguration7.getRows();
        boolean b10 = defaultSolrConfiguration7.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str11 = defaultSolrConfiguration7.getUsedProperties();
        org.apache.solr.common.params.SolrParams solrParams12 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList13 = solrClient5.getById(collection_str11, solrParams12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "path_exact" + "'", str8.equals("path_exact"));
        org.junit.Assert.assertTrue(i9 == 10);
        org.junit.Assert.assertTrue(b10 == false);
        org.junit.Assert.assertNotNull(collection_str11);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test180");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient4.optimize("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test181");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        org.apache.solr.common.SolrInputDocument solrInputDocument36 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse38 = solrClient35.add(solrInputDocument36, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test182");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("hi!", "parentField");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration3 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.reflect.Type type4 = embeddedSolrServerConfiguration2.getType();
        org.junit.Assert.assertNull(httpConfiguration3);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test183");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient8.optimize();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test184");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String str4 = embeddedSolrServerConfiguration2.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider5 = embeddedSolrServerConfiguration2.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient6 = embeddedSolrServerProvider5.getSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_des" + "'", str4.equals("path_des"));
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider5);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test185");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider embeddedSolrServerConfigurationProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider> solrserverconfiguration_embeddedSolrServerProvider1 = embeddedSolrServerConfigurationProvider0.getSolrServerConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration<org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider> solrserverconfiguration_embeddedSolrServerProvider2 = embeddedSolrServerConfigurationProvider0.getSolrServerConfiguration();
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer oakSolrServer3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.OakSolrServer((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfigurationProvider) embeddedSolrServerConfigurationProvider0);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException");
        } catch (java.lang.RuntimeException e) {
        }
        org.junit.Assert.assertNull(solrserverconfiguration_embeddedSolrServerProvider1);
        org.junit.Assert.assertNull(solrserverconfiguration_embeddedSolrServerProvider2);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test186");
        java.lang.String str2 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField((int) '#', "propertyRestrictions");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "propertyRestrictions_string_sort" + "'", str2.equals("propertyRestrictions_string_sort"));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test187");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient18.commit(false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test188");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient2.deleteById("depthField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test189");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator10 = solrQueryIndex9.getNodeAggregator();
        double d11 = solrQueryIndex9.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.Filter filter12 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState13 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor14 = solrQueryIndex9.query(filter12, nodeState13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator10);
        org.junit.Assert.assertTrue(d11 == 2.3d);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test190");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        int i15 = remoteSolrServerConfiguration13.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = remoteSolrServerConfiguration13.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str18 = defaultSolrConfiguration17.getPathField();
        boolean b19 = defaultSolrConfiguration17.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration17);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration22 = defaultSolrConfigurationProvider20.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.solr.client.solrj.SolrClient solrClient24 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse27 = solrClient24.optimize(false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue(i15 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "path_exact" + "'", str18.equals("path_exact"));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration22);
        org.junit.Assert.assertNotNull(solrClient24);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test191");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient2.optimize("solrHomePath");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test192");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.optimize(false, false, 32);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test193");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient4.rollback("usedProperties");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test194");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.deleteById("", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test195");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument19 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient18.add(solrInputDocument19, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test196");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient8.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test197");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getUsedProperties();
        java.lang.String str5 = defaultSolrConfiguration0.getCatchAllField();
        java.util.Collection<java.lang.String> collection_str6 = defaultSolrConfiguration0.getIgnoredProperties();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "catch_all" + "'", str5.equals("catch_all"));
        org.junit.Assert.assertNotNull(collection_str6);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test198");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        int i15 = remoteSolrServerConfiguration9.getSocketTimeout();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient14);
        org.junit.Assert.assertTrue(i15 == 1);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test199");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider2);
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        int i15 = remoteSolrServerConfiguration13.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = remoteSolrServerConfiguration13.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str18 = defaultSolrConfiguration17.getPathField();
        boolean b19 = defaultSolrConfiguration17.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration17);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient23 = defaultSolrServerProvider22.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient24 = defaultSolrServerProvider22.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration25 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration25);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider27 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider28 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider26, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider27);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider29 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider22, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider27);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient32 = defaultSolrServerProvider30.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration33 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration33);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider34, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider35);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider30, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider35);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider38 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider22, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider35);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator39 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider40 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider35, nodeAggregator39);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider41 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider35);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue(i15 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "path_exact" + "'", str18.equals("path_exact"));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(solrClient23);
        org.junit.Assert.assertNotNull(solrClient24);
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertNotNull(solrClient32);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test200");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient1 = solrServerProviderService0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = solrServerProviderService0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = solrServerProviderService0.getSearchingSolrServer();
        solrServerProviderService0.close();
        org.junit.Assert.assertNull(solrClient1);
        org.junit.Assert.assertNull(solrClient2);
        org.junit.Assert.assertNull(solrClient3);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test201");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String[] str_array14 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array14);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test202");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("configurationDirectory", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test203");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction3 = null;
        java.lang.String str4 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction3);
        boolean b5 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue(b5 == false);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test204");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array10 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument11 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b12 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11, solrInputDocument_array10);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient8.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument11);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
        org.junit.Assert.assertNotNull(solrInputDocument_array10);
        org.junit.Assert.assertTrue(b12 == false);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test205");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient4.queryAndStreamResponse("catchAllField", solrParams6, streamingResponseCallback7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test206");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("collapseJcrContentNodes", (java.lang.Integer) 0);
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider8 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration11 = embeddedSolrServerConfiguration2.withHttpConfiguration("", (java.lang.Integer) 1);
        java.lang.String str12 = embeddedSolrServerConfiguration11.getSolrHomePath();
        java.lang.String str13 = embeddedSolrServerConfiguration11.getSolrHomePath();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider8);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "descendantsField" + "'", str12.equals("descendantsField"));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "descendantsField" + "'", str13.equals("descendantsField"));
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test207");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        java.lang.String str2 = defaultSolrConfiguration0.getCatchAllField();
        java.lang.String str3 = defaultSolrConfiguration0.getCatchAllField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "catch_all" + "'", str2.equals("catch_all"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "catch_all" + "'", str3.equals("catch_all"));
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test208");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        java.lang.String str41 = embeddedSolrServerConfiguration2.toString();
        java.lang.String str42 = embeddedSolrServerConfiguration2.getCoreName();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}" + "'", str41.equals("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}"));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "path_des" + "'", str42.equals("path_des"));
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test209");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient9.deleteById("hi!_string_sort_string_sort");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test210");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy2 = defaultSolrConfiguration0.getCommitPolicy();
        java.lang.String str3 = defaultSolrConfiguration0.getCollapsedPathField();
        java.lang.String str4 = defaultSolrConfiguration0.getPathField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_collapsed" + "'", str1.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy2 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy2.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "path_collapsed" + "'", str3.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_exact" + "'", str4.equals("path_exact"));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test211");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array4 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument5 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b6 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument5, solrInputDocument_array4);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient3.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument5, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrInputDocument_array4);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test212");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient14.deleteByQuery("hi!_string_sort", "path_exact", (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test213");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.deleteById("collapseJcrContentNodes", "8983");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test214");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        java.lang.String str12 = solrQueryIndex11.getIndexName();
        org.apache.jackrabbit.oak.spi.query.Filter filter13 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array14 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry15 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b16 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry15, orderEntry_array14);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState17 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan18 = solrQueryIndex11.getPlans(filter13, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry15, nodeState17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "solr" + "'", str12.equals("solr"));
        org.junit.Assert.assertNotNull(orderEntry_array14);
        org.junit.Assert.assertTrue(b16 == false);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test215");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration43 = embeddedSolrServerConfiguration2.withHttpConfiguration("catch_all", (java.lang.Integer) 10);
        java.lang.String str44 = embeddedSolrServerConfiguration2.getCoreName();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration43);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "path_des" + "'", str44.equals("path_des"));
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test216");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.solr.client.solrj.SolrClient solrClient5 = null;
        java.lang.String[] str_array14 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration15 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array14);
        java.lang.reflect.Type type16 = remoteSolrServerConfiguration15.getType();
        int i17 = remoteSolrServerConfiguration15.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider18 = remoteSolrServerConfiguration15.getProvider();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration15.getType();
        java.lang.String[] str_array28 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array28);
        java.lang.reflect.Type type30 = remoteSolrServerConfiguration29.getType();
        java.lang.String str31 = remoteSolrServerConfiguration29.getSolrConfDir();
        java.lang.String str32 = remoteSolrServerConfiguration29.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient34 = defaultSolrServerProvider33.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration29, solrClient34, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration15, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient5, strategy35);
        java.lang.String str39 = embeddedSolrServerConfiguration2.getCoreName();
        java.lang.String str40 = embeddedSolrServerConfiguration2.getSolrHomePath();
        java.lang.String str41 = embeddedSolrServerConfiguration2.getCoreName();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(str_array14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue(i17 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(str_array28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertNotNull(solrClient34);
        org.junit.Assert.assertTrue("'" + strategy35 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy35.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "path_des" + "'", str39.equals("path_des"));
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "descendantsField" + "'", str40.equals("descendantsField"));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "path_des" + "'", str41.equals("path_des"));
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test217");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient5 = embeddedSolrServerProvider4.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test218");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient5 = embeddedSolrServerProvider4.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test219");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams22 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument23 = solrClient19.getById("shardsNo", "", solrParams22);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient19);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test220");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.deleteByQuery("commitPolicy", "childrenField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test221");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse3 = solrClient2.ping();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test222");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient3.commit(false, true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test223");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i13 = remoteSolrServerConfiguration9.getSocketTimeout();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue(i13 == 1);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test224");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient6.deleteByQuery("descendantsField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test225");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        int i19 = remoteSolrServerConfiguration17.getSocketTimeout();
        int i20 = remoteSolrServerConfiguration17.getConnectionTimeout();
        java.lang.String[] str_array29 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array29);
        java.lang.reflect.Type type31 = remoteSolrServerConfiguration30.getType();
        int i32 = remoteSolrServerConfiguration30.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider33 = remoteSolrServerConfiguration30.getProvider();
        java.lang.reflect.Type type34 = remoteSolrServerConfiguration30.getType();
        java.lang.String[] str_array43 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration44 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array43);
        java.lang.reflect.Type type45 = remoteSolrServerConfiguration44.getType();
        java.lang.String str46 = remoteSolrServerConfiguration44.getSolrConfDir();
        java.lang.String str47 = remoteSolrServerConfiguration44.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider48 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient49 = defaultSolrServerProvider48.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy50 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration44, solrClient49, strategy50);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration30, strategy50);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration17, strategy50);
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration17);
        java.lang.String str55 = remoteSolrServerConfiguration17.getSolrConfDir();
        int i56 = remoteSolrServerConfiguration17.getSolrReplicationFactor();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue(i19 == 32);
        org.junit.Assert.assertTrue(i20 == 10);
        org.junit.Assert.assertNotNull(str_array29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue(i32 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(str_array43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "hi!" + "'", str46.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertNotNull(solrClient49);
        org.junit.Assert.assertTrue("'" + strategy50 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy50.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "pathField" + "'", str55.equals("pathField"));
        org.junit.Assert.assertTrue(i56 == 100);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test226");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient14 = remoteSolrServerProvider13.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test227");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        java.lang.String[] str_array72 = new java.lang.String[] { "solrServerType", "descendantsField", "/solr_string_sort", "depthField", "depthField", "shardsNo", "primaryTypes", "shardsNo", "depthField", "collapseJcrContentNodes", "solrHomePath", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "rows_string_sort", "path_des", "propertyRestrictions", "solrServerType", "collection", "oak", "hi!_string_sort_string_sort", "primaryTypes", "solrServerType", "path_exact", "parentField", "path_anc", "hi!_string_sort_string_sort", "propertyMappings", "solrHomePath", "hi!", "catchAllField", "depthField", "http://127.0.0.1:8983/solr/oak", "rows", "pathRestrictions", "", "", "path_child", "oak", "/solr", "/solr_string_sort", "/solr_string_sort", "path_des", "rows_string_sort", "coreName", "path_anc", "configurationDirectory", "primaryTypes", "solrContext", "path_collapsed", "/solr_string_sort", "collapseJcrContentNodes", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "rows_string_sort" };
        java.util.ArrayList<java.lang.String> arraylist_str73 = new java.util.ArrayList<java.lang.String>();
        boolean b74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str73, str_array72);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse75 = solrClient18.deleteById((java.util.List<java.lang.String>) arraylist_str73);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
        org.junit.Assert.assertNotNull(str_array72);
        org.junit.Assert.assertTrue(b74 == true);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test228");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("childrenField", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test229");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument6 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.add("", solrInputDocument6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test230");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse23 = solrClient18.optimize("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", false, true, 3000);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test231");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider10 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider10);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex12 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        java.lang.String[] str_array21 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration22 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array21);
        java.lang.reflect.Type type23 = remoteSolrServerConfiguration22.getType();
        int i24 = remoteSolrServerConfiguration22.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider25 = remoteSolrServerConfiguration22.getProvider();
        remoteSolrServerProvider25.close();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex27 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider25);
        org.apache.jackrabbit.oak.spi.query.Filter filter28 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState29 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor30 = solrQueryIndex27.query(filter28, nodeState29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(str_array21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue(i24 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider25);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test232");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str14 = defaultSolrConfiguration13.getPathField();
        boolean b15 = defaultSolrConfiguration13.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider16);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider18.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient20 = defaultSolrServerProvider18.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration21 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider22, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider23);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider25 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider23);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient27 = defaultSolrServerProvider26.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient28 = defaultSolrServerProvider26.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration29);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider30, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider26, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator35 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31, nodeAggregator35);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient37 = remoteSolrServerProvider12.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "path_exact" + "'", str14.equals("path_exact"));
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(solrClient20);
        org.junit.Assert.assertNotNull(solrClient27);
        org.junit.Assert.assertNotNull(solrClient28);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test233");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        int i2 = defaultSolrConfiguration0.getRows();
        boolean b3 = defaultSolrConfiguration0.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getIgnoredProperties();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy5 = defaultSolrConfiguration0.getCommitPolicy();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction6 = null;
        java.lang.String str7 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction6);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(i2 == 10);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertTrue("'" + commitPolicy5 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy5.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test234");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider10.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient12 = defaultSolrServerProvider10.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider15);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider10, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider15);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider15);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) embeddedSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider15);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient20 = embeddedSolrServerProvider1.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(solrClient12);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test235");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        java.lang.String[] str_array9 = new java.lang.String[] { "path_depth", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}" };
        java.util.ArrayList<java.lang.String> arraylist_str10 = new java.util.ArrayList<java.lang.String>();
        boolean b11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str10, str_array9);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse12 = solrClient5.deleteById("propertyRestrictions_string_sort", (java.util.List<java.lang.String>) arraylist_str10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertTrue(b11 == true);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test236");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        java.lang.String str6 = defaultSolrConfiguration0.getPathField();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction7 = null;
        java.lang.String str8 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction7);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_exact" + "'", str6.equals("path_exact"));
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test237");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient9.rollback();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test238");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        try {
            org.apache.solr.common.SolrDocument solrDocument22 = solrClient18.getById("connectionTimeout", "rows_string_sort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test239");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService9 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient10 = solrServerProviderService9.getSearchingSolrServer();
        solrServerProviderService9.close();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex12 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) solrServerProviderService9);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan13 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState14 = null;
        try {
            java.lang.String str15 = solrQueryIndex12.getPlanDescription(indexPlan13, nodeState14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNull(solrClient10);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test240");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        org.apache.solr.common.SolrInputDocument solrInputDocument18 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient14.add("childrenField", solrInputDocument18, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test241");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration17.getType();
        int i20 = remoteSolrServerConfiguration17.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = remoteSolrServerConfiguration17.getProvider();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue(i20 == 10);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider21);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test242");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse21 = solrClient14.optimize("propertyRestrictions", false, false, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test243");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        int i13 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue(i13 == 100);
        org.junit.Assert.assertTrue(i14 == 100);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test244");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse42 = solrClient8.optimize("solrContext");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test245");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy4 = defaultSolrConfiguration0.getCommitPolicy();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue("'" + commitPolicy4 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy4.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test246");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.solr.client.solrj.SolrClient solrClient5 = null;
        java.lang.String[] str_array14 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration15 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array14);
        java.lang.reflect.Type type16 = remoteSolrServerConfiguration15.getType();
        int i17 = remoteSolrServerConfiguration15.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider18 = remoteSolrServerConfiguration15.getProvider();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration15.getType();
        java.lang.String[] str_array28 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array28);
        java.lang.reflect.Type type30 = remoteSolrServerConfiguration29.getType();
        java.lang.String str31 = remoteSolrServerConfiguration29.getSolrConfDir();
        java.lang.String str32 = remoteSolrServerConfiguration29.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient34 = defaultSolrServerProvider33.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration29, solrClient34, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration15, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient5, strategy35);
        java.lang.String str39 = embeddedSolrServerConfiguration2.getSolrHomePath();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(str_array14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue(i17 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(str_array28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertNotNull(solrClient34);
        org.junit.Assert.assertTrue("'" + strategy35 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy35.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "descendantsField" + "'", str39.equals("descendantsField"));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test247");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument6 = solrClient4.getById("zkHost");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test248");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient14.deleteByQuery("zkHost", "httpUrl", (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test249");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        int i19 = remoteSolrServerConfiguration17.getSocketTimeout();
        int i20 = remoteSolrServerConfiguration17.getConnectionTimeout();
        java.lang.String[] str_array29 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array29);
        java.lang.reflect.Type type31 = remoteSolrServerConfiguration30.getType();
        int i32 = remoteSolrServerConfiguration30.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider33 = remoteSolrServerConfiguration30.getProvider();
        java.lang.reflect.Type type34 = remoteSolrServerConfiguration30.getType();
        java.lang.String[] str_array43 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration44 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array43);
        java.lang.reflect.Type type45 = remoteSolrServerConfiguration44.getType();
        java.lang.String str46 = remoteSolrServerConfiguration44.getSolrConfDir();
        java.lang.String str47 = remoteSolrServerConfiguration44.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider48 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient49 = defaultSolrServerProvider48.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy50 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration44, solrClient49, strategy50);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration30, strategy50);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration17, strategy50);
        int i54 = remoteSolrServerConfiguration17.getConnectionTimeout();
        java.lang.String str55 = remoteSolrServerConfiguration17.toString();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue(i19 == 32);
        org.junit.Assert.assertTrue(i20 == 10);
        org.junit.Assert.assertNotNull(str_array29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue(i32 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(str_array43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "hi!" + "'", str46.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        org.junit.Assert.assertNotNull(solrClient49);
        org.junit.Assert.assertTrue("'" + strategy50 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy50.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue(i54 == 10);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}" + "'", str55.equals("RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}"));
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test250");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.commit();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test251");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String str4 = embeddedSolrServerConfiguration2.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider5 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.reflect.Type type6 = embeddedSolrServerConfiguration2.getType();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_des" + "'", str4.equals("path_des"));
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider5);
        org.junit.Assert.assertNotNull(type6);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test252");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback9 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse10 = solrClient5.queryAndStreamResponse("path_des", solrParams8, streamingResponseCallback9);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test253");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient5.rollback();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test254");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        java.lang.String str24 = solrQueryIndex23.getIndexName();
        java.lang.String str25 = solrQueryIndex23.getIndexName();
        org.apache.jackrabbit.oak.spi.query.Filter filter26 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState27 = null;
        try {
            double d28 = solrQueryIndex23.getCost(filter26, nodeState27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "solr" + "'", str24.equals("solr"));
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "solr" + "'", str25.equals("solr"));
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test255");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array7 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument8 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b9 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, solrInputDocument_array7);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient5.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument8, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(solrInputDocument_array7);
        org.junit.Assert.assertTrue(b9 == false);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test256");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient9.commit("parentField", false, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test257");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str37 = defaultSolrConfiguration36.getPathField();
        boolean b38 = defaultSolrConfiguration36.collapseJcrContentNodes();
        boolean b39 = defaultSolrConfiguration36.useForPrimaryTypes();
        boolean b40 = defaultSolrConfiguration36.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str41 = defaultSolrConfiguration36.getUsedProperties();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction42 = null;
        java.lang.String str43 = defaultSolrConfiguration36.getFieldForPropertyRestriction(propertyRestriction42);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration36);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse46 = solrClient35.addBean((java.lang.Object) defaultSolrConfiguration36, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient35);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "path_exact" + "'", str37.equals("path_exact"));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertTrue(b39 == false);
        org.junit.Assert.assertTrue(b40 == false);
        org.junit.Assert.assertNotNull(collection_str41);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test258");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        java.lang.String str6 = defaultSolrConfiguration0.getPathField();
        boolean b7 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy8 = defaultSolrConfiguration0.getCommitPolicy();
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction9 = null;
        try {
            java.lang.String str10 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_exact" + "'", str6.equals("path_exact"));
        org.junit.Assert.assertTrue(b7 == false);
        org.junit.Assert.assertTrue("'" + commitPolicy8 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy8.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test259");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration17.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy20 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient21 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration17, strategy20);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.String str32 = remoteSolrServerConfiguration31.getSolrZkHost();
        java.lang.String[] str_array33 = remoteSolrServerConfiguration31.getSolrHttpUrls();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient36 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration17, strategy35);
        java.lang.String str38 = remoteSolrServerConfiguration17.toString();
        int i39 = remoteSolrServerConfiguration17.getSolrShardsNo();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + strategy20 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy20.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient21);
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertNotNull(str_array33);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertTrue("'" + strategy35 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy35.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient36);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}" + "'", str38.equals("RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}"));
        org.junit.Assert.assertTrue(i39 == 1);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test260");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient18.deleteByQuery("path_anc", "");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test261");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder10 = solrClient9.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder11 = solrClient9.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument13 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse15 = solrClient9.add("path_anc", solrInputDocument13, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(documentObjectBinder10);
        org.junit.Assert.assertNotNull(documentObjectBinder11);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test262");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient1 = solrServerProviderService0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = solrServerProviderService0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = solrServerProviderService0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = solrServerProviderService0.getSolrServer();
        java.lang.String[] str_array13 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array13);
        java.lang.reflect.Type type15 = remoteSolrServerConfiguration14.getType();
        int i16 = remoteSolrServerConfiguration14.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = remoteSolrServerConfiguration14.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str19 = defaultSolrConfiguration18.getPathField();
        boolean b20 = defaultSolrConfiguration18.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration18);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) solrServerProviderService0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder25 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState26 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback27 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor28 = solrIndexEditorProvider23.getIndexEditor("127.0.0.1:9983", nodeBuilder25, nodeState26, indexUpdateCallback27);
        org.junit.Assert.assertNull(solrClient1);
        org.junit.Assert.assertNull(solrClient2);
        org.junit.Assert.assertNull(solrClient3);
        org.junit.Assert.assertNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue(i16 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "path_exact" + "'", str19.equals("path_exact"));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNull(editor28);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test263");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.reflect.Type type13 = remoteSolrServerConfiguration9.getType();
        int i14 = remoteSolrServerConfiguration9.getSolrShardsNo();
        java.lang.String str15 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array16 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue(i14 == 1);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        org.junit.Assert.assertNotNull(str_array16);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test264");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient5.close();
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient5.query("hi!", solrParams8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test265");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        java.lang.String str12 = solrQueryIndex11.getIndexName();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator13 = solrQueryIndex11.getNodeAggregator();
        double d14 = solrQueryIndex11.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.Filter filter15 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array16 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry17 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b18 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry17, orderEntry_array16);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan20 = solrQueryIndex11.getPlans(filter15, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry17, nodeState19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "solr" + "'", str12.equals("solr"));
        org.junit.Assert.assertNull(nodeAggregator13);
        org.junit.Assert.assertTrue(d14 == 2.3d);
        org.junit.Assert.assertNotNull(orderEntry_array16);
        org.junit.Assert.assertTrue(b18 == false);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test266");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        java.lang.String str12 = remoteSolrServerConfiguration10.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration10);
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        java.lang.reflect.Type type24 = remoteSolrServerConfiguration23.getType();
        int i25 = remoteSolrServerConfiguration23.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider26 = remoteSolrServerConfiguration23.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration27 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str28 = defaultSolrConfiguration27.getPathField();
        boolean b29 = defaultSolrConfiguration27.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration27);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider26, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider30);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient33 = defaultSolrServerProvider32.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient34 = defaultSolrServerProvider32.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration35 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider38 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider36, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider37);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider39 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider32, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider40 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient41 = defaultSolrServerProvider40.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient42 = defaultSolrServerProvider40.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration43 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration43);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider45 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider46 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider44, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider47 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider40, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider48 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider32, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator49 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider50 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider26, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45, nodeAggregator49);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider51 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration52 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider53 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration52);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider55 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider53, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider54);
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService56 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider57 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider53, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService56);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator58 = null;
        java.lang.String[] str_array67 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration68 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array67);
        java.lang.reflect.Type type69 = remoteSolrServerConfiguration68.getType();
        int i70 = remoteSolrServerConfiguration68.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider71 = remoteSolrServerConfiguration68.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider72 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration68);
        remoteSolrServerProvider72.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService74 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration75 = oakSolrConfigurationProviderService74.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator76 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider77 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider72, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService74, nodeAggregator76);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration78 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider79 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration78);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider80 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider81 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider79, oakSolrConfigurationProvider80);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex82 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator58, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService74, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider79);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator83 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider84 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider53, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService74, nodeAggregator83);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex85 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider45, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider53);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient86 = remoteSolrServerProvider53.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "hi!" + "'", str12.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue(i25 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider26);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "path_exact" + "'", str28.equals("path_exact"));
        org.junit.Assert.assertTrue(b29 == false);
        org.junit.Assert.assertNotNull(solrClient33);
        org.junit.Assert.assertNotNull(solrClient34);
        org.junit.Assert.assertNotNull(solrClient41);
        org.junit.Assert.assertNotNull(solrClient42);
        org.junit.Assert.assertNotNull(str_array67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue(i70 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider71);
        org.junit.Assert.assertNotNull(oakSolrConfiguration75);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test267");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider0.getSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument5 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient4.add(iterator_solrInputDocument5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test268");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("httpUrl", "solrContext");
        java.lang.String str3 = embeddedSolrServerConfiguration2.getSolrHomePath();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "httpUrl" + "'", str3.equals("httpUrl"));
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test269");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient1 = solrServerProviderService0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = solrServerProviderService0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = solrServerProviderService0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = solrServerProviderService0.getIndexingSolrServer();
        org.junit.Assert.assertNull(solrClient1);
        org.junit.Assert.assertNull(solrClient2);
        org.junit.Assert.assertNull(solrClient3);
        org.junit.Assert.assertNull(solrClient4);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test270");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        int i2 = defaultSolrConfiguration0.getRows();
        boolean b3 = defaultSolrConfiguration0.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getIgnoredProperties();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy5 = defaultSolrConfiguration0.getCommitPolicy();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(i2 == 10);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertTrue("'" + commitPolicy5 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy5.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test271");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getIgnoredProperties();
        java.lang.String str5 = defaultSolrConfiguration0.getPathDepthField();
        java.lang.String str6 = defaultSolrConfiguration0.getCatchAllField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "path_depth" + "'", str5.equals("path_depth"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "catch_all" + "'", str6.equals("catch_all"));
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test272");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService9 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient10 = solrServerProviderService9.getSearchingSolrServer();
        solrServerProviderService9.close();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex12 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) solrServerProviderService9);
        org.apache.jackrabbit.oak.spi.query.Filter filter13 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState14 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor15 = solrQueryIndex12.query(filter13, nodeState14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNull(solrClient10);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test273");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction6 = null;
        java.lang.String str7 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        boolean b9 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue(b9 == false);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test274");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator10 = solrQueryIndex9.getNodeAggregator();
        double d11 = solrQueryIndex9.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.Filter filter12 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array13 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry14 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b15 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry14, orderEntry_array13);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState16 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan17 = solrQueryIndex9.getPlans(filter12, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry14, nodeState16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNull(nodeAggregator10);
        org.junit.Assert.assertTrue(d11 == 2.3d);
        org.junit.Assert.assertNotNull(orderEntry_array13);
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test275");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument10 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse11 = solrClient9.add(solrInputDocument10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test276");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array22);
        java.lang.String[] str_array25 = remoteSolrServerConfiguration24.getSolrHttpUrls();
        java.lang.reflect.Type type26 = remoteSolrServerConfiguration24.getType();
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration24.getType();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse29 = solrClient4.addBean("parentField", (java.lang.Object) remoteSolrServerConfiguration24, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test277");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        try {
            org.apache.solr.common.SolrDocument solrDocument9 = solrClient5.getById("path_exact", "solrContext");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test278");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider16.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider16.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration19);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider20, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient25 = defaultSolrServerProvider24.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient26 = defaultSolrServerProvider24.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration27 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider28 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration27);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider29 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider28, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider29);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider24, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider29);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider29);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration33 = defaultSolrConfigurationProvider29.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService34 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex35 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider29, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) solrServerProviderService34);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse37 = solrClient14.addBean((java.lang.Object) nodeAggregator15, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient14);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient25);
        org.junit.Assert.assertNotNull(solrClient26);
        org.junit.Assert.assertNotNull(oakSolrConfiguration33);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test279");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array11 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument12 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b13 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument12, solrInputDocument_array11);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse15 = solrClient9.add("path_depth", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument12, 2);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrInputDocument_array11);
        org.junit.Assert.assertTrue(b13 == false);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test280");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCatchAllField();
        java.util.Collection<java.lang.String> collection_str2 = defaultSolrConfiguration0.getUsedProperties();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy3 = defaultSolrConfiguration0.getCommitPolicy();
        boolean b4 = defaultSolrConfiguration0.useForPropertyRestrictions();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "catch_all" + "'", str1.equals("catch_all"));
        org.junit.Assert.assertNotNull(collection_str2);
        org.junit.Assert.assertTrue("'" + commitPolicy3 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy3.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertTrue(b4 == false);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test281");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, oakSolrConfigurationProvider19);
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse24 = solrClient21.optimize(true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient21);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test282");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService solrIndexEditorProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService();
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState3 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback4 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor5 = solrIndexEditorProviderService0.getIndexEditor("typeMappings", nodeBuilder2, nodeState3, indexUpdateCallback4);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder7 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState8 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback9 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor10 = solrIndexEditorProviderService0.getIndexEditor("/solr_string_sort", nodeBuilder7, nodeState8, indexUpdateCallback9);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder12 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState13 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback14 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor15 = solrIndexEditorProviderService0.getIndexEditor("RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", nodeBuilder12, nodeState13, indexUpdateCallback14);
        org.junit.Assert.assertNull(editor5);
        org.junit.Assert.assertNull(editor10);
        org.junit.Assert.assertNull(editor15);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test283");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer3 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(false, "coreName", false);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test284");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, oakSolrConfigurationProvider19);
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider0.getSolrServer();
        java.lang.String[] str_array62 = new java.lang.String[] { "path_collapsed", "descendantsField", "propertyMappings", "127.0.0.1:9983", "solrContext", "path_collapsed", "connectionTimeout", "/solr_string_sort", "httpUrl", "propertyRestrictions", "/solr", "path_collapsed", "http://127.0.0.1:8983/solr/oak", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "descendantsField", "catchAllField", "catchAllField", "httpUrl", "collapseJcrContentNodes", "collection", "connectionTimeout", "8983", "path_depth", "hi!_string_sort", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "connectionTimeout", "replicationFactor", "connectionTimeout", "ignoredProperties", "hi!_string_sort", "hi!_string_sort_string_sort", "rows", "path_des", "path_depth", "hi!_string_sort_string_sort", "propertyRestrictions", "propertyRestrictions", "ignoredProperties", "hi!_string_sort_string_sort" };
        java.util.ArrayList<java.lang.String> arraylist_str63 = new java.util.ArrayList<java.lang.String>();
        boolean b64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str63, str_array62);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse65 = solrClient21.deleteById("propertyRestrictions", (java.util.List<java.lang.String>) arraylist_str63);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient21);
        org.junit.Assert.assertNotNull(str_array62);
        org.junit.Assert.assertTrue(b64 == true);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test285");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse15 = solrClient10.optimize("catch_all", true, true, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test286");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        int i2 = defaultSolrConfiguration0.getRows();
        boolean b3 = defaultSolrConfiguration0.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getIgnoredProperties();
        int i5 = defaultSolrConfiguration0.getRows();
        boolean b6 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(i2 == 10);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertTrue(i5 == 10);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test287");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.add(solrInputDocument7, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test288");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration17.getType();
        java.lang.reflect.Type type20 = remoteSolrServerConfiguration17.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration17);
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test289");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        int i2 = defaultSolrConfiguration0.getRows();
        boolean b3 = defaultSolrConfiguration0.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getUsedProperties();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        java.lang.String str6 = defaultSolrConfiguration0.getCollapsedPathField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(i2 == 10);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_collapsed" + "'", str6.equals("path_collapsed"));
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test290");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        int i2 = defaultSolrConfiguration0.getRows();
        boolean b3 = defaultSolrConfiguration0.useForPathRestrictions();
        java.lang.String str4 = defaultSolrConfiguration0.getCatchAllField();
        java.lang.String str5 = defaultSolrConfiguration0.getCatchAllField();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction6 = null;
        java.lang.String str7 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction6);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(i2 == 10);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "catch_all" + "'", str4.equals("catch_all"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "catch_all" + "'", str5.equals("catch_all"));
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test291");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams22 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument23 = solrClient19.getById("httpPort", "solrContext", solrParams22);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient19);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test292");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService solrIndexEditorProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService();
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState3 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback4 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor5 = solrIndexEditorProviderService0.getIndexEditor("propertyRestrictions_string_sort", nodeBuilder2, nodeState3, indexUpdateCallback4);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder7 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState8 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback9 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor10 = solrIndexEditorProviderService0.getIndexEditor("childrenField", nodeBuilder7, nodeState8, indexUpdateCallback9);
        org.junit.Assert.assertNull(editor5);
        org.junit.Assert.assertNull(editor10);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test293");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        java.lang.String str12 = solrQueryIndex11.getIndexName();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator13 = solrQueryIndex11.getNodeAggregator();
        java.lang.String str14 = solrQueryIndex11.getIndexName();
        org.apache.jackrabbit.oak.spi.query.Filter filter15 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState16 = null;
        try {
            org.apache.jackrabbit.oak.spi.query.Cursor cursor17 = solrQueryIndex11.query(filter15, nodeState16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "solr" + "'", str12.equals("solr"));
        org.junit.Assert.assertNull(nodeAggregator13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "solr" + "'", str14.equals("solr"));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test294");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        try {
            org.apache.solr.client.solrj.response.SolrPingResponse solrPingResponse41 = solrClient8.ping();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test295");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        int i28 = remoteSolrServerConfiguration26.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider29 = remoteSolrServerConfiguration26.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str31 = defaultSolrConfiguration30.getPathField();
        boolean b32 = defaultSolrConfiguration30.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration30);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider29, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider33);
        java.lang.String[] str_array43 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration44 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array43);
        java.lang.reflect.Type type45 = remoteSolrServerConfiguration44.getType();
        int i46 = remoteSolrServerConfiguration44.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider47 = remoteSolrServerConfiguration44.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration48 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str49 = defaultSolrConfiguration48.getPathField();
        boolean b50 = defaultSolrConfiguration48.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider51 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration48);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider52 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider47, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider53 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider29, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.solr.client.solrj.SolrClient solrClient55 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument56 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse57 = solrClient55.add(solrInputDocument56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue(i28 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider29);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "path_exact" + "'", str31.equals("path_exact"));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(str_array43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue(i46 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider47);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "path_exact" + "'", str49.equals("path_exact"));
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(solrClient55);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test296");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer1 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer("solrContext");
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test297");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String str4 = embeddedSolrServerConfiguration2.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy5 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient6 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy5);
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD9 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse10 = solrClient6.query("collection", solrParams8, mETHOD9);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_des" + "'", str4.equals("path_des"));
        org.junit.Assert.assertTrue("'" + strategy5 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy5.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test298");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        int i28 = remoteSolrServerConfiguration26.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider29 = remoteSolrServerConfiguration26.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str31 = defaultSolrConfiguration30.getPathField();
        boolean b32 = defaultSolrConfiguration30.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration30);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider29, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider33);
        java.lang.String[] str_array43 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration44 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array43);
        java.lang.reflect.Type type45 = remoteSolrServerConfiguration44.getType();
        int i46 = remoteSolrServerConfiguration44.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider47 = remoteSolrServerConfiguration44.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration48 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str49 = defaultSolrConfiguration48.getPathField();
        boolean b50 = defaultSolrConfiguration48.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider51 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration48);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider52 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider47, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider53 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider29, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.solr.client.solrj.SolrClient solrClient55 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse58 = solrClient55.deleteById("/solr", "shardsNo");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue(i28 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider29);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "path_exact" + "'", str31.equals("path_exact"));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(str_array43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue(i46 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider47);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "path_exact" + "'", str49.equals("path_exact"));
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(solrClient55);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test299");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i14 = remoteSolrServerConfiguration9.getSocketTimeout();
        java.lang.String str15 = remoteSolrServerConfiguration9.toString();
        int i16 = remoteSolrServerConfiguration9.getSolrShardsNo();
        java.lang.reflect.Type type17 = remoteSolrServerConfiguration9.getType();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i14 == 1);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}" + "'", str15.equals("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}"));
        org.junit.Assert.assertTrue(i16 == 1);
        org.junit.Assert.assertNotNull(type17);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test300");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument11 = solrClient8.getById("childrenField", "path_anc");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test301");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        int i12 = remoteSolrServerConfiguration10.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = remoteSolrServerConfiguration10.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str15 = defaultSolrConfiguration14.getPathField();
        boolean b16 = defaultSolrConfiguration14.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider22 = embeddedSolrServerConfiguration21.getProvider();
        java.lang.String str23 = embeddedSolrServerConfiguration21.getCoreName();
        java.lang.String str24 = embeddedSolrServerConfiguration21.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider25 = embeddedSolrServerConfiguration21.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex26 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider17, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) embeddedSolrServerProvider25);
        embeddedSolrServerProvider25.close();
        embeddedSolrServerProvider25.close();
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue(i12 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "path_exact" + "'", str15.equals("path_exact"));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider22);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "path_des" + "'", str23.equals("path_des"));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "path_des" + "'", str24.equals("path_des"));
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider25);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test302");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.common.SolrDocument solrDocument10 = solrClient8.getById("propertyRestrictions");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test303");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService13 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator14 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService13, nodeAggregator14);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient16 = remoteSolrServerProvider12.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test304");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService solrIndexEditorProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService();
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState3 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback4 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor5 = solrIndexEditorProviderService0.getIndexEditor("", nodeBuilder2, nodeState3, indexUpdateCallback4);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder7 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState8 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback9 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor10 = solrIndexEditorProviderService0.getIndexEditor("http://127.0.0.1:8983/solr/oak", nodeBuilder7, nodeState8, indexUpdateCallback9);
        org.junit.Assert.assertNull(editor5);
        org.junit.Assert.assertNull(editor10);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test305");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy2 = defaultSolrConfiguration0.getCommitPolicy();
        java.lang.String str3 = defaultSolrConfiguration0.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy4 = defaultSolrConfiguration0.getCommitPolicy();
        int i5 = defaultSolrConfiguration0.getRows();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_collapsed" + "'", str1.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy2 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy2.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "path_collapsed" + "'", str3.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy4 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy4.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertTrue(i5 == 10);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test306");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument8 = solrClient4.getById("path_depth", solrParams7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test307");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer3 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(true, "path_collapsed", true);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test308");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        int i2 = defaultSolrConfiguration0.getRows();
        boolean b3 = defaultSolrConfiguration0.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getIgnoredProperties();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy5 = defaultSolrConfiguration0.getCommitPolicy();
        boolean b6 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b7 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(i2 == 10);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertTrue("'" + commitPolicy5 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy5.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue(b7 == false);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test309");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams19 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback20 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse21 = solrClient18.queryAndStreamResponse(solrParams19, streamingResponseCallback20);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test310");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array9 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument10 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b11 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument10, solrInputDocument_array9);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient8.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrInputDocument_array9);
        org.junit.Assert.assertTrue(b11 == false);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test311");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str7 = defaultSolrConfiguration6.getPathField();
        boolean b8 = defaultSolrConfiguration6.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration6);
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction10 = null;
        java.lang.String str11 = defaultSolrConfiguration6.getFieldForPropertyRestriction(propertyRestriction10);
        boolean b12 = defaultSolrConfiguration6.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str13 = defaultSolrConfiguration6.getIgnoredProperties();
        org.apache.solr.common.params.SolrParams solrParams14 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList15 = solrClient5.getById(collection_str13, solrParams14);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "path_exact" + "'", str7.equals("path_exact"));
        org.junit.Assert.assertTrue(b8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue(b12 == false);
        org.junit.Assert.assertNotNull(collection_str13);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test312");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, oakSolrConfigurationProvider19);
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams22 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD23 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse24 = solrClient21.query(solrParams22, mETHOD23);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient21);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test313");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration0);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider10.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient12 = defaultSolrServerProvider10.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider15);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider10, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider15);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider15);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) embeddedSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider15);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient20 = embeddedSolrServerProvider1.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(solrClient12);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test314");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array6 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument7 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, solrInputDocument_array6);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient4.add("rows_string_sort", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrInputDocument_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test315");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient13 = remoteSolrServerProvider12.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test316");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument12 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient10.add("descendantsField", iterator_solrInputDocument12);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test317");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.optimize(false, true, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test318");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse15 = solrClient10.optimize("collapseJcrContentNodes", true, true, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test319");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String str4 = embeddedSolrServerConfiguration2.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy5 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient6 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy5);
        org.apache.solr.common.SolrInputDocument solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient6.add(solrInputDocument7, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_des" + "'", str4.equals("path_des"));
        org.junit.Assert.assertTrue("'" + strategy5 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy5.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test320");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("collapseJcrContentNodes", (java.lang.Integer) 0);
        java.lang.String str8 = embeddedSolrServerConfiguration2.getCoreName();
        java.lang.reflect.Type type9 = embeddedSolrServerConfiguration2.getType();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "path_des" + "'", str8.equals("path_des"));
        org.junit.Assert.assertNotNull(type9);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test321");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, oakSolrConfigurationProvider19);
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient21.rollback();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient21);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test322");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient8.deleteById("descendantsField");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test323");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient9.optimize(true, false, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test324");
        javax.jcr.Session session1 = null;
        try {
            java.io.File file2 = org.apache.jackrabbit.oak.plugins.index.solr.util.NodeTypeIndexingUtils.createPrimaryTypeSynonymsFile("propertyRestrictions_string_sort", session1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test325");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type24 = embeddedSolrServerConfiguration23.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider25 = embeddedSolrServerConfiguration23.getProvider();
        java.lang.String str26 = embeddedSolrServerConfiguration23.toString();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse28 = solrClient19.addBean("httpUrl", (java.lang.Object) str26, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}" + "'", str26.equals("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}"));
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test326");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        try {
            org.apache.solr.common.SolrDocument solrDocument44 = solrClient19.getById("primaryTypes");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test327");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.commit("path_exact");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test328");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse44 = solrClient8.optimize(false, true, 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test329");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient4.close();
        org.apache.solr.client.solrj.SolrRequest solrRequest6 = null;
        try {
            org.apache.solr.common.util.NamedList<java.lang.Object> namedlist_obj7 = solrClient4.request(solrRequest6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test330");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array6 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument7 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b8 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, solrInputDocument_array6);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument7, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrInputDocument_array6);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test331");
        java.lang.String[] str_array29 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array29);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array29);
        java.lang.String[] str_array32 = remoteSolrServerConfiguration31.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration33 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("hi!_string_sort", "path_exact", (int) (byte) 100, (int) (byte) 10, "path_anc", (int) (short) 1, (int) (byte) 0, str_array32);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration34 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("path_exact", "path_depth", (-1), (int) (byte) 1, "primaryTypes", (int) (short) 100, 0, str_array32);
        org.junit.Assert.assertNotNull(str_array29);
        org.junit.Assert.assertNotNull(str_array32);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test332");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getIgnoredProperties();
        java.lang.String str5 = defaultSolrConfiguration0.getPathDepthField();
        java.lang.String str6 = defaultSolrConfiguration0.getCollapsedPathField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "path_depth" + "'", str5.equals("path_depth"));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_collapsed" + "'", str6.equals("path_collapsed"));
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test333");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction3 = null;
        java.lang.String str4 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction3);
        java.lang.String str5 = defaultSolrConfiguration0.getCollapsedPathField();
        boolean b6 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.lang.String str7 = defaultSolrConfiguration0.getCollapsedPathField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "path_collapsed" + "'", str5.equals("path_collapsed"));
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "path_collapsed" + "'", str7.equals("path_collapsed"));
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test334");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        int i12 = remoteSolrServerConfiguration10.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = remoteSolrServerConfiguration10.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str15 = defaultSolrConfiguration14.getPathField();
        boolean b16 = defaultSolrConfiguration14.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider17);
        java.lang.String[] str_array27 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration28 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array27);
        java.lang.reflect.Type type29 = remoteSolrServerConfiguration28.getType();
        int i30 = remoteSolrServerConfiguration28.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider31 = remoteSolrServerConfiguration28.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration32 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str33 = defaultSolrConfiguration32.getPathField();
        boolean b34 = defaultSolrConfiguration32.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration32);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider31, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider35);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration38 = defaultSolrConfigurationProvider35.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator39 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator40 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration41 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider42 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration41);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider43 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider42, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider43);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration45 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider46 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration45);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider47 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider48 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider46, oakSolrConfigurationProvider47);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex49 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator40, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider43, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider46);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator50 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration51 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider52 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration51);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider53 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider52, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider53);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration55 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider56 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration55);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider57 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider58 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider56, oakSolrConfigurationProvider57);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider59 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider60 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider56, oakSolrConfigurationProvider59);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex61 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator50, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider53, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider56);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex62 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator39, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider43, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider56);
        remoteSolrServerProvider56.close();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex64 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider35, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider56);
        org.apache.jackrabbit.oak.spi.query.Filter filter65 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState66 = null;
        try {
            java.lang.String str67 = solrQueryIndex64.getPlan(filter65, nodeState66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue(i12 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "path_exact" + "'", str15.equals("path_exact"));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(str_array27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue(i30 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider31);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "path_exact" + "'", str33.equals("path_exact"));
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration38);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test335");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer3 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(true, "httpPort", false);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test336");
        java.lang.CharSequence charSequence1 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.partialEscape((java.lang.CharSequence) "shardsNo");
        org.junit.Assert.assertNotNull(charSequence1);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test337");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient5.close();
        org.apache.solr.common.params.SolrParams solrParams8 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD9 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse10 = solrClient5.query("", solrParams8, mETHOD9);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test338");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("primaryTypes", (java.lang.Integer) 10);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration8 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.Integer i9 = httpConfiguration8.getHttpPort();
        java.lang.String str10 = httpConfiguration8.getContext();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(httpConfiguration8);
        org.junit.Assert.assertTrue("'" + i9 + "' != '" + 10 + "'", i9.equals(10));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "primaryTypes" + "'", str10.equals("primaryTypes"));
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test339");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams21 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback22 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse23 = solrClient19.queryAndStreamResponse("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", solrParams21, streamingResponseCallback22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient19);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test340");
        java.lang.String[] str_array29 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array29);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array29);
        java.lang.String[] str_array32 = remoteSolrServerConfiguration31.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration33 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("hi!_string_sort", "path_exact", (int) (byte) 100, (int) (byte) 10, "path_anc", (int) (short) 1, (int) (byte) 0, str_array32);
        java.lang.String str34 = remoteSolrServerConfiguration33.toString();
        java.lang.String[] str_array35 = remoteSolrServerConfiguration33.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("/solr_string_sort", "collection", (int) (short) 1, 1, "parentField", 1, (int) (byte) 1, str_array35);
        org.junit.Assert.assertNotNull(str_array29);
        org.junit.Assert.assertNotNull(str_array32);
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}" + "'", str34.equals("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}"));
        org.junit.Assert.assertNotNull(str_array35);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test341");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder10 = solrClient9.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder11 = solrClient9.getBinder();
        java.util.Collection<java.lang.String> collection_str12 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList13 = solrClient9.getById(collection_str12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(documentObjectBinder10);
        org.junit.Assert.assertNotNull(documentObjectBinder11);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test342");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient18.optimize("socketTimeout", false, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test343");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        embeddedSolrServerProvider4.close();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test344");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.spi.query.Filter filter24 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState25 = null;
        try {
            double d26 = solrQueryIndex23.getCost(filter24, nodeState25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test345");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider36 = embeddedSolrServerConfiguration2.getProvider();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient37 = embeddedSolrServerProvider36.getSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider36);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test346");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str14 = defaultSolrConfiguration13.getPathField();
        boolean b15 = defaultSolrConfiguration13.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider16);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient18 = remoteSolrServerProvider12.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "path_exact" + "'", str14.equals("path_exact"));
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test347");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrCollection();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test348");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array19 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument20 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b21 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument20, solrInputDocument_array19);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient17.add("path_collapsed", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument20);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrInputDocument_array19);
        org.junit.Assert.assertTrue(b21 == false);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test349");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str14 = defaultSolrConfiguration13.getPathField();
        boolean b15 = defaultSolrConfiguration13.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider16);
        java.lang.String[] str_array26 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration27 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array26);
        java.lang.reflect.Type type28 = remoteSolrServerConfiguration27.getType();
        int i29 = remoteSolrServerConfiguration27.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider30 = remoteSolrServerConfiguration27.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str32 = defaultSolrConfiguration31.getPathField();
        boolean b33 = defaultSolrConfiguration31.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider30, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider34);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider34);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration37 = defaultSolrConfigurationProvider34.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration38 = defaultSolrConfigurationProvider34.getConfiguration();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "path_exact" + "'", str14.equals("path_exact"));
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(str_array26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue(i29 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider30);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "path_exact" + "'", str32.equals("path_exact"));
        org.junit.Assert.assertTrue(b33 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration37);
        org.junit.Assert.assertNotNull(oakSolrConfiguration38);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test350");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.solr.client.solrj.SolrClient solrClient5 = null;
        java.lang.String[] str_array14 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration15 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array14);
        java.lang.reflect.Type type16 = remoteSolrServerConfiguration15.getType();
        int i17 = remoteSolrServerConfiguration15.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider18 = remoteSolrServerConfiguration15.getProvider();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration15.getType();
        java.lang.String[] str_array28 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array28);
        java.lang.reflect.Type type30 = remoteSolrServerConfiguration29.getType();
        java.lang.String str31 = remoteSolrServerConfiguration29.getSolrConfDir();
        java.lang.String str32 = remoteSolrServerConfiguration29.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient34 = defaultSolrServerProvider33.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration29, solrClient34, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration15, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient5, strategy35);
        java.lang.String str39 = embeddedSolrServerConfiguration2.getCoreName();
        java.lang.String str40 = embeddedSolrServerConfiguration2.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(str_array14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue(i17 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(str_array28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertNotNull(solrClient34);
        org.junit.Assert.assertTrue("'" + strategy35 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy35.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "path_des" + "'", str39.equals("path_des"));
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}" + "'", str40.equals("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}"));
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test351");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("collapseJcrContentNodes", (java.lang.Integer) 0);
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider8 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration11 = embeddedSolrServerConfiguration2.withHttpConfiguration("", (java.lang.Integer) 1);
        java.lang.String[] str_array27 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration28 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array27);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array27);
        java.lang.String[] str_array30 = remoteSolrServerConfiguration29.getSolrHttpUrls();
        java.lang.reflect.Type type31 = remoteSolrServerConfiguration29.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient33 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration29, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient34 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration11, strategy32);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider8);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration11);
        org.junit.Assert.assertNotNull(str_array27);
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient33);
        org.junit.Assert.assertNull(solrClient34);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test352");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        int i15 = remoteSolrServerConfiguration13.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = remoteSolrServerConfiguration13.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str18 = defaultSolrConfiguration17.getPathField();
        boolean b19 = defaultSolrConfiguration17.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration17);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration22 = defaultSolrConfigurationProvider20.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.solr.client.solrj.SolrClient solrClient24 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse28 = solrClient24.deleteByQuery("childrenField", "", 32);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue(i15 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "path_exact" + "'", str18.equals("path_exact"));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration22);
        org.junit.Assert.assertNotNull(solrClient24);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test353");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.lang.String str4 = defaultSolrConfiguration0.getPathField();
        boolean b5 = defaultSolrConfiguration0.useForPropertyRestrictions();
        java.lang.String str6 = defaultSolrConfiguration0.getCatchAllField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_exact" + "'", str4.equals("path_exact"));
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "catch_all" + "'", str6.equals("catch_all"));
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test354");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str14 = remoteSolrServerConfiguration9.toString();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}" + "'", str14.equals("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}"));
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test355");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        int i2 = defaultSolrConfiguration0.getRows();
        boolean b3 = defaultSolrConfiguration0.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str4 = defaultSolrConfiguration0.getIgnoredProperties();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy5 = defaultSolrConfiguration0.getCommitPolicy();
        java.lang.String str6 = defaultSolrConfiguration0.getPathDepthField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(i2 == 10);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertNotNull(collection_str4);
        org.junit.Assert.assertTrue("'" + commitPolicy5 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy5.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "path_depth" + "'", str6.equals("path_depth"));
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test356");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction6 = null;
        java.lang.String str7 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction6);
        boolean b8 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test357");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        java.lang.String str17 = remoteSolrServerConfiguration16.getSolrZkHost();
        java.lang.String[] str_array18 = remoteSolrServerConfiguration16.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration19 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("hi!", "127.0.0.1:9983", (int) (short) 1, 3000, "collection", 0, (int) (short) 0, str_array18);
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(str_array18);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test358");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse5 = solrClient4.rollback();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test359");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient2.deleteByQuery("coreName", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test360");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator5 = null;
        java.lang.String[] str_array14 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration15 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array14);
        java.lang.reflect.Type type16 = remoteSolrServerConfiguration15.getType();
        java.lang.String str17 = remoteSolrServerConfiguration15.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration15);
        java.lang.String[] str_array27 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration28 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array27);
        java.lang.reflect.Type type29 = remoteSolrServerConfiguration28.getType();
        int i30 = remoteSolrServerConfiguration28.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider31 = remoteSolrServerConfiguration28.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration32 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str33 = defaultSolrConfiguration32.getPathField();
        boolean b34 = defaultSolrConfiguration32.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration32);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider31, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient38 = defaultSolrServerProvider37.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient39 = defaultSolrServerProvider37.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration40 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider41 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration40);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider42 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider43 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider41, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider42);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider37, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider42);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider45 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient46 = defaultSolrServerProvider45.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient47 = defaultSolrServerProvider45.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration48 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider49 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration48);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider50 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider51 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider49, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider50);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider52 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider45, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider50);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider53 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider37, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider50);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator54 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider55 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider31, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider50, nodeAggregator54);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider56 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider50);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration57 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider58 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration57);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider59 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider60 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider58, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider59);
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService61 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider62 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider58, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService61);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator63 = null;
        java.lang.String[] str_array72 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration73 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array72);
        java.lang.reflect.Type type74 = remoteSolrServerConfiguration73.getType();
        int i75 = remoteSolrServerConfiguration73.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider76 = remoteSolrServerConfiguration73.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider77 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration73);
        remoteSolrServerProvider77.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService79 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration80 = oakSolrConfigurationProviderService79.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator81 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider82 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider77, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService79, nodeAggregator81);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration83 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider84 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration83);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider85 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider86 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider84, oakSolrConfigurationProvider85);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex87 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator63, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService79, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider84);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator88 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider89 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider58, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService79, nodeAggregator88);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex90 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider50, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider58);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider91 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider50);
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue(i30 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider31);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "path_exact" + "'", str33.equals("path_exact"));
        org.junit.Assert.assertTrue(b34 == false);
        org.junit.Assert.assertNotNull(solrClient38);
        org.junit.Assert.assertNotNull(solrClient39);
        org.junit.Assert.assertNotNull(solrClient46);
        org.junit.Assert.assertNotNull(solrClient47);
        org.junit.Assert.assertNotNull(str_array72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue(i75 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider76);
        org.junit.Assert.assertNotNull(oakSolrConfiguration80);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test361");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array19 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument20 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b21 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument20, solrInputDocument_array19);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse23 = solrClient17.add("depthField", (java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument20, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrInputDocument_array19);
        org.junit.Assert.assertTrue(b21 == false);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test362");
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array22);
        java.lang.String[] str_array25 = remoteSolrServerConfiguration24.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("hi!_string_sort", "path_exact", (int) (byte) 100, (int) (byte) 10, "path_anc", (int) (short) 1, (int) (byte) 0, str_array25);
        java.lang.String str27 = remoteSolrServerConfiguration26.toString();
        java.lang.String[] str_array28 = remoteSolrServerConfiguration26.getSolrHttpUrls();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrCollection();
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}" + "'", str27.equals("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}"));
        org.junit.Assert.assertNotNull(str_array28);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "path_exact" + "'", str29.equals("path_exact"));
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test363");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient5.optimize();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test364");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient4.deleteById("pathRestrictions", (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test365");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient5.optimize(false, false, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test366");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("primaryTypes", (java.lang.Integer) 10);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration8 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.String str9 = httpConfiguration8.getContext();
        java.lang.Integer i10 = httpConfiguration8.getHttpPort();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(httpConfiguration8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "primaryTypes" + "'", str9.equals("primaryTypes"));
        org.junit.Assert.assertTrue("'" + i10 + "' != '" + 10 + "'", i10.equals(10));
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test367");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.solr.client.solrj.SolrClient solrClient5 = null;
        java.lang.String[] str_array14 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration15 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array14);
        java.lang.reflect.Type type16 = remoteSolrServerConfiguration15.getType();
        int i17 = remoteSolrServerConfiguration15.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider18 = remoteSolrServerConfiguration15.getProvider();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration15.getType();
        java.lang.String[] str_array28 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array28);
        java.lang.reflect.Type type30 = remoteSolrServerConfiguration29.getType();
        java.lang.String str31 = remoteSolrServerConfiguration29.getSolrConfDir();
        java.lang.String str32 = remoteSolrServerConfiguration29.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient34 = defaultSolrServerProvider33.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration29, solrClient34, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration15, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient5, strategy35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration39 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(str_array14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue(i17 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(str_array28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertNotNull(solrClient34);
        org.junit.Assert.assertTrue("'" + strategy35 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy35.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(httpConfiguration39);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test368");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("path_anc", "ignoredProperties");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration3 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.reflect.Type type4 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        org.junit.Assert.assertNull(httpConfiguration3);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test369");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        try {
            org.apache.solr.common.SolrDocument solrDocument9 = solrClient5.getById("httpPort", "catch_all");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test370");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse7 = solrClient5.query(solrParams6);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test371");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        int i43 = remoteSolrServerConfiguration9.getSocketTimeout();
        java.lang.reflect.Type type44 = remoteSolrServerConfiguration9.getType();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
        org.junit.Assert.assertTrue(i43 == 1);
        org.junit.Assert.assertNotNull(type44);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test372");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        org.apache.jackrabbit.oak.spi.query.Filter.PathRestriction pathRestriction1 = null;
        try {
            java.lang.String str2 = defaultSolrConfiguration0.getFieldForPathRestriction(pathRestriction1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test373");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCollapsedPathField();
        java.lang.String str2 = defaultSolrConfiguration0.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy3 = defaultSolrConfiguration0.getCommitPolicy();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_collapsed" + "'", str1.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "path_collapsed" + "'", str2.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy3 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy3.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test374");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient1 = solrServerProviderService0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = solrServerProviderService0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = solrServerProviderService0.getSolrServer();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        int i28 = remoteSolrServerConfiguration26.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider29 = remoteSolrServerConfiguration26.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str31 = defaultSolrConfiguration30.getPathField();
        boolean b32 = defaultSolrConfiguration30.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration30);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider29, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider33);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient37 = defaultSolrServerProvider35.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration38 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider39 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration38);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider40 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider41 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider39, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider40);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider42 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider35, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider43 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient44 = defaultSolrServerProvider43.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient45 = defaultSolrServerProvider43.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration46 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider47 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration46);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider48 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider49 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider47, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider48);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider50 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider43, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider48);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider51 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider35, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider48);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator52 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider53 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider29, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider48, nodeAggregator52);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider48);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider55 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) solrServerProviderService0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider48);
        org.apache.solr.client.solrj.SolrClient solrClient56 = solrServerProviderService0.getSearchingSolrServer();
        org.junit.Assert.assertNull(solrClient1);
        org.junit.Assert.assertNull(solrClient2);
        org.junit.Assert.assertNull(solrClient3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue(i28 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider29);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "path_exact" + "'", str31.equals("path_exact"));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertNotNull(solrClient37);
        org.junit.Assert.assertNotNull(solrClient44);
        org.junit.Assert.assertNotNull(solrClient45);
        org.junit.Assert.assertNull(solrClient56);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test375");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        java.lang.String[] str_array21 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration22 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array21);
        java.lang.reflect.Type type23 = remoteSolrServerConfiguration22.getType();
        java.lang.String str24 = remoteSolrServerConfiguration22.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy25 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration22, strategy25);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy25);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));
        org.junit.Assert.assertTrue("'" + strategy25 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy25.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test376");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrRequest solrRequest10 = null;
        try {
            org.apache.solr.common.util.NamedList<java.lang.Object> namedlist_obj11 = solrClient9.request(solrRequest10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(solrClient9);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test377");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        int i15 = remoteSolrServerConfiguration13.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = remoteSolrServerConfiguration13.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str18 = defaultSolrConfiguration17.getPathField();
        boolean b19 = defaultSolrConfiguration17.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration17);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration22 = defaultSolrConfigurationProvider20.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.solr.client.solrj.SolrClient solrClient24 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse27 = solrClient24.deleteById("collection", 3000);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue(i15 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "path_exact" + "'", str18.equals("path_exact"));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration22);
        org.junit.Assert.assertNotNull(solrClient24);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test378");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider1.getIndexingSolrServer();
        java.lang.String[] str_array13 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array13);
        java.lang.reflect.Type type15 = remoteSolrServerConfiguration14.getType();
        int i16 = remoteSolrServerConfiguration14.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = remoteSolrServerConfiguration14.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str19 = defaultSolrConfiguration18.getPathField();
        boolean b20 = defaultSolrConfiguration18.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration18);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration23 = defaultSolrConfigurationProvider21.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration25 = defaultSolrConfigurationProvider21.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService26 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient27 = solrServerProviderService26.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient28 = solrServerProviderService26.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient29 = solrServerProviderService26.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex30 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) solrServerProviderService26);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan indexPlan31 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState32 = null;
        try {
            java.lang.String str33 = solrQueryIndex30.getPlanDescription(indexPlan31, nodeState32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue(i16 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "path_exact" + "'", str19.equals("path_exact"));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration23);
        org.junit.Assert.assertNotNull(oakSolrConfiguration25);
        org.junit.Assert.assertNull(solrClient27);
        org.junit.Assert.assertNull(solrClient28);
        org.junit.Assert.assertNull(solrClient29);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test379");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient17.deleteById("coreName", "hi!");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test380");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        try {
            org.apache.solr.common.SolrDocument solrDocument10 = solrClient5.getById("http://127.0.0.1", "/solr_string_sort");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test381");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient5.close();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient5.commit();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test382");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        java.util.Collection<java.lang.String> collection_str2 = defaultSolrConfiguration0.getUsedProperties();
        java.lang.String str3 = defaultSolrConfiguration0.getCatchAllField();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b5 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertNotNull(collection_str2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "catch_all" + "'", str3.equals("catch_all"));
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertTrue(b5 == false);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test383");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.reflect.Type type13 = remoteSolrServerConfiguration9.getType();
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        java.lang.reflect.Type type24 = remoteSolrServerConfiguration23.getType();
        java.lang.String str25 = remoteSolrServerConfiguration23.getSolrConfDir();
        java.lang.String str26 = remoteSolrServerConfiguration23.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider27 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient28 = defaultSolrServerProvider27.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy29 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration23, solrClient28, strategy29);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy29);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration9.getType();
        int i33 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider34 = remoteSolrServerConfiguration9.getProvider();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertNotNull(solrClient28);
        org.junit.Assert.assertTrue("'" + strategy29 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy29.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue(i33 == 100);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider34);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test384");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i14 = remoteSolrServerConfiguration9.getSolrShardsNo();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient16 = remoteSolrServerProvider15.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.io.IOException");
        } catch (java.io.IOException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i14 == 1);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test385");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "collection", "parentField", "httpPort", "solrContext", "RemoteSolrServerConfiguration{solrConfDir='pathField', socketTimeout=32, connectionTimeout=10, solrHttpUrls=[solrHomePath], solrZkHost='catchAllField', solrCollection='commitPolicy', solrShardsNo=1, solrReplicationFactor=100}", "/solr_string_sort", "usedProperties", "path_des", "http://127.0.0.1", "solrContext", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "solrHomePath", "hi!_string_sort", "path_des", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "connectionTimeout", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "connectionTimeout", "path_collapsed", "path_exact", "propertyRestrictions", "path_child", "collection", "configurationDirectory", "/solr_string_sort", "collection", "collapseJcrContentNodes", "catch_all" };
        java.util.ArrayList<java.lang.String> arraylist_str36 = new java.util.ArrayList<java.lang.String>();
        boolean b37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str36, str_array35);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse38 = solrClient6.deleteById((java.util.List<java.lang.String>) arraylist_str36);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertTrue(b37 == true);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test386");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        org.apache.solr.common.params.SolrParams solrParams44 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD45 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse46 = solrClient19.query("/solr", solrParams44, mETHOD45);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test387");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.reflect.Type type13 = remoteSolrServerConfiguration9.getType();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue(i14 == 100);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test388");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams20 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument21 = solrClient18.getById("", solrParams20);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test389");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        java.lang.String str17 = remoteSolrServerConfiguration16.getSolrZkHost();
        java.lang.String[] str_array18 = remoteSolrServerConfiguration16.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration19 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("path_des", "usedProperties", (int) (byte) 0, (int) (short) 0, "catchAllField", (int) (byte) 10, (int) (byte) 0, str_array18);
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider20 = remoteSolrServerConfiguration19.getProvider();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator21 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider22 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex24 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator21, oakSolrConfigurationProvider22, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider23);
        org.apache.solr.client.solrj.SolrClient solrClient25 = defaultSolrServerProvider23.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient26 = defaultSolrServerProvider23.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy27 = null;
        try {
            org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration19, solrClient26, strategy27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider20);
        org.junit.Assert.assertNotNull(solrClient25);
        org.junit.Assert.assertNotNull(solrClient26);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test390");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.reflect.Type type13 = remoteSolrServerConfiguration9.getType();
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        java.lang.reflect.Type type24 = remoteSolrServerConfiguration23.getType();
        java.lang.String str25 = remoteSolrServerConfiguration23.getSolrConfDir();
        java.lang.String str26 = remoteSolrServerConfiguration23.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider27 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient28 = defaultSolrServerProvider27.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy29 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration23, solrClient28, strategy29);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy29);
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        java.lang.String str33 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        org.junit.Assert.assertNotNull(solrClient28);
        org.junit.Assert.assertTrue("'" + strategy29 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy29.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test391");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient6.add(iterator_solrInputDocument7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test392");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient5.close();
        org.apache.solr.common.SolrInputDocument solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.add(solrInputDocument7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test393");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider0.getSearchingSolrServer();
        java.lang.String[] str_array28 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array28);
        int i30 = remoteSolrServerConfiguration29.getSolrShardsNo();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration29);
        java.lang.String str32 = remoteSolrServerConfiguration29.getSolrCollection();
        int i33 = remoteSolrServerConfiguration29.getConnectionTimeout();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse35 = solrClient19.addBean((java.lang.Object) remoteSolrServerConfiguration29, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array28);
        org.junit.Assert.assertTrue(i30 == 1);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        org.junit.Assert.assertTrue(i33 == (-1));
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test394");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        int i15 = remoteSolrServerConfiguration13.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = remoteSolrServerConfiguration13.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str18 = defaultSolrConfiguration17.getPathField();
        boolean b19 = defaultSolrConfiguration17.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration17);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration22 = defaultSolrConfigurationProvider20.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.solr.client.solrj.SolrClient solrClient24 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse26 = solrClient24.deleteByQuery("propertyMappings");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue(i15 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "path_exact" + "'", str18.equals("path_exact"));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration22);
        org.junit.Assert.assertNotNull(solrClient24);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test395");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse6 = solrClient4.deleteByQuery("zkHost");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test396");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str14 = defaultSolrConfiguration13.getPathField();
        boolean b15 = defaultSolrConfiguration13.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider16);
        remoteSolrServerProvider12.close();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "path_exact" + "'", str14.equals("path_exact"));
        org.junit.Assert.assertTrue(b15 == false);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test397");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        int i28 = remoteSolrServerConfiguration26.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider29 = remoteSolrServerConfiguration26.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration30 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str31 = defaultSolrConfiguration30.getPathField();
        boolean b32 = defaultSolrConfiguration30.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration30);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider29, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider33);
        java.lang.String[] str_array43 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration44 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array43);
        java.lang.reflect.Type type45 = remoteSolrServerConfiguration44.getType();
        int i46 = remoteSolrServerConfiguration44.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider47 = remoteSolrServerConfiguration44.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration48 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str49 = defaultSolrConfiguration48.getPathField();
        boolean b50 = defaultSolrConfiguration48.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider51 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration48);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider52 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider47, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider53 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider29, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.solr.client.solrj.SolrClient solrClient55 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient56 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse59 = solrClient56.deleteByQuery("path_depth", (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue(i28 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider29);
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "path_exact" + "'", str31.equals("path_exact"));
        org.junit.Assert.assertTrue(b32 == false);
        org.junit.Assert.assertNotNull(str_array43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue(i46 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider47);
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "path_exact" + "'", str49.equals("path_exact"));
        org.junit.Assert.assertTrue(b50 == false);
        org.junit.Assert.assertNotNull(solrClient55);
        org.junit.Assert.assertNotNull(solrClient56);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test398");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        java.lang.String str41 = embeddedSolrServerConfiguration2.toString();
        java.lang.String str42 = embeddedSolrServerConfiguration2.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}" + "'", str41.equals("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}"));
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}" + "'", str42.equals("EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}"));
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test399");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str37 = defaultSolrConfiguration36.getCollapsedPathField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy38 = defaultSolrConfiguration36.getCommitPolicy();
        java.util.Collection<java.lang.String> collection_str39 = defaultSolrConfiguration36.getIgnoredProperties();
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList40 = solrClient35.getById(collection_str39);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "path_collapsed" + "'", str37.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + commitPolicy38 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy38.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
        org.junit.Assert.assertNotNull(collection_str39);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test400");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        remoteSolrServerProvider13.close();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider17);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test401");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        solrClient5.close();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient5.query(solrParams7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test402");
        java.lang.String str2 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.getSortingField((-1), "propertyMappings");
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "propertyMappings_string_sort" + "'", str2.equals("propertyMappings_string_sort"));
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test403");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array20 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument21 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b22 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument21, solrInputDocument_array20);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse24 = solrClient18.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument21, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
        org.junit.Assert.assertNotNull(solrInputDocument_array20);
        org.junit.Assert.assertTrue(b22 == false);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test404");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        solrClient5.close();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.deleteById("http://127.0.0.1:8983/solr/oak", "", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test405");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument6 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient5.add(solrInputDocument6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test406");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("primaryTypes", (java.lang.Integer) 10);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration8 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.String str9 = httpConfiguration8.getContext();
        java.lang.String str10 = httpConfiguration8.toString();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(httpConfiguration8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "primaryTypes" + "'", str9.equals("primaryTypes"));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "HttpConfiguration{context='primaryTypes', httpPort=10}" + "'", str10.equals("HttpConfiguration{context='primaryTypes', httpPort=10}"));
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test407");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument5 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse7 = solrClient2.add("hi!_string_sort", solrInputDocument5, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test408");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator10 = solrQueryIndex9.getNodeAggregator();
        double d11 = solrQueryIndex9.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator12 = solrQueryIndex9.getNodeAggregator();
        double d13 = solrQueryIndex9.getMinimumCost();
        java.lang.String str14 = solrQueryIndex9.getIndexName();
        org.junit.Assert.assertNull(nodeAggregator10);
        org.junit.Assert.assertTrue(d11 == 2.3d);
        org.junit.Assert.assertNull(nodeAggregator12);
        org.junit.Assert.assertTrue(d13 == 2.3d);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "solr" + "'", str14.equals("solr"));
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test409");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient6 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient6.query(solrParams7, mETHOD8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(solrClient6);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test410");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService solrIndexEditorProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrIndexEditorProviderService();
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder2 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState3 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback4 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor5 = solrIndexEditorProviderService0.getIndexEditor("pathField", nodeBuilder2, nodeState3, indexUpdateCallback4);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder7 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState8 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback9 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor10 = solrIndexEditorProviderService0.getIndexEditor("", nodeBuilder7, nodeState8, indexUpdateCallback9);
        org.junit.Assert.assertNull(editor5);
        org.junit.Assert.assertNull(editor10);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test411");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, oakSolrConfigurationProvider19);
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse26 = solrClient21.optimize("ignoredProperties", true, true, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient21);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test412");
        java.lang.CharSequence charSequence1 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.partialEscape((java.lang.CharSequence) "zkHost");
        java.lang.CharSequence charSequence2 = org.apache.jackrabbit.oak.plugins.index.solr.util.SolrUtils.partialEscape((java.lang.CharSequence) "zkHost");
        org.junit.Assert.assertNotNull(charSequence1);
        org.junit.Assert.assertNotNull(charSequence2);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test413");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        int i15 = remoteSolrServerConfiguration13.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = remoteSolrServerConfiguration13.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str18 = defaultSolrConfiguration17.getPathField();
        boolean b19 = defaultSolrConfiguration17.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration17);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration22 = defaultSolrConfigurationProvider20.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder25 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState26 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback27 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor28 = solrIndexEditorProvider23.getIndexEditor("path_exact", nodeBuilder25, nodeState26, indexUpdateCallback27);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder30 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState31 = null;
        org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback indexUpdateCallback32 = null;
        org.apache.jackrabbit.oak.spi.commit.Editor editor33 = solrIndexEditorProvider23.getIndexEditor("propertyRestrictions", nodeBuilder30, nodeState31, indexUpdateCallback32);
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue(i15 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "path_exact" + "'", str18.equals("path_exact"));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration22);
        org.junit.Assert.assertNull(editor28);
        org.junit.Assert.assertNull(editor33);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test414");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i12 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue(i12 == (-1));
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test415");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.lang.String str3 = defaultSolrConfiguration0.getCollapsedPathField();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "path_collapsed" + "'", str3.equals("path_collapsed"));
        org.junit.Assert.assertTrue(b4 == false);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test416");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        boolean b4 = defaultSolrConfiguration0.useForPropertyRestrictions();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration0);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b4 == false);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test417");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder10 = solrClient9.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient9.commit(false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(documentObjectBinder10);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test418");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration17.getType();
        java.lang.reflect.Type type20 = remoteSolrServerConfiguration17.getType();
        int i21 = remoteSolrServerConfiguration17.getSocketTimeout();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue(i21 == 32);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test419");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState19);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider20);
        nodeStateSolrServerProvider20.close();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient23 = nodeStateSolrServerProvider20.getSearchingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test420");
        java.lang.String[] str_array22 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array22);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array22);
        java.lang.String[] str_array25 = remoteSolrServerConfiguration24.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("hi!_string_sort", "path_exact", (int) (byte) 100, (int) (byte) 10, "path_anc", (int) (short) 1, (int) (byte) 0, str_array25);
        java.lang.String str27 = remoteSolrServerConfiguration26.toString();
        java.lang.String[] str_array28 = remoteSolrServerConfiguration26.getSolrHttpUrls();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}" + "'", str27.equals("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}"));
        org.junit.Assert.assertNotNull(str_array28);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!_string_sort" + "'", str29.equals("hi!_string_sort"));
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test421");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        embeddedSolrServerProvider4.close();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient6 = embeddedSolrServerProvider4.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type org.apache.solr.common.SolrException");
        } catch (org.apache.solr.common.SolrException e) {
        }
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test422");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        int i19 = remoteSolrServerConfiguration17.getSocketTimeout();
        int i20 = remoteSolrServerConfiguration17.getConnectionTimeout();
        int i21 = remoteSolrServerConfiguration17.getConnectionTimeout();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue(i19 == 32);
        org.junit.Assert.assertTrue(i20 == 10);
        org.junit.Assert.assertTrue(i21 == 10);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test423");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.util.Collection<java.lang.String> collection_str5 = defaultSolrConfiguration0.getUsedProperties();
        boolean b6 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.lang.String str7 = defaultSolrConfiguration0.getPathField();
        boolean b8 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
        org.junit.Assert.assertNotNull(collection_str5);
        org.junit.Assert.assertTrue(b6 == false);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "path_exact" + "'", str7.equals("path_exact"));
        org.junit.Assert.assertTrue(b8 == false);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test424");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("primaryTypes", (java.lang.Integer) 10);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration8 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.Integer i9 = httpConfiguration8.getHttpPort();
        java.lang.String str10 = httpConfiguration8.toString();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(httpConfiguration8);
        org.junit.Assert.assertTrue("'" + i9 + "' != '" + 10 + "'", i9.equals(10));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "HttpConfiguration{context='primaryTypes', httpPort=10}" + "'", str10.equals("HttpConfiguration{context='primaryTypes', httpPort=10}"));
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test425");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument8 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient5.add(solrInputDocument8, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test426");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str11 = defaultSolrConfiguration10.getPathField();
        java.lang.String str12 = defaultSolrConfiguration10.getPathDepthField();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy commitPolicy13 = defaultSolrConfiguration10.getCommitPolicy();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse15 = solrClient8.addBean((java.lang.Object) commitPolicy13, 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "path_exact" + "'", str11.equals("path_exact"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "path_depth" + "'", str12.equals("path_depth"));
        org.junit.Assert.assertTrue("'" + commitPolicy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT + "'", commitPolicy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration.CommitPolicy.SOFT));
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test427");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.common.SolrInputDocument solrInputDocument19 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient18.add(solrInputDocument19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test428");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration43 = embeddedSolrServerConfiguration2.withHttpConfiguration("catch_all", (java.lang.Integer) 10);
        java.lang.reflect.Type type44 = embeddedSolrServerConfiguration43.getType();
        java.lang.reflect.Type type45 = embeddedSolrServerConfiguration43.getType();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test429");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument21 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse22 = solrClient18.add("http://127.0.0.1", solrInputDocument21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test430");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration17.getType();
        int i20 = remoteSolrServerConfiguration17.getConnectionTimeout();
        java.lang.reflect.Type type21 = remoteSolrServerConfiguration17.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration24 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type25 = embeddedSolrServerConfiguration24.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator26 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider27 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider28 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex29 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator26, oakSolrConfigurationProvider27, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider28);
        org.apache.solr.client.solrj.SolrClient solrClient30 = defaultSolrServerProvider28.getSolrServer();
        java.lang.String[] str_array39 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration40 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array39);
        java.lang.reflect.Type type41 = remoteSolrServerConfiguration40.getType();
        java.lang.String str42 = remoteSolrServerConfiguration40.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider43 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration40);
        java.lang.String[] str_array52 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration53 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array52);
        java.lang.reflect.Type type54 = remoteSolrServerConfiguration53.getType();
        java.lang.String str55 = remoteSolrServerConfiguration53.getSolrConfDir();
        java.lang.String str56 = remoteSolrServerConfiguration53.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider57 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient58 = defaultSolrServerProvider57.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy59 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration53, solrClient58, strategy59);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration40, strategy59);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration24, solrClient30, strategy59);
        org.apache.solr.client.solrj.SolrClient solrClient63 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration17, strategy59);
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue(i20 == 10);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(solrClient30);
        org.junit.Assert.assertNotNull(str_array39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!" + "'", str42.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "hi!" + "'", str55.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        org.junit.Assert.assertNotNull(solrClient58);
        org.junit.Assert.assertTrue("'" + strategy59 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy59.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient63);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test431");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse45 = solrClient19.deleteByQuery("8983", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test432");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        try {
            org.apache.solr.common.SolrDocument solrDocument38 = solrClient35.getById("descendantsField", "httpUrl");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test433");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.common.SolrInputDocument[] solrInputDocument_array5 = new org.apache.solr.common.SolrInputDocument[] {};
        java.util.ArrayList<org.apache.solr.common.SolrInputDocument> arraylist_solrInputDocument6 = new java.util.ArrayList<org.apache.solr.common.SolrInputDocument>();
        boolean b7 = java.util.Collections.addAll((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument6, solrInputDocument_array5);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse9 = solrClient4.add((java.util.Collection<org.apache.solr.common.SolrInputDocument>) arraylist_solrInputDocument6, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrInputDocument_array5);
        org.junit.Assert.assertTrue(b7 == false);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test434");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        double d24 = solrQueryIndex23.getMinimumCost();
        double d25 = solrQueryIndex23.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.Filter filter26 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] orderEntry_array27 = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry[] {};
        java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry> arraylist_orderEntry28 = new java.util.ArrayList<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>();
        boolean b29 = java.util.Collections.addAll((java.util.Collection<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry28, orderEntry_array27);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState30 = null;
        try {
            java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.IndexPlan> list_indexPlan31 = solrQueryIndex23.getPlans(filter26, (java.util.List<org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry>) arraylist_orderEntry28, nodeState30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertTrue(d24 == 2.3d);
        org.junit.Assert.assertTrue(d25 == 2.3d);
        org.junit.Assert.assertNotNull(orderEntry_array27);
        org.junit.Assert.assertTrue(b29 == false);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test435");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("hi!", "parentField");
        java.lang.String str3 = embeddedSolrServerConfiguration2.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration4 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.reflect.Type type5 = embeddedSolrServerConfiguration2.getType();
        java.lang.reflect.Type type6 = embeddedSolrServerConfiguration2.getType();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "parentField" + "'", str3.equals("parentField"));
        org.junit.Assert.assertNull(httpConfiguration4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test436");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse4 = solrClient2.commit("");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test437");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        java.lang.String[] str_array89 = new java.lang.String[] { "httpUrl", "parentField", "httpPort", "solrContext", "path_collapsed", "propertyMappings_string_sort", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "usedProperties", "path_child", "HttpConfiguration{context='primaryTypes', httpPort=10}", "path_child", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "solr", "hi!_string_sort", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "typeMappings", "path_des", "hi!_string_sort", "descendantsField", "connectionTimeout", "http://127.0.0.1", "connectionTimeout", "catchAllField", "ignoredProperties", "ignoredProperties", "catch_all", "httpUrl", "pathField", "httpPort", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "httpPort", "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", "hi!_string_sort", "usedProperties", "http://127.0.0.1:8983/solr/oak", "usedProperties", "configurationDirectory", "path_exact", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "connectionTimeout", "/solr", "usedProperties", "propertyMappings_string_sort", "parentField", "typeMappings" };
        java.util.ArrayList<java.lang.String> arraylist_str90 = new java.util.ArrayList<java.lang.String>();
        boolean b91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str90, str_array89);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse93 = solrClient19.deleteById("path_des", (java.util.List<java.lang.String>) arraylist_str90, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
        org.junit.Assert.assertNotNull(str_array89);
        org.junit.Assert.assertTrue(b91 == true);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test438");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        int i19 = remoteSolrServerConfiguration17.getSocketTimeout();
        int i20 = remoteSolrServerConfiguration17.getConnectionTimeout();
        java.lang.reflect.Type type21 = remoteSolrServerConfiguration17.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy22 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration17, strategy22);
        java.lang.String[] str_array24 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue(i19 == 32);
        org.junit.Assert.assertTrue(i20 == 10);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + strategy22 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy22.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(str_array24);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test439");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        java.util.Collection<java.lang.String> collection_str2 = defaultSolrConfiguration0.getUsedProperties();
        java.util.Collection<java.lang.String> collection_str3 = defaultSolrConfiguration0.getIgnoredProperties();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction4 = null;
        java.lang.String str5 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction4);
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertNotNull(collection_str2);
        org.junit.Assert.assertNotNull(collection_str3);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test440");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction3 = null;
        java.lang.String str4 = defaultSolrConfiguration0.getFieldForPropertyRestriction(propertyRestriction3);
        java.lang.String str5 = defaultSolrConfiguration0.getPathField();
        boolean b6 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "path_exact" + "'", str5.equals("path_exact"));
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test441");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("solrContext", "ignoredProperties");
        java.lang.String[] str_array11 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array11);
        java.lang.reflect.Type type13 = remoteSolrServerConfiguration12.getType();
        int i14 = remoteSolrServerConfiguration12.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider15 = remoteSolrServerConfiguration12.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.String str27 = remoteSolrServerConfiguration26.getSolrZkHost();
        java.lang.String[] str_array28 = remoteSolrServerConfiguration26.getSolrHttpUrls();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy30 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient31 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, strategy30);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration12, strategy30);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy30);
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue(i14 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider15);
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        org.junit.Assert.assertNotNull(str_array28);
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertTrue("'" + strategy30 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy30.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient31);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test442");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.deleteByQuery("8983", "");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test443");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration17.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy20 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient21 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration17, strategy20);
        java.lang.String[] str_array22 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        int i23 = remoteSolrServerConfiguration17.getSocketTimeout();
        int i24 = remoteSolrServerConfiguration17.getSolrReplicationFactor();
        java.lang.String str25 = remoteSolrServerConfiguration17.getSolrConfDir();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + strategy20 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy20.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient21);
        org.junit.Assert.assertNotNull(str_array22);
        org.junit.Assert.assertTrue(i23 == 32);
        org.junit.Assert.assertTrue(i24 == 100);
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "pathField" + "'", str25.equals("pathField"));
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test444");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("primaryTypes", (java.lang.Integer) 10);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration8 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.String str9 = httpConfiguration8.getContext();
        java.lang.String str10 = httpConfiguration8.getContext();
        java.lang.Integer i11 = httpConfiguration8.getHttpPort();
        java.lang.Integer i12 = httpConfiguration8.getHttpPort();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(httpConfiguration8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "primaryTypes" + "'", str9.equals("primaryTypes"));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "primaryTypes" + "'", str10.equals("primaryTypes"));
        org.junit.Assert.assertTrue("'" + i11 + "' != '" + 10 + "'", i11.equals(10));
        org.junit.Assert.assertTrue("'" + i12 + "' != '" + 10 + "'", i12.equals(10));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test445");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider1.getIndexingSolrServer();
        java.lang.String[] str_array13 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array13);
        java.lang.reflect.Type type15 = remoteSolrServerConfiguration14.getType();
        int i16 = remoteSolrServerConfiguration14.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = remoteSolrServerConfiguration14.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str19 = defaultSolrConfiguration18.getPathField();
        boolean b20 = defaultSolrConfiguration18.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration18);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration23 = defaultSolrConfigurationProvider21.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration25 = defaultSolrConfigurationProvider21.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService26 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient27 = solrServerProviderService26.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient28 = solrServerProviderService26.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient29 = solrServerProviderService26.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex30 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) solrServerProviderService26);
        org.apache.solr.client.solrj.SolrClient solrClient31 = solrServerProviderService26.getSearchingSolrServer();
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(str_array13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue(i16 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "path_exact" + "'", str19.equals("path_exact"));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration23);
        org.junit.Assert.assertNotNull(oakSolrConfiguration25);
        org.junit.Assert.assertNull(solrClient27);
        org.junit.Assert.assertNull(solrClient28);
        org.junit.Assert.assertNull(solrClient29);
        org.junit.Assert.assertNull(solrClient31);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test446");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, oakSolrConfigurationProvider19);
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider0.getSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument22 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse23 = solrClient21.add(iterator_solrInputDocument22);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient21);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test447");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("hi!", "parentField");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration3 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.String str4 = embeddedSolrServerConfiguration2.toString();
        org.junit.Assert.assertNull(httpConfiguration3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='hi!', coreName='parentField', httpConfiguration=null}" + "'", str4.equals("EmbeddedSolrServerConfiguration{solrHomePath='hi!', coreName='parentField', httpConfiguration=null}"));
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test448");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder3 = solrClient2.getBinder();
        org.apache.solr.common.params.SolrParams solrParams5 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument6 = solrClient2.getById("shardsNo", solrParams5);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(documentObjectBinder3);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test449");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.reflect.Type type5 = embeddedSolrServerConfiguration2.getType();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(type5);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test450");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getCollapsedPathField();
        java.lang.String str2 = defaultSolrConfiguration0.getCollapsedPathField();
        java.lang.String str3 = defaultSolrConfiguration0.getPathField();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_collapsed" + "'", str1.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "path_collapsed" + "'", str2.equals("path_collapsed"));
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "path_exact" + "'", str3.equals("path_exact"));
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test451");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder10 = solrClient9.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder11 = solrClient9.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse12 = solrClient9.commit();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(documentObjectBinder10);
        org.junit.Assert.assertNotNull(documentObjectBinder11);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test452");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient14.commit("connectionTimeout", true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test453");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        java.lang.String str17 = remoteSolrServerConfiguration16.getSolrZkHost();
        java.lang.String[] str_array18 = remoteSolrServerConfiguration16.getSolrHttpUrls();
        java.lang.String str19 = remoteSolrServerConfiguration16.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy20 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient21 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration16, strategy20);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse23 = solrClient5.addBean("pathRestrictions", (java.lang.Object) remoteSolrServerConfiguration16, 32);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        org.junit.Assert.assertTrue("'" + strategy20 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy20.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient21);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test454");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams6 = null;
        org.apache.solr.client.solrj.StreamingResponseCallback streamingResponseCallback7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient5.queryAndStreamResponse(solrParams6, streamingResponseCallback7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test455");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getIndexingSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient5.add("primaryTypes", iterator_solrInputDocument7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test456");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration0);
        embeddedSolrServerProvider1.close();
        try {
            org.apache.solr.client.solrj.SolrClient solrClient3 = embeddedSolrServerProvider1.getIndexingSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test457");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument7 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.add("path_anc", solrInputDocument7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test458");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        java.lang.String str11 = remoteSolrServerConfiguration9.getSolrConfDir();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient14 = defaultSolrServerProvider13.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy15 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient14, strategy15);
        int i17 = remoteSolrServerConfiguration9.getSolrShardsNo();
        int i18 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("path_anc", "ignoredProperties");
        java.lang.reflect.Type type22 = embeddedSolrServerConfiguration21.getType();
        java.lang.String[] str_array31 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration32 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array31);
        java.lang.String str33 = remoteSolrServerConfiguration32.getSolrZkHost();
        java.lang.String[] str_array34 = remoteSolrServerConfiguration32.getSolrHttpUrls();
        java.lang.String str35 = remoteSolrServerConfiguration32.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy36 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration32, strategy36);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration21, strategy36);
        org.apache.solr.client.solrj.SolrClient solrClient39 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy36);
        org.apache.solr.common.SolrInputDocument solrInputDocument40 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse41 = solrClient39.add(solrInputDocument40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertNotNull(solrClient14);
        org.junit.Assert.assertTrue("'" + strategy15 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy15.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertTrue(i17 == 1);
        org.junit.Assert.assertTrue(i18 == 100);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(str_array31);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        org.junit.Assert.assertNotNull(str_array34);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        org.junit.Assert.assertTrue("'" + strategy36 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy36.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient37);
        org.junit.Assert.assertNotNull(solrClient39);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test459");
        java.lang.String[] str_array43 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration44 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array43);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration45 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array43);
        java.lang.String[] str_array46 = remoteSolrServerConfiguration45.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration47 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("hi!_string_sort", "path_exact", (int) (byte) 100, (int) (byte) 10, "path_anc", (int) (short) 1, (int) (byte) 0, str_array46);
        java.lang.String str48 = remoteSolrServerConfiguration47.toString();
        java.lang.String[] str_array49 = remoteSolrServerConfiguration47.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration50 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "", (int) (short) 1, (int) (short) 1, "catch_all", (int) (byte) 100, 1, str_array49);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration51 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("collection", "path_collapsed", (int) (byte) 0, (int) (short) 1, "zkHost", 1, (int) (short) 100, str_array49);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration52 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "solr", 10, 1, "EmbeddedSolrServerConfiguration{solrHomePath='descendantsField', coreName='path_des', httpConfiguration=null}", 100, (int) (byte) 1, str_array49);
        org.junit.Assert.assertNotNull(str_array43);
        org.junit.Assert.assertNotNull(str_array46);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}" + "'", str48.equals("RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}"));
        org.junit.Assert.assertNotNull(str_array49);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test460");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i14 = remoteSolrServerConfiguration9.getSocketTimeout();
        java.lang.String str15 = remoteSolrServerConfiguration9.toString();
        java.lang.String str16 = remoteSolrServerConfiguration9.toString();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i14 == 1);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}" + "'", str15.equals("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}"));
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}" + "'", str16.equals("RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}"));
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test461");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument11 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse13 = solrClient8.add("solrServerType", solrInputDocument11, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test462");
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService0 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient1 = solrServerProviderService0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = solrServerProviderService0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = solrServerProviderService0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient4 = solrServerProviderService0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = solrServerProviderService0.getIndexingSolrServer();
        solrServerProviderService0.close();
        solrServerProviderService0.close();
        org.junit.Assert.assertNull(solrClient1);
        org.junit.Assert.assertNull(solrClient2);
        org.junit.Assert.assertNull(solrClient3);
        org.junit.Assert.assertNull(solrClient4);
        org.junit.Assert.assertNull(solrClient5);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test463");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider1 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider1.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider1.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider6);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider9.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient11 = defaultSolrServerProvider9.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider9, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration18 = defaultSolrConfigurationProvider14.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService19 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) solrServerProviderService19);
        org.apache.solr.client.solrj.SolrClient solrClient21 = solrServerProviderService19.getIndexingSolrServer();
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient11);
        org.junit.Assert.assertNotNull(oakSolrConfiguration18);
        org.junit.Assert.assertNull(solrClient21);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test464");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder6 = solrClient5.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder7 = solrClient5.getBinder();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse12 = solrClient5.commit("commitPolicy", false, true, false);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(documentObjectBinder6);
        org.junit.Assert.assertNotNull(documentObjectBinder7);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test465");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        java.lang.String str15 = remoteSolrServerConfiguration13.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration13);
        java.lang.String[] str_array25 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array25);
        java.lang.reflect.Type type27 = remoteSolrServerConfiguration26.getType();
        java.lang.String str28 = remoteSolrServerConfiguration26.getSolrConfDir();
        java.lang.String str29 = remoteSolrServerConfiguration26.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient31 = defaultSolrServerProvider30.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy32 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration26, solrClient31, strategy32);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration13, strategy32);
        org.apache.solr.client.solrj.SolrClient solrClient35 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, strategy32);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator37 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider38 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient39 = defaultSolrServerProvider38.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient40 = defaultSolrServerProvider38.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration41 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider42 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration41);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider43 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider42, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider43);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider45 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider38, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider43);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider46 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient47 = defaultSolrServerProvider46.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient48 = defaultSolrServerProvider46.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration49 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider50 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration49);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider51 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider52 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider50, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider53 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider46, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider38, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration55 = defaultSolrConfigurationProvider51.getConfiguration();
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState56 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider nodeStateSolrServerProvider57 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.nodestate.NodeStateSolrServerProvider(nodeState56);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex58 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator37, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider51, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) nodeStateSolrServerProvider57);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse59 = solrClient35.addBean("path_child", (java.lang.Object) nodeStateSolrServerProvider57);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!" + "'", str28.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        org.junit.Assert.assertNotNull(solrClient31);
        org.junit.Assert.assertTrue("'" + strategy32 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy32.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient35);
        org.junit.Assert.assertNotNull(solrClient39);
        org.junit.Assert.assertNotNull(solrClient40);
        org.junit.Assert.assertNotNull(solrClient47);
        org.junit.Assert.assertNotNull(solrClient48);
        org.junit.Assert.assertNotNull(oakSolrConfiguration55);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test466");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        java.lang.String str12 = remoteSolrServerConfiguration9.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy13 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient14 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy13);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse16 = solrClient14.deleteByQuery("solrHomePath");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        org.junit.Assert.assertTrue("'" + strategy13 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy13.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient14);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test467");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator4 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex7 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator4, oakSolrConfigurationProvider5, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider6);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider6.getSolrServer();
        java.lang.String[] str_array17 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array17);
        java.lang.reflect.Type type19 = remoteSolrServerConfiguration18.getType();
        java.lang.String str20 = remoteSolrServerConfiguration18.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration18);
        java.lang.String[] str_array30 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array30);
        java.lang.reflect.Type type32 = remoteSolrServerConfiguration31.getType();
        java.lang.String str33 = remoteSolrServerConfiguration31.getSolrConfDir();
        java.lang.String str34 = remoteSolrServerConfiguration31.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider35 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient36 = defaultSolrServerProvider35.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy37 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration31, solrClient36, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration18, strategy37);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration2, solrClient8, strategy37);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse44 = solrClient8.optimize(false, true, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(str_array17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        org.junit.Assert.assertNotNull(solrClient36);
        org.junit.Assert.assertTrue("'" + strategy37 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy37.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test468");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type3 = embeddedSolrServerConfiguration2.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String[] str_array13 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array13);
        java.lang.reflect.Type type15 = remoteSolrServerConfiguration14.getType();
        int i16 = remoteSolrServerConfiguration14.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = remoteSolrServerConfiguration14.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration18 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str19 = defaultSolrConfiguration18.getPathField();
        boolean b20 = defaultSolrConfiguration18.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration18);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider21);
        java.lang.String[] str_array31 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration32 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array31);
        java.lang.reflect.Type type33 = remoteSolrServerConfiguration32.getType();
        int i34 = remoteSolrServerConfiguration32.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider35 = remoteSolrServerConfiguration32.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str37 = defaultSolrConfiguration36.getPathField();
        boolean b38 = defaultSolrConfiguration36.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider39 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration36);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider40 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider35, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider39);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider41 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider39);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider42 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) embeddedSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider39);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState43 = null;
        java.util.List<? extends org.apache.jackrabbit.oak.spi.query.QueryIndex> list_wildcard44 = solrQueryIndexProvider42.getQueryIndexes(nodeState43);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider4);
        org.junit.Assert.assertNotNull(str_array13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue(i16 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "path_exact" + "'", str19.equals("path_exact"));
        org.junit.Assert.assertTrue(b20 == false);
        org.junit.Assert.assertNotNull(str_array31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue(i34 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider35);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "path_exact" + "'", str37.equals("path_exact"));
        org.junit.Assert.assertTrue(b38 == false);
        org.junit.Assert.assertNotNull(list_wildcard44);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test469");
        java.lang.String[] str_array15 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array15);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array15);
        java.lang.String[] str_array18 = remoteSolrServerConfiguration17.getSolrHttpUrls();
        int i19 = remoteSolrServerConfiguration17.getSocketTimeout();
        int i20 = remoteSolrServerConfiguration17.getConnectionTimeout();
        int i21 = remoteSolrServerConfiguration17.getSocketTimeout();
        org.junit.Assert.assertNotNull(str_array15);
        org.junit.Assert.assertNotNull(str_array18);
        org.junit.Assert.assertTrue(i19 == 32);
        org.junit.Assert.assertTrue(i20 == 10);
        org.junit.Assert.assertTrue(i21 == 32);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test470");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        boolean b2 = defaultSolrConfiguration0.collapseJcrContentNodes();
        boolean b3 = defaultSolrConfiguration0.collapseJcrContentNodes();
        java.lang.String str4 = defaultSolrConfiguration0.getPathField();
        boolean b5 = defaultSolrConfiguration0.useForPropertyRestrictions();
        boolean b6 = defaultSolrConfiguration0.useForPrimaryTypes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(b2 == false);
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_exact" + "'", str4.equals("path_exact"));
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test471");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder10 = solrClient9.getBinder();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder11 = solrClient9.getBinder();
        org.apache.solr.common.params.SolrParams solrParams13 = null;
        try {
            org.apache.solr.common.SolrDocument solrDocument14 = solrClient9.getById("hi!", solrParams13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException");
        } catch (java.lang.IllegalStateException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(documentObjectBinder10);
        org.junit.Assert.assertNotNull(documentObjectBinder11);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test472");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("solrContext", "ignoredProperties");
        java.lang.String str3 = embeddedSolrServerConfiguration2.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration4 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "ignoredProperties" + "'", str3.equals("ignoredProperties"));
        org.junit.Assert.assertNull(httpConfiguration4);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test473");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse8 = solrClient4.query("ignoredProperties", solrParams7);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test474");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        int i2 = defaultSolrConfiguration0.getRows();
        java.util.Collection<java.lang.String> collection_str3 = defaultSolrConfiguration0.getUsedProperties();
        java.lang.String str4 = defaultSolrConfiguration0.getPathField();
        boolean b5 = defaultSolrConfiguration0.useForPrimaryTypes();
        boolean b6 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue(i2 == 10);
        org.junit.Assert.assertNotNull(collection_str3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_exact" + "'", str4.equals("path_exact"));
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertTrue(b6 == false);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test475");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str14 = defaultSolrConfiguration13.getPathField();
        boolean b15 = defaultSolrConfiguration13.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider16);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider18.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient20 = defaultSolrServerProvider18.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration21 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration21);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider24 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider22, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider23);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider25 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider23);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider26 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient27 = defaultSolrServerProvider26.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient28 = defaultSolrServerProvider26.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider30 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration29);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider31 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider32 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider30, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider33 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider26, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider34 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider18, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator35 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider36 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider31, nodeAggregator35);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider37 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient38 = defaultSolrServerProvider37.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration39 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str40 = defaultSolrConfiguration39.getPathField();
        boolean b41 = defaultSolrConfiguration39.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider42 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration39);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider43 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration39);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider37, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider43);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator45 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider46 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider43, nodeAggregator45);
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState47 = null;
        java.util.List<? extends org.apache.jackrabbit.oak.spi.query.QueryIndex> list_wildcard48 = solrQueryIndexProvider46.getQueryIndexes(nodeState47);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "path_exact" + "'", str14.equals("path_exact"));
        org.junit.Assert.assertTrue(b15 == false);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(solrClient20);
        org.junit.Assert.assertNotNull(solrClient27);
        org.junit.Assert.assertNotNull(solrClient28);
        org.junit.Assert.assertNotNull(solrClient38);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "path_exact" + "'", str40.equals("path_exact"));
        org.junit.Assert.assertTrue(b41 == false);
        org.junit.Assert.assertNotNull(list_wildcard48);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test476");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == (-1));
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test477");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        embeddedSolrServerProvider3.close();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test478");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient5 = defaultSolrServerProvider2.getSearchingSolrServer();
        java.lang.String[] str_array43 = new java.lang.String[] { "hi!", "solrContext", "EmbeddedSolrServerConfiguration{solrHomePath='propertyMappings', coreName='ignoredProperties', httpConfiguration=null}", "primaryTypes", "path_depth", "path_child", "depthField", "RemoteSolrServerConfiguration{solrConfDir='path_anc', socketTimeout=1, connectionTimeout=0, solrHttpUrls=[solrHomePath], solrZkHost='hi!_string_sort', solrCollection='path_exact', solrShardsNo=100, solrReplicationFactor=10}", "rows", "zkHost", "http://127.0.0.1:8983/solr/oak", "path_anc", "collapseJcrContentNodes", "ignoredProperties", "rows", "path_exact", "parentField", "path_exact", "HttpConfiguration{context='primaryTypes', httpPort=10}", "catch_all", "RemoteSolrServerConfiguration{solrConfDir='hi!', socketTimeout=1, connectionTimeout=-1, solrHttpUrls=[solrHomePath], solrZkHost='', solrCollection='hi!', solrShardsNo=1, solrReplicationFactor=100}", "oak", "zkHost", "127.0.0.1:9983", "solrServerType", "pathField", "usedProperties", "descendantsField", "coreName", "depthField", "solrHomePath", "shardsNo", "httpPort", "solr", "httpPort", "", "propertyMappings_string_sort" };
        java.util.ArrayList<java.lang.String> arraylist_str44 = new java.util.ArrayList<java.lang.String>();
        boolean b45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) arraylist_str44, str_array43);
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse46 = solrClient5.deleteById((java.util.List<java.lang.String>) arraylist_str44);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(solrClient5);
        org.junit.Assert.assertNotNull(str_array43);
        org.junit.Assert.assertTrue(b45 == true);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test479");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient3 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.lang.String[] str_array12 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array12);
        java.lang.reflect.Type type14 = remoteSolrServerConfiguration13.getType();
        int i15 = remoteSolrServerConfiguration13.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider16 = remoteSolrServerConfiguration13.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str18 = defaultSolrConfiguration17.getPathField();
        boolean b19 = defaultSolrConfiguration17.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration17);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration22 = defaultSolrConfigurationProvider20.getConfiguration();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider23 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider20);
        org.apache.solr.client.solrj.SolrClient solrClient24 = defaultSolrServerProvider0.getSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse28 = solrClient24.deleteById("hi!_string_sort", "commitPolicy", (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient3);
        org.junit.Assert.assertNotNull(str_array12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue(i15 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider16);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "path_exact" + "'", str18.equals("path_exact"));
        org.junit.Assert.assertTrue(b19 == false);
        org.junit.Assert.assertNotNull(oakSolrConfiguration22);
        org.junit.Assert.assertNotNull(solrClient24);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test480");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration2 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration6 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration6);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider8 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider9 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7, oakSolrConfigurationProvider8);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator1, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider7);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration12 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration12);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration16);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider18 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider19 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider18);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider20 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider21 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider20);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex22 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator11, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider14, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex23 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider24 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider25 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider17, oakSolrConfigurationProvider24);
        try {
            org.apache.solr.client.solrj.SolrClient solrClient26 = remoteSolrServerProvider17.getSolrServer();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test481");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration0 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str1 = defaultSolrConfiguration0.getPathField();
        java.lang.String str2 = defaultSolrConfiguration0.getCatchAllField();
        boolean b3 = defaultSolrConfiguration0.useForPathRestrictions();
        boolean b4 = defaultSolrConfiguration0.collapseJcrContentNodes();
        org.junit.Assert.assertTrue("'" + str1 + "' != '" + "path_exact" + "'", str1.equals("path_exact"));
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "catch_all" + "'", str2.equals("catch_all"));
        org.junit.Assert.assertTrue(b3 == false);
        org.junit.Assert.assertTrue(b4 == false);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test482");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        java.util.Iterator<org.apache.solr.common.SolrInputDocument> iterator_solrInputDocument19 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse20 = solrClient17.add("depthField", iterator_solrInputDocument19);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test483");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("path_anc", "ignoredProperties");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration3 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.String str4 = embeddedSolrServerConfiguration2.toString();
        org.junit.Assert.assertNull(httpConfiguration3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "EmbeddedSolrServerConfiguration{solrHomePath='path_anc', coreName='ignoredProperties', httpConfiguration=null}" + "'", str4.equals("EmbeddedSolrServerConfiguration{solrHomePath='path_anc', coreName='ignoredProperties', httpConfiguration=null}"));
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test484");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        remoteSolrServerProvider13.close();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService oakSolrConfigurationProviderService15 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration16 = oakSolrConfigurationProviderService15.getConfiguration();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator17 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) oakSolrConfigurationProviderService15, nodeAggregator17);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration oakSolrConfiguration19 = oakSolrConfigurationProviderService15.getConfiguration();
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertNotNull(oakSolrConfiguration16);
        org.junit.Assert.assertNotNull(oakSolrConfiguration19);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test485");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse8 = solrClient4.commit(true, true, true);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test486");
        org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer solrIndexInitializer3 = new org.apache.jackrabbit.oak.plugins.index.solr.util.SolrIndexInitializer(false, "propertyRestrictions_string_sort", false);
        org.apache.jackrabbit.oak.spi.state.NodeBuilder nodeBuilder4 = null;
        try {
            solrIndexInitializer3.initialize(nodeBuilder4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test487");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration1);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider2, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration5 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration5);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider7 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider7);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider9 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider10 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6, oakSolrConfigurationProvider9);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex11 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider3, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider6);
        java.lang.String str12 = solrQueryIndex11.getIndexName();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator13 = solrQueryIndex11.getNodeAggregator();
        java.lang.String str14 = solrQueryIndex11.getIndexName();
        double d15 = solrQueryIndex11.getMinimumCost();
        org.apache.jackrabbit.oak.spi.query.Filter filter16 = null;
        org.apache.jackrabbit.oak.spi.state.NodeState nodeState17 = null;
        try {
            java.lang.String str18 = solrQueryIndex11.getPlan(filter16, nodeState17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException");
        } catch (java.lang.UnsupportedOperationException e) {
        }
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "solr" + "'", str12.equals("solr"));
        org.junit.Assert.assertNull(nodeAggregator13);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "solr" + "'", str14.equals("solr"));
        org.junit.Assert.assertTrue(d15 == 2.3d);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test488");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        java.lang.String str4 = embeddedSolrServerConfiguration2.getCoreName();
        java.lang.String str5 = embeddedSolrServerConfiguration2.getSolrHomePath();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_des" + "'", str4.equals("path_des"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "descendantsField" + "'", str5.equals("descendantsField"));
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test489");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider1 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider2 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex3 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, oakSolrConfigurationProvider1, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider2);
        org.apache.solr.client.solrj.SolrClient solrClient4 = defaultSolrServerProvider2.getIndexingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder5 = solrClient4.getBinder();
        org.apache.solr.common.params.SolrParams solrParams7 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD8 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse9 = solrClient4.query("path_collapsed", solrParams7, mETHOD8);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient4);
        org.junit.Assert.assertNotNull(documentObjectBinder5);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test490");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.common.params.SolrParams solrParams19 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD20 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse21 = solrClient18.query(solrParams19, mETHOD20);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test491");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse10 = solrClient8.commit("");
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test492");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.solr.client.solrj.SolrClient solrClient8 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder9 = solrClient8.getBinder();
        org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService solrServerProviderService11 = new org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService();
        org.apache.solr.client.solrj.SolrClient solrClient12 = solrServerProviderService11.getSearchingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient13 = solrServerProviderService11.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient14 = solrServerProviderService11.getSearchingSolrServer();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse16 = solrClient8.addBean("commitPolicy", (java.lang.Object) solrServerProviderService11, 1);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient8);
        org.junit.Assert.assertNotNull(documentObjectBinder9);
        org.junit.Assert.assertNull(solrClient12);
        org.junit.Assert.assertNull(solrClient13);
        org.junit.Assert.assertNull(solrClient14);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test493");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.reflect.Type type10 = remoteSolrServerConfiguration9.getType();
        int i11 = remoteSolrServerConfiguration9.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        int i14 = remoteSolrServerConfiguration9.getSolrShardsNo();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration9);
        java.lang.String str16 = remoteSolrServerConfiguration9.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration19 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type20 = embeddedSolrServerConfiguration19.getType();
        java.lang.String str21 = embeddedSolrServerConfiguration19.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider22 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient23 = defaultSolrServerProvider22.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration26 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        java.lang.reflect.Type type27 = embeddedSolrServerConfiguration26.getType();
        java.lang.String[] str_array36 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array36);
        java.lang.reflect.Type type38 = remoteSolrServerConfiguration37.getType();
        java.lang.String str39 = remoteSolrServerConfiguration37.getSolrConfDir();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider40 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration37);
        java.lang.String[] str_array49 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration50 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array49);
        java.lang.reflect.Type type51 = remoteSolrServerConfiguration50.getType();
        java.lang.String str52 = remoteSolrServerConfiguration50.getSolrConfDir();
        java.lang.String str53 = remoteSolrServerConfiguration50.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient55 = defaultSolrServerProvider54.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy56 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration50, solrClient55, strategy56);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.unregister((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy56);
        org.apache.solr.client.solrj.SolrClient solrClient59 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration26, strategy56);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) embeddedSolrServerConfiguration19, solrClient23, strategy56);
        org.apache.solr.client.solrj.SolrClient solrClient61 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, strategy56);
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue(i11 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue(i14 == 1);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "path_des" + "'", str21.equals("path_des"));
        org.junit.Assert.assertNotNull(solrClient23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(str_array36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "hi!" + "'", str39.equals("hi!"));
        org.junit.Assert.assertNotNull(str_array49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "hi!" + "'", str52.equals("hi!"));
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        org.junit.Assert.assertNotNull(solrClient55);
        org.junit.Assert.assertTrue("'" + strategy56 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy56.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNotNull(solrClient59);
        org.junit.Assert.assertNull(solrClient61);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test494");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration3 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str4 = defaultSolrConfiguration3.getPathField();
        boolean b5 = defaultSolrConfiguration3.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration3);
        org.apache.jackrabbit.oak.spi.query.Filter.PropertyRestriction propertyRestriction7 = null;
        java.lang.String str8 = defaultSolrConfiguration3.getFieldForPropertyRestriction(propertyRestriction7);
        boolean b9 = defaultSolrConfiguration3.useForPathRestrictions();
        int i10 = defaultSolrConfiguration3.getRows();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse12 = solrClient2.addBean((java.lang.Object) defaultSolrConfiguration3, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "path_exact" + "'", str4.equals("path_exact"));
        org.junit.Assert.assertTrue(b5 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue(b9 == false);
        org.junit.Assert.assertTrue(i10 == 10);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test495");
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration2 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider3 = embeddedSolrServerConfiguration2.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider(embeddedSolrServerConfiguration2);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration7 = embeddedSolrServerConfiguration2.withHttpConfiguration("primaryTypes", (java.lang.Integer) 10);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration.HttpConfiguration httpConfiguration8 = embeddedSolrServerConfiguration2.getHttpConfiguration();
        java.lang.reflect.Type type9 = embeddedSolrServerConfiguration2.getType();
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider3);
        org.junit.Assert.assertNotNull(embeddedSolrServerConfiguration7);
        org.junit.Assert.assertNotNull(httpConfiguration8);
        org.junit.Assert.assertNotNull(type9);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test496");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder19 = solrClient18.getBinder();
        java.lang.String[] str_array28 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration29 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array28);
        java.lang.String str30 = remoteSolrServerConfiguration29.getSolrZkHost();
        java.lang.String[] str_array31 = remoteSolrServerConfiguration29.getSolrHttpUrls();
        java.lang.String str32 = remoteSolrServerConfiguration29.getSolrZkHost();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy33 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient34 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration29, strategy33);
        int i35 = remoteSolrServerConfiguration29.getSolrReplicationFactor();
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse36 = solrClient18.addBean((java.lang.Object) i35);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.beans.BindingException");
        } catch (org.apache.solr.client.solrj.beans.BindingException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(documentObjectBinder19);
        org.junit.Assert.assertNotNull(str_array28);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
        org.junit.Assert.assertNotNull(str_array31);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        org.junit.Assert.assertTrue("'" + strategy33 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy33.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient34);
        org.junit.Assert.assertTrue(i35 == 100);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test497");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        defaultSolrServerProvider0.close();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.solr.client.solrj.beans.DocumentObjectBinder documentObjectBinder10 = solrClient9.getBinder();
        org.apache.solr.common.SolrInputDocument solrInputDocument12 = null;
        try {
            org.apache.solr.client.solrj.response.UpdateResponse updateResponse14 = solrClient9.add("propertyMappings", solrInputDocument12, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(documentObjectBinder10);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test498");
        java.lang.String[] str_array8 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration9 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array8);
        java.lang.String str10 = remoteSolrServerConfiguration9.getSolrZkHost();
        java.lang.String[] str_array11 = remoteSolrServerConfiguration9.getSolrHttpUrls();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = remoteSolrServerConfiguration9.getProvider();
        java.lang.String str13 = remoteSolrServerConfiguration9.getSolrConfDir();
        int i14 = remoteSolrServerConfiguration9.getSolrReplicationFactor();
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator15 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider16 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex18 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator15, oakSolrConfigurationProvider16, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider17);
        org.apache.solr.client.solrj.SolrClient solrClient19 = defaultSolrServerProvider17.getIndexingSolrServer();
        java.lang.String[] str_array35 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration36 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array35);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("catchAllField", "commitPolicy", (int) (byte) 1, (int) (short) 100, "pathField", (int) ' ', 10, str_array35);
        java.lang.String[] str_array38 = remoteSolrServerConfiguration37.getSolrHttpUrls();
        java.lang.reflect.Type type39 = remoteSolrServerConfiguration37.getType();
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy strategy40 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING;
        org.apache.solr.client.solrj.SolrClient solrClient41 = org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.get((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration37, strategy40);
        org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.register((org.apache.jackrabbit.oak.plugins.index.solr.configuration.SolrServerConfiguration) remoteSolrServerConfiguration9, solrClient19, strategy40);
        org.apache.solr.common.params.SolrParams solrParams43 = null;
        org.apache.solr.client.solrj.SolrRequest.METHOD mETHOD44 = null;
        try {
            org.apache.solr.client.solrj.response.QueryResponse queryResponse45 = solrClient19.query(solrParams43, mETHOD44);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(str_array8);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        org.junit.Assert.assertNotNull(str_array11);
        org.junit.Assert.assertNotNull(remoteSolrServerProvider12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        org.junit.Assert.assertTrue(i14 == 100);
        org.junit.Assert.assertNotNull(solrClient19);
        org.junit.Assert.assertNotNull(str_array35);
        org.junit.Assert.assertNotNull(str_array38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + strategy40 + "' != '" + org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING + "'", strategy40.equals(org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerRegistry.Strategy.INDEXING));
        org.junit.Assert.assertNull(solrClient41);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test499");
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider0 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient1 = defaultSolrServerProvider0.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient2 = defaultSolrServerProvider0.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration3 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider4 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration3);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider5 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider6 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider4, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider7 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider5);
        org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider defaultSolrServerProvider8 = new org.apache.jackrabbit.oak.plugins.index.solr.server.DefaultSolrServerProvider();
        org.apache.solr.client.solrj.SolrClient solrClient9 = defaultSolrServerProvider8.getSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient10 = defaultSolrServerProvider8.getSearchingSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration11 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider12 = new org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider(remoteSolrServerConfiguration11);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider13 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider14 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider12, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider15 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider8, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider16 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider13);
        org.apache.solr.client.solrj.SolrClient solrClient17 = defaultSolrServerProvider0.getIndexingSolrServer();
        org.apache.solr.client.solrj.SolrClient solrClient18 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider oakSolrConfigurationProvider19 = null;
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider20 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) defaultSolrServerProvider0, oakSolrConfigurationProvider19);
        org.apache.solr.client.solrj.SolrClient solrClient21 = defaultSolrServerProvider0.getSolrServer();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration23 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str24 = defaultSolrConfiguration23.getPathField();
        int i25 = defaultSolrConfiguration23.getRows();
        boolean b26 = defaultSolrConfiguration23.useForPathRestrictions();
        java.util.Collection<java.lang.String> collection_str27 = defaultSolrConfiguration23.getIgnoredProperties();
        org.apache.solr.common.params.SolrParams solrParams28 = null;
        try {
            org.apache.solr.common.SolrDocumentList solrDocumentList29 = solrClient21.getById("parentField", collection_str27, solrParams28);
            org.junit.Assert.fail("Expected exception of type org.apache.solr.client.solrj.SolrServerException");
        } catch (org.apache.solr.client.solrj.SolrServerException e) {
        }
        org.junit.Assert.assertNotNull(solrClient1);
        org.junit.Assert.assertNotNull(solrClient2);
        org.junit.Assert.assertNotNull(solrClient9);
        org.junit.Assert.assertNotNull(solrClient10);
        org.junit.Assert.assertNotNull(solrClient17);
        org.junit.Assert.assertNotNull(solrClient18);
        org.junit.Assert.assertNotNull(solrClient21);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "path_exact" + "'", str24.equals("path_exact"));
        org.junit.Assert.assertTrue(i25 == 10);
        org.junit.Assert.assertTrue(b26 == false);
        org.junit.Assert.assertNotNull(collection_str27);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test500");
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator0 = null;
        java.lang.String[] str_array9 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration10 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array9);
        java.lang.reflect.Type type11 = remoteSolrServerConfiguration10.getType();
        int i12 = remoteSolrServerConfiguration10.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider13 = remoteSolrServerConfiguration10.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration14 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str15 = defaultSolrConfiguration14.getPathField();
        boolean b16 = defaultSolrConfiguration14.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider17 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration14);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider18 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider13, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider17);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration21 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider22 = embeddedSolrServerConfiguration21.getProvider();
        java.lang.String str23 = embeddedSolrServerConfiguration21.getCoreName();
        java.lang.String str24 = embeddedSolrServerConfiguration21.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider25 = embeddedSolrServerConfiguration21.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex26 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator0, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider17, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) embeddedSolrServerProvider25);
        org.apache.jackrabbit.oak.spi.query.QueryIndex.NodeAggregator nodeAggregator27 = null;
        java.lang.String[] str_array36 = new java.lang.String[] { "solrHomePath" };
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration remoteSolrServerConfiguration37 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.RemoteSolrServerConfiguration("", "hi!", 1, (int) (short) 100, "hi!", 1, (int) (short) -1, str_array36);
        java.lang.reflect.Type type38 = remoteSolrServerConfiguration37.getType();
        int i39 = remoteSolrServerConfiguration37.getConnectionTimeout();
        org.apache.jackrabbit.oak.plugins.index.solr.server.RemoteSolrServerProvider remoteSolrServerProvider40 = remoteSolrServerConfiguration37.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration defaultSolrConfiguration41 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfiguration();
        java.lang.String str42 = defaultSolrConfiguration41.getPathField();
        boolean b43 = defaultSolrConfiguration41.collapseJcrContentNodes();
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider defaultSolrConfigurationProvider44 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.DefaultSolrConfigurationProvider((org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration) defaultSolrConfiguration41);
        org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider solrIndexEditorProvider45 = new org.apache.jackrabbit.oak.plugins.index.solr.index.SolrIndexEditorProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) remoteSolrServerProvider40, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider44);
        org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration embeddedSolrServerConfiguration48 = new org.apache.jackrabbit.oak.plugins.index.solr.configuration.EmbeddedSolrServerConfiguration("descendantsField", "path_des");
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider49 = embeddedSolrServerConfiguration48.getProvider();
        java.lang.String str50 = embeddedSolrServerConfiguration48.getCoreName();
        java.lang.String str51 = embeddedSolrServerConfiguration48.getCoreName();
        org.apache.jackrabbit.oak.plugins.index.solr.server.EmbeddedSolrServerProvider embeddedSolrServerProvider52 = embeddedSolrServerConfiguration48.getProvider();
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex solrQueryIndex53 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex(nodeAggregator27, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider44, (org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) embeddedSolrServerProvider52);
        org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider solrQueryIndexProvider54 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndexProvider((org.apache.jackrabbit.oak.plugins.index.solr.server.SolrServerProvider) embeddedSolrServerProvider25, (org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfigurationProvider) defaultSolrConfigurationProvider44);
        org.junit.Assert.assertNotNull(str_array9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue(i12 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider13);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "path_exact" + "'", str15.equals("path_exact"));
        org.junit.Assert.assertTrue(b16 == false);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider22);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "path_des" + "'", str23.equals("path_des"));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "path_des" + "'", str24.equals("path_des"));
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider25);
        org.junit.Assert.assertNotNull(str_array36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue(i39 == (-1));
        org.junit.Assert.assertNotNull(remoteSolrServerProvider40);
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "path_exact" + "'", str42.equals("path_exact"));
        org.junit.Assert.assertTrue(b43 == false);
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider49);
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "path_des" + "'", str50.equals("path_des"));
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "path_des" + "'", str51.equals("path_des"));
        org.junit.Assert.assertNotNull(embeddedSolrServerProvider52);
    }
}

