org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r6 = virtualinvoke r1.<org.apache.solr.client.solrj.response.SpellCheckResponse: java.util.List getSuggestions()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r13 = new java.util.ArrayList
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r13 = new java.util.ArrayList >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $i0 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $i0 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i0)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r32 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r32 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z0 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r30 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r34 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r34 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z1 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r14 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : return
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r14 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r35 = (java.lang.String) $r14
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r35 = (java.lang.String) $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r15 = new org.apache.solr.client.solrj.SolrQuery
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r15 = new org.apache.solr.client.solrj.SolrQuery >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : specialinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: void <init>()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : specialinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r16 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r16 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r16[0] = r35
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r16[0] = r35 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : virtualinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>("q", $r16)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : virtualinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>("q", $r16) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r18 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r18 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r19 = interfaceinvoke r4.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getCatchAllField()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r19 = interfaceinvoke r4.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getCatchAllField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r18[0] = $r19
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r18[0] = $r19 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : virtualinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>("df", $r18)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : virtualinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>("df", $r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r21 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r21 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r21[0] = "AND"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r21[0] = "AND" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : virtualinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>("q.op", $r21)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : virtualinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>("q.op", $r21) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r23 = newarray (java.lang.String)[1]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r23 = newarray (java.lang.String)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r23[0] = "100"
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r23[0] = "100" >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : virtualinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>("rows", $r23)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : virtualinvoke $r15.<org.apache.solr.client.solrj.SolrQuery: org.apache.solr.client.solrj.SolrQuery setParam(java.lang.String,java.lang.String[])>("rows", $r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r9 = virtualinvoke r5.<org.apache.solr.client.solrj.SolrClient: org.apache.solr.client.solrj.response.QueryResponse query(org.apache.solr.common.params.SolrParams)>($r15)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r9 = virtualinvoke r5.<org.apache.solr.client.solrj.SolrClient: org.apache.solr.client.solrj.response.QueryResponse query(org.apache.solr.common.params.SolrParams)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r10 = virtualinvoke r9.<org.apache.solr.client.solrj.response.QueryResponse: org.apache.solr.common.SolrDocumentList getResults()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r10 = virtualinvoke r9.<org.apache.solr.client.solrj.response.QueryResponse: org.apache.solr.common.SolrDocumentList getResults()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if r10 == null
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if r10 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $l1 = virtualinvoke r10.<org.apache.solr.common.SolrDocumentList: long getNumFound()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if r10 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $l1 = virtualinvoke r10.<org.apache.solr.common.SolrDocumentList: long getNumFound()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $b2 = $l1 cmp 0L
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $b2 = $l1 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $b2 <= 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $b2 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r11 = virtualinvoke r10.<org.apache.solr.common.SolrDocumentList: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $b2 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r11 = virtualinvoke r10.<org.apache.solr.common.SolrDocumentList: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z2 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r25 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r25 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r12 = (org.apache.solr.common.SolrDocument) $r25
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r12 = (org.apache.solr.common.SolrDocument) $r25 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r26 = interfaceinvoke r4.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r26 = interfaceinvoke r4.<org.apache.jackrabbit.oak.plugins.index.solr.configuration.OakSolrConfiguration: java.lang.String getPathField()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r27 = virtualinvoke r12.<org.apache.solr.common.SolrDocument: java.lang.Object getFieldValue(java.lang.String)>($r26)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r27 = virtualinvoke r12.<org.apache.solr.common.SolrDocument: java.lang.Object getFieldValue(java.lang.String)>($r26) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r27)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r27) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z3 = interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.query.Filter: boolean isAccessible(java.lang.String)>($r28)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z3 = interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.query.Filter: boolean isAccessible(java.lang.String)>($r28) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z3 == 0
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r29 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$SolrResultRow
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : if $z3 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r29 = new org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$SolrResultRow >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : specialinvoke $r29.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$SolrResultRow: void <init>(java.lang.String)>(r35)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : specialinvoke $r29.<org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex$SolrResultRow: void <init>(java.lang.String)>(r35) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : interfaceinvoke r2.<java.util.Deque: boolean add(java.lang.Object)>($r29)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : interfaceinvoke r2.<java.util.Deque: boolean add(java.lang.Object)>($r29) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r30 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r33 = (org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion) $r30
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : r33 = (org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion) $r30 >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r31 = virtualinvoke r33.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List getAlternatives()>()
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $r31 = virtualinvoke r33.<org.apache.solr.client.solrj.response.SpellCheckResponse$Suggestion: java.util.List getAlternatives()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : interfaceinvoke $r13.<java.util.Collection: boolean addAll(java.util.Collection)>($r31)
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : interfaceinvoke $r13.<java.util.Collection: boolean addAll(java.util.Collection)>($r31) >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : goto [?= $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.index.solr.query.SolrQueryIndex.putSpellChecks : $z0 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
